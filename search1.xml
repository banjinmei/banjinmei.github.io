<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>debian mysql</title>
      <link href="/2024/08/12/debian-mysql/"/>
      <url>/2024/08/12/debian-mysql/</url>
      
        <content type="html"><![CDATA[<h1 id="1-更新软件包列表"><a href="#1-更新软件包列表" class="headerlink" title="1.更新软件包列表"></a>1.更新软件包列表</h1><p>运行 <code>apt update</code> 命令来完成。</p><p>sudo apt update</p><h1 id="2-安装MySQL-APT配置工具"><a href="#2-安装MySQL-APT配置工具" class="headerlink" title="2. 安装MySQL APT配置工具"></a>2. 安装MySQL APT配置工具</h1><p>安装MySQL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/mysql-apt-config_0.8.32-1_all.deb</span><br><span class="line"></span><br><span class="line">apt install gnupg</span><br><span class="line"></span><br><span class="line">dpkg -i mysql-apt-config_0.8.32-1_all.deb</span><br><span class="line"></span><br><span class="line">apt update</span><br></pre></td></tr></table></figure><h1 id="3-安装MySQL服务器"><a href="#3-安装MySQL服务器" class="headerlink" title="3. 安装MySQL服务器"></a>3. 安装MySQL服务器</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install mysql-server</span><br></pre></td></tr></table></figure><h1 id="4-更新软件包列表"><a href="#4-更新软件包列表" class="headerlink" title="4 . 更新软件包列表"></a>4 . 更新软件包列表</h1><p>以便APT可以识别新添加的MySQL仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><h1 id="5-启动MySQL服务"><a href="#5-启动MySQL服务" class="headerlink" title="5. 启动MySQL服务"></a>5. 启动MySQL服务</h1><p>启动MySQL服务并设置它在系统启动时自动启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start mysql</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> mysql</span><br></pre></td></tr></table></figure><h1 id="6-登录MySQL服务器"><a href="#6-登录MySQL服务器" class="headerlink" title="6. 登录MySQL服务器"></a>6. 登录MySQL服务器</h1><p>使用root用户登录到MySQL服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>输入密码后，您将进入MySQL命令行。使用 <code>exit</code> 命令退出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">ALTER USER <span class="string">&#x27;myuser&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;new_password&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可选</p><h1 id="7-测试"><a href="#7-测试" class="headerlink" title="7.测试"></a>7.测试</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE mydatabase;</span><br></pre></td></tr></table></figure><p>Query OK, 1 row affected (0.00 sec)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;myuser&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;mypassword&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> mydatabase.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;myuser&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line">Use mydatabase;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `Test` (</span><br><span class="line">  `id` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `age` <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">Insert</span> <span class="keyword">into</span> Test(name,age) <span class="keyword">value</span> (<span class="string">&#x27;zs&#x27;</span>,<span class="number">17</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Test</span><br></pre></td></tr></table></figure><!--待解决 mysql admin--><h1 id="8-重启MySQL服务"><a href="#8-重启MySQL服务" class="headerlink" title="8. 重启MySQL服务"></a>8. 重启MySQL服务</h1><p>保存并关闭文件后，重新启动MySQL服务以应用更改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#restart</span></span><br><span class="line">sudo systemctl restart mysql</span><br><span class="line"><span class="comment">#停止</span></span><br><span class="line">sudo systemctl stop mysql</span><br><span class="line"><span class="comment">#status</span></span><br><span class="line">systemctl status mysql 查看状态</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="9-备份"><a href="#9-备份" class="headerlink" title="9. 备份"></a>9. 备份</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u 用户名 <span class="operator">-</span>p 数据库名 <span class="operator">&lt;</span> 文件路径.<span class="keyword">sql</span></span><br><span class="line"></span><br><span class="line">mysql <span class="operator">-</span>u 用户名 <span class="operator">-</span>p <span class="operator">-</span>e &quot;CREATE DATABASE mydatabase;&quot;</span><br><span class="line">mysql <span class="operator">-</span>u 用户名 <span class="operator">-</span>p mydatabase <span class="operator">&lt;</span> <span class="operator">/</span>path<span class="operator">/</span><span class="keyword">to</span><span class="operator">/</span>backup.sql</span><br></pre></td></tr></table></figure><h1 id="10-docker"><a href="#10-docker" class="headerlink" title="10.docker"></a>10.docker</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name myadmin -d -e PMA_ARBITRARY=1 -p 12121:80 phpmyadmin</span><br></pre></td></tr></table></figure><!--#  编辑MySQL配置文件编辑MySQL的配置文件以允许来自任何IP地址的连接。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure><p>在文件中找到 <code>[mysqld]</code> 部分，并添加或修改 <code>bind-address</code> 为 <code>0.0.0.0</code>，这将允许MySQL监听所有的网络接口。</p><p>[mysqld]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bind-address = 0.0.0.0</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li><p>在编辑配置文件之前，请确保了解更改的影响，特别是在设置 <code>bind-address</code> 时，因为它会影响服务器的安全性。</p></li><li><p>在生产环境中，应避免使用 <code>0.0.0.0</code>，而是指定特定的IP地址以限制访问。</p></li><li><p>始终保持系统和软件包的更新，以确保安全性。</p></li><li><p>使用强密码和适当的权限管理来保护MySQL服务器。</p></li></ul><p>–&gt;</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> debian </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>debian apt update</title>
      <link href="/2024/08/12/debian-apt-update/"/>
      <url>/2024/08/12/debian-apt-update/</url>
      
        <content type="html"><![CDATA[<p><strong>debian更换apt源</strong><br>在Debian系统中更换APT源，你需要编辑&#x2F;etc&#x2F;apt&#x2F;sources.list文件，将其中的现有源地址替换为新的源地址。以下是一个基本的步骤和示例：</p><p>打开终端。</p><p>使用文本编辑器编辑sources.list文件，例如使用nano或vim：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>注释掉或删除旧的源地址行（在行首加#可以将其注释掉）。</p><p>添加新的源地址。例如，Debian官方的非US源，可以添加以下行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb http://deb.debian.org/debian bullseye main contrib non-free</span><br><span class="line">deb-src http://deb.debian.org/debian bullseye main contrib non-free</span><br></pre></td></tr></table></figure><p>这里的bullseye是Debian的代号，例如bookworm、buster等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/debian/ stable main contrib non-free</span><br></pre></td></tr></table></figure><p>保存文件并退出编辑器。</p><p>更新APT源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>升级已安装的包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure><p>请确保你使用的源与你的Debian版本兼容。可信的源可以保证软件包的安全和可靠性。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker ittools</title>
      <link href="/2024/08/07/docker-ittools/"/>
      <url>/2024/08/07/docker-ittools/</url>
      
        <content type="html"><![CDATA[<h1 id="ittools"><a href="#ittools" class="headerlink" title="ittools"></a>ittools</h1><p><a class="link"   href="https://github.com/CorentinTh/it-tools/tree/main" >https://github.com/CorentinTh/it-tools/tree/main<i class="fas fa-external-link-alt"></i></a> </p><h1 id="pnpm"><a href="#pnpm" class="headerlink" title="pnpm"></a>pnpm</h1><p><a class="link"   href="https://www.pnpm.cn/installation#%E4%BD%BF%E7%94%A8-npm-%E5%AE%89%E8%A3%85" >https://www.pnpm.cn/installation#%E4%BD%BF%E7%94%A8-npm-%E5%AE%89%E8%A3%85<i class="fas fa-external-link-alt"></i></a>  </p><h1 id="Project-Setup"><a href="#Project-Setup" class="headerlink" title="Project Setup"></a>Project Setup</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm install</span><br></pre></td></tr></table></figure><h1 id="Compile-and-Hot-Reload-for-Development"><a href="#Compile-and-Hot-Reload-for-Development" class="headerlink" title="Compile and Hot-Reload for Development"></a>Compile and Hot-Reload for Development</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm dev</span><br></pre></td></tr></table></figure><h1 id="Type-Check-Compile-and-Minify-for-Production"><a href="#Type-Check-Compile-and-Minify-for-Production" class="headerlink" title="Type-Check, Compile and Minify for Production"></a>Type-Check, Compile and Minify for Production</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm build</span><br></pre></td></tr></table></figure><h1 id="Run-Unit-Tests-with-Vitest"><a href="#Run-Unit-Tests-with-Vitest" class="headerlink" title="Run Unit Tests with Vitest"></a>Run Unit Tests with Vitest</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h1 id="Lint-with-ESLint"><a href="#Lint-with-ESLint" class="headerlink" title="Lint with ESLint"></a>Lint with ESLint</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm lint</span><br></pre></td></tr></table></figure><h1 id="Create-a-new-tool"><a href="#Create-a-new-tool" class="headerlink" title="Create a new tool"></a>Create a new tool</h1><p>To create a new tool, there is a script that generate the boilerplate of the new tool, simply run:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm run script:create:tool my-tool-name</span><br></pre></td></tr></table></figure><!--buyMeACoffee del st--><h1 id="docker-run"><a href="#docker-run" class="headerlink" title="docker run"></a>docker run</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name it-tools --restart unless-stopped -p 8080:80 corentinth/it-tools:latest</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> it </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Email Server</title>
      <link href="/2024/08/06/Email-Server/"/>
      <url>/2024/08/06/Email-Server/</url>
      
        <content type="html"><![CDATA[<h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 25:25 -p 80:80 -p 110:110 -p 143:143 -p 443:443 -p 587:587 -p 993:993 -p 995:995 -v /etc/localtime:/etc/localtime:ro -v /data/poste/data:/data --name <span class="string">&quot;PosteServ&quot;</span> -h <span class="string">&quot;mx.xxxxxx.com&quot;</span> -t analogic/poste.io</span><br></pre></td></tr></table></figure><h1 id="解析-mx-A记录"><a href="#解析-mx-A记录" class="headerlink" title="解析 mx   A记录"></a>解析 mx   A记录</h1><p>开放25  80 110 143 443 587 993 995端口</p><p>#&#x2F;srv&#x2F;poste&#x2F;data为Poste数据存放文件夹，如用户数据库、电子邮件、日志，方便备份。</p><h1 id="443为web控制台端口"><a href="#443为web控制台端口" class="headerlink" title="443为web控制台端口"></a>443为web控制台端口</h1><p>ip端口访问<br><a class="link"   href="https://ip/" >https://ip<i class="fas fa-external-link-alt"></i></a> </p><h1 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h1><p>添加管理邮箱<br>First poste.io configuration<br> There is no “server.ini” in your data folder, we will try create one. You can update it later in your data folder.</p><h1 id="创建邮箱"><a href="#创建邮箱" class="headerlink" title="创建邮箱"></a>创建邮箱</h1><p>adm</p><!--rsLoJiHNbcwwRTDeDPp54Cxm qf123123a1 - a20123123--><h1 id="https-ip-webmail"><a href="#https-ip-webmail" class="headerlink" title="https://ip/webmail"></a><a class="link"   href="https://ip/webmail" >https://ip/webmail<i class="fas fa-external-link-alt"></i></a></h1><p>登录邮箱</p><h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><p>&#x2F;admin&#x2F;api&#x2F;doc api</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> email </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian docker mssql</title>
      <link href="/2024/08/06/Debian-docker-mssql/"/>
      <url>/2024/08/06/Debian-docker-mssql/</url>
      
        <content type="html"><![CDATA[<h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sudo sh get-docker.sh</span><br></pre></td></tr></table></figure><p>查看架构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span> -m</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -e <span class="string">&quot;ACCEPT_EULA=Y&quot;</span> -e <span class="string">&quot;SA_PASSWORD=Qq123123.&quot;</span> -e <span class="string">&quot;TZ=Asia/Shanghai&quot;</span> -p 1433:1433 --name sqlserver2022 -d mcr.microsoft.com/mssql/server:2022-latest</span><br></pre></td></tr></table></figure><p>开放端口 1433</p><p>进入容器 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it sqlserver2022 /bin/bash</span><br></pre></td></tr></table></figure><p>使用navicat test<br>sa Qq123123. 测试连接</p><p>SQL测试 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE mydb;</span><br><span class="line">GO</span><br><span class="line">USE mydb;</span><br><span class="line">GO</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Users (</span><br><span class="line">    UserId <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY <span class="keyword">IDENTITY</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">    UserName NVARCHAR(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line">GO</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Users (UserName) <span class="keyword">VALUES</span> (<span class="string">&#x27;zs&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Users (UserName) <span class="keyword">VALUES</span> (<span class="string">&#x27;ls&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Users (UserName) <span class="keyword">VALUES</span> (<span class="string">&#x27;w5&#x27;</span>);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Users;</span><br><span class="line">GO</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="BACKUP"><a href="#BACKUP" class="headerlink" title="BACKUP"></a>BACKUP</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">USE master;</span><br><span class="line">GO</span><br><span class="line">BACKUP DATABASE mydb <span class="keyword">TO</span> DISK <span class="operator">=</span> <span class="string">&#x27;mydblog.bak&#x27;</span> <span class="keyword">WITH</span> COMPRESSION, INIT, STATS<span class="operator">=</span><span class="number">5</span>;</span><br><span class="line">GO</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="RESTORE"><a href="#RESTORE" class="headerlink" title="RESTORE"></a>RESTORE</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> users <span class="keyword">set</span> username <span class="operator">=</span> <span class="string">&#x27;zsss1&#x27;</span> <span class="keyword">where</span> userid<span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">go</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users;</span><br><span class="line">go</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">USE master;</span><br><span class="line">GO</span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 检查数据库是否存在，如果存在则删除</span></span><br><span class="line">IF <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> name <span class="keyword">FROM</span> sys.databases <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;mydb&#x27;</span>)</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DROP</span> DATABASE mydb;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">GO</span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 还原数据库</span></span><br><span class="line">RESTORE DATABASE mydb</span><br><span class="line"><span class="keyword">FROM</span> DISK <span class="operator">=</span> <span class="string">&#x27;mydblog.bak&#x27;</span> </span><br><span class="line"></span><br><span class="line">GO</span><br></pre></td></tr></table></figure><p>if restore err   SET RECOVERY SIMPL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">USE[master]  </span><br><span class="line">GO  </span><br><span class="line"><span class="keyword">ALTER</span> DATABASE mydb <span class="keyword">SET</span> RECOVERY SIMPLE <span class="keyword">WITH</span> NO_WAIT  </span><br><span class="line">GO  </span><br><span class="line"><span class="keyword">ALTER</span> DATABASE mydb <span class="keyword">SET</span> RECOVERY SIMPLE   <span class="comment">--简单模式  </span></span><br><span class="line">GO  </span><br><span class="line">RESTORE DATABASE mydb <span class="keyword">FROM</span> DISK <span class="operator">=</span> <span class="string">&#x27;mydblog.bak&#x27;</span> </span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE mydb <span class="keyword">SET</span> RECOVERY <span class="keyword">FULL</span> <span class="keyword">WITH</span> NO_WAIT  </span><br><span class="line">GO  </span><br><span class="line"><span class="keyword">ALTER</span> DATABASE mydb <span class="keyword">SET</span> RECOVERY <span class="keyword">FULL</span>  <span class="comment">--还原为完全模式  </span></span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line">use mydb </span><br><span class="line">go </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users;</span><br><span class="line">go</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="bak-file"><a href="#bak-file" class="headerlink" title="bak file"></a>bak file</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var lib docker</span><br><span class="line"></span><br><span class="line">/var/lib/docker/overlay2/c3753774b8f233196f80cb43e0b38ff0e1d2600e6d6f48e10e9c472ff90b4d81/merged/var/opt/mssql/data/mydblog.bak</span><br><span class="line">/var/lib/docker/overlay2/c3753774b8f233196f80cb43e0b38ff0e1d2600e6d6f48e10e9c472ff90b4d81/diff/var/opt/mssql/data/mydblog.bak                              </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> debian </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux CPU now</title>
      <link href="/2024/08/05/Linux-CPU-now/"/>
      <url>/2024/08/05/Linux-CPU-now/</url>
      
        <content type="html"><![CDATA[<h1 id="linux-查看正在-cpu占用"><a href="#linux-查看正在-cpu占用" class="headerlink" title="linux 查看正在 cpu占用"></a>linux 查看正在 cpu占用</h1><p>在Linux中，可以使用多种命令来查看哪个进程正在使用CPU资源。以下是几个常用的命令：</p><p>top - 实时显示系统中各个进程的资源占用情况，包括CPU使用率。</p><p>top<br>htop - top的增强版，提供更直观的界面，需要单独安装。</p><p>htop<br>ps - 显示当前运行的进程信息，结合aux选项可以查看CPU占用率。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux --<span class="built_in">sort</span>=-%cpu | <span class="built_in">head</span></span><br></pre></td></tr></table></figure><p>pidstat - 用于监视个别任务的CPU和内存使用情况，通常与时间结合使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pidstat 1</span><br></pre></td></tr></table></figure><p>这些命令会以实时或者定时的方式输出CPU占用前几的进程，帮助识别和解决CPU占用高的问题。</p><h1 id="查看docker"><a href="#查看docker" class="headerlink" title="查看docker"></a>查看docker</h1><pre><code class="bash">docker ps docker ps -adocker start cont``` bash </code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go Background</title>
      <link href="/2024/08/05/Go-Background/"/>
      <url>/2024/08/05/Go-Background/</url>
      
        <content type="html"><![CDATA[<h1 id="debian-go程序-后台运行"><a href="#debian-go程序-后台运行" class="headerlink" title="debian go程序 后台运行"></a>debian go程序 后台运行</h1><p>要在Debian系统上将Go程序设置为后台运行，使用nohup命令和&amp;符号。</p><p>编译Go程序，生成可执行文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -o myapp main.go</span><br></pre></td></tr></table></figure><p>使用nohup将程序放到后台运行，并将输出重定向到nohup.out文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./myapp &amp;</span><br></pre></td></tr></table></figure><p>如果您想要程序在系统启动时自动运行，可以创建一个systemd服务文件。</p><p>创建一个名为myapp.service的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/systemd/system/myapp.service</span><br></pre></td></tr></table></figure><p>在编辑器中添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=My Go Application</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/path/to/your/myapp</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>保存并退出编辑器。</p><p>启用并启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> myapp.service</span><br><span class="line">sudo systemctl start myapp.service</span><br></pre></td></tr></table></figure><p>Go程序就会在Debian系统上作为服务后台运行。</p><h1 id="c-run"><a href="#c-run" class="headerlink" title="c# run~"></a>c# run~</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">nohup</span> dotnet run /root/socketa/TcpSk &gt; output20240805.log 2&gt;&amp;1 &amp;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">nohup</span> dotnet run /root/netser/xx &gt; output1.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">ps -ef | grep <span class="built_in">nohup</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> nohup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# keep alive</title>
      <link href="/2024/08/05/C-keep-alive/"/>
      <url>/2024/08/05/C-keep-alive/</url>
      
        <content type="html"><![CDATA[<p>在C#中，想让一个控制台应用程序保持运行而不依赖 Cnsole.ReadKey()，可以通过多种方式实现。</p><h1 id="1-使用事件循环"><a href="#1-使用事件循环" class="headerlink" title="1. 使用事件循环"></a>1. 使用事件循环</h1><p>可以使用 EventWaitHandle 或者其他类似的同步原语来创建一个事件循环，让程序保持在等待状态。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建一个自动重置的事件对象</span></span><br><span class="line">        EventWaitHandle waitHandle = <span class="keyword">new</span> EventWaitHandle(<span class="literal">false</span>, EventResetMode.AutoReset);</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Press any key to exit...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待事件被设置，如果没有接收到信号，则保持等待状态</span></span><br><span class="line">        waitHandle.WaitOne();</span><br><span class="line"></span><br><span class="line">        Console.Clear();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用无限循环</li></ol><p>你可以创建一个无限循环，直到你手动终止程序。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//cpu占用高~</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 程序在这里保持运行状态，等待事件或其他中断。</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;The program is running. Press CTRL+C to exit.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-使用定时器"><a href="#3-使用定时器" class="headerlink" title="3. 使用定时器"></a>3. 使用定时器</h1><p>创建一个定时器，定期执行某些任务，或者用于控制程序行为。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;The program is running. Press CTRL+C to exit.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个新的计时器并设定间隔时间（毫秒）</span></span><br><span class="line">        Timer timer = <span class="keyword">new</span> Timer(TimerCallback, <span class="literal">null</span>, <span class="number">0</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 防止主线程退出</span></span><br><span class="line">        Console.ReadKey();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 停止定时器</span></span><br><span class="line">        timer.Dispose();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">TimerCallback</span>(<span class="params">Object state</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;The program is still running...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-使用异步等待"><a href="#4-使用异步等待" class="headerlink" title="4. 使用异步等待"></a>4. 使用异步等待</h1><p>如果你使用的是 .NET Core 或 .NET 5 及更高版本，可以利用 Task.Run 来创建一个持续运行的任务。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;The program is running. Press CTRL+C to exit.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> Task.Run(<span class="keyword">async</span> () =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 模拟一些工作</span></span><br><span class="line">                <span class="keyword">await</span> Task.Delay(<span class="number">1000</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Doing work...&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待按键，确保主线程不会立即退出</span></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> console </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Electron App</title>
      <link href="/2024/08/04/Electron-App/"/>
      <url>/2024/08/04/Electron-App/</url>
      
        <content type="html"><![CDATA[<h1 id="Electron-fetch-API发送HTTP请求"><a href="#Electron-fetch-API发送HTTP请求" class="headerlink" title="Electron fetch API发送HTTP请求"></a>Electron fetch API发送HTTP请求</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install electron --save-dev</span><br></pre></td></tr></table></figure><h2 id="创建："><a href="#创建：" class="headerlink" title="创建："></a>创建：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">your-electron-app/</span><br></pre></td></tr></table></figure><p>├── main.js<br>├── renderer.js<br>└── index.html</p><p>main.js - Electron</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">const &#123; app, BrowserWindow &#125; = require(<span class="string">&#x27;electron&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">createWindow</span></span> () &#123;</span><br><span class="line">  // 创建浏览器窗口</span><br><span class="line">  <span class="built_in">let</span> win = new BrowserWindow(&#123;</span><br><span class="line">    width: 800,</span><br><span class="line">    height: 600,</span><br><span class="line">    webPreferences: &#123;</span><br><span class="line">      nodeIntegration: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  // 加载index.html文件</span><br><span class="line">  win.loadFile(<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.whenReady().<span class="keyword">then</span>(createWindow);</span><br><span class="line">renderer.js - Electron的渲染器进程文件，使用fetch发送请求：</span><br><span class="line">document.addEventListener(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, () =&gt; &#123;</span><br><span class="line">  fetch(<span class="string">&#x27;https://jsonplaceholder.typicode.com/posts/1&#x27;</span>)</span><br><span class="line">    .<span class="keyword">then</span>(response =&gt; response.json())</span><br><span class="line">    .<span class="keyword">then</span>(data =&gt; &#123;</span><br><span class="line">      document.getElementById(<span class="string">&#x27;result&#x27;</span>).textContent = JSON.stringify(data, null, 2);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(error =&gt; &#123;</span><br><span class="line">      console.error(<span class="string">&#x27;请求失败:&#x27;</span>, error);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>index.html - 应用的HTML文件，包含一个用于显示结果的元素：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;<span class="built_in">head</span>&gt;</span><br><span class="line">  &lt;title&gt;Electron Fetch Example&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h1&gt;Electron Fetch Example&lt;/h1&gt;</span><br><span class="line">  &lt;pre <span class="built_in">id</span>=<span class="string">&quot;result&quot;</span>&gt;&lt;/pre&gt;</span><br><span class="line">  &lt;script src=<span class="string">&quot;renderer.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">要运行这个Electron应用程序，请在your-electron-app目录下创建一个package.json文件，如果还没有的话：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;your-electron-app&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;main&quot;</span>: <span class="string">&quot;main.js&quot;</span>,</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;start&quot;</span>: <span class="string">&quot;electron .&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;keywords&quot;</span>: [],</span><br><span class="line">  <span class="string">&quot;author&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;license&quot;</span>: <span class="string">&quot;ISC&quot;</span>,</span><br><span class="line">  <span class="string">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;electron&quot;</span>: <span class="string">&quot;^your-electron-version&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>确保将”electron”: “^your-electron-version”替换为实际的Electron版本号。<br>然后，在终端中运行以下命令来启动Electron应用程序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure><h2 id="解析JSON"><a href="#解析JSON" class="headerlink" title="解析JSON"></a>解析JSON</h2><p>修改renderer.js文件来实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">fetch</span>(<span class="string">&#x27;https://jsonplaceholder.typicode.com/posts/1&#x27;</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 检查响应状态</span></span><br><span class="line">      <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;网络响应错误&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 解析数据并展示</span></span><br><span class="line">      <span class="keyword">const</span> &#123; title, body &#125; = data;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;title&#x27;</span>).<span class="property">textContent</span> = title;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;body&#x27;</span>).<span class="property">textContent</span> = body;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;请求失败:&#x27;</span>, error);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>index.html文件中添加两个元素，用于显示title和body：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Electron JSON Parsing Example<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>文章标题：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>文章正文：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span> <span class="attr">id</span>=<span class="string">&quot;body&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;renderer.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>现在，当Electron应用程序运行时，它会从指定的URL请求数据，解析JSON响应，然后提取并显示title和body字段。<br>请确保你的Electron应用程序的main.js文件正确地加载了index.html文件，并且renderer.js文件被包含在页面中。这样，当页面加载完成时，renderer.js中的代码将执行，从服务器获取数据并更新DOM元素。</p><h1 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h1><p>Electron 应用可以同时使用 Node.js 和 Chromium 的 API，这使得它既可以在主进程中使用 Node.js 的 net 模块来创建 TCP 连接，也可以在渲染进程中使用 WebSocket 来与服务器进行实时通信。<br>以下是在 Electron 的主进程中使用 net 模块创建 TCP 连接的示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">const &#123; app, BrowserWindow &#125; = require(<span class="string">&#x27;electron&#x27;</span>);</span><br><span class="line">const net = require(<span class="string">&#x27;net&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">createWindow</span></span> () &#123;  </span><br><span class="line">  const win = new BrowserWindow(&#123;  </span><br><span class="line">    width: 800,  </span><br><span class="line">    height: 600,  </span><br><span class="line">    webPreferences: &#123;  </span><br><span class="line">      nodeIntegration: <span class="literal">true</span>,  </span><br><span class="line">      contextIsolation: <span class="literal">false</span> </span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;);  </span><br><span class="line">  </span><br><span class="line">  // 并加载应用的 index.html  </span><br><span class="line">  win.loadFile(<span class="string">&#x27;index.html&#x27;</span>);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.whenReady().<span class="keyword">then</span>(() =&gt; &#123;</span><br><span class="line">  setTimeout(() =&gt; &#123;</span><br><span class="line">    </span><br><span class="line">    var client = net.connect(&#x27;<span class="number">16551</span>&#x27;, &#x27;<span class="number">1</span>xxx&#x27;, function()&#123;</span><br><span class="line">        console.log(&#x27;已经与服务器连接&#x27;);</span><br><span class="line">        client.write(&#x27;Yes\r\n&#x27;);</span><br><span class="line">    &#125;);</span><br><span class="line">    client.on(&#x27;data&#x27;, function(data)&#123;</span><br><span class="line">        console.log(data.toString());</span><br><span class="line">        client.end();//one msg end</span><br><span class="line">    &#125;);</span><br><span class="line">    client.on(<span class="string">&#x27;end&#x27;</span>, <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        console.log(<span class="string">&#x27;客户端连接中断&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, 2000); // </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.whenReady().<span class="keyword">then</span>(createWindow);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><p>Electron 应用的打包和运行过程可以分为几个步骤，包括开发、打包、分发和安装。以下是这个过程的概述：</p><h2 id="1-开发阶段"><a href="#1-开发阶段" class="headerlink" title="1. 开发阶段"></a>1. 开发阶段</h2><p>在开发阶段，你将使用 Web 技术（HTML、CSS、JavaScript）和 Node.js API 来构建你的 Electron 应用。<br>初始化项目：创建一个新的项目目录，初始化 package.json 文件。<br>安装依赖：使用 npm 安装 Electron (electron) 和其他所需的依赖。<br>编写代码：编写主进程 (main.js) 和渲染进程的代码（通常是 HTML、CSS 和 JavaScript 文件）。</p><h2 id="2-本地运行"><a href="#2-本地运行" class="headerlink" title="2. 本地运行"></a>2. 本地运行</h2><p>在开发过程中，你将经常运行你的应用以测试功能。<br>使用 electron . 或 npm start 命令来启动你的 Electron 应用。</p><h2 id="3-打包应用"><a href="#3-打包应用" class="headerlink" title="3. 打包应用"></a>3. 打包应用</h2><p>打包应用是将你的应用的所有文件和依赖项打包成一个可执行的程序或安装包。<br>选择打包工具：Electron 社区提供了多种打包工具，如 electron-packager、electron-builder 和 electron-forge。<br>配置打包工具：根据你选择的打包工具，配置打包选项，如平台（Windows、macOS、Linux）、架构（x64、ia32、armv7l）等。</p><h2 id="4-使用-electron-builder-打包示例"><a href="#4-使用-electron-builder-打包示例" class="headerlink" title="4. 使用 electron-builder 打包示例"></a>4. 使用 electron-builder 打包示例</h2><p>electron-builder 是一个流行的打包工具，它提供了丰富的配置选项和跨平台支持。<br>安装 electron-builder：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install electron-builder --save-dev</span><br></pre></td></tr></table></figure><p>在 package.json 中配置 build 字段：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;build&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;appId&quot;</span>: <span class="string">&quot;your.app.id&quot;</span>,</span><br><span class="line">    <span class="string">&quot;mac&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;category&quot;</span>: <span class="string">&quot;your.app.category&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;win&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;target&quot;</span>: <span class="string">&quot;nsis&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;linux&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;target&quot;</span>: <span class="string">&quot;deb&quot;</span>,</span><br><span class="line">      <span class="string">&quot;category&quot;</span>: <span class="string">&quot;your.app.category&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行打包命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><h2 id="5-分发和安装"><a href="#5-分发和安装" class="headerlink" title="5. 分发和安装"></a>5. 分发和安装</h2><p>打包完成后，你可以将生成的可执行文件或安装包分发给用户。<br>Windows：用户可以下载 .exe 安装程序并运行。<br>macOS：用户可以下载 .dmg 或 .pkg 安装包并安装。<br>Linux：用户可以下载 .deb 或 .AppImage 文件并安装。</p><h2 id="6-签名应用"><a href="#6-签名应用" class="headerlink" title="6. 签名应用"></a>6. 签名应用</h2><p>在某些平台上，你可能需要对应用进行代码签名以确保安全性和通过应用商店的审核。<br>macOS：使用 Xcode 或其他工具进行签名。<br>Windows：使用 Windows SDK 的 signtool 进行签名。<br>注意事项<br>在打包前，请确保在 package.json 中设置了 build.appId 和其他相关配置。<br>不同的打包工具可能有不同的配置选项，具体请参考相应工具的文档。<br>在发布应用之前，确保在目标平台上进行了充分的测试。<br>打包和发布 Electron 应用是一个复杂的过程，涉及到多个步骤和工具。Electron 官方文档和社区提供了大量资源来帮助开发者完成这个过程。</p><p>or</p><p>electron-builder，你可能还想添加一些 npm 脚本命令来简化构建过程：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;start&quot;</span>: <span class="string">&quot;electron .&quot;</span>,</span><br><span class="line">  <span class="string">&quot;build&quot;</span>: <span class="string">&quot;electron-builder -w&quot;</span>,</span><br><span class="line">  <span class="string">&quot;build:mac&quot;</span>: <span class="string">&quot;electron-builder -m&quot;</span>,</span><br><span class="line">  <span class="string">&quot;build:linux&quot;</span>: <span class="string">&quot;electron-builder -l&quot;</span>,</span><br><span class="line">  <span class="string">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里，build 命令会为 Windows 构建应用程序，build:mac 会为 macOS 构建，build:linux 会为 Linux 构建。使用这些命令可以快速构建特定平台的应用程序。</p><p><a class="link"   href="https://www.electronjs.org/docs/latest" >https://www.electronjs.org/docs/latest<i class="fas fa-external-link-alt"></i></a><br>API DOC</p><!--## Linux<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install bash</span><br><span class="line">sudo apt install curl</span><br></pre></td></tr></table></figure><p>debian 安装node</p><p>1.首先，打开终端。<br>2.导入NodeSource的GPG密钥：<br>curl -fsSL <a class="link"   href="https://deb.nodesource.com/gpgkey/nodesource.gpg.key" >https://deb.nodesource.com/gpgkey/nodesource.gpg.key<i class="fas fa-external-link-alt"></i></a> | sudo apt-key add -<br>3.然后，添加NodeSource的Debian仓库：<br>DISTRO&#x3D;”$(lsb_release -s)”<br>echo “deb <a class="link"   href="https://deb.nodesource.com/node_20.x" >https://deb.nodesource.com/node_20.x<i class="fas fa-external-link-alt"></i></a> $DISTRO main” | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;nodesource.list<br>4.更新本地包索引：<br>sudo apt-get update<br>5.最后，安装Node.js：<br>sudo apt-get install -y nodejs<br>6.验证Node.js和npm的安装：<br>node -v<br>npm -v<br>–&gt;</p><h1 id="Webview"><a href="#Webview" class="headerlink" title="Webview"></a>Webview</h1><ol><li>main.js<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; app, <span class="title class_">BrowserWindow</span>, ipcMain &#125; = <span class="built_in">require</span>(<span class="string">&#x27;electron&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> win;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createWindow</span> () &#123;</span><br><span class="line">  win = <span class="keyword">new</span> <span class="title class_">BrowserWindow</span>(&#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">800</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">600</span>,</span><br><span class="line">    <span class="attr">webPreferences</span>: &#123;</span><br><span class="line">      <span class="attr">preload</span>: path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;preload.js&#x27;</span>),</span><br><span class="line">      <span class="attr">contextIsolation</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">webviewTag</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  win.<span class="title function_">loadFile</span>(<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">whenReady</span>().<span class="title function_">then</span>(createWindow);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">on</span>(<span class="string">&#x27;window-all-closed&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (process.<span class="property">platform</span> !== <span class="string">&#x27;darwin&#x27;</span>) &#123;</span><br><span class="line">    app.<span class="title function_">quit</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">on</span>(<span class="string">&#x27;activate&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title class_">BrowserWindow</span>.<span class="title function_">getAllWindows</span>().<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="title function_">createWindow</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Listen for navigation commands</span></span><br><span class="line">ipcMain.<span class="title function_">on</span>(<span class="string">&#x27;navigate&#x27;</span>, <span class="function">(<span class="params">event, url</span>) =&gt;</span> &#123;</span><br><span class="line">  win.<span class="property">webContents</span>.<span class="title function_">send</span>(<span class="string">&#x27;navigate&#x27;</span>, url);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">ipcMain.<span class="title function_">on</span>(<span class="string">&#x27;back&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  win.<span class="property">webContents</span>.<span class="title function_">send</span>(<span class="string">&#x27;back&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">ipcMain.<span class="title function_">on</span>(<span class="string">&#x27;reload&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  win.<span class="property">webContents</span>.<span class="title function_">send</span>(<span class="string">&#x27;reload&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>preload.js</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; contextBridge, ipcRenderer &#125; = <span class="built_in">require</span>(<span class="string">&#x27;electron&#x27;</span>);</span><br><span class="line"></span><br><span class="line">contextBridge.<span class="title function_">exposeInMainWorld</span>(<span class="string">&#x27;electron&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">navigate</span>: <span class="function">(<span class="params">url</span>) =&gt;</span> ipcRenderer.<span class="title function_">send</span>(<span class="string">&#x27;navigate&#x27;</span>, url),</span><br><span class="line">  <span class="attr">back</span>: <span class="function">() =&gt;</span> ipcRenderer.<span class="title function_">send</span>(<span class="string">&#x27;back&#x27;</span>),</span><br><span class="line">  <span class="attr">reload</span>: <span class="function">() =&gt;</span> ipcRenderer.<span class="title function_">send</span>(<span class="string">&#x27;reload&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="3"><li>index.html<br>更新为使用 webview 元素，并确保导航按钮始终可见：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Simple Browser<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Simple Browser<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;url&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter URL&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;go&quot;</span>&gt;</span>Go<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;back&quot;</span>&gt;</span>Back<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;reload&quot;</span>&gt;</span>Reload<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">webview</span> <span class="attr">id</span>=<span class="string">&quot;webview&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%; height:90%;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.example.com&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">webview</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> goButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;go&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> backButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;back&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> reloadButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;reload&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> urlInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;url&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> webview = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;webview&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    goButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> url = urlInput.<span class="property">value</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (url) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        webview.<span class="property">src</span> = url;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    backButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      webview.<span class="title function_">goBack</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    reloadButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      webview.<span class="title function_">reload</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// Handle navigation events from main process</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">window</span>.<span class="property">electron</span>.<span class="title function_">on</span>(<span class="string">&#x27;navigate&#x27;</span>, <span class="function">(<span class="params">event, url</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      webview.<span class="property">src</span> = url;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">window</span>.<span class="property">electron</span>.<span class="title function_">on</span>(<span class="string">&#x27;back&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      webview.<span class="title function_">goBack</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">window</span>.<span class="property">electron</span>.<span class="title function_">on</span>(<span class="string">&#x27;reload&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      webview.<span class="title function_">reload</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>这个更新后的代码使用 webview 元素来加载和显示网页，并确保导航按钮始终可见。用户可以输入 URL 并点击“Go”按钮进行导航；点击“Back”按钮返回上一个页面；点击“Reload”按钮重新加载当前页面。</p><h1 id="mp3"><a href="#mp3" class="headerlink" title="mp3"></a>mp3</h1><p>开发一个简易音乐播放器涉及到 HTML、CSS 和 JavaScript 的使用，以及 Electron API 的集成。以下是创建这样一个应用的基本步骤和代码示例：</p><h2 id="1-初始化-Electron-项目"><a href="#1-初始化-Electron-项目" class="headerlink" title="1. 初始化 Electron 项目"></a>1. 初始化 Electron 项目</h2><p>如果你还没有创建 Electron 项目，可以通过以下命令来初始化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> electron-music-player</span><br><span class="line"><span class="built_in">cd</span> electron-music-player</span><br><span class="line">npm init -y</span><br><span class="line">npm install electron --save-dev</span><br></pre></td></tr></table></figure><h2 id="2-创建主进程文件-main-js"><a href="#2-创建主进程文件-main-js" class="headerlink" title="2. 创建主进程文件 main.js"></a>2. 创建主进程文件 main.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; app, <span class="title class_">BrowserWindow</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;electron&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createWindow</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 创建窗口</span></span><br><span class="line">  <span class="keyword">let</span> win = <span class="keyword">new</span> <span class="title class_">BrowserWindow</span>(&#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">800</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">600</span>,</span><br><span class="line">    <span class="attr">webPreferences</span>: &#123;</span><br><span class="line">      <span class="attr">nodeIntegration</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">contextIsolation</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 加载index.html文件</span></span><br><span class="line">  win.<span class="title function_">loadFile</span>(<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">whenReady</span>().<span class="title function_">then</span>(createWindow);</span><br></pre></td></tr></table></figure><ol start="3"><li>创建 HTML 文件 index.html<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>简易音乐播放器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>简易音乐播放器<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;musicFile&quot;</span> <span class="attr">multiple</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">audio</span> <span class="attr">id</span>=<span class="string">&quot;audioPlayer&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;play&quot;</span>&gt;</span>播放<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;pause&quot;</span>&gt;</span>暂停<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;prev&quot;</span>&gt;</span>上一首<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;next&quot;</span>&gt;</span>下一首<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;renderer.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="4-创建渲染进程脚本-renderer-js"><a href="#4-创建渲染进程脚本-renderer-js" class="headerlink" title="4. 创建渲染进程脚本 renderer.js"></a>4. 创建渲染进程脚本 renderer.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> playButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;play&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> pauseButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;pause&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> prevButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;prev&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> nextButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;next&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> musicFileInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;musicFile&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> audioPlayer = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;audioPlayer&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> songIndex = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> songs = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 监听文件选择</span></span><br><span class="line">  musicFileInput.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    songs.<span class="title function_">push</span>(...<span class="title class_">Array</span>.<span class="title function_">from</span>(e.<span class="property">target</span>.<span class="property">files</span>).<span class="title function_">map</span>(<span class="function"><span class="params">file</span> =&gt;</span> <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(file)));</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 播放音乐</span></span><br><span class="line">  playButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (songs[songIndex]) &#123;</span><br><span class="line">      audioPlayer.<span class="property">src</span> = songs[songIndex];</span><br><span class="line">      audioPlayer.<span class="title function_">play</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 暂停音乐</span></span><br><span class="line">  pauseButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    audioPlayer.<span class="title function_">pause</span>();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 上一首</span></span><br><span class="line">  prevButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (songIndex &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      songIndex--;</span><br><span class="line">      playButton.<span class="title function_">click</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 下一首</span></span><br><span class="line">  nextButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (songIndex &lt; songs.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">      songIndex++;</span><br><span class="line">      playButton.<span class="title function_">click</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 可以添加歌曲列表循环播放的逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="5-添加启动脚本"><a href="#5-添加启动脚本" class="headerlink" title="5. 添加启动脚本"></a>5. 添加启动脚本</h2><p>在 package.json 中添加 “start” 脚本来运行 Electron 应用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;start&quot;</span>: <span class="string">&quot;electron .&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-运行应用"><a href="#6-运行应用" class="headerlink" title="6. 运行应用"></a>6. 运行应用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure><p>这个简易音乐播放器允许用户选择音乐文件，然后通过按钮控制播放、暂停以及上一首和下一首的切换。</p><!--electron doc https://www.electronjs.org/zh/docs/latest/tutorial/quick-start win.webContents.openDevTools();  1.音乐播放器：创建一个具有图形界面的音乐播放器，支持播放本地音乐文件或在线音乐。2.视频编辑器：开发一个简单的视频编辑器，允许用户剪辑、合并视频，添加特效和文字。3.桌面游戏：开发休闲或策略桌面游戏，利用 Electron 的多线程能力提升性能。4.屏幕录制工具：创建一个可以录制屏幕活动、声音和网络摄像头的应用。5.虚拟桌面助手：开发一个虚拟助手，可以显示通知、提醒和管理日程。6.电子书阅读器：构建一个支持多种格式（如 ePub、PDF）的电子书阅读器。7.个人财务管理器：创建一个帮助用户跟踪收入、支出和预算的应用程序。8.科学计算器或统计分析工具：开发一个具有复杂数学和统计功能的应用程序。9.自定义画图板：创建一个绘图应用，支持不同的画笔工具、颜色和图层。10.实时协作工具：开发一个支持多人在线协作的文档编辑器或白板应用。11.桌面RSS阅读器：构建一个聚合多个RSS源并显示更新内容的应用程序。12.加密货币钱包：开发一个安全的加密货币钱包，支持交易和资产管理。13.机器学习实验台：创建一个允许用户运行和测试机器学习模型的桌面应用。14.虚拟桌面环境：开发一个可以模拟操作系统界面的虚拟桌面环境。15.自定义开发工具：为特定领域或技术栈开发定制的集成开发环境（IDE）。16.数据可视化工具：创建一个帮助用户将复杂数据转换为图表和图形的应用。17.网络监测工具：开发一个监控网络流量、端口和连接状态的应用程序。18.远程桌面软件：构建一个允许远程访问和控制其他计算机桌面的应用。19.社交媒体管理器：开发一个集成多个社交媒体平台的管理工具。20.自定义操作系统启动器：创建一个启动器，允许用户快速启动常用应用程序和脚本。-->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
            <tag> socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axios Cors  &amp;&amp; Timestamp</title>
      <link href="/2024/08/04/Axios-Cors-Timestamp/"/>
      <url>/2024/08/04/Axios-Cors-Timestamp/</url>
      
        <content type="html"><![CDATA[<h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><p>安装 Axios: 使用 Axios 进行 HTTP 请求。</p><p>封装 Axios: 将 Axios 封装成一个模块以便在项目中复用。</p><p>解决跨域问题: 在 vite.config.ts 文件中配置代理以解决跨域问题。</p><p>调用 API: 在 Vue 组件中使用封装的 Axios 进行数据请求和显示。</p><h2 id="安装-Axios"><a href="#安装-Axios" class="headerlink" title="安装 Axios"></a>安装 Axios</h2><p>首先，确保你已经安装了 Axios：</p><p>bash<br>Copy Code<br>npm install axios</p><h2 id="封装-Axios"><a href="#封装-Axios" class="headerlink" title="封装 Axios"></a>封装 Axios</h2><p>创建一个 http 文件夹并在其中创建一个 request.ts 文件：</p><p><strong>src&#x2F;http&#x2F;request.ts:</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;http://localhost:16552/api/zblack&#x27;</span>, <span class="comment">// 根据你的后端API地址调整</span></span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span>, <span class="comment">// 请求超时时间</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;请求错误:&#x27;</span>, error);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = response.<span class="property">data</span>;</span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">isOk</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="property">rsData</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;请求错误:&#x27;</span>, res.<span class="property">msg</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(res.<span class="property">msg</span> || <span class="string">&#x27;Error&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;响应错误:&#x27;</span>, error);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service;</span><br></pre></td></tr></table></figure><h2 id="3-解决跨域问题"><a href="#3-解决跨域问题" class="headerlink" title="3. 解决跨域问题"></a>3. 解决跨域问题</h2><p>在 vite.config.ts 文件中添加代理配置：</p><p>vite.config.ts:</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:16552&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="4-在-Vue-组件中调用-API"><a href="#4-在-Vue-组件中调用-API" class="headerlink" title="4. 在 Vue 组件中调用 API"></a>4. 在 Vue 组件中调用 API</h2><p>使用封装的 Axios：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">fixed</span> <span class="attr">prop</span>=<span class="string">&quot;UserBlackID&quot;</span> <span class="attr">label</span>=<span class="string">&quot;UserBlackID&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;UserBlockerID&quot;</span> <span class="attr">label</span>=<span class="string">&quot;UserBlockerID&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;UserBlockedID&quot;</span> <span class="attr">label</span>=<span class="string">&quot;UserBlockedID&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;CreatedAt&quot;</span> <span class="attr">label</span>=<span class="string">&quot;CreatedAt&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;UserBlackReason&quot;</span> <span class="attr">label</span>=<span class="string">&quot;Reason&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;UserBlackIP&quot;</span> <span class="attr">label</span>=<span class="string">&quot;IP&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;UserBlackStatus&quot;</span> <span class="attr">label</span>=<span class="string">&quot;Status&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref, onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/http/request&#x27;</span>; <span class="comment">// 根据你的路径调整</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> tableData = <span class="title function_">ref</span>([]);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">onMounted</span>(<span class="keyword">async</span> () =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">request</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;/api/zblack/FindUserBlackLLL&#x27;</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">    tableData.<span class="property">value</span> = response;</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;获取数据失败:&#x27;</span>, error);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="keyword">@import</span> <span class="string">&#x27;./index.scss&#x27;</span>;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>调用成功则跨域问题 解决~</p><!--https://github.com/zanjiahao/Vue-ElPlus-Admin adm--><h1 id="什么是Unix时间戳-Unix-timestamp-："><a href="#什么是Unix时间戳-Unix-timestamp-：" class="headerlink" title="什么是Unix时间戳(Unix timestamp)："></a>什么是Unix时间戳(Unix timestamp)：</h1><p>Unix时间戳(Unix timestamp)，或称Unix时间(Unix time)、POSIX时间(POSIX time)，是一种时间表示方式，定义为从格林威治时间1970年01月01日08时00分00秒起至现在的总秒数。Unix时间戳不仅被使用在Unix 系统、类Unix系统中，也在许多其他操作系统中被广泛采用。<br>时间戳(timestamp)，通常是一个字符序列，唯一地标识某一刻的时间。数字时间戳技术是数字签名技术一种变种的应用。</p><h2 id="时间戳转化："><a href="#时间戳转化：" class="headerlink" title="时间戳转化："></a>时间戳转化：</h2><p>第一步：把时间戳转成Date对象(为什么乘以1000，因为1000毫秒换算成秒等于1秒)<br>const date &#x3D; new Date(1722408384*1000)</p><h2 id="将date进行格式化，转成对应的字符串"><a href="#将date进行格式化，转成对应的字符串" class="headerlink" title="将date进行格式化，转成对应的字符串"></a>将date进行格式化，转成对应的字符串</h2><p>（因为时间戳格式化太常见，可以封装，formatData）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">formatDate</span> = (<span class="params">timestamp: number</span>) =&gt; &#123;</span><br><span class="line">  timestamp = timestamp * <span class="number">1000</span></span><br><span class="line">  <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>(timestamp)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(timestamp + <span class="string">&#x27;&#x27;</span> + date)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;date.getFullYear()&#125;</span>-<span class="subst">$&#123;<span class="built_in">String</span>(date.getMonth() + <span class="number">1</span>).padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)&#125;</span>-<span class="subst">$&#123;<span class="built_in">String</span>(date.getDate()).padStart(</span></span></span><br><span class="line"><span class="subst"><span class="string">    <span class="number">2</span>,<span class="string">&#x27;0&#x27;</span>)&#125;</span> <span class="subst">$&#123;<span class="built_in">String</span>(date.getHours()).padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)&#125;</span>:<span class="subst">$&#123;<span class="built_in">String</span>(date.getMinutes()).padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)&#125;</span>:<span class="subst">$&#123;<span class="built_in">String</span>(</span></span></span><br><span class="line"><span class="subst"><span class="string">    date.getSeconds()</span></span></span><br><span class="line"><span class="subst"><span class="string">  ).padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)&#125;</span>`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aaxios </tag>
            
            <tag> cors </tag>
            
            <tag> timestamp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yolov10</title>
      <link href="/2024/07/29/yolov10/"/>
      <url>/2024/07/29/yolov10/</url>
      
        <content type="html"><![CDATA[<h1 id="YOLOv3、YOLov3-Ultralytics和YOLOv3u"><a href="#YOLOv3、YOLov3-Ultralytics和YOLOv3u" class="headerlink" title="YOLOv3、YOLov3-Ultralytics和YOLOv3u"></a>YOLOv3、YOLov3-Ultralytics和YOLOv3u</h1><p>概述<br>本文件概述了三种密切相关的物体检测模型，即YOLOv3、YOLOv3-Ultralytics 和YOLOv3u。<br>1.YOLOv3:这是”You Only Look Once”(YOLO)物体检测算法的第三个版本。YOLOv3最初由约瑟夫-雷德蒙(Joseph Redmon)开发，通过引入多尺度预测和三种不同大小的检测内核等功能，YOLOv3 对其前身进行了改进。<br>YOLOv3-Ultralvtics: 这是Ultralvtics’ YOLov3 模型的实现。它再现了原始的 YOLOv3 架构，并提供了更多的功2.<br>能，如支持更多的预训练模型和更简单的定制选项。<br>YOLOv3u:这是 yOLOv3-ultralvtics 的更新版本，它采用了YOLOv8 模型中使用的无锚、无对象性分割头,3.<br>YOLOv3u 保留了与 YOLOv3 相同的骨干和颈部结构，但使用了YOLOv8 更新的检测头。</p><h1 id="YOLov4-高速、精确的物体探测"><a href="#YOLov4-高速、精确的物体探测" class="headerlink" title="YOLov4:高速、精确的物体探测"></a>YOLov4:高速、精确的物体探测</h1><p>欢迎访问Ultralytics YoLov4 文档页面，YOLOv4 是由 Alexey Bochkovskiy于 2020,年在<a class="link"   href="https://github.com/AlexeyAB/darknet" >https://github.com/AlexeyAB/darknet<i class="fas fa-external-link-alt"></i></a> 推出的最先进的实时物体检测器。 YOLOv4 的设计在速度和精确度之间实现了最佳平衡，是许多应用的理想选择。</p><p>YOLOv5u 代表着物体检测方法的进步。YOLOv5u 源自 开发的 YOLOv5 Ultralvtics 开发的模型的基础结构，YOLOv5u整合了无锚点、无对象性的分割头，这是以前的 YOLov8模型中引入的功能。这一调整完善了模型的架构，从而提高了物体检测任务中的精度·速度权衡。鉴于经验结果及其衍生特征，YOLov5u 为那些在研究和实际应用中寻求稳健解决方案的人提供了一个高效的替代方案。</p><p>美团YOLOv6 是一款先进的物体检测器，在速度和准确性之间取得了出色的平衡，是实时应用的热门选择。该模型在架构和训练方案上引入了几项显著的改进，包括双向串联(Bic)模块、锚点辅助训练(AAT)策略以及改进的骨干和颈部设计，从而在 COCo 数据集上实现了最先进的精度。    Bic AAT</p><h1 id="YOLOv7"><a href="#YOLOv7" class="headerlink" title="YOLOv7:"></a>YOLOv7:</h1><p>可训练的免费书包<br>YOLOv7 是最先进的实时物体检测器，在5FPS 到 160 FPS 的范围内，其速度和准确性都超过了所有已知的物体检测器。在GPU V100 上，YOLOv7 的准确率(56.8% AP)在 30 FPS 或更高的所有已知实时物体检测器中是最高的。此外，YOLOv7 在速度和准确性上都优于 YOLOR、YOLOX、Scaled-YOLOv4、YOLOv5 等其他物体检测器。该模型是在 MS COC0 数据集上从头开始训练的，没有使用任何其他数据集或预先训练的权重。YoLov7 的源代码可在GitHub 上获取。</p><h1 id="YOLOv8"><a href="#YOLOv8" class="headerlink" title="YOLOv8"></a>YOLOv8</h1><p>YOLOv8 是YOL0 系列实时物体检测器的最新迭代产品，在精度和速度方面都具有尖端性能。在之前YOL0 版本的基础上，YOLov8 引入了新的功能和优化，使其成为广泛应用中各种物体检测任务的理想选择。</p><h1 id="YOLov9-物体检测技术的飞跃发展"><a href="#YOLov9-物体检测技术的飞跃发展" class="headerlink" title="YOLov9:物体检测技术的飞跃发展"></a>YOLov9:物体检测技术的飞跃发展</h1><p>YOLov9 引入了可编程梯度信息IPGI) 和广义高效层聚合网络(GELAN) 等开创性技术，标志着实时目标检测领域的重大进步。该模型在效率、准确性和适应性方面都有显著提高，在 MS COC0 数据集上树立了新的标杆。YOLOv9 项目虽然是由一个独立的开源团队开发的，但它建立在以下机构提供的强大代码库基础之上 ultralytics YoLov5提供的强大代码库，展示了人工智能研究界的协作精神。</p><p>YOLO强在目标检测</p><h1 id="YOLOv10-实时端到端物体检测"><a href="#YOLOv10-实时端到端物体检测" class="headerlink" title="YOLOv10:实时端到端物体检测"></a>YOLOv10:实时端到端物体检测</h1><p>YOLOv10 是清华大学研究人员在 Ultralvtics Python,清华大学的研究人员在 YOLOv10软件包的基础上，引入了一种新的实时目标检测方法，解决了YOL0 以前版本在后处理和模型架构方面的不足。通过消除非最大抑制(NMS)和优化各种模型组件，YOLOv10 在显著降低计算开销的同时实现了最先进的性能。大量实验证明，YOLOv10 在多个模型尺度上实现了卓越的精度-延迟权衡。<br>实时物体检测旨在以较低的延迟准确预测图像中的物体类别和位置。YOL0 系列在性能和效率之间取得了平衡，因此一直处于这项研究的前沿。然而，对 NMS的依赖和架构上的低效阻碍了最佳性能的实现。YOLOv10 通过为无NMS 训练引入一致的双重分配和以效率-准确性为导向的整体模型设计策略，解决了这些问题。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><p>1.无 NMS训练   利用一致的双重分配来消除对 NMS 的需求，从而减少推理延迟。<br>2.整体模型设计:从效率和准确性的角度全面优化各种组件，包括轻量级分类头、空间通道去耦向下采样和等级引导块设计。<br>3.增强的模型功能:纳入大核卷积和部分自注意模块，在不增加大量计算成本的情况下提高性能。</p><p>无NMS训练 最核心特点</p><h2 id="YOLov10-有多种型号，可满足不同的应用需求"><a href="#YOLov10-有多种型号，可满足不同的应用需求" class="headerlink" title="YOLov10 有多种型号，可满足不同的应用需求:"></a>YOLov10 有多种型号，可满足不同的应用需求:</h2><p><strong>YOLOv10-N</strong>:用于资源极其有限环境的纳米版本。<br><strong>YOLOv10-S</strong>:兼顾速度和精度的小型版本。<br><strong>YOLOv10-M</strong>:通用中型版本。<br><strong>YOLOv10-B</strong>:平衡型，宽度增加，精度更高，<br><strong>YOLOv10-L</strong>:大型版本，精度更高，但计算资源增加。<br><strong>YOLOv10-X</strong>:超大型版本可实现最高精度和性能。</p><h1 id="通俗易懂的YOLOv10环境构建过程"><a href="#通俗易懂的YOLOv10环境构建过程" class="headerlink" title="通俗易懂的YOLOv10环境构建过程"></a>通俗易懂的YOLOv10环境构建过程</h1><p>使用的前提<br>。NVIDIA GPU:推荐至少是GTX 1060&#x2F;RTX2060级别或更高:<br>。CUDA Toolkit版本:建议使用CUDA 10.1或更新版本。<br>。cuDNN版本:与CUDA版本对应的cuDNN版本，<br>。NVIDIA驱动程序:推荐使用最新版本的NVIDIA驱动程序，以确保最佳性能和功能支持。</p><p>如果不行就只能CPU训练~</p><h1 id="安装conda环境"><a href="#安装conda环境" class="headerlink" title="安装conda环境"></a>安装conda环境</h1><h2 id="1、显卡信息查看"><a href="#1、显卡信息查看" class="headerlink" title="1、显卡信息查看"></a>1、显卡信息查看</h2><p>nvidia-smi nv控制版面</p><h2 id="2、下载anaconda3"><a href="#2、下载anaconda3" class="headerlink" title="2、下载anaconda3"></a>2、下载anaconda3</h2><p><a class="link"   href="https://repo.anaconda.com/archive/Anaconda3-2024.06-1-Windows-x86" >https://repo.anaconda.com/archive/Anaconda3-2024.06-1-Windows-x86<i class="fas fa-external-link-alt"></i></a> 64.exe<br><a class="link"   href="https://www.anaconda.com/" >https://www.anaconda.com/<i class="fas fa-external-link-alt"></i></a></p><h2 id="3、配置环境变量"><a href="#3、配置环境变量" class="headerlink" title="3、配置环境变量"></a>3、配置环境变量</h2><p>E:\Application\anaconda3<br>E:\Applicationanaconda3\Scripts<br>E:\Application\anaconda3\Library\bin</p><p>系统变量<br>path</p><h2 id="验证环境是否OK，出现base代表OK，没有出现卸载在安装一次"><a href="#验证环境是否OK，出现base代表OK，没有出现卸载在安装一次" class="headerlink" title="验证环境是否OK，出现base代表OK，没有出现卸载在安装一次"></a>验证环境是否OK，出现base代表OK，没有出现卸载在安装一次</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> list</span><br></pre></td></tr></table></figure><p>验证简单conda命令<br>创建python环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n yolov10 python==3.9</span><br></pre></td></tr></table></figure><h2 id="2、查看现有环境"><a href="#2、查看现有环境" class="headerlink" title="2、查看现有环境"></a>2、查看现有环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> list</span><br></pre></td></tr></table></figure><h2 id="3、激活环境-conda-init"><a href="#3、激活环境-conda-init" class="headerlink" title="3、激活环境  conda init"></a>3、激活环境  conda init</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate yolo</span><br></pre></td></tr></table></figure><h2 id="4、激活失败"><a href="#4、激活失败" class="headerlink" title="4、激活失败"></a>4、激活失败</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda init cmd.exe</span><br></pre></td></tr></table></figure><h2 id="5、删除环境"><a href="#5、删除环境" class="headerlink" title="5、删除环境"></a>5、删除环境</h2><p>conda env remove -n yolo10</p><h1 id="配置YOLOv10环境"><a href="#配置YOLOv10环境" class="headerlink" title="配置YOLOv10环境"></a>配置YOLOv10环境</h1><p>提示:千万别开加速器，强调N遍，开完加速器可能版本不兼容，环境折腾死人</p><h2 id="下载YOLov10源码"><a href="#下载YOLov10源码" class="headerlink" title="下载YOLov10源码"></a>下载YOLov10源码</h2><p><a class="link"   href="https://github.com/THU-MIG/yolov10" >https://github.com/THU-MIG/yolov10<i class="fas fa-external-link-alt"></i></a></p><h2 id="创建YOLOv10环境"><a href="#创建YOLOv10环境" class="headerlink" title="创建YOLOv10环境"></a>创建YOLOv10环境</h2><p>conda create -n yolov10 python&#x3D;&#x3D;3.9</p><h2 id="激活yolov10环境"><a href="#激活yolov10环境" class="headerlink" title="激活yolov10环境"></a>激活yolov10环境</h2><p>conda activate yolov10 </p><h2 id="找到源码下的的requirement-txt文档"><a href="#找到源码下的的requirement-txt文档" class="headerlink" title="找到源码下的的requirement.txt文档"></a>找到源码下的的requirement.txt文档</h2><p>把torch和torchvision两个注释掉</p><h2 id="手动安装pytorch和tourchvision。"><a href="#手动安装pytorch和tourchvision。" class="headerlink" title="手动安装pytorch和tourchvision。"></a>手动安装pytorch和tourchvision。</h2><p>进入pythorch官网找到2.0.1的版本，复制链接后手动安装<br>pip install torch&#x3D;&#x3D;2.0.1 torchvision&#x3D;&#x3D;0.15.2 torchaudio&#x3D;&#x3D;2.0.2 –index-url <a class="link"   href="https://download.pytorch.org/whl/cu118" >https://download.pytorch.org/whl/cu118<i class="fas fa-external-link-alt"></i></a><br>验证是否OK,显示结果为True代表就OK<br>import torch<br>torch.cuda.is available()&#x3D;&#x3D;&#x3D; true</p><h2 id="安装成功后，执行"><a href="#安装成功后，执行" class="headerlink" title="安装成功后，执行"></a>安装成功后，执行</h2><p>python<br>pip install -r requirements.txt</p><h2 id="编译源码"><a href="#编译源码" class="headerlink" title="编译源码"></a>编译源码</h2><p>pip install -e .</p><h2 id="下载预训练权重模型"><a href="#下载预训练权重模型" class="headerlink" title="下载预训练权重模型"></a>下载预训练权重模型</h2><p><a class="link"   href="https://github.com/THU-MIG/yolov10" >https://github.com/THU-MIG/yolov10<i class="fas fa-external-link-alt"></i></a> </p><p><a class="link"   href="https://github.com/THU-MIG/yolov10/releases/tag/v1.1" >https://github.com/THU-MIG/yolov10/releases/tag/v1.1<i class="fas fa-external-link-alt"></i></a></p><p>.pt</p><p>yolov10-main&gt;yolo predict model&#x3D;yolov10n.pt source&#x3D;cat.jpg</p><h2 id="标注工具"><a href="#标注工具" class="headerlink" title="标注工具"></a>标注工具</h2><p>lablemechinese<br>lableImg </p><p>PS</p><h1 id="PyTorch"><a href="#PyTorch" class="headerlink" title="PyTorch"></a>PyTorch</h1><p>PyTorch 是一种开源深度学习框架，以出色的灵活性和易用性著称。这在一定程度上是因为与机器学习开发者和数据科学家所青睐的热门 Python 高级编程语言兼容。</p><h2 id="什么是-PyTorch"><a href="#什么是-PyTorch" class="headerlink" title="什么是 PyTorch?"></a>什么是 PyTorch?</h2><p>PvTorch 是一种用于构建深度学习模型的功能完备框架，是一种通常用于图像识别和语言处理等应用程序的机器学习。使用 Python 编写，因此对于大多数机器学习开发者而言，学习和使用起来相对简单。PyTorch 的独特之处在于，它完全支持 GPU，并且使用反向模式自动微分技术，因此可以动态修改计算图形。这使其成为快速实验和原型设计的常用选择。</p><h2 id="为何选择-PyTorch"><a href="#为何选择-PyTorch" class="headerlink" title="为何选择 PyTorch?"></a>为何选择 PyTorch?</h2><p>PyTorch 是 Facebook Al Research 和其他几个实验室的开发者的工作成果。该框架将 Torch 中高效而灵活的 GPU 加谏后端库与直观的 Pvthon 前端相结合，后者专注于快速原型设计、可读代码，并支持尽可能广泛的深度学习模型。Pytorch 支持开发者使用熟悉的命令式编程方法，但仍可以输出到图形。它于 2017 年以开源形式发布，其Python 根源使其深受机器学习开发者的喜爱。<br><strong>和TensorFlow区别 是  可以动态修改计算图形。灵活性，易用性，深度学习框架。</strong></p><h1 id="TensorFlow"><a href="#TensorFlow" class="headerlink" title="TensorFlow"></a>TensorFlow</h1><p>TensorFlow 是一款先进的开源库，旨在开发和部署先进的机器学习应用程序。</p><h2 id="什么是-Tensorflow"><a href="#什么是-Tensorflow" class="headerlink" title="什么是 Tensorflow"></a>什么是 Tensorflow</h2><p>TensorFlow 是数据科学家、软件开发者和教育工作者主要使用的开源平台，用于使用数据流图形进行机器学习。图像中的节点代表数学运算，而图像边缘则代表节点间流动的多维数据阵列(张量)。这种灵活的架构允许将机器学习算法描述为相关运算的图形。可以在便携式设备、台式电脑和高端服务器等众多不同平台的 GPU、CPU 和TPU 上训练和执行这些代码，而无需重写代码。这意味着各种背景的编程人员均可以使用相同的工具集进行协作从而显著提高效率，该系统最初由 Google Brain 团队开发，用于研究机器学习和深度神经网络(DNN)，其通用性同样适用于其他各种领域。<br>TensorFlow的工作原理<br>TensorFlow 工作流程由三个不同的部分定义，即数据预处理、构建模型和训练模型，从而进行预测。该框架将数据输入称为张量的多维数组，并以两种不同的方式执行。主要方法是构建一个计算图形来定义用于训练模型的数据流。第二种常用的更直观的方法是使用 Eager Execution，该方法遵循命令编程原则并立即评估操作。<br>使用 TensorFlow 架构，通常在台式电,脑或数据中心完成训练。这两种情况下，均通过在 GPU 上放置张量来加快处理速度。然后，经过训练的模型可以在一系列平台上运行，从台式电脑到移动设备，然后一直到云端。<br>TensorFlow 还包含很多支持功能。例如，TensorBoard 允许用户以直观方式监控训练过程、底层计算图形和指标以便调试运行以及评估模型性能。TensorBoard 是 Tensorflow 和 Keras 的统一可视化框架,<br>Keras 是在 TensorFlow 上运行的高级 API。Keras 通过提供用于构建常见用例模型的简化 API，进一步深化TensorFlow 的抽象概念。API 背后的驱动理念是能够在更短的时间内将想法落实为结果。</p><h2 id="TensorFlow-的优势"><a href="#TensorFlow-的优势" class="headerlink" title="TensorFlow 的优势"></a>TensorFlow 的优势</h2><p>TensorFlow 可用于开发自然语言处理、图像识别、手写识别以及基于计算的不同模拟(例如偏微分方程)等各种<br>任务模型。Tensorflow 的主要优势在于其能够跨多个加速平台执行低级运算、自动计算梯度、生产级可扩展性和可互操作的图形导出。通过为 Keras 提供高级 AP!和 Eager Execution，替代 Tensorflow 上的数据流范式，始终可以轻松便捷地编写代码。<br>作为 Tensorflow 的原始开发者，Google 仍然大力支持该库，并加快其发展速度。例如，Google 创建了一个在线中心，用于共享用户创建的许多不同模型。</p><h2 id="TensorFlow和NVIDIA"><a href="#TensorFlow和NVIDIA" class="headerlink" title="TensorFlow和NVIDIA"></a>TensorFlow和NVIDIA</h2><p>图形处理器或 GPU 配备由数千个小型高效核心组成的大规模并行架构，可以同时启动数千个并行线程，能够强力支持计算密集型任务。<br>CPU MULTIPLE CORES GPU THOUSANDS OF CORES<br>十年前，研究人员发现 GPU 非常擅长矩阵运算和代数计算，而深度学习就十分依赖于这两种运算。TensorFlow 在新款 NVIDIA Pascal GPU 上的运行速度可提升高达 50%，并且能够顺利跨 GPU 进行扩展。 如今，您训练模型的时间可以从几天缩短到几小时。<br>TensorFlow 使用优化的 C++ 和 NVIDIA’CUDA·工具包编写，使模型能够在训练和推理时在 GPU 上运行，从而大幅提速。<br>TensorFlow GPU 支持需要多个驱动和库。为简化安装并避免库冲突，建议利用 GPU 支持的 TensorFlow Docker 镜像。此设置仅需要 NVIDIA GPU 驱动并且安装 NVIDIA Docker。用户可以从预配置了预训练模型和 Tensorflow 库支持的 NGC(NVIDIA GPU Cloud)中提取容器。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> yolo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE npm yarn</title>
      <link href="/2024/07/27/VUE-npm-yarn/"/>
      <url>/2024/07/27/VUE-npm-yarn/</url>
      
        <content type="html"><![CDATA[<h1 id="vite-cretae-vue-npm-yarn"><a href="#vite-cretae-vue-npm-yarn" class="headerlink" title="vite cretae vue npm yarn"></a>vite cretae vue npm yarn</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init vite</span><br></pre></td></tr></table></figure><p>PN<br>vue3<br>ts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> PN</span><br><span class="line">npm install </span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn</span><br><span class="line">yarn </span><br><span class="line">yarn dev   </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">NPM</span><br><span class="line">npm init 初始化某个项目</span><br><span class="line">npm install/link 默认的安装依赖操作</span><br><span class="line">npm install taco --save 安装某个依赖，并且默认保存到package.</span><br><span class="line">npm uninstall taco  --save 安装某个开发时依赖项目</span><br><span class="line">npm install taco --save-dev 更新某个依赖项目</span><br><span class="line">npm update taco --save安装某个全局依赖项目</span><br><span class="line">npm install taco --global 安装某个全局依赖项目</span><br><span class="line">npm publish/login/1ogout 发布/登录/登出，一系列NPM Registry操作</span><br><span class="line">npm rutest 运行某个命令</span><br><span class="line"></span><br><span class="line">YARN</span><br><span class="line">yarn init 初始化某个项目</span><br><span class="line">yarn install/link 默认的安装依赖操作</span><br><span class="line">yarn add taco 安装某个依赖，并且默认保存到package.</span><br><span class="line">yarn remove taco 安装某个开发时依赖项目</span><br><span class="line">yarn add taco --dev 安装某个开发时依赖项目</span><br><span class="line">yarn upgrade taco 更新某个依赖项目</span><br><span class="line">yarn global add taco 安装某个全局依赖项目</span><br><span class="line">yarn publish/login/1ogout 发布/登录/登出，一系列NPM Registry操作</span><br><span class="line">yarn rutest 运行某个命令</span><br></pre></td></tr></table></figure><p>-S等同于–save，将依赖安装至运行依赖<br>-D等同于–save-dev，将依赖安装至开发依赖<br>-g全局</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add vue-router -S</span><br><span class="line"></span><br><span class="line">yarn add element-plus -S</span><br></pre></td></tr></table></figure><p>按需加载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add unplugin-vue-components -D</span><br></pre></td></tr></table></figure><p>package.json 查看 依赖</p><p> main.ts -&gt; app.vue   <script setup lang="ts"></p><p>elementplup doc<br><a class="link"   href="http://element-plus.org/zh-CN/component/overview.html" >http://element-plus.org/zh-CN/component/overview.html<i class="fas fa-external-link-alt"></i></a><br><a class="link"   href="https://element-plus.org/zh-CN/guide/quickstart.html" >https://element-plus.org/zh-CN/guide/quickstart.html<i class="fas fa-external-link-alt"></i></a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> VUE </tag>
            
            <tag> yarn </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET MSTest Xunit</title>
      <link href="/2024/07/26/NET-MSTest-Xunit/"/>
      <url>/2024/07/26/NET-MSTest-Xunit/</url>
      
        <content type="html"><![CDATA[<h1 id="node-api"><a href="#node-api" class="headerlink" title="node api"></a>node api</h1><p>下面是一个使用 Node.js 和 Express.js 编写的简单 RESTful API 示例。</p><h2 id="1-初始化项目"><a href="#1-初始化项目" class="headerlink" title="1. 初始化项目"></a>1. 初始化项目</h2><p>首先，创建一个新的项目目录并进入该目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> myapi</span><br><span class="line"><span class="built_in">cd</span> myapi</span><br></pre></td></tr></table></figure><p>然后初始化一个新的 Node.js 项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><h2 id="2-安装依赖"><a href="#2-安装依赖" class="headerlink" title="2. 安装依赖"></a>2. 安装依赖</h2><p>安装 Express.js 作为我们的 Web 框架：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express</span><br></pre></td></tr></table></figure><h2 id="3-创建主文件"><a href="#3-创建主文件" class="headerlink" title="3. 创建主文件"></a>3. 创建主文件</h2><p>在项目根目录下创建一个名为 index.js 的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> index.js</span><br></pre></td></tr></table></figure><h2 id="4-编写-RESTful-API-代码"><a href="#4-编写-RESTful-API-代码" class="headerlink" title="4. 编写 RESTful API 代码"></a>4. 编写 RESTful API 代码</h2><p>在 index.js 中编写以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> items = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;Item 1&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;Item 2&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;Item 3&#x27;</span> &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取所有项目</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/items&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">json</span>(items);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取单个项目</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/items/:id&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> id = <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>);</span><br><span class="line">  <span class="keyword">const</span> item = items.<span class="title function_">find</span>(<span class="function"><span class="params">i</span> =&gt;</span> i.<span class="property">id</span> === id);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (item) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(item);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&#x27;Item not found&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建新项目</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/items&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> newItem = &#123;</span><br><span class="line">    <span class="attr">id</span>: items.<span class="property">length</span> + <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: req.<span class="property">body</span>.<span class="property">name</span></span><br><span class="line">  &#125;;</span><br><span class="line">  items.<span class="title function_">push</span>(newItem);</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">201</span>).<span class="title function_">json</span>(newItem);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新项目</span></span><br><span class="line">app.<span class="title function_">put</span>(<span class="string">&#x27;/items/:id&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> id = <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>);</span><br><span class="line">  <span class="keyword">const</span> item = items.<span class="title function_">find</span>(<span class="function"><span class="params">i</span> =&gt;</span> i.<span class="property">id</span> === id);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (item) &#123;</span><br><span class="line">    item.<span class="property">name</span> = req.<span class="property">body</span>.<span class="property">name</span>;</span><br><span class="line">    res.<span class="title function_">json</span>(item);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&#x27;Item not found&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除项目</span></span><br><span class="line">app.<span class="title function_">delete</span>(<span class="string">&#x27;/items/:id&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> id = <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>);</span><br><span class="line">  <span class="keyword">const</span> itemIndex = items.<span class="title function_">findIndex</span>(<span class="function"><span class="params">i</span> =&gt;</span> i.<span class="property">id</span> === id);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (itemIndex !== -<span class="number">1</span>) &#123;</span><br><span class="line">    items.<span class="title function_">splice</span>(itemIndex, <span class="number">1</span>);</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">204</span>).<span class="title function_">send</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&#x27;Item not found&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server is running on http://localhost:<span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="5"><li>运行服务器<br>在终端中运行以下命令来启动服务器：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">node index.js</span><br></pre></td></tr></table></figure>现在，服务器应该在 <a class="link"   href="http://localhost:3000/" >http://localhost:3000<i class="fas fa-external-link-alt"></i></a> 上运行</li></ol><p>以下是 API 端点的简要说明：<br>GET &#x2F;items - 获取所有项目<br>GET &#x2F;items&#x2F;:id - 获取单个项目<br>POST &#x2F;items - 创建新项目<br>PUT &#x2F;items&#x2F;:id - 更新项目<br>DELETE &#x2F;items&#x2F;:id - 删除项目</p><h1 id="单元测试。"><a href="#单元测试。" class="headerlink" title="单元测试。"></a>单元测试。</h1><h2 id="1-创建-C-项目"><a href="#1-创建-C-项目" class="headerlink" title="1. 创建 C# 项目"></a>1. 创建 C# 项目</h2><p>首先，创建一个新的 xUnit 测试项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dotnet new xunit -n MyApiTests</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> MyApiTests</span><br></pre></td></tr></table></figure><h2 id="2-安装-RestSharp"><a href="#2-安装-RestSharp" class="headerlink" title="2. 安装 RestSharp"></a>2. 安装 RestSharp</h2><p>安装 RestSharp 库，它将用于发送 HTTP 请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package RestSharp</span><br></pre></td></tr></table></figure><h2 id="3-编写单元测试"><a href="#3-编写单元测试" class="headerlink" title="3. 编写单元测试"></a>3. 编写单元测试</h2><p>在 MyApiTests 项目中，创建一个名为 ApiTests.cs 的文件，并编写以下代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> RestSharp;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> Xunit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ApiTests</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> BaseUrl = <span class="string">&quot;http://localhost:3000&quot;</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Fact</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">Test_GetAllItems</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> client = <span class="keyword">new</span> RestClient(BaseUrl);</span><br><span class="line">        <span class="keyword">var</span> request = <span class="keyword">new</span> RestRequest(<span class="string">&quot;items&quot;</span>, Method.Get);</span><br><span class="line">        <span class="keyword">var</span> response = <span class="keyword">await</span> client.ExecuteAsync(request);</span><br><span class="line"></span><br><span class="line">        Assert.True(response.IsSuccessful);</span><br><span class="line">        Assert.Contains(<span class="string">&quot;Item 1&quot;</span>, response.Content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Fact</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">Test_GetSingleItem</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> client = <span class="keyword">new</span> RestClient(BaseUrl);</span><br><span class="line">        <span class="keyword">var</span> request = <span class="keyword">new</span> RestRequest(<span class="string">&quot;items/1&quot;</span>, Method.Get);</span><br><span class="line">        <span class="keyword">var</span> response = <span class="keyword">await</span> client.ExecuteAsync(request);</span><br><span class="line"></span><br><span class="line">        Assert.True(response.IsSuccessful);</span><br><span class="line">        Assert.Contains(<span class="string">&quot;Item 1&quot;</span>, response.Content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Fact</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">Test_CreateNewItem</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> client = <span class="keyword">new</span> RestClient(BaseUrl);</span><br><span class="line">        <span class="keyword">var</span> request = <span class="keyword">new</span> RestRequest(<span class="string">&quot;items&quot;</span>, Method.Post);</span><br><span class="line">        request.AddJsonBody(<span class="keyword">new</span> &#123; name = <span class="string">&quot;New Item&quot;</span> &#125;);</span><br><span class="line">        <span class="keyword">var</span> response = <span class="keyword">await</span> client.ExecuteAsync(request);</span><br><span class="line"></span><br><span class="line">        Assert.True(response.IsSuccessful);</span><br><span class="line">        Assert.Contains(<span class="string">&quot;New Item&quot;</span>, response.Content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Fact</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">Test_UpdateItem</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> client = <span class="keyword">new</span> RestClient(BaseUrl);</span><br><span class="line">        <span class="keyword">var</span> request = <span class="keyword">new</span> RestRequest(<span class="string">&quot;items/1&quot;</span>, Method.Put);</span><br><span class="line">        request.AddJsonBody(<span class="keyword">new</span> &#123; name = <span class="string">&quot;Updated Item&quot;</span> &#125;);</span><br><span class="line">        <span class="keyword">var</span> response = <span class="keyword">await</span> client.ExecuteAsync(request);</span><br><span class="line"></span><br><span class="line">        Assert.True(response.IsSuccessful);</span><br><span class="line">        Assert.Contains(<span class="string">&quot;Updated Item&quot;</span>, response.Content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Fact</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">Test_DeleteItem</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> client = <span class="keyword">new</span> RestClient(BaseUrl);</span><br><span class="line">        <span class="keyword">var</span> request = <span class="keyword">new</span> RestRequest(<span class="string">&quot;items/1&quot;</span>, Method.Delete);</span><br><span class="line">        <span class="keyword">var</span> response = <span class="keyword">await</span> client.ExecuteAsync(request);</span><br><span class="line"></span><br><span class="line">        Assert.True(response.IsSuccessful);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>运行测试<br>在终端中运行以下命令来执行测试：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet <span class="built_in">test</span></span><br></pre></td></tr></table></figure>执行所有测试，并显示测试结果。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ollama gpt qwen gemma2 deepseek loacl AI</title>
      <link href="/2024/07/26/ollama-gpt-qwen-gemma2-deepseek-loacl-AI/"/>
      <url>/2024/07/26/ollama-gpt-qwen-gemma2-deepseek-loacl-AI/</url>
      
        <content type="html"><![CDATA[<p><a class="link"   href="https://ollama.com/" >https://ollama.com/<i class="fas fa-external-link-alt"></i></a><br>ollama</p><p><a class="link"   href="https://ollama.com/library" >https://ollama.com/library<i class="fas fa-external-link-alt"></i></a><br>models</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ollama run qwen2 </span><br><span class="line">send a message</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ollama run gemma2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a class="link"   href="https://github.com/open-webui/open-webui" >https://github.com/open-webui/open-webui<i class="fas fa-external-link-alt"></i></a><br>webui </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main</span><br></pre></td></tr></table></figure><p>N卡 gpu</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda</span><br></pre></td></tr></table></figure><p><a class="link"   href="http://localhost:3000/" >http://localhost:3000/<i class="fas fa-external-link-alt"></i></a>   </p><p><a class="link"   href="https://ollama.com/library/deepseek-coder-v2" >https://ollama.com/library/deepseek-coder-v2<i class="fas fa-external-link-alt"></i></a><br>deepseek-coder-v2 ~~<br>codeqwen<br>sqlcoder</p><p>curl -X POST <a class="link"   href="http://localhost:11434/api/generate" >http://localhost:11434/api/generate<i class="fas fa-external-link-alt"></i></a> -d ‘{<br>  “model”: “llama2-chinese:7b-chat-q4_0”,<br>  “prompt”:”为什么天空是蓝色的”<br> }’</p><p><a class="link"   href="https://docs.openwebui.com/" >https://docs.openwebui.com/<i class="fas fa-external-link-alt"></i></a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ollama </tag>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gofastdfs whitelist</title>
      <link href="/2024/07/25/Gofastdfs-whitelist/"/>
      <url>/2024/07/25/Gofastdfs-whitelist/</url>
      
        <content type="html"><![CDATA[<p>在go-fastdfs项目中，要实现IP白名单限制上传功能，你需要在处理上传请求的地方进行检查。根据你提供的代码，上传逻辑主要在server.go文件中的HttpHandler的ServeHTTP方法里通过调用mux.ServeHTTP(res, req)来分发请求到不同的处理函数。</p><h1 id="IP白名单限制"><a href="#IP白名单限制" class="headerlink" title="IP白名单限制"></a>IP白名单限制</h1><p>定义白名单：首先需要定义一个变量来存储允许的IP地址。可以在server.go的Server结构体中添加一个字段来存储这个白名单。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Server <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="comment">// ... 其他字段 ...</span></span><br><span class="line">    allowedIPs <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewServer</span><span class="params">()</span></span> *Server &#123;</span><br><span class="line">    server := &amp;Server&#123;</span><br><span class="line">        <span class="comment">// ... 初始化其他字段 ...</span></span><br><span class="line">        allowedIPs: <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">struct</span>&#123;&#125;),</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 假设允许的IP是 &quot;192.168.1.1&quot; 和 &quot;10.12.188.85&quot;</span></span><br><span class="line">    server.allowedIPs[<span class="string">&quot;192.168.1.1&quot;</span>] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">    server.allowedIPs[<span class="string">&quot;10.12.188.85&quot;</span>] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">    <span class="keyword">return</span> server</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改HttpHandler：在HttpHandler的ServeHTTP方法中添加一个检查逻辑，以确定请求的IP是否在白名单中。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(httpHandler *HttpHandler)</span></span> ServeHTTP(res http.ResponseWriter, req *http.Request) &#123;</span><br><span class="line">    <span class="keyword">if</span> !server.isIPAllowed(req) &#123;</span><br><span class="line">        http.Error(res, <span class="string">&quot;Access denied&quot;</span>, http.StatusForbidden)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 原有的处理逻辑</span></span><br><span class="line">    mux.ServeHTTP(res, req)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *Server)</span></span> isIPAllowed(req *http.Request) <span class="type">bool</span> &#123;</span><br><span class="line">    clientIP := req.RemoteAddr</span><br><span class="line">    <span class="comment">// 检查IP是否在白名单中</span></span><br><span class="line">    _, allowed := server.allowedIPs[clientIP]</span><br><span class="line">    <span class="keyword">return</span> allowed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用修改后的NewServer：确保在初始化服务器时使用修改后的NewServer函数来创建Server实例，并设置白名单。</p><p>更新InitServer函数：在InitServer函数中，确保使用修改后的NewServer函数。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitServer</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// ... 省略其他代码 ...</span></span><br><span class="line"></span><br><span class="line">    server = NewServer() <span class="comment">// 使用修改后的构造函数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// ... 省略其他代码 ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新编译和部署：对项目进行重新编译，并部署修改后的代码。<br>这样，任何不符合白名单中的IP地址的上传请求都将被拒绝，返回HTTP状态403 Forbidden。请根据你的项目结构和配置适当调整上述代码。</p><h1 id="只限制upload"><a href="#只限制upload" class="headerlink" title="只限制upload"></a>只限制upload</h1><p>如果你想只对特定的接口（如 &#x2F;group1&#x2F;upload）实施IP白名单限制，而不影响其他页面或图片的访问，你可以在处理上传请求的特定路由中添加IP检查逻辑。以下是如何实现这个目的的步骤：</p><p>定义白名单：首先，定义一个变量来存储允许上传的IP地址。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> allowedUploadIPs = <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">struct</span>&#123;&#125;&#123;</span><br><span class="line">    <span class="string">&quot;192.168.1.1&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">&quot;10.12.188.85&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="comment">// 可以继续添加更多的允许上传的IP地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改上传处理函数：找到处理 &#x2F;group1&#x2F;upload 路由的函数，这可能是 Server 结构体的一个方法，比如 Upload 方法。在这个函数的开始处添加IP检查逻辑。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Server)</span></span> Upload(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class="line">    <span class="keyword">if</span> !isIPAllowed(r) &#123;</span><br><span class="line">        http.Error(w, <span class="string">&quot;Access denied&quot;</span>, http.StatusForbidden)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 原有的上传处理逻辑</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isIPAllowed</span><span class="params">(r *http.Request)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">    clientIP := c.GetRealIp(r) <span class="comment">// 确保这个方法返回的是请求的IP地址</span></span><br><span class="line">    _, allowed := allowedUploadIPs[clientIP]</span><br><span class="line">    <span class="keyword">return</span> allowed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更新路由：确保你的路由设置正确地将 &#x2F;group1&#x2F;upload 请求映射到 Upload 方法。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Server)</span></span> initRouter() &#123;</span><br><span class="line">    <span class="comment">// 其他路由设置...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 映射/group1/upload到Upload方法</span></span><br><span class="line">    <span class="comment">// 注意这里的具体实现可能依赖于你使用的HTTP多路复用器或框架</span></span><br><span class="line">    mux.HandleFunc(<span class="string">&quot;/group1/upload&quot;</span>, c.Upload)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不要在其他路由中添加IP检查：确保只有 &#x2F;group1&#x2F;upload 路由的处理函数中添加了IP检查逻辑。其他路由的处理函数保持不变，这样就不会对其他页面或图片的访问造成影响。</p><p>重新编译和部署：对项目进行重新编译，并部署修改后的代码。</p><p>通过这种方式，只有当用户尝试访问 &#x2F;group1&#x2F;upload 接口时，才会检查IP白名单；其他所有路由和资源的访问都不会受到IP白名单的限制。请根据你的实际代码结构和路由设置适当调整上述示例代码。</p><h1 id="忽略端口"><a href="#忽略端口" class="headerlink" title="忽略端口"></a>忽略端口</h1><p>HTTP请求的远程地址（r.RemoteAddr）通常包含IP地址和端口号，格式如IP:PORT。如果你希望在检查IP白名单时忽略端口号，只根据IP地址来判断，你需要从r.RemoteAddr中提取出IP地址部分。</p><p>在Go语言中，你可以使用strings.Split函数来分割字符串，获取IP地址。以下是调整后的isIPAllowed函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *Server)</span></span> isIPAllowed(r *http.Request) <span class="type">bool</span> &#123;</span><br><span class="line">    clientIPPort := r.RemoteAddr <span class="comment">// 包含IP和端口号，例如 &quot;192.168.80.123:56533&quot;</span></span><br><span class="line">    clientIPParts := strings.Split(clientIPPort, <span class="string">&quot;:&quot;</span>) <span class="comment">// 分割为 [&quot;192.168.80.123&quot;, &quot;56533&quot;]</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(clientIPParts) &lt; <span class="number">2</span> &#123;</span><br><span class="line">        <span class="comment">// 如果分割后的结果不足2部分，说明没有端口号，直接返回不允许</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    clientIP := clientIPParts[<span class="number">0</span>] <span class="comment">// 提取IP地址</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查IP是否在白名单中</span></span><br><span class="line">    _, allowed := server.allowedIPs[clientIP]</span><br><span class="line">    <span class="keyword">return</span> allowed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码首先将r.RemoteAddr按照”:”分割成两部分，第一部分是IP地址，第二部分是端口号。然后，它检查分割后的数组长度是否至少为2，以确保端口号存在。如果长度小于2，则可能表示远程地址格式不正确，此时函数返回false，表示不允许访问。如果长度足够，它将取出IP地址部分，并检查该IP是否在白名单中。</p><p>请确保server.allowedIPs已经被正确初始化并包含了所有允许的IP地址。例如：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server.allowedIPs = <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">struct</span>&#123;&#125;&#123;</span><br><span class="line">    <span class="string">&quot;192.168.80.123&quot;</span>: &#123;&#125;, <span class="comment">// 允许的IP地址</span></span><br><span class="line">    <span class="comment">// 可以继续添加更多的IP地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，isIPAllowed函数就可以根据IP地址而不是IP和端口的组合来判断请求是否被允许。</p><h1 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//http.DefaultServeMux.ServeHTTP(res, req)</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> !server.isIPAllowed(req) &#123;</span><br><span class="line">         http.Error(res, <span class="string">&quot;Access denied&quot;</span>, http.StatusForbidden)</span><br><span class="line">       <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">mux.ServeHTTP(res,req)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *Server)</span></span> isIPAllowed(req *http.Request) <span class="type">bool</span> &#123;</span><br><span class="line">    clientIP := req.RemoteAddr</span><br><span class="line">    fmt.Println(<span class="string">&quot;ip &quot;</span> + clientIP)</span><br><span class="line">    <span class="comment">// 检查IP是否在白名单中</span></span><br><span class="line">    _, allowed := server.allowedIPs[clientIP]</span><br><span class="line">    <span class="keyword">return</span> allowed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>http_upload.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Server)</span></span> Upload(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !server.isIPAllowed(r) &#123;</span><br><span class="line">        http.Error(w, <span class="string">&quot;Access denied&quot;</span>, http.StatusForbidden)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx whitelist</title>
      <link href="/2024/07/23/Nginx-whitelist/"/>
      <url>/2024/07/23/Nginx-whitelist/</url>
      
        <content type="html"><![CDATA[<p>在 Debian 系统上安装 Nginx </p><p>更新包列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>安装 Nginx：<br>使用 apt 包管理器来安装 Nginx。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><p>启动 Nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start nginx</span><br></pre></td></tr></table></figure><p>启用开机自启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><p>检查 Nginx 状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status nginx</span><br></pre></td></tr></table></figure><p>配置防火墙（可选）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow <span class="string">&#x27;Nginx Full&#x27;</span></span><br></pre></td></tr></table></figure><p>访问你的服务器：<br>安装完成后，你可以通过浏览器访问你的服务器 IP 地址来验证 Nginx 是否安装成功。你应该会看到默认的 Nginx 欢迎页面。</p><p>配置 HTTPS（可选）</p><p>如果你希望使用 HTTPS，可以按照以下步骤操作：</p><p>获取 SSL 证书：<br>可以使用 Let’s Encrypt 免费获取一个 SSL 证书。运行以下命令来安装 Certbot 和 Nginx 插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install certbot python3-certbot-nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>获取并安装证书：<br>运行以下命令来获取并安装证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot --nginx -d yourdomain.com</span><br></pre></td></tr></table></figure><p>请将 yourdomain.com 替换为你的实际域名。</p><p>配置自动更新证书：<br>你可以设置一个 cron 任务来自动更新证书，运行以下命令来设置定时任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> certbot-renewal</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo nano /etc/nginx/sites-available/fastdfs</span><br></pre></td></tr></table></figure><p>在文件中添加以下内容：</p><p>nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name yourdomain.com;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 允许的IP地址列表</span></span><br><span class="line">    allow 192.168.1.0/24;</span><br><span class="line">    allow 10.0.0.0/8;</span><br><span class="line">    deny all;</span><br><span class="line"></span><br><span class="line">    location /group1/M00 &#123;</span><br><span class="line">        proxy_pass http://localhost:8080;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请将 yourdomain.com 替换为你的实际域名，并确保 IP 地址列表与你的需求匹配。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop nginx</span><br><span class="line">sudo systemctl start nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET Web Port</title>
      <link href="/2024/06/27/NET-Web-Port/"/>
      <url>/2024/06/27/NET-Web-Port/</url>
      
        <content type="html"><![CDATA[<p>在 .NET8 中，在 Program 类中配置服务和请求管道</p><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Builder;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Hosting;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.DependencyInjection;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Hosting;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WServer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> builder = WebApplication.CreateBuilder(args);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Add services to the container.</span></span><br><span class="line">            builder.Services.AddControllersWithViews();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> app = builder.Build();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Configure the HTTP request pipeline.</span></span><br><span class="line">            <span class="keyword">if</span> (!app.Environment.IsDevelopment())</span><br><span class="line">            &#123;</span><br><span class="line">                app.UseExceptionHandler(<span class="string">&quot;/Home/Error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            app.UseStaticFiles();</span><br><span class="line">            app.UseRouting();</span><br><span class="line">            app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">            app.MapControllerRoute(</span><br><span class="line">                name: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">                pattern: <span class="string">&quot;&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置默认启动端口</span></span><br><span class="line">            app.Urls.Add(<span class="string">&quot;http://localhost:5000&quot;</span>); <span class="comment">// 这里设置为 5000</span></span><br><span class="line"></span><br><span class="line">            app.Run();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动时自动从环境变量或配置文件中读取端口号</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> port = Environment.GetEnvironmentVariable(<span class="string">&quot;ASPNETCORE_PORT&quot;</span>) ?? <span class="string">&quot;5000&quot;</span>;</span><br><span class="line">app.Urls.Add(<span class="string">$&quot;http://localhost:<span class="subst">&#123;port&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><p>也可以从配置文件中读取端口号，例如 appsettings.json：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> port = builder.Configuration.GetValue&lt;<span class="built_in">int</span>&gt;(<span class="string">&quot;Port&quot;</span>).ToString();</span><br><span class="line">app.Urls.Add(<span class="string">$&quot;http://localhost:<span class="subst">&#123;port&#125;</span>&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="多端口号"><a href="#多端口号" class="headerlink" title="多端口号"></a>多端口号</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置 IConfiguration</span></span><br><span class="line">         <span class="keyword">var</span> configuration = builder.Configuration;</span><br><span class="line">         <span class="comment">// 读取端口配置列表</span></span><br><span class="line">         <span class="keyword">var</span> ports = configuration.GetSection(<span class="string">&quot;Ports&quot;</span>).Get&lt;List&lt;<span class="built_in">int</span>&gt;&gt;() ?? <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">         <span class="keyword">foreach</span> (<span class="keyword">var</span> port <span class="keyword">in</span> ports)</span><br><span class="line">         &#123;</span><br><span class="line">             app.Urls.Add(<span class="string">$&quot;http://localhost:<span class="subst">&#123;port&#125;</span>&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>appsettings.json 文件包含了一个端口列表：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Ports&quot;</span>: [<span class="number">5000</span>, <span class="number">5001</span>] <span class="comment">// 配置多个端口</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="debian"><a href="#debian" class="headerlink" title="debian"></a>debian</h1><p>当你在 Debian 系统上运行 dotnet run 并能够通过 <a class="link"   href="http://localhost:5000/" >http://localhost:5000<i class="fas fa-external-link-alt"></i></a> 访问应用程序，但无法通过 IP:5000 访问时，这通常意味着你的应用程序只绑定到了本地回环接口（即 localhost），而没有绑定到所有可用的网络接口。以下是一些可能的解决方案：</p><p>确保应用程序绑定到所有接口：默认情况下，ASP.NET Core 应用程序应该监听所有可用的网络接口。如果你的应用程序只绑定到 localhost，你需要确保它绑定到 0.0.0.0，这代表所有网络接口。在 Program 类中设置 app.Urls 时，不要使用 localhost，而是使用 0.0.0.0：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.Urls.Add(<span class="string">&quot;http://0.0.0.0:5000&quot;</span>);</span><br></pre></td></tr></table></figure><p>检查防火墙设置：确保你的 Debian 系统上的防火墙没有阻止外部访问端口 5000。你可以使用 ufw 命令行工具来管理防火墙规则。例如，允许端口 5000 可以通过以下命令：</p><p>sudo ufw allow 5000&#x2F;tcp<br>检查网络配置：确保你的网络配置允许外部访问。这可能涉及到虚拟网络、容器网络或其他网络隔离技术。</p><p>使用环境变量：ASP.NET Core 应用程序也可以通过环境变量来设置 URL。你可以设置 ASPNETCORE_URLS 环境变量，然后在运行应用程序之前不指定具体的 app.Urls.Add：</p><p>export ASPNETCORE_URLS&#x3D;<a class="link"   href="http://0.0.0.0:5000/" >http://0.0.0.0:5000<i class="fas fa-external-link-alt"></i></a><br>dotnet run<br>检查 Kestrel 服务器配置：Kestrel 是 ASP.NET Core 的默认 HTTP 服务器，它可能有自己的配置。确保 Kestrel 配置为监听所有接口。这可以在 Program 类中设置：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">builder.WebHost.ConfigureKestrel(serverOptions =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    serverOptions.ListenAnyIP(<span class="number">5000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>检查端口是否被占用：确保端口 5000 没有被其他服务占用。你可以使用 netstat -tuln | grep 5000 来检查端口的使用情况。</p><p>使用 dotnet 命令的额外参数：当你使用 dotnet run 命令时，可以通过 -urls 参数来指定 URL，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet run --urls <span class="string">&quot;http://0.0.0.0:5000&quot;</span></span><br></pre></td></tr></table></figure><h1 id="dibian-NET8环境"><a href="#dibian-NET8环境" class="headerlink" title="dibian .NET8环境"></a>dibian .NET8环境</h1><p>注册微软密钥和软件仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb</span><br><span class="line">sudo dpkg -i packages-microsoft-prod.deb</span><br></pre></td></tr></table></figure><p>安装.NET SDK。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update; \</span><br><span class="line">sudo apt-get install -y apt-transport-https &amp;&amp; \</span><br><span class="line">sudo apt-get update &amp;&amp; \</span><br><span class="line">sudo apt-get install -y dotnet-sdk-8.0</span><br></pre></td></tr></table></figure><p>验证安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet --version</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VM Linux win</title>
      <link href="/2024/06/24/VM-Linux-win/"/>
      <url>/2024/06/24/VM-Linux-win/</url>
      
        <content type="html"><![CDATA[<h1 id="debian12-5-0服务器安装"><a href="#debian12-5-0服务器安装" class="headerlink" title="debian12.5.0服务器安装"></a>debian12.5.0服务器安装</h1><p>参考<a class="link"   href="https://blog.csdn.net/Go_ahead_forever/article/details/132679793" >https://blog.csdn.net/Go_ahead_forever/article/details/132679793<i class="fas fa-external-link-alt"></i></a></p><h1 id="相关命令问题"><a href="#相关命令问题" class="headerlink" title="相关命令问题"></a>相关命令问题</h1><pre><code>新用户使用sudo报错</code></pre><p> xx is not the sudoers file.<br>原因：book用户没有sudo的权限<br>解决：<a class="link"   href="https://blog.csdn.net/weixin_37787043/article/details/123045557" >https://blog.csdn.net/weixin_37787043/article/details/123045557<i class="fas fa-external-link-alt"></i></a></p><h1 id="更新-清华-镜像源-会快一些-："><a href="#更新-清华-镜像源-会快一些-：" class="headerlink" title="更新 清华-镜像源 (会快一些)："></a>更新 清华-镜像源 (会快一些)：</h1><p>参考文档： <a class="link"   href="https://blog.csdn.net/sinat_15028281/article/details/135638596" >https://blog.csdn.net/sinat_15028281/article/details/135638596<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line"><span class="built_in">cp</span> etc/apt/sources.list etc/apt/sources.list.backup  // 备份</span><br><span class="line">vi etc/apt/sources.list// 修改镜像源</span><br></pre></td></tr></table></figure><p>将etc&#x2F;apt&#x2F;sources.list文件内的内容清空，写入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span></span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span></span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span></span><br><span class="line"></span><br><span class="line">deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><span class="line"><span class="comment"># deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware</span></span><br></pre></td></tr></table></figure><h1 id="安装SSH"><a href="#安装SSH" class="headerlink" title="安装SSH"></a>安装SSH</h1><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ssh</span><br></pre></td></tr></table></figure><p>启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start ssh  </span><br></pre></td></tr></table></figure><p>启动则可ssh<br>查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status ssh</span><br></pre></td></tr></table></figure><h1 id="安装vscode"><a href="#安装vscode" class="headerlink" title="安装vscode"></a>安装vscode</h1><p>进入页面：<a class="link"   href="https://code.visualstudio.com/docs/?dv=linux64_deb" >https://code.visualstudio.com/docs/?dv=linux64_deb<i class="fas fa-external-link-alt"></i></a> 自动下载安装包</p><p>cd downloads<br>找到下载目录执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i code_1.88.1-1712771838_amd64.deb</span><br></pre></td></tr></table></figure><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><p>Debian12.5:<br>            <a class="link"   href="https://blog.csdn.net/qq_39997939/article/details/131405963" >https://blog.csdn.net/qq_39997939/article/details/131405963<i class="fas fa-external-link-alt"></i></a><br>            严格按步骤复制即可。 别用其他网站的安装方式，很容易错！！！！！<br>        Ubuntu18.04:<br>            ubuntu18.04安装docker_ubuntu 18.04安装docker-CSDN博客</p><h1 id="安装构建基础包"><a href="#安装构建基础包" class="headerlink" title="安装构建基础包"></a>安装构建基础包</h1><p>它含有libc、gcc、g++、make、dpkg-dev<br>执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install build-essential</span><br></pre></td></tr></table></figure><h1 id="win"><a href="#win" class="headerlink" title="win"></a>win</h1><p><a class="link"   href="https://blog.csdn.net/weixin_52799373/article/details/139039181" >https://blog.csdn.net/weixin_52799373/article/details/139039181<i class="fas fa-external-link-alt"></i></a></p><p>win测通道xxx<br><a class="link"   href="https://knowledge.broadcom.com/external/article?legacyId=79832" >https://knowledge.broadcom.com/external/article?legacyId=79832<i class="fas fa-external-link-alt"></i></a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Linux </tag>
            
            <tag> Debian </tag>
            
            <tag> VM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go-fastdfs</title>
      <link href="/2024/06/19/Go-fastdfs/"/>
      <url>/2024/06/19/Go-fastdfs/</url>
      
        <content type="html"><![CDATA[<h1 id="go-fastdfs"><a href="#go-fastdfs" class="headerlink" title="go-fastdfs"></a>go-fastdfs</h1><p>Go-fastdfs 是简单、可靠、高效的分布式文件系统。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a class="link"   href="https://sjqzhang.github.io/go-fastdfs/#character" >https://sjqzhang.github.io/go-fastdfs/#character<i class="fas fa-external-link-alt"></i></a></p><p>or<br><a class="link"   href="https://github.com/sjqzhang/go-fastdfs/releases" >https://github.com/sjqzhang/go-fastdfs/releases<i class="fas fa-external-link-alt"></i></a></p><!---releases下载 fileserverfileserver.exe--><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./fileserver server </span><br></pre></td></tr></table></figure><h1 id="docker部署"><a href="#docker部署" class="headerlink" title="docker部署"></a>docker部署</h1><!---  curl -fsSL https://get.docker.com -o get-docker.sh sudo sh get-docker.sh ---><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --network=host --name fastdfs -v /data/fastdfs_data:/data -p 8080:8080 -e GO_FASTDFS_DIR=/data sjqzhang/go-fastdfs</span><br></pre></td></tr></table></figure><h1 id="NET"><a href="#NET" class="headerlink" title=".NET"></a>.NET</h1><p>参考java实现<br><a class="link"   href="https://sjqzhang.github.io/go-fastdfs/usage.html#java" >https://sjqzhang.github.io/go-fastdfs/usage.html#java<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">string</span> UPLOAD_PATH2 = <span class="string">&quot;go-fastdfs地址XXX:XX&quot;</span>;</span><br><span class="line">  [<span class="meta">HttpPost(<span class="string">&quot;FormFile&quot;</span>)</span>]</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">UploadGo</span>(<span class="params">IFormFile file</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">if</span> (file == <span class="literal">null</span> || file.Length == <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&quot;File is empty&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">string</span> result = <span class="built_in">string</span>.Empty;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">using</span> (<span class="keyword">var</span> httpClient = <span class="keyword">new</span> HttpClient())</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">using</span> (<span class="keyword">var</span> form = <span class="keyword">new</span> MultipartFormDataContent())</span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="keyword">var</span> streamContent = <span class="keyword">new</span> StreamContent(file.OpenReadStream());</span><br><span class="line">                  streamContent.Headers.Add(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">$&quot;form-data; name=\&quot;file\&quot;; filename=\&quot;<span class="subst">&#123;file.FileName&#125;</span>\&quot;&quot;</span>);</span><br><span class="line">                  form.Add(streamContent, <span class="string">&quot;file&quot;</span>, file.FileName);</span><br><span class="line">                  </span><br><span class="line">                  form.Add(<span class="keyword">new</span> StringContent(<span class="string">&quot;default&quot;</span>), <span class="string">&quot;scene&quot;</span>);</span><br><span class="line">                  form.Add(<span class="keyword">new</span> StringContent(<span class="string">&quot;20240619&quot;</span>), <span class="string">&quot;path&quot;</span>);</span><br><span class="line">                  form.Add(<span class="keyword">new</span> StringContent(<span class="string">&quot;json2&quot;</span>), <span class="string">&quot;output&quot;</span>);</span><br><span class="line">                  form.Add(<span class="keyword">new</span> StringContent(<span class="string">&quot;upload&quot;</span>), <span class="string">&quot;submit&quot;</span>);</span><br><span class="line">                  <span class="keyword">var</span> response = <span class="keyword">await</span> httpClient.PostAsync(UPLOAD_PATH2, form);<span class="comment">//await</span></span><br><span class="line">                  result = <span class="keyword">await</span> response.Content.ReadAsStringAsync();<span class="comment">//await</span></span><br><span class="line">        </span><br><span class="line">                  Console.WriteLine(<span class="string">$&quot;resp: <span class="subst">&#123;response&#125;</span>&quot;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (Exception e)</span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(e.ToString());</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>“url”: “<a class="link"   href="http://xxx/group1/20240619/test1619.png?name=test1619.png&download=1" >http://xxx/group1/20240619/test1619.png?name=test1619.png&amp;download=1<i class="fas fa-external-link-alt"></i></a>“</p><h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = <span class="string">&#x27;http://xxx:xx/group1/upload&#x27;</span></span><br><span class="line">files = &#123;<span class="string">&#x27;file&#x27;</span>: open(<span class="string">&#x27;resized240525.jpg&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)&#125;</span><br><span class="line">options=&#123;<span class="string">&#x27;output&#x27;</span>:<span class="string">&#x27;json&#x27;</span>,<span class="string">&#x27;path&#x27;</span>:<span class="string">&#x27;20240619&#x27;</span>,<span class="string">&#x27;scene&#x27;</span>:<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;filename&#x27;</span>:<span class="string">&#x27;test123.jpg&#x27;</span>&#125; </span><br><span class="line">r = requests.post(url,data=options, files=files)</span><br><span class="line">print(r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">&quot;peers&quot;</span>: [<span class="string">&quot;http://192.168.44.128:8080&quot;</span>,<span class="string">&quot;http://192.168.31.36:8080&quot;</span>],</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2FA-Enable two-factor authentication (2FA)</title>
      <link href="/2024/06/18/2FA-Enable-two-factor-authentication-2FA/"/>
      <url>/2024/06/18/2FA-Enable-two-factor-authentication-2FA/</url>
      
        <content type="html"><![CDATA[<p>开源免费的Authenticator: 2FA Client，支持多种浏览器。</p><p>开源地址：Authenticator-Extension<br><a class="link"   href="https://github.com/Authenticator-Extension/Authenticator" >https://github.com/Authenticator-Extension/Authenticator<i class="fas fa-external-link-alt"></i></a></p><p>Edge扩展：Authenticator: 2FA Client - Microsoft Edge Addons<br><a class="link"   href="https://microsoftedge.microsoft.com/addons/detail/authenticator-2fa-client/ocglkepbibnalbgmbachknglpdipeoio" >https://microsoftedge.microsoft.com/addons/detail/authenticator-2fa-client/ocglkepbibnalbgmbachknglpdipeoio<i class="fas fa-external-link-alt"></i></a></p><h1 id="Chrome扩展：身份验证器-Chrome-应用商店-google-com"><a href="#Chrome扩展：身份验证器-Chrome-应用商店-google-com" class="headerlink" title="Chrome扩展：身份验证器 - Chrome 应用商店 (google.com)"></a>Chrome扩展：身份验证器 - Chrome 应用商店 (google.com)</h1><p><a class="link"   href="https://chrome.google.com/webstore/detail/authenticator/bhghoamapcdpbohphigoooaddinpkbai" >https://chrome.google.com/webstore/detail/authenticator/bhghoamapcdpbohphigoooaddinpkbai<i class="fas fa-external-link-alt"></i></a></p><p>安装好这个扩展程序以后，再次进入GitHub验证界面，等待二维码弹出。</p><p>二维码弹出以后，点击浏览器扩展，点击Authenticator: 2FA Client </p><p>点击二维码，选择指定区域，进行操作，等待代码就可以了。</p><p>Enable two-factor authentication (2FA)</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET MinIO</title>
      <link href="/2024/06/18/NET-MinIO/"/>
      <url>/2024/06/18/NET-MinIO/</url>
      
        <content type="html"><![CDATA[<h1 id="安装MinIO"><a href="#安装MinIO" class="headerlink" title="安装MinIO"></a>安装MinIO</h1><p>docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run  --name minio  -p 9000:9000   -p 9090:9090  -d  -e <span class="string">&quot;MINIO_ROOT_USER=minio&quot;</span>  -e <span class="string">&quot;MINIO_ROOT_PASSWORD=minio123&quot;</span>  -v /usr/local/minio-data:/data  -v /usr/local/minio-config:/root/.minio  minio/minio server  data --console-address <span class="string">&quot;:9090&quot;</span> --address <span class="string">&quot;:9000&quot;</span></span><br></pre></td></tr></table></figure><h2 id="后台创建-Buckets"><a href="#后台创建-Buckets" class="headerlink" title="后台创建 Buckets"></a>后台创建 Buckets</h2><p>访问 localhost:9000  登陆后创建Buckets io617</p><h2 id="创建密钥"><a href="#创建密钥" class="headerlink" title="创建密钥"></a>创建密钥</h2><p>Access Keys  </p><h1 id="add-package"><a href="#add-package" class="headerlink" title="add package"></a>add package</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package Minio</span><br></pre></td></tr></table></figure><h1 id="配置json"><a href="#配置json" class="headerlink" title="配置json"></a>配置json</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="string">&quot;Minio&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;Endpoint&quot;</span>: <span class="string">&quot;192.168.80.xx:9000&quot;</span>,<span class="comment">//&quot;localhost:9000&quot;, //90/service-account-credentials</span></span><br><span class="line">  <span class="string">&quot;AccessKey&quot;</span>: <span class="string">&quot;EctmxSNB9FqfW6UWxxx&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SecretKey&quot;</span>: <span class="string">&quot;frQhYoH1k7UphMxbwK2PiG2xKadzPjxxx&quot;</span>,</span><br><span class="line">  <span class="string">&quot;BucketName&quot;</span>: <span class="string">&quot;io617&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><h1 id="服务类MinioService"><a href="#服务类MinioService" class="headerlink" title="服务类MinioService"></a>服务类MinioService</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MinioService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> MinioClient _minioClient;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">string</span> _bucketName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MinioService</span>(<span class="params">IConfiguration configuration</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> endpoint = configuration[<span class="string">&quot;Minio:Endpoint&quot;</span>];</span><br><span class="line">        <span class="keyword">var</span> accessKey = configuration[<span class="string">&quot;Minio:AccessKey&quot;</span>];</span><br><span class="line">        <span class="keyword">var</span> secretKey = configuration[<span class="string">&quot;Minio:SecretKey&quot;</span>];</span><br><span class="line">        _bucketName = configuration[<span class="string">&quot;Minio:BucketName&quot;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//http://localhost:9090/api/v1/service-account-credentials</span></span><br><span class="line">        _minioClient = (MinioClient?)<span class="keyword">new</span> MinioClient()</span><br><span class="line">            .WithEndpoint(endpoint)</span><br><span class="line">            .WithCredentials(accessKey, secretKey)</span><br><span class="line">            .Build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">UploadFileAsync</span>(<span class="params"><span class="built_in">string</span> objectName, Stream data, <span class="built_in">long</span> size, <span class="built_in">string</span> contentType</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">await</span> _minioClient.PutObjectAsync(<span class="keyword">new</span> PutObjectArgs()</span><br><span class="line">            .WithBucket(_bucketName)</span><br><span class="line">            .WithObject(objectName)</span><br><span class="line">            .WithStreamData(data)</span><br><span class="line">            .WithObjectSize(size)</span><br><span class="line">            .WithContentType(contentType));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;Stream&gt; <span class="title">GetFileAsync</span>(<span class="params"><span class="built_in">string</span> objectName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> memoryStream = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">        <span class="keyword">await</span> _minioClient.GetObjectAsync(<span class="keyword">new</span> GetObjectArgs()</span><br><span class="line">            .WithBucket(_bucketName)</span><br><span class="line">            .WithObject(objectName)</span><br><span class="line">            .WithCallbackStream((stream) =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                stream.CopyTo(memoryStream);</span><br><span class="line">            &#125;));</span><br><span class="line">        memoryStream.Seek(<span class="number">0</span>, SeekOrigin.Begin);</span><br><span class="line">        <span class="keyword">return</span> memoryStream;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="注入服务"><a href="#注入服务" class="headerlink" title="注入服务"></a>注入服务</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddSingleton&lt;MinioService&gt;();</span><br></pre></td></tr></table></figure><h1 id="使用服务"><a href="#使用服务" class="headerlink" title="使用服务"></a>使用服务</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HomeController</span>(<span class="params">ILogger&lt;HomeController&gt; logger,MinioService minioService</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    _minioService = minioService;<span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="testcode"><a href="#testcode" class="headerlink" title="testcode"></a>testcode</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">Upload</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> View();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HttpPost</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">Upload</span>(<span class="params">IFormFile file</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (file != <span class="literal">null</span> &amp;&amp; file.Length &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">using</span> (<span class="keyword">var</span> stream = file.OpenReadStream())</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">await</span> _minioService.UploadFileAsync(file.FileName, stream, file.Length, file.ContentType);</span><br><span class="line">                &#125;</span><br><span class="line">                ViewBag.Message = <span class="string">&quot;File uploaded successfully!&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> View();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">Download</span>(<span class="params"><span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> stream = <span class="keyword">await</span> _minioService.GetFileAsync(fileName);</span><br><span class="line">            <span class="keyword">return</span> File(stream, <span class="string">&quot;application/octet-stream&quot;</span>, fileName);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//use https://localhost:7118/Home/download?filename=bx.png</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@using (Html.BeginForm(&quot;Upload&quot;, &quot;Home&quot;, FormMethod.Post, new &#123; enctype = &quot;multipart/form-data&quot; &#125;))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Upload<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    @ViewBag.Message</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>or console </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//TEST</span></span><br><span class="line"><span class="built_in">string</span> endpoint = <span class="string">&quot;xxx:9000&quot;</span>;<span class="comment">//&quot;localhost:9000&quot;; // </span></span><br><span class="line"><span class="built_in">string</span> accessKey = <span class="string">&quot;EctmxSNB9FqfW6UWrcAY&quot;</span>; <span class="comment">// Access Key</span></span><br><span class="line"><span class="built_in">string</span> secretKey = <span class="string">&quot;frQhYoH1k7UphMxbwK2PiG2xKadzPjTE3q9HgHHk&quot;</span>; <span class="comment">//Secret Key</span></span><br><span class="line"><span class="built_in">string</span> bucketName = <span class="string">&quot;io617&quot;</span>; <span class="comment">//Bucket</span></span><br><span class="line"><span class="built_in">string</span> filePath = <span class="string">&quot;D:\\UploadPath\\FileSystem\\files\\c.jpg&quot;</span>;<span class="comment"><span class="doctag">///</span>/.png&quot;; //</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> minioClient  = (MinioClient?)<span class="keyword">new</span> MinioClient()</span><br><span class="line">    .WithEndpoint(endpoint)</span><br><span class="line">    .WithCredentials(accessKey, secretKey)</span><br><span class="line">    </span><br><span class="line">    .Build();</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 上传文件</span></span><br><span class="line">    <span class="built_in">string</span> fileName = Path.GetFileName(filePath);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> fileStream = File.OpenRead(filePath))</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> startTime = DateTime.Now;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> filestream = fileStream;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">using</span> (filestream)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> file_write_size = filestream.Length;</span><br><span class="line">  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">var</span> putObjectArgs = <span class="keyword">new</span> PutObjectArgs()</span><br><span class="line">            .WithBucket(bucketName)</span><br><span class="line">            .WithObject(<span class="string">&quot;obj2222&quot;</span>)</span><br><span class="line">            .WithStreamData(filestream)</span><br><span class="line">            .WithObjectSize(filestream.Length)</span><br><span class="line">            .WithContentType(<span class="string">&quot;application/octet-stream&quot;</span>)</span><br><span class="line">            .WithHeaders(<span class="literal">null</span>);</span><br><span class="line">            minioClient.PutObjectAsync(putObjectArgs).ConfigureAwait(<span class="literal">false</span>);<span class="comment">//await</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  minioClient.PutObject(bucketName, fileName, fileStream, fileStream.Length);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;File <span class="subst">&#123;fileName&#125;</span> uploaded successfully&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception e)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;Error: <span class="subst">&#123;e.Message&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码创建bucket"><a href="#代码创建bucket" class="headerlink" title="代码创建bucket"></a>代码创建bucket</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// code create bucket</span></span><br><span class="line"><span class="keyword">var</span> beArgs = <span class="keyword">new</span> BucketExistsArgs()</span><br><span class="line">    .WithBucket(bucket);</span><br><span class="line"><span class="built_in">bool</span> found = <span class="keyword">await</span> _minioClient.BucketExistsAsync(beArgs).ConfigureAwait(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (!found)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> mbArgs = <span class="keyword">new</span> MakeBucketArgs()</span><br><span class="line">        .WithBucket(bucket);</span><br><span class="line">    <span class="keyword">await</span> _minioClient.MakeBucketAsync(mbArgs).ConfigureAwait(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><!--高性能分布式对象存储——MinIO实战操作//p// See https://aka.ms/new-console-template for more informationusing Minio;using Minio.Exceptions; Console.WriteLine("Hello, World!");var endpoint = "192.168.31.103:9001";var accessKey = "qIzCxOe3U0c7d0qyDCDY";var secretKey = "MWbsCbeKqQLgTKtOybIRaqNhQaF36AaqxnHA4uln";try{    var minio = new MinioClient()                        .WithEndpoint(endpoint)                        .WithCredentials(accessKey, secretKey)                        //.WithSSL()                        .Build();    await Run(minio);}catch (Exception ex){    Console.WriteLine(ex.Message);}Console.ReadLine(); async static Task Run(MinioClient minio){    var bucketName = "saas";    var objectName = "Program.cs";    var filePath = "xx\VS2022Projects\\miniodemo\\miniodemo\\Program.cs";    var contentType = "application/zip";     try    {        // Make a bucket on the server, if not already present.        var beArgs = new BucketExistsArgs()            .WithBucket(bucketName);        bool found = await minio.BucketExistsAsync(beArgs).ConfigureAwait(false);        if (!found)        {            var mbArgs = new MakeBucketArgs()                .WithBucket(bucketName);            await minio.MakeBucketAsync(mbArgs).ConfigureAwait(false);        }        // Upload a file to bucket.        var putObjectArgs = new PutObjectArgs()            .WithBucket(bucketName)            .WithObject(objectName)            .WithFileName(filePath);            //.WithContentType(contentType)        await minio.PutObjectAsync(putObjectArgs).ConfigureAwait(false);        Console.WriteLine("Successfully uploaded " + objectName);    }    catch (MinioException e)    {        Console.WriteLine("File Upload Error: {0}", e.Message);    }---><p>–<br><a class="link"   href="https://min.io/docs/minio/linux/index.html?ref=con" >https://min.io/docs/minio/linux/index.html?ref=con<i class="fas fa-external-link-alt"></i></a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HarmonyOS TeachApp</title>
      <link href="/2024/06/15/HarmonyOS-TeachApp/"/>
      <url>/2024/06/15/HarmonyOS-TeachApp/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Golang Web Base</title>
      <link href="/2024/06/14/Golang-Base/"/>
      <url>/2024/06/14/Golang-Base/</url>
      
        <content type="html"><![CDATA[<h1 id="setup"><a href="#setup" class="headerlink" title="setup"></a>setup</h1><p>windows环境安装<br>windows环境下，go安装包安装成功后，会自动将go添加到path目录下，所以不需要再向Path环境变量中添加go</p><p>GOROOT设置：Go安装路径</p><p> “我的电脑”&#x3D;》“属性”&#x3D;》“高级系统设置”&#x3D;》“环境变量”&#x3D;》“系统环境变量”，新增GOROOT环境变量</p><!--GOPATH设置：删除用户变量中的GOPATH设置，这个是go安装包默认添加的工作目录，一般不使用新建Go工作环境目录goworks，并在此目录下创建src,pkg,bin三个子目录--><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        fmt.Fprintf(w, <span class="string">&quot;Hello, m requested: %s\n&quot;</span>, r.URL.Path)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:24612&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Http-Server"><a href="#Http-Server" class="headerlink" title="Http Server"></a>Http Server</h2><p>static</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span> <span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        fmt.Fprintf(w, <span class="string">&quot;Welcome !&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    fs := http.FileServer(http.Dir(<span class="string">&quot;static/&quot;</span>))</span><br><span class="line">    http.Handle(<span class="string">&quot;/static/&quot;</span>, http.StripPrefix(<span class="string">&quot;/static/&quot;</span>, fs))</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:24612&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">``</span><span class="string">``</span></span><br><span class="line">##  gorilla/mux</span><br><span class="line">router</span><br><span class="line"><span class="string">``</span><span class="string">`bash</span></span><br><span class="line"><span class="string">go get github.com/gorilla/mux</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;github.com/gorilla/mux&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := mux.NewRouter()</span><br><span class="line"></span><br><span class="line">    r.HandleFunc(<span class="string">&quot;/books/&#123;title&#125;/page/&#123;page&#125;&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        vars := mux.Vars(r)</span><br><span class="line">        title := vars[<span class="string">&quot;title&quot;</span>]</span><br><span class="line">        page := vars[<span class="string">&quot;page&quot;</span>]</span><br><span class="line"></span><br><span class="line">        fmt.Fprintf(w, <span class="string">&quot; book: %s on page %s\n&quot;</span>, title, page)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:24612&quot;</span>, r)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//http://localhost:24612/books/mybook/page/1</span></span><br></pre></td></tr></table></figure><!---https://gowebexamples.com/routes-using-gorilla-mux/--><h2 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;database/sql&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line">    _ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    db, err := sql.Open(<span class="string">&quot;mysql&quot;</span>, <span class="string">&quot;root:xxx@(119.23.xxx.xxx:123)/TestDB?parseTime=true&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> err := db.Ping(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#123; // Create a new table</span></span><br><span class="line">    <span class="comment">//     query := `</span></span><br><span class="line">    <span class="comment">//         CREATE TABLE users (</span></span><br><span class="line">    <span class="comment">//             id INT AUTO_INCREMENT,</span></span><br><span class="line">    <span class="comment">//             username TEXT NOT NULL,</span></span><br><span class="line">    <span class="comment">//             password TEXT NOT NULL,</span></span><br><span class="line">    <span class="comment">//             created_at DATETIME,</span></span><br><span class="line">    <span class="comment">//             PRIMARY KEY (id)</span></span><br><span class="line">    <span class="comment">//         );`</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//     if _, err := db.Exec(query); err != nil &#123;</span></span><br><span class="line">    <span class="comment">//         log.Fatal(err)</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="comment">// Insert a new user</span></span><br><span class="line">        username := <span class="string">&quot;m24612&quot;</span></span><br><span class="line">        password := <span class="string">&quot;secret&quot;</span></span><br><span class="line">        createdAt := time.Now()</span><br><span class="line"></span><br><span class="line">        result, err := db.Exec(<span class="string">`INSERT INTO users (username, password, created_at) VALUES (?, ?, ?)`</span>, username, password, createdAt)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        id, err := result.LastInsertId()</span><br><span class="line">        fmt.Println(id)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#123; <span class="comment">// Query a single user</span></span><br><span class="line">        <span class="keyword">var</span> (</span><br><span class="line">            id        <span class="type">int</span></span><br><span class="line">            username  <span class="type">string</span></span><br><span class="line">            password  <span class="type">string</span></span><br><span class="line">            createdAt time.Time</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        query := <span class="string">&quot;SELECT id, username, password, created_at FROM users WHERE id = ?&quot;</span></span><br><span class="line">        <span class="keyword">if</span> err := db.QueryRow(query, <span class="number">1</span>).Scan(&amp;id, &amp;username, &amp;password, &amp;createdAt); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fmt.Println(id, username, password, createdAt)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#123; <span class="comment">// Query all users</span></span><br><span class="line">        <span class="keyword">type</span> user <span class="keyword">struct</span> &#123;</span><br><span class="line">            id        <span class="type">int</span></span><br><span class="line">            username  <span class="type">string</span></span><br><span class="line">            password  <span class="type">string</span></span><br><span class="line">            createdAt time.Time</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        rows, err := db.Query(<span class="string">`SELECT id, username, password, created_at FROM users`</span>)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">defer</span> rows.Close()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> users []user</span><br><span class="line">        <span class="keyword">for</span> rows.Next() &#123;</span><br><span class="line">            <span class="keyword">var</span> u user</span><br><span class="line"></span><br><span class="line">            err := rows.Scan(&amp;u.id, &amp;u.username, &amp;u.password, &amp;u.createdAt)</span><br><span class="line">            <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                log.Fatal(err)</span><br><span class="line">            &#125;</span><br><span class="line">            users = <span class="built_in">append</span>(users, u)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> err := rows.Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fmt.Printf(<span class="string">&quot;%#v&quot;</span>, users)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     _, err := db.Exec(`DELETE FROM users WHERE id = ?`, 1)</span></span><br><span class="line">    <span class="comment">//     if err != nil &#123;</span></span><br><span class="line">    <span class="comment">//         log.Fatal(err)</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img   src="https://img-blog.csdnimg.cn/direct/367112f73b2944229ddb680c01d4f2af.png"  alt="在这里插入图片描述"></p><h2 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;html/template&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Todo <span class="keyword">struct</span> &#123;</span><br><span class="line">    Title <span class="type">string</span></span><br><span class="line">    Done  <span class="type">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> TodoPageData <span class="keyword">struct</span> &#123;</span><br><span class="line">    PageTitle <span class="type">string</span></span><br><span class="line">    Todos     []Todo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    tmpl := template.Must(template.ParseFiles(<span class="string">&quot;layout.html&quot;</span>))</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        data := TodoPageData&#123;</span><br><span class="line">            PageTitle: <span class="string">&quot;My TODO list&quot;</span>,</span><br><span class="line">            Todos: []Todo&#123;</span><br><span class="line">                &#123;Title: <span class="string">&quot;Task 1&quot;</span>, Done: <span class="literal">false</span>&#125;,</span><br><span class="line">                &#123;Title: <span class="string">&quot;Task 2&quot;</span>, Done: <span class="literal">true</span>&#125;,</span><br><span class="line">                &#123;Title: <span class="string">&quot;Task 3&quot;</span>, Done: <span class="literal">true</span>&#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">        tmpl.Execute(w, data)</span><br><span class="line">    &#125;)</span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:80&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;.PageTitle&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;&#123;range .Todos&#125;&#125;</span><br><span class="line">        &#123;&#123;if .Done&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;done&quot;</span>&gt;</span>&#123;&#123;.Title&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;else&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;.Title&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;end&#125;&#125;</span><br><span class="line">    &#123;&#123;end&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> (  </span><br><span class="line">    <span class="string">&quot;io/ioutil&quot;</span>  </span><br><span class="line">    <span class="string">&quot;log&quot;</span>  </span><br><span class="line">    <span class="string">&quot;net/http&quot;</span>  </span><br><span class="line">)  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;  </span><br><span class="line">    <span class="comment">// 设置 HTML 文件的路径  </span></span><br><span class="line">    htmlFilePath := <span class="string">&quot;static/test.html&quot;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 创建一个 HTTP 处理程序来服务 HTML 文件  </span></span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;  </span><br><span class="line">        <span class="comment">// 读取 HTML 文件  </span></span><br><span class="line">        data, err := ioutil.ReadFile(htmlFilePath)  </span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;  </span><br><span class="line">            http.Error(w, <span class="string">&quot;Error reading HTML file&quot;</span>, http.StatusInternalServerError)  </span><br><span class="line">            <span class="keyword">return</span>  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// 将文件内容写入 HTTP 响应  </span></span><br><span class="line">        w.Header().Set(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html; charset=utf-8&quot;</span>)  </span><br><span class="line">        w.Write(data)  </span><br><span class="line">    &#125;)  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 启动 HTTP 服务器并监听端口 8080  </span></span><br><span class="line">    log.Println(<span class="string">&quot;Listening on :8080...&quot;</span>)  </span><br><span class="line">    <span class="keyword">if</span> err := http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, <span class="literal">nil</span>); err != <span class="literal">nil</span> &#123;  </span><br><span class="line">        log.Fatal(<span class="string">&quot;ListenAndServe: &quot;</span>, err)  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="from"><a href="#from" class="headerlink" title="from"></a>from</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;html/template&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line"> <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ContactDetails <span class="keyword">struct</span> &#123;</span><br><span class="line">    Email   <span class="type">string</span></span><br><span class="line">    Subject <span class="type">string</span></span><br><span class="line">    Message <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    tmpl := template.Must(template.ParseFiles(<span class="string">&quot;temp.html&quot;</span>))</span><br><span class="line"></span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> r.Method != http.MethodPost &#123;</span><br><span class="line">            tmpl.Execute(w, <span class="literal">nil</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        details := ContactDetails&#123;</span><br><span class="line">            Email:   r.FormValue(<span class="string">&quot;email&quot;</span>),</span><br><span class="line">            Subject: r.FormValue(<span class="string">&quot;sub&quot;</span>),</span><br><span class="line">            Message: r.FormValue(<span class="string">&quot;msg&quot;</span>),</span><br><span class="line">        &#125;</span><br><span class="line">fmt.Println(details)</span><br><span class="line">fmt.Println(details.Email)</span><br><span class="line">        <span class="comment">// do something with details</span></span><br><span class="line">        _ = details</span><br><span class="line"></span><br><span class="line">        tmpl.Execute(w, <span class="keyword">struct</span>&#123; Success <span class="type">bool</span> &#125;&#123;<span class="literal">true</span>&#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;if .Success&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span> message!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;&#123;else&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email:<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Subject:<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sub&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Message:<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="HandleFunc"><a href="#HandleFunc" class="headerlink" title="HandleFunc"></a>HandleFunc</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// basic-middleware.go</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">logging</span><span class="params">(f http.HandlerFunc)</span></span> http.HandlerFunc &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        log.Println(r.URL.Path)</span><br><span class="line">        f(w, r)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    fmt.Fprintln(w, <span class="string">&quot;www&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bar</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    fmt.Fprintln(w, <span class="string">&quot;bbb&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/www&quot;</span>, logging(foo))</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/bbb&quot;</span>, logging(bar))</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:24614&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="json"><a href="#json" class="headerlink" title="json"></a>json</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">    Firstname <span class="type">string</span> <span class="string">`json:&quot;firstname&quot;`</span></span><br><span class="line">    Lastname  <span class="type">string</span> <span class="string">`json:&quot;lastname&quot;`</span></span><br><span class="line">    Age       <span class="type">int</span>    <span class="string">`json:&quot;age&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/decode&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> user User</span><br><span class="line">        json.NewDecoder(r.Body).Decode(&amp;user)</span><br><span class="line"></span><br><span class="line">        fmt.Fprintf(w, <span class="string">&quot;%s %s is %d years old!&quot;</span>, user.Firstname, user.Lastname, user.Age)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/encode&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        peter := User&#123;</span><br><span class="line">            Firstname: <span class="string">&quot;m&quot;</span>,</span><br><span class="line">            Lastname:  <span class="string">&quot;s&quot;</span>,</span><br><span class="line">            Age:       <span class="number">25</span>,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        json.NewEncoder(w).Encode(peter)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:24614&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#123;&quot;firstname&quot;:&quot;e&quot;,&quot;lastname&quot;:&quot;m&quot;,&quot;age&quot;:28&#125;</span></span><br><span class="line"><span class="comment">//curl -s -XPOST -d&#x27;&#123;&quot;firstname&quot;:&quot;e&quot;,&quot;lastname&quot;:&quot;m&quot;,&quot;age&quot;:28&#125;&#x27; http://localhost:24614/decode</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//curl -s http://localhost:8080/encode</span></span><br></pre></td></tr></table></figure><h2 id="webapi-get"><a href="#webapi-get" class="headerlink" title="webapi get"></a>webapi get</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> (  </span><br><span class="line"><span class="string">&quot;encoding/json&quot;</span>  </span><br><span class="line"><span class="string">&quot;fmt&quot;</span>  </span><br><span class="line"><span class="string">&quot;io/ioutil&quot;</span>  </span><br><span class="line"><span class="string">&quot;log&quot;</span>  </span><br><span class="line"><span class="string">&quot;net/http&quot;</span>  </span><br><span class="line">)  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// 定义与JSON响应相对应的结构体  </span></span><br><span class="line"><span class="keyword">type</span> APIResponse <span class="keyword">struct</span> &#123;  </span><br><span class="line">IsOk    <span class="type">bool</span>    <span class="string">`json:&quot;isOk&quot;`</span>  </span><br><span class="line">Code    <span class="type">int</span>     <span class="string">`json:&quot;code&quot;`</span>  </span><br><span class="line">Msg     <span class="type">string</span>  <span class="string">`json:&quot;msg&quot;`</span>  </span><br><span class="line">RsData  <span class="keyword">interface</span>&#123;&#125; <span class="string">`json:&quot;rsData&quot;`</span> <span class="comment">// 如果rsData可能是不同的类型，可以使用interface&#123;&#125;  </span></span><br><span class="line"></span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;  </span><br><span class="line"><span class="comment">// 设置API的URL  </span></span><br><span class="line">url :=<span class="string">&quot;https://localhost:32768/api/v10/xxx/rsRsModel2?t1=1&quot;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// 发送GET请求  </span></span><br><span class="line">resp, err := http.Get(url)  </span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;  </span><br><span class="line">log.Fatal(err)  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close() <span class="comment">// 确保关闭响应体  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment">// 读取响应体  </span></span><br><span class="line">body, err := ioutil.ReadAll(resp.Body)  </span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;  </span><br><span class="line">log.Fatal(err)  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// 解析JSON响应  </span></span><br><span class="line"><span class="keyword">var</span> result APIResponse  </span><br><span class="line">err = json.Unmarshal(body, &amp;result)  </span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;  </span><br><span class="line">log.Fatal(err)  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// 打印结果  </span></span><br><span class="line">fmt.Printf(<span class="string">&quot;IsOk: %v\n&quot;</span>, result.IsOk)  </span><br><span class="line">fmt.Printf(<span class="string">&quot;Code: %d\n&quot;</span>, result.Code)  </span><br><span class="line">fmt.Printf(<span class="string">&quot;Msg: %s\n&quot;</span>, result.Msg)  </span><br><span class="line">fmt.Printf(<span class="string">&quot;RsData: %v\n&quot;</span>, result.RsData) </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> result.IsOk &amp;&amp; result.Code == <span class="number">1</span> &#123;  </span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;  </span><br><span class="line"></span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="websocket"><a href="#websocket" class="headerlink" title="websocket"></a>websocket</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;github.com/gorilla/websocket&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> upgrader = websocket.Upgrader&#123;</span><br><span class="line">    ReadBufferSize:  <span class="number">1024</span>,</span><br><span class="line">    WriteBufferSize: <span class="number">1024</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/echo&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        conn, _ := upgrader.Upgrade(w, r, <span class="literal">nil</span>) <span class="comment">// error ignored for sake of simplicity</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> &#123;</span><br><span class="line">            <span class="comment">// Read message from browser</span></span><br><span class="line">            msgType, msg, err := conn.ReadMessage()</span><br><span class="line">            <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Print the message to the console</span></span><br><span class="line">            fmt.Printf(<span class="string">&quot;%s sent: %s\n&quot;</span>, conn.RemoteAddr(), <span class="type">string</span>(msg))</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Write message back to browser</span></span><br><span class="line">            <span class="keyword">if</span> err = conn.WriteMessage(msgType, msg); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        http.ServeFile(w, r, <span class="string">&quot;ws.html&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:24614&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;send()&quot;</span>&gt;</span>Send<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span> <span class="attr">id</span>=<span class="string">&quot;output&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> input = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;input&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> output = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;output&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> socket = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(<span class="string">&quot;ws://localhost:24614/echo&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    socket.<span class="property">onopen</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        output.<span class="property">innerHTML</span> += <span class="string">&quot;Status: Connected\n&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    socket.<span class="property">onmessage</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        output.<span class="property">innerHTML</span> += <span class="string">&quot;Server: &quot;</span> + e.<span class="property">data</span> + <span class="string">&quot;\n&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">send</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        socket.<span class="title function_">send</span>(input.<span class="property">value</span>);</span></span><br><span class="line"><span class="language-javascript">        input.<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="hash"><a href="#hash" class="headerlink" title="hash"></a>hash</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;golang.org/x/crypto/bcrypt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HashPassword</span><span class="params">(password <span class="type">string</span>)</span></span> (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">    bytes, err := bcrypt.GenerateFromPassword([]<span class="type">byte</span>(password), <span class="number">14</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="type">string</span>(bytes), err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CheckPasswordHash</span><span class="params">(password, hash <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">    err := bcrypt.CompareHashAndPassword([]<span class="type">byte</span>(hash), []<span class="type">byte</span>(password))</span><br><span class="line">    <span class="keyword">return</span> err == <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    password := <span class="string">&quot;musu&quot;</span></span><br><span class="line">    hash, _ := HashPassword(password) <span class="comment">// ignore error for the sake of simplicity</span></span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;Password:&quot;</span>, password)</span><br><span class="line">    fmt.Println(<span class="string">&quot;Hash:    &quot;</span>, hash)</span><br><span class="line"></span><br><span class="line">    match := CheckPasswordHash(password, hash)</span><br><span class="line">    fmt.Println(<span class="string">&quot;Match:   &quot;</span>, match)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="aes"><a href="#aes" class="headerlink" title="aes"></a>aes</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="comment">//&quot;bytes&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/aes&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/cipher&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/base64&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Encrypt</span><span class="params">(plainText, key <span class="type">string</span>)</span></span> (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">block, err := aes.NewCipher([]<span class="type">byte</span>(key))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">iv := []<span class="type">byte</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cfb := cipher.NewCFBEncrypter(block, iv)</span><br><span class="line"></span><br><span class="line">ciphertext := <span class="built_in">make</span>([]<span class="type">byte</span>, <span class="built_in">len</span>(plainText))</span><br><span class="line">cfb.XORKeyStream(ciphertext, []<span class="type">byte</span>(plainText))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> base64.StdEncoding.EncodeToString(ciphertext), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Decrypt</span><span class="params">(cipherText, key <span class="type">string</span>)</span></span> (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">block, err := aes.NewCipher([]<span class="type">byte</span>(key))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">decryptedBytes, err := base64.StdEncoding.DecodeString(cipherText)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">iv := []<span class="type">byte</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line">cfb := cipher.NewCFBDecrypter(block, iv)</span><br><span class="line"></span><br><span class="line">plaintext := <span class="built_in">make</span>([]<span class="type">byte</span>, <span class="built_in">len</span>(decryptedBytes))</span><br><span class="line">cfb.XORKeyStream(plaintext, decryptedBytes)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="type">string</span>(plaintext), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">plainText := <span class="string">&quot;mus11test111u&quot;</span></span><br><span class="line">key := <span class="string">&quot;thisisaverysecretkeymusu&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密</span></span><br><span class="line">encrypted, err := Encrypt(plainText, key)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Encryption failed:&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;Encrypted:&quot;</span>, encrypted)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//encrypted =  &quot;2gAFF&quot;</span></span><br><span class="line"><span class="comment">// 解密</span></span><br><span class="line">decrypted, err := Decrypt(encrypted, key)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Decryption failed:&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;Decrypted:&quot;</span>, decrypted)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="gin"><a href="#gin" class="headerlink" title="gin"></a>gin</h1><p>有点像express.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/gin-gonic/gin</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="type">string</span> <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">Age  <span class="type">int</span>    <span class="string">`json:&quot;age&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//middleware</span></span><br><span class="line">    r.Use(<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;middleware called&quot;</span>)</span><br><span class="line">c.Next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;hello ~ &quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">    <span class="comment">//router</span></span><br><span class="line">    r.GET(<span class="string">&quot;/user/:name&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        name := c.Param(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">        c.String(<span class="number">200</span>, <span class="string">&quot;hi, %s!&quot;</span>, name)</span><br><span class="line">    &#125;)   </span><br><span class="line"></span><br><span class="line">    <span class="comment">//static</span></span><br><span class="line">    r.Static(<span class="string">&quot;/static&quot;</span>, <span class="string">&quot;./static&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/////http://localhost:24614/user/m </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//get</span></span><br><span class="line">    r.GET(<span class="string">&quot;/users&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        user := User&#123;Name: <span class="string">&quot;mu&quot;</span>, Age: <span class="number">15</span>&#125;</span><br><span class="line">        c.JSON(http.StatusOK, user)<span class="comment">//users</span></span><br><span class="line">    &#125;) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//    err</span></span><br><span class="line">    r.NoRoute(<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        c.JSON(http.StatusNotFound, gin.H&#123;<span class="string">&quot;error&quot;</span>: <span class="string">&quot;Page not found&quot;</span>&#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r.Run(<span class="string">&quot;:24614&quot;</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><p>main.go</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用官方的 Go 运行时作为基础镜像</span></span><br><span class="line">FROM golang:1.18-alpine as builder</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将源代码复制到工作目录</span></span><br><span class="line">COPY . .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 GOPATH 和 GOBIN（可选）</span></span><br><span class="line">ENV GOPATH=/go</span><br><span class="line">ENV PATH=<span class="variable">$GOPATH</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建 Go 应用</span></span><br><span class="line">RUN go build -o app .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 Alpine Linux 作为最终的运行时环境</span></span><br><span class="line">FROM alpine:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将编译好的二进制文件从 builder 阶段复制到最终镜像</span></span><br><span class="line">COPY --from=builder /app/app /app/app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给二进制文件添加执行权限</span></span><br><span class="line">RUN <span class="built_in">chmod</span> +x /app/app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露应用需要监听的端口</span></span><br><span class="line">EXPOSE 8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置容器启动时运行的命令</span></span><br><span class="line">CMD [<span class="string">&quot;/app/app&quot;</span>]</span><br></pre></td></tr></table></figure><p>build</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build -t your-image-name .</span><br><span class="line">docker run -p 8080:8080 your-image-name</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/</span><br></pre></td></tr></table></figure><p>push</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker login</span><br><span class="line">docker push your-image-name</span><br></pre></td></tr></table></figure><!--go mod init xxx# 协程Go协程（goroutine）是Go语言中用于实现并发编程的一种机制。它比线程更轻量级，可以在一个OS线程中运行多个goroutine。协程的调度由Go运行时管理，这使得在编写高并发程序时更加灵活和高效。作用：**提高程序的并发能力**：通过使用goroutine，可以轻松地实现多任务同时执行，而不需要关心底层线程的创建和调度细节。**降低资源消耗**：相对于系统线程，goroutine的创建和切换成本更低，可以支持成千上万甚至更多的并发任务。**简化异步编程**：Go的channel机制与goroutine结合，可以非常优雅地处理异步通信和数据交换问题。package mainimport (    "encoding/json"    "fmt"    "io/ioutil"    "net/http"    "os")// Define a struct to match the JSON structuretype WeatherResponse struct {    CityInfo struct {        City         string `json:"city"`        CityId       string `json:"cityId"`        Parent       string `json:"parent"`        UpdateTime   string `json:"updateTime"`    } `json:"cityInfo"`    Data struct {        Shidu       string `json:"shidu"`        Pm25        float64 `json:"pm25"`        Pm10        float64 `json:"pm10"`        Quality     string `json:"quality"`        Wendu       string `json:"wendu"`        Ganmao      string `json:"ganmao"`        Yesterday   struct {            Date     string `json:"date"`            High     string `json:"high"`            Low      string `json:"low"`            Fx       string `json:"fx"`            Fl       string `json:"fl"`            Type     string `json:"type"`            Notice   string `json:"notice"`        } `json:"yesterday"`        Forecast []struct {            Date      string `json:"date"`            High      string `json:"high"`            Low       string `json:"low"`            Fx        string `json:"fx"`            Fl        string `json:"fl"`            Type      string `json:"type"`            Notice    string `json:"notice"`        } `json:"forecast"`    } `json:"data"`    Message string `json:"message"`    Status  int    `json:"status"`    Date    string `json:"date"`    Time    string `json:"time"`}func main() {    // Define the URL    url := "http://t.weather.sojson.com/api/weather/city/101280501"    // Make the HTTP GET request    resp, err := http.Get(url)    if err != nil {        fmt.Printf("Failed to make request: %v\n", err)        os.Exit(1)    }    defer resp.Body.Close()    // Read the response body    body, err := ioutil.ReadAll(resp.Body)    if err != nil {        fmt.Printf("Failed to read response body: %v\n", err)        os.Exit(1)    }    // Parse the JSON response    var weather WeatherResponse    err = json.Unmarshal(body, &weather)    if err != nil {        fmt.Printf("Failed to parse JSON: %v\n", err)        os.Exit(1)    }    // Print the parsed data    fmt.Printf("City: %s\n", weather.CityInfo.City)    fmt.Printf("Update Time: %s\n", weather.CityInfo.UpdateTime)    fmt.Printf("Current Temperature: %s°C\n", weather.Data.Wendu)    fmt.Printf("PM2.5: %.2f\n", weather.Data.Pm25)    fmt.Printf("Weather Forecast:\n")    for _, forecast := range weather.Data.Forecast {        fmt.Printf("  Date: %s, High: %s, Low: %s, Type: %s\n",            forecast.Date, forecast.High, forecast.Low, forecast.Type)    }}https://gowebexamples.com/templates/https://gobyexample.com/https://go.dev/learn/https://www.cainiaoplus.com/golang/go-keywords.htmlhwhttps://developer.huawei.com/consumer/cn/hmos/samples/?catalogVersion=V2https://github.com/practical-tutorials/project-based-learning-->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET JSON2MySQL</title>
      <link href="/2024/06/12/NET-JSON2MySQL/"/>
      <url>/2024/06/12/NET-JSON2MySQL/</url>
      
        <content type="html"><![CDATA[<p>这是一段json</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101010100&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;北京&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;100000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;010&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:06&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;安徽&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;福建&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;甘肃&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;广东&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;广西&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;贵州&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">8</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;海南&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:03:37&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">9</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;河北&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:06&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;河南&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:07&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">11</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;黑龙江&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">12</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;湖北&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">13</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;湖南&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">14</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;吉林&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:07&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">15</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;江苏&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">16</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;江西&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">17</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;辽宁&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;内蒙古&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">19</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;宁夏&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;青海&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">21</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;山东&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">22</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;山西&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">23</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;陕西&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">24</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101020100&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;上海&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;200000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;021&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:08&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">25</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;四川&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">26</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101030100&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;天津&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;300000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;022&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:08&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">27</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;西藏&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">28</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;新疆&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">29</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;云南&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;浙江&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">31</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101040100&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;重庆&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;023&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:08&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">32</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101320101&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;香港&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;999077&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;+852&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:03:38&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">33</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101330101&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;澳门&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;999078&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;+853&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:03:39&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">34</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;台湾&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">35</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220601&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;安庆&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;246000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0556&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:10&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">36</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220201&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;蚌埠&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;233000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0552&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:10&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">37</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">3400</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220105&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;巢湖市&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;238000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0551&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:03:40&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">38</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221701&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;池州&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;247100&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0566&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:10&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">39</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221101&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;滁州&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;239000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0550&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:10&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">40</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220801&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;阜阳&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;236000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0558&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:10&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">41</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221201&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;淮北&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;235000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0561&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:11&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">42</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220401&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;淮南&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;232000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0554&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:11&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">43</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221001&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;黄山市&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;245000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0559&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 21:23:56&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">44</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221501&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;六安&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;237000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0564&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:11&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">45</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220501&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;马鞍山&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;243000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0555&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:11&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">46</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220701&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;宿州&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;234000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0557&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:11&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">47</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221301&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;铜陵&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;244000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0562&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:12&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">48</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220301&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;芜湖市&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;241000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0553&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 21:23:57&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">49</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221401&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;宣城&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;242000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0563&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:12&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220901&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;亳州&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;236800&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0558&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:12&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">  ]</span><br></pre></td></tr></table></figure><p>SQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CityInfo (</span><br><span class="line">CtId <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">Pid <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">CityCode <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">CityName <span class="type">VARCHAR</span>(<span class="number">110</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">PostCode <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">AreaCode <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">Ctime DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">CtimeInt <span class="type">bigint</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">LangType <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (CtId)</span><br><span class="line">);  </span><br></pre></td></tr></table></figure><p>.NET类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CityInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> CtId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Pid &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> CityCode &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> CityName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> PostCode &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> AreaCode &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> DateTime? Ctime &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">long</span> CtimeInt &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> LangType &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后端处理<br>json file &gt;&gt;&gt;  class &gt;&gt;&gt; sql </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line">  <span class="function"><span class="keyword">public</span> ActionResult <span class="title">ImportCities</span>(<span class="params">IFormFile file</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span> (file == <span class="literal">null</span> || file.Length == <span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">return</span> Json(<span class="keyword">new</span> &#123; success = <span class="literal">false</span>, message = <span class="string">&quot;No file uploaded.&quot;</span> &#125;);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">using</span> (<span class="keyword">var</span> streamReader = <span class="keyword">new</span> StreamReader(file.InputStream))</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">var</span> jsonData = streamReader.ReadToEnd();</span><br><span class="line">              <span class="keyword">var</span> cityList = JsonConvert.DeserializeObject&lt;List&lt;CityInfo&gt;&gt;(jsonData);</span><br><span class="line"></span><br><span class="line">              <span class="keyword">using</span> (MySqlConnection connection = <span class="keyword">new</span> MySqlConnection(ConnectionString))</span><br><span class="line">              &#123;</span><br><span class="line">                  connection.Open();</span><br><span class="line"></span><br><span class="line">                  <span class="keyword">foreach</span> (<span class="keyword">var</span> city <span class="keyword">in</span> cityList)</span><br><span class="line">                  &#123;</span><br><span class="line">                      <span class="built_in">string</span> query = <span class="string">&quot;INSERT INTO IMCityInfo (Pid, CityCode, CityName, PostCode, AreaCode, Ctime, CtimeInt, LangType) VALUES (@Pid, @CityCode, @CityName, @PostCode, @AreaCode, @Ctime, @CtimeInt, @LangType)&quot;</span>;</span><br><span class="line"></span><br><span class="line">                      <span class="keyword">using</span> (MySqlCommand command = <span class="keyword">new</span> MySqlCommand(query, connection))</span><br><span class="line">                      &#123;</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@Pid&quot;</span>, city.Pid);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@CityCode&quot;</span>, city.CityCode);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@CityName&quot;</span>, city.CityName);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@PostCode&quot;</span>, city.PostCode);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@AreaCode&quot;</span>, city.AreaCode);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@Ctime&quot;</span>, city.Ctime);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@CtimeInt&quot;</span>, city.CtimeInt);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@LangType&quot;</span>, city.LangType);</span><br><span class="line"></span><br><span class="line">                          command.ExecuteNonQuery();</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">return</span> Json(<span class="keyword">new</span> &#123; success = <span class="literal">true</span>, message = <span class="string">&quot;Data imported successfully.&quot;</span> &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">return</span> Json(<span class="keyword">new</span> &#123; success = <span class="literal">false</span>, message = ex.Message &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>前端上传JSON</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;uploadForm&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;jsonFile&quot;</span> <span class="attr">accept</span>=<span class="string">&quot;.json&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Upload JSON File<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;response&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;#uploadForm&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;submit&#x27;</span>, <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">        event.<span class="title function_">preventDefault</span>(); <span class="comment">// Prevent the default form submission</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">        <span class="keyword">var</span> fileInput = $(<span class="string">&#x27;#jsonFile&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (fileInput.<span class="property">files</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> file = fileInput.<span class="property">files</span>[<span class="number">0</span>];</span><br><span class="line">            formData.<span class="title function_">append</span>(<span class="string">&#x27;file&#x27;</span>, file);</span><br><span class="line"></span><br><span class="line">            $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">                <span class="attr">url</span>: <span class="string">&#x27;/ImportCities&#x27;</span>, <span class="comment">// Adjust this URL to match your API endpoint</span></span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">                <span class="attr">data</span>: formData,</span><br><span class="line">                <span class="attr">processData</span>: <span class="literal">false</span>, <span class="comment">// Important!</span></span><br><span class="line">                <span class="attr">contentType</span>: <span class="literal">false</span>, <span class="comment">// Important!</span></span><br><span class="line">                <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">                    $(<span class="string">&#x27;#response&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;Success: &#x27;</span> + response.<span class="property">message</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">                    $(<span class="string">&#x27;#response&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;Error: &#x27;</span> + error.<span class="property">responseJSON</span>.<span class="property">error</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $(<span class="string">&#x27;#response&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;Please select a file.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><!-- ![在这里插入图片描述](https://img-blog.csdnimg.cn/direct/a3f93c329ed04ad4b656d022b7521e22.png) --><!--TRUNCATE TABLE IMCityInfo;     clear table and pkswagger=>download js-->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> MySQL </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Azure AI Document Intelligence</title>
      <link href="/2024/06/07/Azure-AI-Document-Intelligence/"/>
      <url>/2024/06/07/Azure-AI-Document-Intelligence/</url>
      
        <content type="html"><![CDATA[<h1 id="创建智能文档处理解决方案"><a href="#创建智能文档处理解决方案" class="headerlink" title="创建智能文档处理解决方案"></a>创建智能文档处理解决方案</h1><p>在第二级中，这3个模块，每一个中都有不同的任务操作，这些操作包括使用 Azure 进行实际创建服务操作或者使用代码调用 Azure的服务，这些代码可以使用python或者C#，这些进行选择。所有的模块内的考试是通过一个邮件的方式进行告知。</p><p><a class="link"   href="https://learn.microsoft.com/en-us/credentials/applied-skills/create-intelligent-document-solution-azure-ai/#applied-skill-take-the-assessment" >https://learn.microsoft.com/en-us/credentials/applied-skills/create-intelligent-document-solution-azure-ai/#applied-skill-take-the-assessment<i class="fas fa-external-link-alt"></i></a></p><p>start</p><p>登陆实验环境<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607001.jpg"  ></p><p>加载成功后会出现虚拟机器登陆界面，找到右侧的 Step1 中的用户名密码。登陆<br>获取实验账号并登陆 Azure<br>进入到机器后，点击桌面的 Email 图片，打开我们的实验目标。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607002.jpg"  ></p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607003.jpg"  >打开桌面的 email 后，会出现如下的界面。这里主要关注两点：<p>一个是左侧蓝色的部分：Inbox，这里包括环境信息以及实验目标考题。<br>另一个是浏览器的页签中的第二个，也就是登陆 Azure 的环境网址</p><p>点击上图的 Azure 标签页，进入登陆页面，用email提供的账号密码登陆</p><h1 id="试验一：-Create-a-prototype"><a href="#试验一：-Create-a-prototype" class="headerlink" title="试验一： Create a prototype"></a>试验一： Create a prototype</h1><p>点击邮件中的 Create a prototype 菜单会出现具体的内容要求。</p><p>在第一个实验中主要是使用微软的只能存储服务，并且创建的时候要符合要求，这个服务要满足的要求是要保存所给的文件成Json文件，之后在保存到 Azure 的存储服务中。</p><p>实验流程操作<br>首先到 Azure 中，搜索所给出的资源组，选择 RG1开头的资源组<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607004.jpg"  ></p><p>进入到资源组后，点击创建按钮。<br>在搜索框中输入document intelligence 点击选择。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607005.jpg"  ></p><p>点击 文档智能服务</p><p>进入到服务后，点击蓝色的创建按钮。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607006.jpg"  ></p><p>在这里直接选择默认的订阅以及资源组，Region 目前建议选择 Japan East（如果后面的步骤，在运行分析文档时，遇到权限不足问题，请在此步骤选择其他 Region ）</p><p>在这里名字填入：from-document-xxx，如（from-document-01）价格层要选择免费层，也就是下图中的 Free F0，之后点击预览创建按钮。</p><p>预览没有问题后，直接点击创建按钮。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/220240607007.jpg"  ><br>创建完毕后，在页面中点击 Go to resource 按钮</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/220240607008.jpg"  ><p>之后点击 Go to Document Intelligence Studio 按钮<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/220240607009.jpg"  ></p><p>进入到服务页面后，下滑页面，点击 Invoices 的 Try it out。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607010.jpg"  ><p>（如果弹出选择账户的弹框，点击一个就好）</p><p>在服务的填写表格页面，默认的订阅和资源组选择下拉按钮</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607011.jpg"  >预览后点击完成按钮。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607012.jpg"  ><p>在上述步骤完成后，点击左侧的上传区域，点击选择文件按钮，在新弹出的选择文件筐，找到 C:\Files的文件，之后选择发票pdf</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607013.jpg"  ><p>选择玩文件后，点击 Analyze options 选项，之后选择 all documents，之后点击保存按钮。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607014.jpg"  ><p>配置完分析选项后，点击直接点击运行分析按钮。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607015.jpg"  ><p>运行完后，找到右侧的 Result按钮，之后下载下来我们所需要的 JSON 文件。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607016.jpg"  ><p>刚上传的三个文件，分析完三个都下载下来。</p><p>之后我们重复操作，将所有的图片文件上传。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607018.jpg"  ></p><p>同样的点击分析按钮。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607019.jpg"  ><br>下载下来结果JSON文件。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607020.jpg"  ></p><p>最后我们可以看到下载的结果文件如下图这几个在 Downloads 文件夹中（在在这里我们需要复制这些文件<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607021.jpg"  ></p><p>复制上述的文件后粘贴在下图路径的文件夹中。 c:&#x2F;files<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607022.jpg"  ></p><p>接着我们返回 RG1 的这个资源组（进入步骤在本篇文档开头的位置……），选择 prototype 开头的资源，点击进入<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607023.jpg"  ></p><p>之后我们展开 Data storage 进入到存储服务中选择 Containers</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607024.jpg"  >之后我们创建一个新的 Container，这里直接使用名字：con-invoices。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607025.jpg"  >同样操作再次创建另一个 Containers，名字叫做：con-receipts。可以看到我这里创建了两个 Containers，一个存pdf的一个存图片的<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607026.jpg"  >分别点击两个名字，之后我们开始上传 把所有的 Invoice 相关文件上传<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607027.jpg"  >另外一个将所有的 receipt 文件上传。到这里我们的第一个任务就完成了。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607028.jpg"  ><h1 id="试验二：Train-a-custom-model"><a href="#试验二：Train-a-custom-model" class="headerlink" title="试验二：Train a custom model"></a>试验二：Train a custom model</h1><p>在实验二中，我们需要创建一个智能文档分析服务，并且进行相关的训练。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607029.jpg"  ><br>首先我们进入 <a class="link"   href="https://documentintelligence.ai.azure.com/studio" >https://documentintelligence.ai.azure.com/studio<i class="fas fa-external-link-alt"></i></a> 页面选择服务：Custom extraction model。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607030.jpg"  ></p><p>下拉页面，之后点击项目选项中的 创建一个项目按钮，在新页面，输入项目名点击继续按钮。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607031.jpg"  >在详细页面，订阅以及资源组选项选择默认，智能文档名字要选择我们的题目要求form开头的， API选择：2022-08-31<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607032.jpg"  >这里注意除了订阅和资源组选项默认外，我们的存储账号要选择quality开头的这个，这里不要选错。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607033.jpg"  >上述完成后点击预览创建按钮。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607034.jpg"  >等待一会后，在弹出的页面直接点击 Run now 按钮<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607035.jpg"  >如果出现 failed to fetch 刷新一下当前的页面在新页面中，选择一个jpg文件后，点击右侧的添加字段选项<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607036.jpg"  >这里根据我们的题目，需要添加如下的几个字段Email里（第一列是字段，第二列是对应的类型）可以看到我在右侧已经根据题目创建了这5个字段<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607037.jpg"  >这里是介绍如何进行选择字段的数据类型*，比如Number字段，要选择 integer 类型。依次把五个标签名都设置好数据类型。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607038.jpg"  >之后我们点击图片的 Number数字，也就是下图的绿色部分的数字，之后点鼠标左键，选择我们刚才创建的 Number 字段<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607039.jpg"  >同样的我们把所有的字段都在图片中选择打上标签 重复操作所有的图片文件，将字段标记清楚，之后点击训练按钮.这里选择训练模型，直接写上 QA-Template，如下图所示。Build Mode 选择 Template<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607040.jpg"  >点击 Go to Models<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607041.jpg"  ><p>可以看到我们这里已经创建了训练，点击QA-Template</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607042.jpg"  >我们进行测试，直接点击 Test 按钮。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607043.jpg"  >选择电脑中的 C盘下 QA_Test 文件夹内的文件。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607044.jpg"  >点击运行分析按钮<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607045.jpg"  ><p>在这里我们需要注意，所有的都分析完后，我们要下载 report0008.jpg的结果，讲这个 JSON文件下载下来。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607046.jpg"  ></p><p>结果保存下来。存到QA_Test<br>打开VSCode &gt;&gt; 点击 Open Folder 按钮。<br>接下来打开 C 盘下的 App1 文件夹</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607047.jpg"  >之后打开Python 文件夹下 App1.py 文件。更改的代码：（！！！格式缩进要！！！注！！！意！！！）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#9</span></span><br><span class="line">task = form_recognizer_client.begin_recognize_invoices(form_data)</span><br><span class="line"><span class="comment">#21</span></span><br><span class="line"><span class="keyword">if</span> field.confidence &gt;= <span class="number">0.70</span>:</span><br><span class="line">    invoice_total += field.value</span><br><span class="line"><span class="comment">#37</span></span><br><span class="line">folder_path = <span class="string">r&quot;C:\App1\Invoices&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607048.jpg"  >之后在 python 目录下的.env文件内，添加自己的创建服务的 endpoint 和 key 值。ctrl S 保存文件ps：Key 和 endpoint 进入https://portal.azure.com/ ，选择刚刚创建的资源<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607049.jpg"  >页面切回 App1.py 这个文件 直接点击右上角三角运行<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607050.jpg"  ><p>运行看结果，已经分析出来了</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607051.jpg"  ><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607052.jpg"  ><p>最后实验完成，点击提交实验等待结果即可。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607053.jpg"  ><p>End</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> Python </tag>
            
            <tag> AzureAI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Azure OpenAI Build Natural Language</title>
      <link href="/2024/06/07/Azure-OpenAI-Build-Natural-Language/"/>
      <url>/2024/06/07/Azure-OpenAI-Build-Natural-Language/</url>
      
        <content type="html"><![CDATA[<p><a class="link"   href="https://learn.microsoft.com/en-us/credentials/applied-skills/build-natural-language-solution-azure-ai/#applied-skill-take-the-assessment?ocid=reactor" >https://learn.microsoft.com/en-us/credentials/applied-skills/build-natural-language-solution-azure-ai/#applied-skill-take-the-assessment?ocid=reactor<i class="fas fa-external-link-alt"></i></a></p><h1 id="start"><a href="#start" class="headerlink" title="start"></a>start</h1><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500036.jpg"   ><p>进入环境中，点击Step 1，然后点击Password右边的T，登录环境<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500037.jpg"  ></p><p>双击打开桌面的Email文件<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500038.jpg"  ><br>对Inbox的内容进行逐个点击，其中Existing Environment包含了微软官方提供的Azure的用户名和密码，proof of concept、Invoice validation、chatbot backend 分别表示的是本次考试的三大任务的具体要求<br>将邮箱中Existing Environment的用户名和密码依次复制到Azure的标签页面中，并点击Sign in完成Azure的登录</p><h1 id="试验一：-Proof-of-Concept-POC"><a href="#试验一：-Proof-of-Concept-POC" class="headerlink" title="试验一： Proof of Concept (POC)"></a>试验一： Proof of Concept (POC)</h1><p>点击邮件中的 Proof of Concept (POC) 菜单会出现具体的内容要求，如下图所示。</p><p>在第一个实验中主要是使用微软的 language 服务，并且创建的时候要符合要求，这个服务要满足客户自定义文本标准和 NER。<br>在实验中另外一个要求是需要使用代码最后调用这个你创建服务。<br>流程操作<br>首先在登录主页面搜索栏 搜索RG1，并点击Resource Groups下面的RG1<br>进入后点击 Create 按钮<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500040.jpg"  ></p><p>之后在首页内搜索language service<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500041.jpg"  ></p><p>点击进入到 Language service 后，点击 Create<br>之后点击右下方的第二个 select 按钮<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500042.jpg"  ><br>选择好之后，点击下方的按钮 continue to create your resource</p><p>在配置页面，按照我们的题目要求，在 Region 中选择 North Europe，<br>其中 Name 从邮件中找，在 Proof of concept 这里 lang开头的这个名字，作为刚才创建资源的 Name 值<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500043.jpg"  ></p><p>主要需要注意的是在 Pricing tier层里，需要选择 Free F0 的这个，这一点也是题目要求的。<br>下面选择 Existing storege account ，在存储账户这里，需要选择题目要求的以sa开头的这个账户。</p><p>这些配置都没问题后，直接点击蓝色的 Review + create 按钮。<br>进入到审核页面，这个页面没有问题后，点击蓝色的 Create 按钮。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500044.jpg"  ></p><p>等待若干分钟，出现如下画面表示服务创建完成，点击 Go to resource group<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500045.jpg"  ><br>点击 进入 lang 开头的这个服务</p><p>在创建完成服务后，进入到服务页面，找到下面如图所示的链接: Click here to manage keys 这里面有所需要的 key和 endpoint 等。</p><p>在这个页面可以看到有两个比较东西是我们在代码中需要的，一个是 key 一个是 endpoint。在后面我们试验一和试验三要用到。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500046.jpg"  >打开电脑 C:\PoC\Csharp文件夹下的 program.cs将我们的 key 和 endpoint 替换为我们上一步骤中的值。<figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Azure;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Azure.AI.TextAnalytics;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ProofOfConcept</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> AzureKeyCredential credentials = <span class="keyword">new</span> AzureKeyCredential(<span class="string">&quot;&#123;REPLACE-WITH-YOUR-VALUE&#125;&quot;</span>);</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> Uri endpoint = <span class="keyword">new</span> Uri(<span class="string">&quot;&#123;REPLACE-WITH-YOUR-VALUE&#125;&quot;</span>);</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RecognizeYourText</span>(<span class="params">TextAnalyticsClient client</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> document = <span class="string">&quot;Call our office at 312-555-1234 and ask for Graham Barnes, or send an email to support@contoso.com.&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> entities = client.<span class="literal">null</span>;</span><br><span class="line">            <span class="comment">// replace null with the correct method to recognize the requested information.a            </span></span><br><span class="line">            Console.WriteLine($ <span class="string">&quot;Redacted Text: &#123;entities.RedactedText&#125;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(entities.Count &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine($ <span class="string">&quot;Recognized &#123;entities.Count&#125; the following entities &#123;(entities.Count &gt; 1 ? &quot;</span></span><br><span class="line">                    ies <span class="string">&quot; : &quot;</span></span><br><span class="line">                    y <span class="string">&quot;)&#125;:&quot;</span>);</span><br><span class="line">                <span class="keyword">foreach</span>(<span class="keyword">var</span> entity <span class="keyword">in</span> entities)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine($ <span class="string">&quot;Text: &#123;entity.Text&#125;, Category: &#123;entity.Category&#125;, SubCategory: &#123;entity.SubCategory&#125;, Confidence score: &#123;entity.ConfidenceScore&#125;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;No entities were found.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> client = <span class="keyword">new</span> TextAnalyticsClient(endpoint, credentials);</span><br><span class="line">            RecognizeYourText(client);</span><br><span class="line">            Console.Write(<span class="string">&quot;Press any key to exit.&quot;</span>);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入到cmd中后，build run  ~ ok </p><p>Or 用python </p><p>打开电脑 C:\PoC\Python 文件夹下的 App1.py<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500047.jpg"  ><br> key 和 endpoint 替换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> azure.ai.textanalytics <span class="keyword">import</span> TextAnalyticsClient</span><br><span class="line"><span class="keyword">from</span> azure.core.credentials <span class="keyword">import</span> AzureKeyCredential</span><br><span class="line"></span><br><span class="line"><span class="comment"># Authenticate the client using your key and endpoint </span></span><br><span class="line">text_analytics_credential = AzureKeyCredential(key)</span><br><span class="line">text_analytics_client = TextAnalyticsClient(</span><br><span class="line">        endpoint=endpoint, </span><br><span class="line">        credential=text_analytics_credential)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Method for recognizing content in documents </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">recognize_your_text</span>(<span class="params">client</span>):</span><br><span class="line">    documents = [</span><br><span class="line">        <span class="string">&quot;Call our office at 312-555-1234 and ask for Graham Barnes, or send an email to support@contoso.com.&quot;</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Replace null with the correct method to recognize the requested information.</span></span><br><span class="line">    response = client.recognize_entities(documents, language=<span class="string">&quot;en&quot;</span>)</span><br><span class="line"></span><br><span class="line">    result = [doc <span class="keyword">for</span> doc <span class="keyword">in</span> response <span class="keyword">if</span> <span class="keyword">not</span> doc.is_error]</span><br><span class="line">    <span class="keyword">for</span> doc <span class="keyword">in</span> result:</span><br><span class="line">        <span class="comment">#print(&quot;Redacted Text: &#123;&#125;&quot;.format(doc.redacted_text))</span></span><br><span class="line">        <span class="keyword">for</span> entity <span class="keyword">in</span> doc.entities:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Entity: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(entity.text))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;\tCategory: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(entity.category))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;\tConfidence Score: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(entity.confidence_score))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;\tOffset: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(entity.offset))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;\tLength: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(entity.length))</span><br><span class="line"></span><br><span class="line">recognize_your_text(text_analytics_client)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>目录的地址栏，输入cmd按下回车</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500048.jpg"  ><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python App1.py</span><br></pre></td></tr></table></figure><p>ok<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500049.jpg"  ></p><h1 id="试验二：Invoice-validation"><a href="#试验二：Invoice-validation" class="headerlink" title="试验二：Invoice validation"></a>试验二：Invoice validation</h1><p>在第二个实验中主要使用了 NER 去抽取指定内容。这需要在 Azure 的语言服务中去部署一个 Language studio 服务。</p><p>流程操作<br>接着返回我们刚才复制key和EndPoint那个语言服务的界面，点击左边栏的Overview，首先在我们的语言服务 lang-41073075 中找到 Language studio 服务并点击进入。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500050.jpg"  ><p>进入到服务中后，按照如图所示配置自己的 订阅、资源类型以及资源名字，这里都是点击下拉菜单进行选择。进入到该页面后，如果显示没有登录的状态，点击右上角的 Sign in，登录后进入到如下界面</p><p>选择已有的存在项，Resource type 这里选择 Language。选择好后，点击 Done<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500051.jpg"  ><br>配置好 Language Studio后，选择 Extraction information 下面的标签<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500052.jpg"  ><br>拉页面， 在这页面找到 Custom named entity recognition 服务，点击进入。<br>在页面中点击创建新项目按钮。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500053.jpg"  ></p><p>类似于前面的操作，先配置订阅、资源、存储等信息如下图所示，点击 Next<br>在基础信息部分，需要对设置名字，这里根据题目设置名字为：webshop，主语言选择 English（US）。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500054.jpg"  ><br>在 Blob store container 选择名字 webshop，点击 Next<br>点击 Create project<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500055.jpg"  ></p><p>创建完毕后，我们需要创建entity，进入到 Data labeling 页面，点击右侧的 Add entity 按钮，根据题目，分别添加 Price 和 CustomerName，主页这里下图我只显示了添加方法，具体的 Price 和 CustomerName 要都添加出来。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500056.jpg"  ><br>创建完 entity 后，依次点击这 10 个文件，给里面的文件内容打标签<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500057.jpg"  ><br>就要给数据打标签，先点击标签后面的笔形状的按钮，然后选择好对应的信息，Name 后面标记 CustomerName 的信息，Price 后面的信息标记 Price 标签。标记上就是和图片上的一样。每标记完一个，点击 next document，直到 10 个文件都标记好<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500058.jpg"  ><br>注意：这个步骤要讲所有的文档都打上标签。</p><p>完成上述所有标签后，点击菜单中的 Training jobs，点击 Start a training job。</p><p>为自己的训练模型取一个名字，例如 model-job-01 之后点击 Train 按钮。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500059.jpg"  ></p><p>点击按钮后的页面，到此步骤，页面在后台自己训练就好。实验2就完成了。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2ji.jpg"  ></p><h1 id="试验三：Chatbot-backend"><a href="#试验三：Chatbot-backend" class="headerlink" title="试验三：Chatbot backend"></a>试验三：Chatbot backend</h1><p>在这个实验中主要是创建一个对话机器人，之后导入具体的模型后，使用代码进行对话操作。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500060.jpg"  ><br>实验流程<br>进入 <a class="link"   href="https://language.cognitive.azure.com/home" >https://language.cognitive.azure.com/home<i class="fas fa-external-link-alt"></i></a><br>选择 Understand questions and conversational language<br>中找到 Conversational language understanding 子服务。进入</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500061.jpg"  >进入到 Conversational language understanding 子服务后，点击 Import 按钮，选择C:\project 文件夹下的 lang4567.json 文件，name 命名为 lang4567 ，点击 done<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500062.jpg"  ><p>完成上面步骤后，点击 Training jobs 菜单。<br>点击 Starting a training job<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500063.jpg"  ><br>在我们新建的训练任务重，选择训练模型，也就是我们上面创建的lang4567<br>在这里数据切割选项需要注意，根据题目设置 85% 和 15%。   858585</p><p>直接点击 Train 按钮，进行训练<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500064.jpg"  ></p><p>点击左边栏的 Deploying a model 后，点击Add deployment。等待模型训练完成 出现如下图标，我们进行部署</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500065.jpg"  >点击Add deployment。<p>在新页面选择创建一个新部署，名字和模型都设置为 lang4567，添加完成后，点击部署按钮。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500066.jpg"  ><p>等待模型部署完成</p><p>双击打开 C:\CLU_PoC\Csharp 文件夹下面的 .cs ，先要做的是类似第一个试验上面的替换key和endpoint，但是 projectName 和 deploymentName 分别是我们刚才设置的 lang4567。<br>刚第一题的key 和 EndPoint 是一样的</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Azure;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Text.Json;</span><br><span class="line"><span class="keyword">using</span> Azure.Core;</span><br><span class="line"><span class="keyword">using</span> Azure.AI.Language.Conversations;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ProofOfConcept</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> AzureKeyCredential credential = <span class="keyword">new</span> AzureKeyCredential(<span class="string">&quot;&#123;REPLACE-WITH-YOUR-VALUE&#125;&quot;</span>);</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> Uri endpoint = <span class="keyword">new</span> Uri(<span class="string">&quot;&#123;REPLACE-WITH-YOUR-VALUE&#125;&quot;</span>);</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">string</span> projectName = <span class="string">&quot;&#123;REPLACE-WITH-YOUR-VALUE&#125;&quot;</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">string</span> deploymentName = <span class="string">&quot;&#123;REPLACE-WITH-YOUR-VALUE&#125;&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RecognizeYourText</span>(<span class="params"><span class="built_in">string</span> ? query</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(query == <span class="literal">null</span> || query.Length &gt; <span class="number">1000</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                query = <span class="string">&quot;can you send me a few gizmos?&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> data = <span class="keyword">new</span></span><br><span class="line">            &#123;</span><br><span class="line">                analysisInput = <span class="keyword">new</span></span><br><span class="line">                &#123;</span><br><span class="line">                    conversationItem = <span class="keyword">new</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        text = query, id = <span class="string">&quot;1&quot;</span>, participantId = <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, parameters = <span class="keyword">new</span></span><br><span class="line">                &#123;</span><br><span class="line">                    projectName, deploymentName, stringIndexType = <span class="string">&quot;Utf16CodeUnit&quot;</span>,</span><br><span class="line">                &#125;, kind = <span class="string">&quot;Conversation&quot;</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// Create client and send request           </span></span><br><span class="line">            <span class="keyword">var</span> client = <span class="keyword">new</span> <span class="literal">null</span>(endpoint, credential);</span><br><span class="line">            <span class="comment">// replace null with the correct method to recognize the requested information.            </span></span><br><span class="line">            Response response = client.<span class="literal">null</span>(RequestContent.Create(data));</span><br><span class="line">            <span class="comment">// replace null with the correct method to recognize the requested information.            </span></span><br><span class="line">            <span class="keyword">if</span>(response.ContentStream == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;No response received.&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">using</span> JsonDocument result = JsonDocument.Parse(response.ContentStream);</span><br><span class="line">            JsonElement conversationalTaskResult = result.RootElement;</span><br><span class="line">            JsonElement conversationPrediction = conversationalTaskResult.GetProperty(<span class="string">&quot;result&quot;</span>).GetProperty(<span class="string">&quot;prediction&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Intents:&quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span>(JsonElement intent <span class="keyword">in</span> conversationPrediction.GetProperty(<span class="string">&quot;intents&quot;</span>).EnumerateArray())</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine($ <span class="string">&quot;Category: &#123;intent.GetProperty(&quot;</span></span><br><span class="line">                    category <span class="string">&quot;).GetString()&#125;&quot;</span>);</span><br><span class="line">                Console.WriteLine($ <span class="string">&quot;Confidence: &#123;intent.GetProperty(&quot;</span></span><br><span class="line">                    confidenceScore <span class="string">&quot;).GetSingle()&#125;&quot;</span>);</span><br><span class="line">                Console.WriteLine();</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Entities:&quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span>(JsonElement entity <span class="keyword">in</span> conversationPrediction.GetProperty(<span class="string">&quot;entities&quot;</span>).EnumerateArray())</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine($ <span class="string">&quot;Category: &#123;entity.GetProperty(&quot;</span></span><br><span class="line">                    category <span class="string">&quot;).GetString()&#125;&quot;</span>);</span><br><span class="line">                Console.WriteLine($ <span class="string">&quot;Text: &#123;entity.GetProperty(&quot;</span></span><br><span class="line">                    text <span class="string">&quot;).GetString()&#125;&quot;</span>);</span><br><span class="line">                Console.WriteLine($ <span class="string">&quot;Offset: &#123;entity.GetProperty(&quot;</span></span><br><span class="line">                    offset <span class="string">&quot;).GetInt32()&#125;&quot;</span>);</span><br><span class="line">                Console.WriteLine($ <span class="string">&quot;Length: &#123;entity.GetProperty(&quot;</span></span><br><span class="line">                    length <span class="string">&quot;).GetInt32()&#125;&quot;</span>);</span><br><span class="line">                Console.WriteLine($ <span class="string">&quot;Confidence: &#123;entity.GetProperty(&quot;</span></span><br><span class="line">                    confidenceScore <span class="string">&quot;).GetSingle()&#125;&quot;</span>);</span><br><span class="line">                Console.WriteLine();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> ? input = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span>(args.Length &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                input = System.IO.File.ReadAllText(args[<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            RecognizeYourText(input);</span><br><span class="line">            Console.Write(<span class="string">&quot;Press any key to exit.&quot;</span>);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cmd build run , ok </p><p>or<br>双击打开 C:\CLU_PoC\Python 文件夹下面的 App1.py ，先要做的是类似第一个试验上面的替换key和endpoint，但是 project_name 和 deployment_name 分别是我们刚才设置的 lang4567。<br>刚第一题的key 和 EndPoint 是一样的</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500067.jpg"  ><p>修改完代码后，跟试题一同样的方法，在当前文件的文件夹地址栏输入 cmd ,在命令窗口输入python App1.py运行 App1 ，有如下信息后证明成功<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500068.jpg"  ></p><p>完成3个步骤试验后，点击界面中的 Submit Assessment 按钮，弹出的确认页面后点击 Submit 按钮。</p><p>证书</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/24060500071.jpg"  ><p>End</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Azure </tag>
            
            <tag> OpenAI </tag>
            
            <tag> Python </tag>
            
            <tag> .Net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Azure AI Develop Generative AI solutions</title>
      <link href="/2024/06/06/Azure-OpenAI-sln/"/>
      <url>/2024/06/06/Azure-OpenAI-sln/</url>
      
        <content type="html"><![CDATA[<h1 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h1><p><a class="link"   href="https://learn.microsoft.com/en-us/credentials/applied-skills/develop-generative-ai-solutions-with-azure-openai-service/#applied-skill-take-the-assessment" >https://learn.microsoft.com/en-us/credentials/applied-skills/develop-generative-ai-solutions-with-azure-openai-service/#applied-skill-take-the-assessment<i class="fas fa-external-link-alt"></i></a></p><h1 id="部署Azure-OpenAI-服务"><a href="#部署Azure-OpenAI-服务" class="headerlink" title="部署Azure OpenAI 服务"></a>部署Azure OpenAI 服务</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050001.jpg"  ></p><p>点击Step 1，然后点击Password右边的T<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050002.jpg"  ></p><p>鼠标双击Email<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050003.jpg"  ><br>对Inbox的内容进行逐个点击，其中Existing Environment包含了微软官方提供的Azure的用户名和密码，Validate proof of concept、Company chatbot、Developer tasks和Use company data分别表示的是本次考试的四大任务的具体要求</p><p>切换到Azure登录的标签页</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050004.jpg"  ><br>将邮箱中Existing Environment的用户名和密码依次复制到Azure的标签页面中，并点击Sign in完成Azure的登录</p><p>然后在浏览器中输入URL：<a class="link"   href="https://portal.azure.com/#home%EF%BC%8C%E7%82%B9%E5%87%BBAzure" >https://portal.azure.com/#home，点击Azure<i class="fas fa-external-link-alt"></i></a> AI services</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050005.jpg"  ><br>其中Resource group、Pricing tier勾选下拉列表的存在项，Name可自行填入(如azureservice)，然后点击Next<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050006.jpg"  ></p><p>网络中选择第一项：All networks，然后点击页面左下方的Next<br>Tags可直接点击左下方的Next<br>然后在Review+submit页面点击Create<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050007.jpg"  ><br>等待几十秒后，deployment完成后，点击Deployment details<br>点击Resource中的名称，如azureservice<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050008.jpg"  ><br>点击Endpoints右边的Click here to view endpoints<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050009.jpg"  ><br>​</p><p>点击Key 1右侧的复制按钮，复制其到C:\files\AzureOpenAIPoc\Python.env中的AZURE_OAI_KEY变量中。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050010.jpg"  ><br>点击Endpoint右侧的复制按钮，分别复制任意一个 KEY 和 EndPoint 到C:\files\AzureOpenAIPoc\Python.env中的AZURE_OAI_KEY 和 AZURE_OAI_ENDPOINT。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050011.jpg"  ></p><p>然后在浏览器中输入<a class="link"   href="https://portal.azure.com/#home%EF%BC%8C%E5%B9%B6%E7%82%B9%E5%87%BBName%E4%B8%8B%E7%9A%84%E5%90%8D%E7%A7%B0" >https://portal.azure.com/#home，并点击Name下的名称<i class="fas fa-external-link-alt"></i></a><br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050012.jpg"  ></p><p>点击Go to Azure OpenAI Studio</p><p>然后点击Create new deployment</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050013.jpg"  ><p>按照下图中的内容进行下拉选择或者填写，其中Select a model勾选为gpt-35-turbo-16k，Deployment name可自定义填写，如gpt_deploy，将Tokens per Minute Rate Limit设置为5K，Enable Dynamic Quota设置为<strong>Disabled</strong>，最后点击Create：<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050014.jpg"  ></p><p>确保Status为Succeed，则说明部署成功了<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050015.jpg"  ></p><p>将C:\files\AzureOpenAIPoc\Python.env中AZURE_OAI_MODEL设置为Deployment name，如gpt_deploy<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050016.jpg"  ></p><h2 id="AI-Search相关操作"><a href="#AI-Search相关操作" class="headerlink" title="AI Search相关操作"></a>AI Search相关操作</h2><p>然后在浏览器中输入<a class="link"   href="https://portal.azure.com/#home%EF%BC%8C%E5%9C%A8%E8%BE%93%E5%85%A5%E6%A1%86%E4%B8%AD%E8%BE%93%E5%85%A5ai" >https://portal.azure.com/#home，在输入框中输入ai<i class="fas fa-external-link-alt"></i></a> search，点击AI Search<br>点击Name下的名称</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050017.jpg"  ><p>点击Import data</p><p>在Connect to your data中勾选Data Source为Azure Blob Storage<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050018.jpg"  ><br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050019.jpg"  ></p><p>点击Name下的名称<br>选择blob1，并点击Select</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050020.jpg"  >填入azure，并点击左下方的Next：Add cognitive skills：<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050021.jpg"  >在Add cognitive skills中点击Skip to: Customize target index<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050022.jpg"  >修改index name为pocindex，然后点击Next: Create an indexe修改Indexer的Name为pocindex，然后点击Submit<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050023.jpg"  ><p>复制其 <strong>url</strong> 作为C:\files\AzureOpenAIPoc\Python.env中的值SEARCH_ENDPOINT</p><p>点击Essentials左边的箭头收起该部分内容，然后点击Properties，再点击API keys</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050024.jpg"  ><p>然后点击Primary admin keys中的复制按钮，复制其到C:\files\AzureOpenAIPoc\Python.env中的SEARCH_KEY变量中。<br>修改其中SEARCH_INDEX为pocindex</p><p>修改后完整的.env内容如下所示，写改完后记得保存并关闭</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050025.jpg"  ><h2 id="修改PoC-py文件"><a href="#修改PoC-py文件" class="headerlink" title="修改PoC.py文件"></a>修改PoC.py文件</h2><p>具体路径为：C:\files\AzureOpenAIPoc\Python\PoC.py。打开文件的方法可参考部署Azure OpenAI服务中的.env文件，唯一差别之处在于PoC.py可双击打开。需要说明的是：粘贴后记得按下ctrl+s进行保存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> dotenv <span class="keyword">import</span> load_dotenv</span><br><span class="line"><span class="keyword">import</span> utils</span><br><span class="line"><span class="keyword">from</span> openai <span class="keyword">import</span>  AzureOpenAI</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> openai <span class="keyword">import</span> AsyncAzureOpenAI</span><br><span class="line"><span class="comment"># Add OpenAI import. (Add code here)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        load_dotenv()</span><br><span class="line">        utils.initLogFile()</span><br><span class="line">        azure_oai_endpoint = os.getenv(<span class="string">&quot;AZURE_OAI_ENDPOINT&quot;</span>)</span><br><span class="line">        azure_oai_key = os.getenv(<span class="string">&quot;AZURE_OAI_KEY&quot;</span>)</span><br><span class="line">        azure_oai_model = os.getenv(<span class="string">&quot;AZURE_OAI_MODEL&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Define Azure OpenAI client (Add code here)##################</span></span><br><span class="line">        client = AzureOpenAI(</span><br><span class="line">            azure_endpoint=azure_oai_endpoint,</span><br><span class="line">            api_key=azure_oai_key,</span><br><span class="line">            api_version=<span class="string">&quot;2024-02-15-preview&quot;</span></span><br><span class="line">        )</span><br><span class="line">        function_map = &#123;</span><br><span class="line">            <span class="string">&quot;1&quot;</span>: function1,</span><br><span class="line">            <span class="string">&quot;2&quot;</span>: function2,</span><br><span class="line">            <span class="string">&quot;3&quot;</span>: function3,</span><br><span class="line">            <span class="string">&quot;4&quot;</span>: function4</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;1: Validate PoC\n&#x27;</span> +</span><br><span class="line">                  <span class="string">&#x27;2: Company chatbot\n&#x27;</span> +</span><br><span class="line">                  <span class="string">&#x27;3: Developer tasks\n&#x27;</span> +</span><br><span class="line">                  <span class="string">&#x27;4: Use company data\n&#x27;</span> +</span><br><span class="line">                  <span class="string">&#x27;\&#x27;quit\&#x27; to exit the program\n&#x27;</span>)</span><br><span class="line">            command = <span class="built_in">input</span>(<span class="string">&#x27;Enter a number:&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> command.strip() <span class="keyword">in</span> function_map:</span><br><span class="line">                function_map[command](client, azure_oai_model)</span><br><span class="line">            <span class="keyword">elif</span> command.strip().lower() == <span class="string">&#x27;quit&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;Exiting program...&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Invalid input. Please enter number 1, 2, 3, 4, or 5.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> ex:</span><br><span class="line">        <span class="built_in">print</span>(ex)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Task 1: Validate PoC</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function1</span>(<span class="params">aiClient, aiModel</span>):</span><br><span class="line">    inputText = utils.getPromptInput(<span class="string">&quot;Task 1: Validate PoC&quot;</span>, <span class="string">&quot;sample-text.txt&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Build messages to send to Azure OpenAI model. (Add code here)</span></span><br><span class="line">    messages = [</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: inputText&#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Define argument list (Add code here)</span></span><br><span class="line">    apiParams = &#123;</span><br><span class="line">        <span class="string">&quot;messages&quot;</span>: messages,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    utils.writeLog(<span class="string">&quot;API Parameters:\n&quot;</span>, apiParams)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Call chat completion connection. (Add code here)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Use the call name and **apiParams to reference our argument list</span></span><br><span class="line">    response = aiClient.chat.completions.create(</span><br><span class="line">        model=aiModel,</span><br><span class="line">        messages=messages,</span><br><span class="line">        temperature=<span class="number">0.7</span>,</span><br><span class="line">        max_tokens=<span class="number">800</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    utils.writeLog(<span class="string">&quot;Response:\n&quot;</span>, <span class="built_in">str</span>(response))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Response: &quot;</span> + response.choices[<span class="number">0</span>].message.content + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Task 2: Company chatbot</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function2</span>(<span class="params">aiClient, aiModel</span>):</span><br><span class="line">    inputText = utils.getPromptInput(<span class="string">&quot;Task 2: Company chatbot&quot;</span>, <span class="string">&quot;sample-text.txt&quot;</span>)</span><br><span class="line">    messages = [</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You are a helpful assistant that responds in a casual tone. Each response should end with &#x27;Hope that helps! Thanks for using Contoso, Ltd.&#x27;&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;What is the best way to find if a company is hiring?&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;assistant&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You can start by checking the company&#x27;s website, especially the careers section. Hope that helps! Thanks for using Contoso, Ltd.&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: inputText&#125;</span><br><span class="line">    ]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Define argument list (Add code here)</span></span><br><span class="line">    apiParams = &#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: aiModel,</span><br><span class="line">        <span class="string">&quot;messages&quot;</span>: messages,</span><br><span class="line">        <span class="string">&quot;max_tokens&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">        <span class="string">&quot;temperature&quot;</span>: <span class="number">0.5</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    utils.writeLog(<span class="string">&quot;API Parameters:\n&quot;</span>, apiParams)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Call chat completion connection. (Add code here)</span></span><br><span class="line">    <span class="comment"># Use the call name and **apiParams to reference our argument list</span></span><br><span class="line">    response = aiClient.chat.completions.create(**apiParams)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    utils.writeLog(<span class="string">&quot;Response:\n&quot;</span>, <span class="built_in">str</span>(response))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Response: &quot;</span> + response.choices[<span class="number">0</span>].message.content + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="comment"># Task 3: Developer tasks</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function3</span>(<span class="params">aiClient, aiModel</span>):</span><br><span class="line">    inputText = utils.getPromptInput(<span class="string">&quot;Task 3: Developer tasks&quot;</span>, <span class="string">&quot;sample-text.txt&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Define system message based on the task</span></span><br><span class="line">    </span><br><span class="line">    system_message = <span class="string">&quot;Take the legacy code in legacyCode.py, add comments and generate documentation.&quot;</span></span><br><span class="line"></span><br><span class="line">    messages = [</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: system_message&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: inputText&#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Define argument list (Add code here)</span></span><br><span class="line">    apiParams = &#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: aiModel,</span><br><span class="line">        <span class="string">&quot;messages&quot;</span>: messages,</span><br><span class="line">        <span class="string">&quot;max_tokens&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">        <span class="string">&quot;temperature&quot;</span>: <span class="number">0.5</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    utils.writeLog(<span class="string">&quot;API Parameters:\n&quot;</span>, apiParams)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Call chat completion connection. (Add code here)</span></span><br><span class="line">    <span class="comment"># Use the call name and **apiParams to reference our argument list</span></span><br><span class="line">    response = aiClient.chat.completions.create(**apiParams)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    utils.writeLog(<span class="string">&quot;Response:\n&quot;</span>, <span class="built_in">str</span>(response))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Response: &quot;</span> + response.choices[<span class="number">0</span>].message.content + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> response </span><br><span class="line"></span><br><span class="line"><span class="comment"># Task 4: Use company data</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function4</span>(<span class="params">aiClient, aiModel</span>):</span><br><span class="line">    inputText = utils.getPromptInput(<span class="string">&quot;Task 4: Use company data&quot;</span>, <span class="string">&quot;sample-text.txt&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Build messages to send to Azure OpenAI model. (Add code here)</span></span><br><span class="line">    search_endpoint = os.getenv(<span class="string">&quot;SEARCH_ENDPOINT&quot;</span>)</span><br><span class="line">    search_key = os.getenv(<span class="string">&quot;SEARCH_KEY&quot;</span>)</span><br><span class="line">    search_index = os.getenv(<span class="string">&quot;SEARCH_INDEX&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Perform the search query</span></span><br><span class="line">    search_query = &#123;</span><br><span class="line">        <span class="string">&quot;search&quot;</span>: inputText,</span><br><span class="line">        <span class="string">&quot;searchMode&quot;</span>: <span class="string">&quot;any&quot;</span>,</span><br><span class="line">        <span class="string">&quot;queryType&quot;</span>: <span class="string">&quot;simple&quot;</span>,</span><br><span class="line">        <span class="string">&quot;top&quot;</span>: <span class="number">5</span>  <span class="comment"># Adjust the number of results as needed</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">        <span class="string">&quot;api-key&quot;</span>: search_key</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    search_url = <span class="string">f&quot;<span class="subst">&#123;search_endpoint&#125;</span>/indexes/<span class="subst">&#123;search_index&#125;</span>/docs/search?api-version=2021-04-30-Preview&quot;</span></span><br><span class="line">    </span><br><span class="line">    response = requests.post(search_url, headers=headers, json=search_query)</span><br><span class="line">    search_results = response.json()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Extract relevant search results</span></span><br><span class="line">    search_snippets = [result[<span class="string">&quot;content&quot;</span>] <span class="keyword">for</span> result <span class="keyword">in</span> search_results[<span class="string">&quot;value&quot;</span>]]</span><br><span class="line">    search_content = <span class="string">&quot;\n\n&quot;</span>.join(search_snippets)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Build messages for OpenAI with search results included</span></span><br><span class="line">    messages = [</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You are a helpful travel agent.&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;inputText&#125;</span>\n\nSearch Results:\n<span class="subst">&#123;search_content&#125;</span>&quot;</span>&#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Define connection and argument list (Add code here)</span></span><br><span class="line">    apiParams = &#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: aiModel,</span><br><span class="line">        <span class="string">&quot;messages&quot;</span>: messages,</span><br><span class="line">        <span class="string">&quot;max_tokens&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">        <span class="string">&quot;temperature&quot;</span>: <span class="number">0.5</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    utils.writeLog(<span class="string">&quot;API Parameters:\n&quot;</span>, apiParams)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Call chat completion connection. Will be the same as function1 (Add code here)</span></span><br><span class="line">    <span class="comment"># Use the call name and **apiParams to reference our argument list</span></span><br><span class="line">    response = aiClient.chat.completions.create(**apiParams)</span><br><span class="line"></span><br><span class="line">    utils.writeLog(<span class="string">&quot;Response:\n&quot;</span>, <span class="built_in">str</span>(response))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Response: &quot;</span> + response.choices[<span class="number">0</span>].message.content + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Call main function. Do not modify.</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: </span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>将上述修改后的代码复制到C:\files\AzureOpenAIPoc\Python\PoC.py中，打开文件方法较为简单，即通过鼠标双击也就是通过VScode工具打开该文件<br>可使用ctrl+a删除全部内容，然后再通过ctrl+c和ctrl+v进行复制，接着按ctrl+s进行保存，最后在地址栏删除已有内容，并在其中输入cmd，并按下回车键</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050026.jpg"  >进入到cmd中后，输入python PoC.py，每输入完一个命令按回车代表执行该命令<p>然后可输入题号，比如 输入1 代表的是第一个题(Validate PoC)，然后可输入type或者file，其中type指的是自行输入prompt，而file是从目录下的sample-text.txt读取得到输入prompt。需要说明的是，可连续进行提问，不需要中间退出。</p><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><p>第一题可依次输入type、who are you(或者其它prompt)进行提问或者直接输入file进行提问。查看结果是否正常输出。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050027.jpg"  ><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050028.jpg"  ><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p>第二题可依次输入type、who are you来进行提问，或者依次输入type和其他问题。查看是否以Hope that helps!Thanks for using Contoso,Ltd.结尾。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050029.jpg"  ></p><p>然后再在第二题中输入type和Get the response in both English and Spanish: what is the best way to find if a company is hiring?(可直接ctrl+c、ctrl+v进行复制)进行提问</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050030.jpg"  ><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><p>第三题需要复制并运行文件两次，具体来说：<br>第一次 是将c:\files下的legacyCode.py复制到C:\files\AzureOpenAIPoc\Python 路径下，首先删除文件夹中已有的sample-text.txt，并将legacyCode.py重命名为sample-text.txt(！！！注意是sample-text.txt，而不是sample-text.py)。然后运行python PoC.py，并输入3 和 file，查看结果是否产生了注释。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050031.jpg"  >第二次需将PoC.py文件进行复制粘贴为以下内容，并按下ctrl+s进行保存<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> dotenv <span class="keyword">import</span> load_dotenv</span><br><span class="line"><span class="keyword">import</span> utils</span><br><span class="line"><span class="keyword">from</span> openai <span class="keyword">import</span>  AzureOpenAI</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">from</span> openai <span class="keyword">import</span> AsyncAzureOpenAI</span><br><span class="line"><span class="comment"># Add OpenAI import. (Add code here)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        load_dotenv()</span><br><span class="line">        utils.initLogFile()</span><br><span class="line">        azure_oai_endpoint = os.getenv(<span class="string">&quot;AZURE_OAI_ENDPOINT&quot;</span>)</span><br><span class="line">        azure_oai_key = os.getenv(<span class="string">&quot;AZURE_OAI_KEY&quot;</span>)</span><br><span class="line">        azure_oai_model = os.getenv(<span class="string">&quot;AZURE_OAI_MODEL&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Define Azure OpenAI client (Add code here)##################</span></span><br><span class="line">        client = AzureOpenAI(</span><br><span class="line">            azure_endpoint=azure_oai_endpoint,</span><br><span class="line">            api_key=azure_oai_key,</span><br><span class="line">            api_version=<span class="string">&quot;2024-02-15-preview&quot;</span></span><br><span class="line">        )</span><br><span class="line">        function_map = &#123;</span><br><span class="line">            <span class="string">&quot;1&quot;</span>: function1,</span><br><span class="line">            <span class="string">&quot;2&quot;</span>: function2,</span><br><span class="line">            <span class="string">&quot;3&quot;</span>: function3,</span><br><span class="line">            <span class="string">&quot;4&quot;</span>: function4</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;1: Validate PoC\n&#x27;</span> +</span><br><span class="line">                  <span class="string">&#x27;2: Company chatbot\n&#x27;</span> +</span><br><span class="line">                  <span class="string">&#x27;3: Developer tasks\n&#x27;</span> +</span><br><span class="line">                  <span class="string">&#x27;4: Use company data\n&#x27;</span> +</span><br><span class="line">                  <span class="string">&#x27;\&#x27;quit\&#x27; to exit the program\n&#x27;</span>)</span><br><span class="line">            command = <span class="built_in">input</span>(<span class="string">&#x27;Enter a number:&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> command.strip() <span class="keyword">in</span> function_map:</span><br><span class="line">                function_map[command](client, azure_oai_model)</span><br><span class="line">            <span class="keyword">elif</span> command.strip().lower() == <span class="string">&#x27;quit&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;Exiting program...&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Invalid input. Please enter number 1, 2, 3, 4, or 5.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> ex:</span><br><span class="line">        <span class="built_in">print</span>(ex)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Task 1: Validate PoC</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function1</span>(<span class="params">aiClient, aiModel</span>):</span><br><span class="line">    inputText = utils.getPromptInput(<span class="string">&quot;Task 1: Validate PoC&quot;</span>, <span class="string">&quot;sample-text.txt&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Build messages to send to Azure OpenAI model. (Add code here)</span></span><br><span class="line">    messages = [</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: inputText&#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Define argument list (Add code here)</span></span><br><span class="line">    apiParams = &#123;</span><br><span class="line">        <span class="string">&quot;messages&quot;</span>: messages,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    utils.writeLog(<span class="string">&quot;API Parameters:\n&quot;</span>, apiParams)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Call chat completion connection. (Add code here)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Use the call name and **apiParams to reference our argument list</span></span><br><span class="line">    response = aiClient.chat.completions.create(</span><br><span class="line">        model=aiModel,</span><br><span class="line">        messages=messages,</span><br><span class="line">        temperature=<span class="number">0.7</span>,</span><br><span class="line">        max_tokens=<span class="number">800</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    utils.writeLog(<span class="string">&quot;Response:\n&quot;</span>, <span class="built_in">str</span>(response))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Response: &quot;</span> + response.choices[<span class="number">0</span>].message.content + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Task 2: Company chatbot</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function2</span>(<span class="params">aiClient, aiModel</span>):</span><br><span class="line">    inputText = utils.getPromptInput(<span class="string">&quot;Task 2: Company chatbot&quot;</span>, <span class="string">&quot;sample-text.txt&quot;</span>)</span><br><span class="line">    messages = [</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You are a helpful assistant that responds in a casual tone. Each response should end with &#x27;Hope that helps! Thanks for using Contoso, Ltd.&#x27;&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;What is the best way to find if a company is hiring?&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;assistant&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You can start by checking the company&#x27;s website, especially the careers section. Hope that helps! Thanks for using Contoso, Ltd.&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: inputText&#125;</span><br><span class="line">    ]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Define argument list (Add code here)</span></span><br><span class="line">    apiParams = &#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: aiModel,</span><br><span class="line">        <span class="string">&quot;messages&quot;</span>: messages,</span><br><span class="line">        <span class="string">&quot;max_tokens&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">        <span class="string">&quot;temperature&quot;</span>: <span class="number">0.5</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    utils.writeLog(<span class="string">&quot;API Parameters:\n&quot;</span>, apiParams)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Call chat completion connection. (Add code here)</span></span><br><span class="line">    <span class="comment"># Use the call name and **apiParams to reference our argument list</span></span><br><span class="line">    response = aiClient.chat.completions.create(**apiParams)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    utils.writeLog(<span class="string">&quot;Response:\n&quot;</span>, <span class="built_in">str</span>(response))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Response: &quot;</span> + response.choices[<span class="number">0</span>].message.content + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="comment"># Task 3: Developer tasks</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function3</span>(<span class="params">aiClient, aiModel</span>):</span><br><span class="line">    inputText = utils.getPromptInput(<span class="string">&quot;Task 3: Developer tasks&quot;</span>, <span class="string">&quot;sample-text.txt&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Define system message based on the task</span></span><br><span class="line">    </span><br><span class="line">    system_message = <span class="string">&quot;Generate five unit tests for the function in fibonaci.py.&quot;</span></span><br><span class="line"></span><br><span class="line">    messages = [</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: system_message&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: inputText&#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Define argument list (Add code here)</span></span><br><span class="line">    apiParams = &#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: aiModel,</span><br><span class="line">        <span class="string">&quot;messages&quot;</span>: messages,</span><br><span class="line">        <span class="string">&quot;max_tokens&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">        <span class="string">&quot;temperature&quot;</span>: <span class="number">0.5</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    utils.writeLog(<span class="string">&quot;API Parameters:\n&quot;</span>, apiParams)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Call chat completion connection. (Add code here)</span></span><br><span class="line">    <span class="comment"># Use the call name and **apiParams to reference our argument list</span></span><br><span class="line">    response = aiClient.chat.completions.create(**apiParams)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    utils.writeLog(<span class="string">&quot;Response:\n&quot;</span>, <span class="built_in">str</span>(response))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Response: &quot;</span> + response.choices[<span class="number">0</span>].message.content + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> response </span><br><span class="line"></span><br><span class="line"><span class="comment"># Task 4: Use company data</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">function4</span>(<span class="params">aiClient, aiModel</span>):</span><br><span class="line">    inputText = utils.getPromptInput(<span class="string">&quot;Task 4: Use company data&quot;</span>, <span class="string">&quot;sample-text.txt&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Build messages to send to Azure OpenAI model. (Add code here)</span></span><br><span class="line">    search_endpoint = os.getenv(<span class="string">&quot;SEARCH_ENDPOINT&quot;</span>)</span><br><span class="line">    search_key = os.getenv(<span class="string">&quot;SEARCH_KEY&quot;</span>)</span><br><span class="line">    search_index = os.getenv(<span class="string">&quot;SEARCH_INDEX&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Perform the search query</span></span><br><span class="line">    search_query = &#123;</span><br><span class="line">        <span class="string">&quot;search&quot;</span>: inputText,</span><br><span class="line">        <span class="string">&quot;searchMode&quot;</span>: <span class="string">&quot;any&quot;</span>,</span><br><span class="line">        <span class="string">&quot;queryType&quot;</span>: <span class="string">&quot;simple&quot;</span>,</span><br><span class="line">        <span class="string">&quot;top&quot;</span>: <span class="number">5</span>  <span class="comment"># Adjust the number of results as needed</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">        <span class="string">&quot;api-key&quot;</span>: search_key</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    search_url = <span class="string">f&quot;<span class="subst">&#123;search_endpoint&#125;</span>/indexes/<span class="subst">&#123;search_index&#125;</span>/docs/search?api-version=2021-04-30-Preview&quot;</span></span><br><span class="line">    </span><br><span class="line">    response = requests.post(search_url, headers=headers, json=search_query)</span><br><span class="line">    search_results = response.json()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Extract relevant search results</span></span><br><span class="line">    search_snippets = [result[<span class="string">&quot;content&quot;</span>] <span class="keyword">for</span> result <span class="keyword">in</span> search_results[<span class="string">&quot;value&quot;</span>]]</span><br><span class="line">    search_content = <span class="string">&quot;\n\n&quot;</span>.join(search_snippets)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Build messages for OpenAI with search results included</span></span><br><span class="line">    messages = [</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You are a helpful travel agent.&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;inputText&#125;</span>\n\nSearch Results:\n<span class="subst">&#123;search_content&#125;</span>&quot;</span>&#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Define connection and argument list (Add code here)</span></span><br><span class="line">    apiParams = &#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: aiModel,</span><br><span class="line">        <span class="string">&quot;messages&quot;</span>: messages,</span><br><span class="line">        <span class="string">&quot;max_tokens&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">        <span class="string">&quot;temperature&quot;</span>: <span class="number">0.5</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    utils.writeLog(<span class="string">&quot;API Parameters:\n&quot;</span>, apiParams)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Call chat completion connection. Will be the same as function1 (Add code here)</span></span><br><span class="line">    <span class="comment"># Use the call name and **apiParams to reference our argument list</span></span><br><span class="line">    response = aiClient.chat.completions.create(**apiParams)</span><br><span class="line"></span><br><span class="line">    utils.writeLog(<span class="string">&quot;Response:\n&quot;</span>, <span class="built_in">str</span>(response))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Response: &quot;</span> + response.choices[<span class="number">0</span>].message.content + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Call main function. Do not modify.</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: </span><br><span class="line">    main()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后将c:\files下的fibonacci.py，复制到C:\files\AzureOpenAIPoc\Python下，首先删除文件夹中已有的sample-text.txt，并将fibonacci.py重命名为sample-text.txt(！！！注意是sample-text.txt，而不是sample-text.py)。然后关闭原来的命令窗口，重新运行python PoC.py，并输入3、file，查看结果是否产生了5个测试用例。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050032.jpg"  ><h1 id="第四题（最后一题了-加油！！）"><a href="#第四题（最后一题了-加油！！）" class="headerlink" title="第四题（最后一题了 加油！！）"></a>第四题（最后一题了 加油！！）</h1><p>第四题可依次输入type和When is the best time to visit London?(可使用ctrl+c和ctrl+v进行复制粘贴)进行提问。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050033.jpg"  ><p>完成上述代码测试后，点击界面右下角中的 Submit Assessment 按钮，弹出的确认页面后点击 Submit 按钮。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050034.jpg"  ><br>完成凭证<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050035.jpg"  ><br>证书<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/2406050035plus2.jpg"  ></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Azure </tag>
            
            <tag> OpenAI </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Azure OpenAI Language</title>
      <link href="/2024/06/05/Azure-OpenAI-Language/"/>
      <url>/2024/06/05/Azure-OpenAI-Language/</url>
      
        <content type="html"><![CDATA[<h1 id="使用-Azure-AI-语言分析文本"><a href="#使用-Azure-AI-语言分析文本" class="headerlink" title="使用 Azure AI 语言分析文本"></a>使用 Azure AI 语言分析文本</h1><p>每天，世界都会生成大量数据；大部分内容基于文本，其形式包括电子邮件、社交媒体文章、在线评论、业务文档等。 通过应用统计和语义模型的人工智能技术，可以创建从基于文本的数据中提取含义和见解的应用程序。</p><p>Azure AI 语言为可轻松集成到你自己的应用程序代码中的常见文本分析技术提供 API。</p><p>在本模块中，你将了解如何使用 Azure AI 语言执行以下操作：</p><p>检测文本中的语言。<br>分析文本情绪。<br>提取关键短语、实体和链接实体。</p><h2 id="预配-Azure-AI-语言资源"><a href="#预配-Azure-AI-语言资源" class="headerlink" title="预配 Azure AI 语言资源"></a>预配 Azure AI 语言资源</h2><p>Azure AI 语言旨在帮助从文本中提取信息。 它提供可用于以下各项的功能：</p><ul><li><p>语言检测 - 确定编写文本所用的语言。</p></li><li><p>关键短语提取 - 标识文本中指示要点的重要单词和短语。</p></li><li><p>情绪分析 - 量化文本的正负面情绪程度。</p></li><li><p>命名实体识别 - 检测对实体的引用，包括人员、位置、时间段、组织等。</p></li><li><p>实体链接 - 通过提供指向维基百科文章的参考链接来标识特定实体。</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/analyze-text-ai-language/media/text-analytics-resource.png"  alt="Diagram showing an Azure AI Language resource performing language detection, key phrase extraction, sentiment analysis, named entity recognition, and entity linking."></p></li></ul><h2 id="用于文本分析的-Azure-资源"><a href="#用于文本分析的-Azure-资源" class="headerlink" title="用于文本分析的 Azure 资源"></a>用于文本分析的 Azure 资源</h2><p>若要使用 Azure AI 语言来分析文本，必须在 Azure 订阅中为其预配资源。</p><p>在 Azure 订阅中预配适当的资源后，可以使用其终结点及其密钥之一从代码中调用 Azure AI 语言 API。 可以通过向 REST 接口提交 JSON 格式的请求，或者通过使用特定于编程语言的任何可用 SDK 来调用 Azure AI 语言 API。</p><p>注意</p><p>本模块的后续单元中的代码示例显示了与 REST 接口交换的 JSON 请求和响应。 使用 SDK 时，会通过用于封装相同数据值的适当对象和方法对 JSON 请求进行抽象。 在本模块后面的练习中，你将有机会亲自尝试使用适用于 C# 或 Python 的 SDK。</p><h2 id="检测语言"><a href="#检测语言" class="headerlink" title="检测语言"></a>检测语言</h2><p>Azure AI 语言检测 API 会评估文本输入，并为提交的每个文档返回带有一个指示分析强度的分数的语言标识符。</p><p>此功能对于用于收集语言未知的任意文本的内容存储非常有用。 另一种方案可能涉及聊天机器人。 如果用户使用聊天机器人启动会话，则语言检测可用于确定用户使用的语言，这样你便可以使用适当的语言配置机器人响应。</p><p>可以解析此分析的结果，确定输入文档中使用的语言。 响应还会返回一个分数，用于反映模型的置信度（介于 0 到 1 的值）。</p><p>语言检测可应用于文档或单个短语。 请注意，文档大小必须小于 5,120 个字符。 大小限制针对每个文档，每个集合限制为 1,000 个项 (ID)。 此处显示了可以在请求正文中向服务提交的格式正确的 JSON 有效负载的示例，包括文档的集合，其中每个文档都包含唯一 ID 以及要分析的文本。 （可选）可以提供 countryHint 以提高预测性能。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;kind&quot;: &quot;LanguageDetection&quot;,</span><br><span class="line">    &quot;parameters&quot;: &#123;</span><br><span class="line">        &quot;modelVersion&quot;: &quot;latest&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;analysisInput&quot;:&#123;</span><br><span class="line">        &quot;documents&quot;:[</span><br><span class="line">              &#123;</span><br><span class="line">                &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">                &quot;text&quot;: &quot;Hello world&quot;,</span><br><span class="line">                &quot;countryHint&quot;: &quot;US&quot;</span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                &quot;id&quot;: &quot;2&quot;,</span><br><span class="line">                &quot;text&quot;: &quot;Bonjour tout le monde&quot;</span><br><span class="line">              &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务将返回一个 JSON 响应，其中包含请求正文中每个文档的结果，包括预测到的语言以及指示预测的置信度的值。 置信度是介于 0 和 1 的值，值越接近 1 则置信度越高。 下面是映射到上述请求 JSON 的标准 JSON 响应的示例。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;   &quot;kind&quot;: &quot;LanguageDetectionResults&quot;,</span><br><span class="line">    &quot;results&quot;: &#123;</span><br><span class="line">        &quot;documents&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;detectedLanguage&quot;: &#123;</span><br><span class="line">              &quot;confidenceScore&quot;: 1,</span><br><span class="line">              &quot;iso6391Name&quot;: &quot;en&quot;,</span><br><span class="line">              &quot;name&quot;: &quot;English&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">            &quot;warnings&quot;: []</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;detectedLanguage&quot;: &#123;</span><br><span class="line">              &quot;confidenceScore&quot;: 1,</span><br><span class="line">              &quot;iso6391Name&quot;: &quot;fr&quot;,</span><br><span class="line">              &quot;name&quot;: &quot;French&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;id&quot;: &quot;2&quot;,</span><br><span class="line">            &quot;warnings&quot;: []</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;errors&quot;: [],</span><br><span class="line">        &quot;modelVersion&quot;: &quot;2022-10-01&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在我们的示例中，所有语言的置信度均为 1，这主要是因为文本相对简单，易于识别其语言。</p><p>如果传入包含多语言内容的文档，该服务的行为会有所不同。 同一文档中的混合语言内容将返回内容中代表性最强但正评级较低的语言，这反映该评估的边界强度。 在以下示例中，输入中包含英语、西班牙语和法语。 分析器使用文本的统计分析来确定主要语言。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;documents&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">      &quot;text&quot;: &quot;Hello, I would like to take a class at your University. ¿Se ofrecen clases en español? Es mi primera lengua y más fácil para escribir. Que diriez-vous des cours en français?&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面的示例显示了此多语言示例的响应。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;documents&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">            &quot;detectedLanguage&quot;: &#123;</span><br><span class="line">                &quot;name&quot;: &quot;Spanish&quot;,</span><br><span class="line">                &quot;iso6391Name&quot;: &quot;es&quot;,</span><br><span class="line">                &quot;confidenceScore&quot;: 0.9375</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;warnings&quot;: []</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;errors&quot;: [],</span><br><span class="line">    &quot;modelVersion&quot;: &quot;2022-10-01&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后要考虑的是语言内容多义性的情况。 如果提交了分析器无法分析的文本内容，则可能会发生这种情况，例如由于在将文本转换为字符串变量时出现字符编码问题。 这样一来，语言名称和 ISO 代码的响应将指示 (unknown)，分数值将返回为 <code>0</code>。 下面的示例显示响应的外观。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;documents&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">            &quot;detectedLanguage&quot;: &#123;</span><br><span class="line">                &quot;name&quot;: &quot;(Unknown)&quot;,</span><br><span class="line">                &quot;iso6391Name&quot;: &quot;(Unknown)&quot;,</span><br><span class="line">                &quot;confidenceScore&quot;: 0.0</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;warnings&quot;: []</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;errors&quot;: [],</span><br><span class="line">    &quot;modelVersion&quot;: &quot;2022-10-01&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="提取关键短语"><a href="#提取关键短语" class="headerlink" title="提取关键短语"></a>提取关键短语</h2><p>关键短语提取是这样一个过程，即评估一个或多个文档的文本，然后围绕文档上下文识别出要点。</p><p>关键短语提取最适合大型文档（可分析的最大大小为 5,120 个字符）。</p><p>与语言检测一样，使用 REST 接口可以提交一个或多个文档进行分析。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;kind&quot;: &quot;KeyPhraseExtraction&quot;,</span><br><span class="line">    &quot;parameters&quot;: &#123;</span><br><span class="line">        &quot;modelVersion&quot;: &quot;latest&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;analysisInput&quot;:&#123;</span><br><span class="line">        &quot;documents&quot;:[</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">              &quot;language&quot;: &quot;en&quot;,</span><br><span class="line">              &quot;text&quot;: &quot;You must be the change you wish </span><br><span class="line">                       to see in the world.&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;id&quot;: &quot;2&quot;,</span><br><span class="line">              &quot;language&quot;: &quot;en&quot;,</span><br><span class="line">              &quot;text&quot;: &quot;The journey of a thousand miles </span><br><span class="line">                       begins with a single step.&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应包含在每个文档中检测到的关键短语的列表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;kind&quot;: &quot;KeyPhraseExtractionResults&quot;,</span><br><span class="line">    &quot;results&quot;: &#123;</span><br><span class="line">    &quot;documents&quot;: [   </span><br><span class="line">        &#123;</span><br><span class="line">         &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">         &quot;keyPhrases&quot;: [</span><br><span class="line">           &quot;change&quot;,</span><br><span class="line">           &quot;world&quot;</span><br><span class="line">         ],</span><br><span class="line">         &quot;warnings&quot;: []</span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">         &quot;id&quot;: &quot;2&quot;,</span><br><span class="line">         &quot;keyPhrases&quot;: [</span><br><span class="line">           &quot;miles&quot;,</span><br><span class="line">           &quot;single step&quot;,</span><br><span class="line">           &quot;journey&quot;</span><br><span class="line">         ],</span><br><span class="line">         &quot;warnings&quot;: []</span><br><span class="line">       &#125;</span><br><span class="line">],</span><br><span class="line">    &quot;errors&quot;: [],</span><br><span class="line">    &quot;modelVersion&quot;: &quot;2021-06-01&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分析情绪"><a href="#分析情绪" class="headerlink" title="分析情绪"></a>分析情绪</h2><p>情绪分析用于评估文本文档的正负面情绪程度，这在各种工作负载中非常有用，例如：</p><ul><li>通过基于评论量化情绪来评估电影、书籍或产品。</li><li>确定客户服务对通过电子邮件或社交媒体消息传送收到的函件的响应的优先级。</li></ul><p>使用 Azure AI 语言评估情绪时，响应包括向服务提交的每个文档的总体文档情绪和单个句子情绪。</p><p>例如，可以提交单个文档进行情绪分析，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;kind&quot;: &quot;SentimentAnalysis&quot;,</span><br><span class="line">  &quot;parameters&quot;: &#123;</span><br><span class="line">    &quot;modelVersion&quot;: &quot;latest&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;analysisInput&quot;: &#123;</span><br><span class="line">    &quot;documents&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;language&quot;: &quot;en&quot;,</span><br><span class="line">        &quot;text&quot;: &quot;Good morning!&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>来自服务的响应可能如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;kind&quot;: &quot;SentimentAnalysisResults&quot;,</span><br><span class="line">  &quot;results&quot;: &#123;</span><br><span class="line">    &quot;documents&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;sentiment&quot;: &quot;positive&quot;,</span><br><span class="line">        &quot;confidenceScores&quot;: &#123;</span><br><span class="line">          &quot;positive&quot;: 0.89,</span><br><span class="line">          &quot;neutral&quot;: 0.1,</span><br><span class="line">          &quot;negative&quot;: 0.01</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;sentences&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;sentiment&quot;: &quot;positive&quot;,</span><br><span class="line">            &quot;confidenceScores&quot;: &#123;</span><br><span class="line">              &quot;positive&quot;: 0.89,</span><br><span class="line">              &quot;neutral&quot;: 0.1,</span><br><span class="line">              &quot;negative&quot;: 0.01</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;offset&quot;: 0,</span><br><span class="line">            &quot;length&quot;: 13,</span><br><span class="line">            &quot;text&quot;: &quot;Good morning!&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;warnings&quot;: []</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;errors&quot;: [],</span><br><span class="line">    &quot;modelVersion&quot;: &quot;2022-11-01&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>句子情绪基于 0 到 1 之间的正面、负面和中性分类值的置信度分数。</p><p>总体文档情绪基于句子：</p><ul><li>如果所有句子都为中性，则总体情绪为中性。</li><li>如果句子分类仅包括正面和中性，则总体情绪为正面。</li><li>如果句子分类仅包括负面和中性，则总体情绪为负面。</li><li>如果句子分类包括正面和负面，则总体情绪是混合的。</li></ul><h2 id="提取实体"><a href="#提取实体" class="headerlink" title="提取实体"></a>提取实体</h2><p>命名实体识别标识文本中提及的实体。 实体按类别和子类别分组，例如：</p><ul><li>人员</li><li>位置</li><li>DateTime</li><li>组织</li><li>地址</li><li>电子邮件</li><li>URL</li></ul><p>实体识别的输入类似于其他语言 Azure AI 语言 API 函数的输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;kind&quot;: &quot;EntityRecognition&quot;,</span><br><span class="line">  &quot;parameters&quot;: &#123;</span><br><span class="line">    &quot;modelVersion&quot;: &quot;latest&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;analysisInput&quot;: &#123;</span><br><span class="line">    &quot;documents&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;language&quot;: &quot;en&quot;,</span><br><span class="line">        &quot;text&quot;: &quot;Joe went to London on Saturday&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应包括在每个文档中找到的分类实体的列表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;kind&quot;: &quot;EntityRecognitionResults&quot;,</span><br><span class="line">     &quot;results&quot;: &#123;</span><br><span class="line">          &quot;documents&quot;:[</span><br><span class="line">              &#123;</span><br><span class="line">                  &quot;entities&quot;:[</span><br><span class="line">                  &#123;</span><br><span class="line">                    &quot;text&quot;:&quot;Joe&quot;,</span><br><span class="line">                    &quot;category&quot;:&quot;Person&quot;,</span><br><span class="line">                    &quot;offset&quot;:0,</span><br><span class="line">                    &quot;length&quot;:3,</span><br><span class="line">                    &quot;confidenceScore&quot;:0.62</span><br><span class="line">                  &#125;,</span><br><span class="line">                  &#123;</span><br><span class="line">                    &quot;text&quot;:&quot;London&quot;,</span><br><span class="line">                    &quot;category&quot;:&quot;Location&quot;,</span><br><span class="line">                    &quot;subcategory&quot;:&quot;GPE&quot;,</span><br><span class="line">                    &quot;offset&quot;:12,</span><br><span class="line">                    &quot;length&quot;:6,</span><br><span class="line">                    &quot;confidenceScore&quot;:0.88</span><br><span class="line">                  &#125;,</span><br><span class="line">                  &#123;</span><br><span class="line">                    &quot;text&quot;:&quot;Saturday&quot;,</span><br><span class="line">                    &quot;category&quot;:&quot;DateTime&quot;,</span><br><span class="line">                    &quot;subcategory&quot;:&quot;Date&quot;,</span><br><span class="line">                    &quot;offset&quot;:22,</span><br><span class="line">                    &quot;length&quot;:8,</span><br><span class="line">                    &quot;confidenceScore&quot;:0.8</span><br><span class="line">                  &#125;</span><br><span class="line">                ],</span><br><span class="line">                &quot;id&quot;:&quot;1&quot;,</span><br><span class="line">                &quot;warnings&quot;:[]</span><br><span class="line">              &#125;</span><br><span class="line">          ],</span><br><span class="line">          &quot;errors&quot;:[],</span><br><span class="line">          &quot;modelVersion&quot;:&quot;2021-01-15&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若要了解有关实体的详细信息，请参阅<a class="link"   href="https://learn.microsoft.com/zh-cn/training/modules/build-language-understanding-model/" >生成对话语言理解模型<i class="fas fa-external-link-alt"></i></a>模块。</p><h2 id="提取链接的实体"><a href="#提取链接的实体" class="headerlink" title="提取链接的实体"></a>提取链接的实体</h2><p>在某些情况下，相同的名称可能适用于多个实体。 例如，“Venus”一词的实例是指行星还是神话中的女神？</p><p>实体链接可用于通过引用知识库中的文章来区分同名的实体。 维基百科为文本分析服务提供了知识库。 根据文本中的实体上下文确定特定文章链接。</p><p>例如，“I saw Venus shining in the sky”与链接 <a class="link"   href="https://en.wikipedia.org/wiki/Venus" >https://en.wikipedia.org/wiki/Venus<i class="fas fa-external-link-alt"></i></a> 相关联，而“Venus, the goddess of beauty”与 <a class="link"   href="https://en.wikipedia.org/wiki/Venus_(mythology)" >https://en.wikipedia.org/wiki/Venus_(mythology)<i class="fas fa-external-link-alt"></i></a> 相关联。</p><p>与所有 Azure AI 语言服务函数一样，你可以提交一个或多个文档进行分析：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;kind&quot;: &quot;EntityLinking&quot;,</span><br><span class="line">  &quot;parameters&quot;: &#123;</span><br><span class="line">    &quot;modelVersion&quot;: &quot;latest&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;analysisInput&quot;: &#123;</span><br><span class="line">    &quot;documents&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;language&quot;: &quot;en&quot;,</span><br><span class="line">        &quot;text&quot;: &quot;I saw Venus shining in the sky&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>响应包括文本中标识的实体以及指向相关文章的链接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;kind&quot;: &quot;EntityLinkingResults&quot;,</span><br><span class="line">  &quot;results&quot;: &#123;</span><br><span class="line">    &quot;documents&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">        &quot;entities&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;bingId&quot;: &quot;89253af3-5b63-e620-9227-f839138139f6&quot;,</span><br><span class="line">            &quot;name&quot;: &quot;Venus&quot;,</span><br><span class="line">            &quot;matches&quot;: [</span><br><span class="line">              &#123;</span><br><span class="line">                &quot;text&quot;: &quot;Venus&quot;,</span><br><span class="line">                &quot;offset&quot;: 6,</span><br><span class="line">                &quot;length&quot;: 5,</span><br><span class="line">                &quot;confidenceScore&quot;: 0.01</span><br><span class="line">              &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;language&quot;: &quot;en&quot;,</span><br><span class="line">            &quot;id&quot;: &quot;Venus&quot;,</span><br><span class="line">            &quot;url&quot;: &quot;https://en.wikipedia.org/wiki/Venus&quot;,</span><br><span class="line">            &quot;dataSource&quot;: &quot;Wikipedia&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;warnings&quot;: []</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;errors&quot;: [],</span><br><span class="line">    &quot;modelVersion&quot;: &quot;2021-06-01&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>情绪分析有助于确定文本是负面的还是正面的<br>链接的实体可用于区分同名的常见实体</p><h1 id="使用-Azure-AI-语言创建问题解答解决方案"><a href="#使用-Azure-AI-语言创建问题解答解决方案" class="headerlink" title="使用 Azure AI 语言创建问题解答解决方案"></a>使用 Azure AI 语言创建问题解答解决方案</h1><p>智能”应用程序的常见模式是使用户能够使用自然语言提问并收到相应的答案。 实际上，此类解决方案将对话智能引入传统的常见问题解答 (FAQ) 发布。 本模块介绍如何使用 Azure AI 语言创建可支持应用程序或机器人的问答对知识库。</p><p>了解问题解答及其与语言理解的比较。<br>创建、测试、发布和使用知识库。<br>实现多回合对话和主动学习。<br>创建使用自然语言进行交互的问题解答机器人。</p><h2 id="了解问题解答"><a href="#了解问题解答" class="headerlink" title="了解问题解答"></a>了解问题解答</h2><p>已完成</p><p>借助包括<em>问题解答</em>功能的 <strong>Azure AI 语言</strong>，可以定义可使用自然语言输入查询的问答对<em>知识库</em>。 知识库可以发布到 REST 终结点，并供客户端应用程序（通常是机器人）使用。</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/create-question-answer-solution-ai-language/media/diagram.png"  alt="A diagram showing how a conversational app uses a knowledge base of questions and answers."></p><p>可以从现有源创建知识库，其中包括：</p><ul><li>包含常见问题解答 (FAQ) 文档的网站。</li><li>包含结构化文本的文件，如手册或用户指南。</li><li>内置的闲聊问题和用于封装常见对话交流的答案对。</li></ul><p>注意</p><p>Azure AI 语言的问题解答功能是 <strong>QnA 服务</strong>的较新版本，该服务仍作为独立的服务存在。 若要了解如何将 QnA Maker 知识库迁移到 Azure AI 语言，请参阅<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/language-service/question-answering/how-to/migrate-qnamaker" >迁移指南<i class="fas fa-external-link-alt"></i></a>。</p><h2 id="比较问题解答和-Azure-AI-语言理解"><a href="#比较问题解答和-Azure-AI-语言理解" class="headerlink" title="比较问题解答和 Azure AI 语言理解"></a>比较问题解答和 Azure AI 语言理解</h2><p>已完成</p><p>问题解答知识库是语言模型的一种形式，它会提出有关何时使用问题解答的问题，以及何时使用 Azure AI 语言的<em>对话语言理解</em>功能。</p><p>这两项功能的相似之处在于，它们都允许定义可以使用自然语言表达式查询的语言模型。 但是，它们旨在解决的用例存在一些差异，如下表所示：</p><table><thead><tr><th></th><th>问答</th><th>语言理解</th></tr></thead><tbody><tr><td><strong>使用模式</strong></td><td>用户提交问题，需要答案</td><td>用户提交言语，需要适当的响应或操作</td></tr><tr><td><strong>查询处理</strong></td><td>服务使用自然语言理解将问题与知识库中的答案进行匹配</td><td>服务使用自然语言理解来解释言语、将其与意向匹配，以及识别实体</td></tr><tr><td><strong>响应</strong></td><td>响应是已知问题的静态答案</td><td>响应指示最有可能的意向和引用实体</td></tr><tr><td><strong>客户端逻辑</strong></td><td>客户端应用程序通常向用户提供答案</td><td>客户端应用程序负责根据检测到的意向执行适当的操作</td></tr></tbody></table><p>实际上，这两个服务是互补的。 可以构建综合的自然语言解决方案，将语言理解模型与问题解答知识库结合起来。</p><h2 id="创建知识库"><a href="#创建知识库" class="headerlink" title="创建知识库"></a>创建知识库</h2><p>若要创建问题解答解决方案，可以使用 REST API 或 SDK 编写用于定义、训练和发布知识库的代码。 不过，更常见的是使用 <a class="link"   href="https://language.azure.com/" >Language Studio<i class="fas fa-external-link-alt"></i></a> Web 界面来定义和管理知识库。</p><p>若要创建知识库，请执行以下步骤：</p><ol><li><p>登录到 Azure 门户。</p></li><li><p>使用门户顶部的搜索字段搜索“Azure AI 服务”。</p></li><li><p>选择“语言服务”资源下的“创建”。</p></li><li><p>在 Azure 订阅中创建资源：</p><ul><li>启用问题解答功能。</li><li>创建或选择“Azure AI 搜索”资源来托管知识库索引。</li></ul></li><li><p>在 Language Studio 中，选择“Azure AI 语言”资源并创建“自定义问题解答”项目。</p></li><li><p>添加一个或多个数据源以填充知识库：</p><ul><li>包含 FAQ 的 Web 页面的 URL。</li><li>包含可以从中派生出问题和解答的结构化文本的文件。</li><li>预定义的闲聊数据集，其中包括指定样式的常见对话问题和响应。</li></ul></li><li><p>在门户中编辑问答对。</p></li></ol><h2 id="实现多回合对话"><a href="#实现多回合对话" class="headerlink" title="实现多回合对话"></a>实现多回合对话</h2><p>已完成</p><p>尽管通常可以创建由单个问答对组成的有效知识库，但有时可能需要在提供明确答案之前询问后续问题，以便从用户那里获取更多信息。 这种交互称为多回合对话。</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/create-question-answer-solution-ai-language/media/multi-turn-conversation.png"  alt="A diagram showing a multi-turn conversation."></p><p>根据现有网页或文档的结构从现有网页或文档中导入问答时，可以启用多回合响应，或者可以为现有问答对显式定义跟进提示和响应。</p><p>例如，假设旅行预订知识库的初始问题是“如何取消预订？”。 预订可能指酒店或航班，因此需要跟进提示来阐明此详细信息。 答案可能包含“取消策略取决于预订类型”之类的文本，并包含跟进提示，以及有关取消航班和取消酒店的答案链接。</p><p>定义多回合对话的跟进提示时，可以链接到知识库中的现有答案，或专门为跟进定义新答案。 还可以限制链接答案，以便它仅显示在由原始问题发起的多回合对话的上下文中。</p><h2 id="测试并发布知识库"><a href="#测试并发布知识库" class="headerlink" title="测试并发布知识库"></a>测试并发布知识库</h2><p>​<br>​<br>定义知识库后，可以训练其自然语言模型并测试该模型，然后发布，以便在应用程序或机器人中使用。<br>​</p><h2 id="测试知识库"><a href="#测试知识库" class="headerlink" title="测试知识库"></a>测试知识库</h2><p>​<br>你可以在语言工作室中，通过提交问题并查看返回的答案来交互测试知识库。 可以检查结果以查看其置信度分数以及其他可能的答案。<br>​<br><a href="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/create-question-answer-solution-ai-language/media/test-new.png#lightbox"><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/create-question-answer-solution-ai-language/media/test-new-small.png"  alt="Screenshot of the test pane of the custom question answering project in the Language studio."></a><br>​</p><h2 id="部署知识库"><a href="#部署知识库" class="headerlink" title="部署知识库"></a>部署知识库</h2><p>​<br>如果对知识库的性能满意，可以将其部署到 REST 终结点，客户端应用程序可以使用该函数来提交问题和接收答案。 可以直接从 Language Studio 部署它。<br>​</p><h2 id="使用知识库"><a href="#使用知识库" class="headerlink" title="使用知识库"></a>使用知识库</h2><p>若要使用已发布的知识库，可以使用 REST 接口。</p><p>函数的最小请求正文包含一个问题，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;question&quot;: &quot;What do I need to do to cancel a reservation?&quot;,</span><br><span class="line">  &quot;top&quot;: 2,</span><br><span class="line">  &quot;scoreThreshold&quot;: 20,</span><br><span class="line">  &quot;strictFilters&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;name&quot;: &quot;category&quot;,</span><br><span class="line">      &quot;value&quot;: &quot;api&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>properties</th><th>说明</th></tr></thead><tbody><tr><td>问题</td><td>要发送到知识库的问题。</td></tr><tr><td>top</td><td>要返回的最大答案数。</td></tr><tr><td>scoreThreshold</td><td>返回的答案的分数阈值。</td></tr><tr><td>strictFilters</td><td>限制为仅包含指定元数据的答案。</td></tr></tbody></table><p>响应包括知识库中最接近的问题匹配，以及关联的答案、置信度分数和有关问答对的其他元数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;answers&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;score&quot;: 27.74823341616769,</span><br><span class="line">      &quot;id&quot;: 20,</span><br><span class="line">      &quot;answer&quot;: &quot;Call us on 555 123 4567 to cancel a reservation.&quot;,</span><br><span class="line">      &quot;questions&quot;: [</span><br><span class="line">        &quot;How can I cancel a reservation?&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;metadata&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;name&quot;: &quot;category&quot;,</span><br><span class="line">          &quot;value&quot;: &quot;api&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="提高问题解答性能"><a href="#提高问题解答性能" class="headerlink" title="提高问题解答性能"></a>提高问题解答性能</h2><p>创建和测试知识库后，可以通过“主动学习”和定义“同义词”来改善其性能。</p><h2 id="使用主动学习"><a href="#使用主动学习" class="headerlink" title="使用主动学习"></a>使用主动学习</h2><p>主动学习可帮助你进行持续改进，以便随着时间的推移更好地正确回答用户问题。 人们经常会问一些措辞不同但最终含义相同的问题。 在此类情况下，主动学习会有所帮助，因为它可以让你考虑每个问答对的备选问题。 默认情况下，主动学习处于启用状态。</p><p>若要使用主动学习，可以执行以下操作：</p><h3 id="创建问答对"><a href="#创建问答对" class="headerlink" title="创建问答对"></a>创建问答对</h3><p>在 Language Studio 中为项目创建问题和答案对。 还可以导入包含要批量上传的问答对的文件。</p><p><a href="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/create-question-answer-solution-ai-language/media/import-file.png#lightbox"><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/create-question-answer-solution-ai-language/media/import-file-small.png"  alt="A screenshot showing how to import a file with question and answer pairs."></a></p><h3 id="审阅建议"><a href="#审阅建议" class="headerlink" title="审阅建议"></a>审阅建议</h3><p>然后，主动学习开始为问答对中的每个问题提供备选问题。 可从“查看建议”窗格访问此内容：</p><p><a href="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/create-question-answer-solution-ai-language/media/review-suggestions.png#lightbox"><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/create-question-answer-solution-ai-language/media/review-suggestions-small.png"  alt="A screenshot of the Review suggestions pane."></a></p><p>查看，然后通过选择备选短语旁边的复选标记或删除符号来接受或拒绝针对每个问题建议的这些备选短语。 可以使用顶部的“<strong>接受所有建议</strong>”或“<strong>拒绝所有建议</strong>”选项批量接受或拒绝建议。</p><p>在“编辑知识库”窗格中为对选择“<strong>添加备选问题</strong>”时，还可以手动添加备选问题：</p><p><a href="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/create-question-answer-solution-ai-language/media/add-alternate-questions-manual.png#lightbox"><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/create-question-answer-solution-ai-language/media/add-alternate-questions-manual-small.png"  alt="A screenshot showing the Add alternate question option on the Edit knowledge base pane."></a></p><h2 id="定义同义词"><a href="#定义同义词" class="headerlink" title="定义同义词"></a>定义同义词</h2><p>当用户提交的问题可能包含多个不同的字词来表示相同内容时，同义词很有用。 例如，一家旅游代理商的客户可能会提到“预留”或“预订”。 通过将这些关键词定义为同义词，无论个人客户使用哪一术语，问题解答服务都可以找到相应的答案。</p><p>若要定义同义词，请使用 REST API 按以下 JSON 格式提交同义词：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;synonyms&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;alterations&quot;: [</span><br><span class="line">                &quot;reservation&quot;,</span><br><span class="line">                &quot;booking&quot;</span><br><span class="line">                ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以从现有文档或网页创建知识库。<br>若要向问题添加多回合上下文，请定义跟进提示。<br>你可以为已发布的知识库创建机器人，并配置电子邮件通信通道。</p><h1 id="生成对话语言理解模型"><a href="#生成对话语言理解模型" class="headerlink" title="生成对话语言理解模型"></a>生成对话语言理解模型</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>自然语言处理 (NLP) 是一个常见的 AI 问题，即软件必须能够以人类用户书写或说话所用的自然语言形式处理文本或语音。 在更广泛的 NLP 领域中，自然语言理解 (NLU) 处理从自然语言确定语义含义的问题，通常使用训练的语言模型来确定。</p><p>自然语言理解解决方案的常见设计模式如下所示：</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/build-language-understanding-model/media/language-understanding-app.png"  alt="Diagram showing an app accepts natural language input, and uses a model to determine semantic meaning before taking the appropriate action."></p><p>在此设计模式中：</p><ol><li>应用接受来自用户的自然语言输入。</li><li>语言模型用于确定语义含义（用户的意向）。</li><li>应用执行相应操作。</li></ol><p>Azure AI 语言使开发人员能够基于可使用数量相对较少的示例训练的语言模型来生成应用，从而识别用户的预期含义。</p><p>本模块介绍如何相关服务来创建使用 Azure AI 语言的自然语言理解应用。</p><p>完成此模块后，你将能够：</p><ul><li>预配 Azure AI 语言资源。</li><li>定义意向、实体和语句。</li><li>使用模式区分相似的言语。</li><li>使用预生成的实体组件。</li><li>训练、测试、发布和查看模型。</li></ul><h2 id="了解-Azure-AI-语言服务的预生成功能"><a href="#了解-Azure-AI-语言服务的预生成功能" class="headerlink" title="了解 Azure AI 语言服务的预生成功能"></a>了解 Azure AI 语言服务的预生成功能</h2><p>Azure AI 语言服务提供各种功能来理解人类语言。 可以使用每项特征更好地与用户通信，更好地了解传入通信，或者使用多项特征以便更深入地了解用户所表达内容、意向和询问内容。</p><p>Azure AI 语言服务功能分为两类：预配置的功能和习得的功能。 学习到的特征需要生成和训练一个模型来正确预测适当的标签，本模块即将推出的单元将对此进行介绍。</p><p>本单元会介绍 Azure AI 语言服务的大部分功能，但请参考 <a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/language-service/overview?azure-portal=true" >Azure AI 语言服务文档<i class="fas fa-external-link-alt"></i></a>获取完整列表，其中包括快速入门和所有可用内容的完整说明。</p><p>在应用中使用这些特征需要将查询发送到相应的终结点。 用于查询特定特征的终结点各不相同，但所有这些终结点都带有在 Azure 帐户中创建的 Azure AI 语言资源前缀，无论是生成 REST 请求，还是使用 SDK 定义客户端。 可以在下一个单元中找到每个示例。</p><h2 id="预配置的功能"><a href="#预配置的功能" class="headerlink" title="预配置的功能"></a>预配置的功能</h2><p>Azure AI 语言服务提供的部分功能不需要任何模型标记和训练。 创建资源后，可以发送数据并在应用中使用返回的结果。</p><p>以下功能都是预配置的。</p><h3 id="汇总"><a href="#汇总" class="headerlink" title="汇总"></a>汇总</h3><p>摘要可用于文档和对话，可将文本汇总到关键句中，系统通过对关键句进行预测来概括输入的含义。</p><h3 id="命名实体识别"><a href="#命名实体识别" class="headerlink" title="命名实体识别"></a>命名实体识别</h3><p>命名实体识别可以提取和标识实体（如人员、地点或公司），使应用能够识别不同类型的实体，从而改进自然语言响应。 例如能从“The waterfront pier is my favorite Seattle attraction”中识别出“Seattle”，并将其分类为地点。</p><h3 id="个人身份信息-PII-检测"><a href="#个人身份信息-PII-检测" class="headerlink" title="个人身份信息 (PII) 检测"></a>个人身份信息 (PII) 检测</h3><p>使用 PII 检测，可以识别、分类和编辑可能被视为敏感信息的信息，例如电子邮件地址、家庭地址、IP 地址、姓名和受保护的运行状况信息。 例如，如果查询中包含文本“<a class="link"   href="mailto:&#101;&#109;&#x61;&#105;&#108;&#64;&#x63;&#x6f;&#x6e;&#116;&#x6f;&#x73;&#111;&#x2e;&#99;&#x6f;&#x6d;" >&#101;&#109;&#x61;&#105;&#108;&#64;&#x63;&#x6f;&#x6e;&#116;&#x6f;&#x73;&#111;&#x2e;&#99;&#x6f;&#x6d;<i class="fas fa-external-link-alt"></i></a>”，则可以识别和修改整个电子邮件地址。</p><h3 id="关键短语提取"><a href="#关键短语提取" class="headerlink" title="关键短语提取"></a>关键短语提取</h3><p>关键短语提取是可快速从提供的文本中提取主要概念的功能。 例如，该服务能从“Text Analytics is one of the features in Azure AI Services.”中识别出“<em>Azure AI Services</em>”和“<em>Text Analytics</em>”。</p><h3 id="情绪分析"><a href="#情绪分析" class="headerlink" title="情绪分析"></a>情绪分析</h3><p>情绪分析标识字符串或文档是正面还是负面的。 例如该服务能从“Great hotel. Close to plenty of food and attractions we could walk to”中识别出正面的结果，且具有相对较高的置信度分数。</p><h3 id="语言检测"><a href="#语言检测" class="headerlink" title="语言检测"></a>语言检测</h3><p>语言检测采用一个或多个文档，并识别每个文档的语言。 例如该服务能从其中一份“Bonjour”文档识别出法语的结果。</p><h2 id="学习的功能"><a href="#学习的功能" class="headerlink" title="学习的功能"></a>学习的功能</h2><p>学习的功能要求你标记数据、训练和部署模型，使其可在应用程序中使用。 这些功能允许自定义预测或提取的信息。</p><p>注意</p><p>数据质量极大地影响模型的准确性。 请留意使用的数据、数据的标记情况以及训练数据的多样化程度。 有关详细信息，请参阅<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/language-service/conversational-language-understanding/how-to/tag-utterances" >有关标记数据的建议<i class="fas fa-external-link-alt"></i></a>，其中包括针对标记数据的宝贵指南。 另请参阅<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/language-service/custom-text-classification/concepts/evaluation-metrics" >评估指标<i class="fas fa-external-link-alt"></i></a>，可帮助你了解模型需要改进的地方。</p><h3 id="对话语言理解-CLU"><a href="#对话语言理解-CLU" class="headerlink" title="对话语言理解 (CLU)"></a>对话语言理解 (CLU)</h3><p>CLU 是 Azure AI 语言提供的核心自定义功能之一。 CLU 可帮助用户生成自定义自然语言理解模型来预测整体意向，并从传入言语中提取重要信息。 CLU 要求用户标记数据，以让其学习如何准确预测意向和实体。</p><p>本模块中的练习将生成 CLU 模型并在应用中使用它。</p><h3 id="自定义命名实体识别"><a href="#自定义命名实体识别" class="headerlink" title="自定义命名实体识别"></a>自定义命名实体识别</h3><p>自定义实体识别采用自定义标记数据，并从非结构化文本中提取指定的实体。 例如，如果有需要从中提取当事人的各种合同文档，可以通过训练模型让模型知道如何进行预测。</p><h3 id="自定义文本分类"><a href="#自定义文本分类" class="headerlink" title="自定义文本分类"></a>自定义文本分类</h3><p>使用自定义文本分类，用户可以将文本或文档分类为自定义组。 例如，可以训练模型来查看新闻文章，并确定这些信息的所述类别，例如“新闻”或“娱乐”。</p><h3 id="问答"><a href="#问答" class="headerlink" title="问答"></a>问答</h3><p>问题解答是一项在大多数情况下会预配的功能，可解答作为输入提供的问题。 回答这些问题的数据来自常见问题解答或手册等文档。</p><p>例如，假设你想要在公司网站上创建虚拟聊天助手来回答常见问题。 可以使用公司常见问题解答作为输入文档来创建问题和答案对。 部署后，聊天助手可以将输入问题传递给服务，并以结果形式获取解答。</p><p>若要查看功能的完整列表以及使用方法，请参阅 Azure AI 语言<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/language-service/overview?azure-portal=true" >文档<i class="fas fa-external-link-alt"></i></a>。</p><h2 id="了解用于生成对话语言理解模型的资源"><a href="#了解用于生成对话语言理解模型的资源" class="headerlink" title="了解用于生成对话语言理解模型的资源"></a>了解用于生成对话语言理解模型的资源</h2><ul><li>9 分钟</li></ul><p>若要使用语言理解服务开发 NLP 解决方案，需要在 Azure 中创建语言资源。 该资源将用于创作模型和处理来自客户端应用程序的预测请求。</p><p>提示</p><p>本模块的实验室介绍如何构建用于对话语言理解的模型。 有关自定义文本分类和自定义命名实体识别的更多重点模块，请参阅<a class="link"   href="https://learn.microsoft.com/zh-cn/training/paths/develop-language-solutions-azure-ai?azure-portal=true" >开发自然语言解决方案<i class="fas fa-external-link-alt"></i></a>学习路径中的自定义解决方案模块。</p><h2 id="构建你的模型"><a href="#构建你的模型" class="headerlink" title="构建你的模型"></a>构建你的模型</h2><p>对于需要模型进行预测的功能，需要先生成、训练并部署模型，才能将其用于预测。 通过生成和训练让 Azure AI 语言服务学习要查找的内容。</p><p>首先，需要在 <a class="link"   href="https://portal.azure.com/?azure-portal=true" >Azure 门户<i class="fas fa-external-link-alt"></i></a>中创建 Azure AI 语言资源。 然后：</p><ol><li>搜索 <strong>Azure AI 服务</strong>。</li><li>查找并选择“<strong>语言服务</strong>”。</li><li>选择“<strong>语言服务</strong>”下的“<strong>创建</strong>”。</li><li>填写必要的详细信息，选择在地理位置上最靠近的区域（以获得最佳性能），并为其提供唯一的名称。</li></ol><p>创建该资源后，需要密钥和终结点。 可以在资源概述页的“密钥和终结点”下的左侧找到该信息。</p><h3 id="使用语言工作室"><a href="#使用语言工作室" class="headerlink" title="使用语言工作室"></a>使用语言工作室</h3><p>若要更直观地生成、训练和部署模型，可以使用 <a class="link"   href="https://aka.ms/languageStudio" >Language Studio<i class="fas fa-external-link-alt"></i></a> 来实现上述每个步骤。 在主页上，可以选择创建<strong>对话语言理解</strong>项目。 创建项目后，请完成与上述内容相同的过程来生成、训练和部署模型。</p><p><a href="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/build-language-understanding-model/media/language-studio-conversational.png#lightbox"><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/build-language-understanding-model/media/language-studio-conversational-small.png"  alt="Screenshot of the Language Studio home page."></a></p><p>本模块中的实验室将逐步讲解如何使用 Language Studio 生成模型。 若要了解详细信息，请参阅 <a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/language-service/language-studio?azure-portal=true" >Language Studio 快速入门<i class="fas fa-external-link-alt"></i></a></p><h3 id="使用-REST-API"><a href="#使用-REST-API" class="headerlink" title="使用 REST API"></a>使用 REST API</h3><p>生成模型的一种方法是通过 REST API 生成。 该模式是创建项目、导入数据、训练、部署，然后使用模型。</p><p>这些任务以异步方式完成；需要向每个步骤的相应 URI 提交请求，然后发送另一个请求以获取该作业的状态。</p><p>例如，如果要为对话语言理解项目部署模型，则需要提交部署作业，然后检查部署作业状态。</p><h4 id="身份验证"><a href="#身份验证" class="headerlink" title="身份验证"></a>身份验证</h4><p>对于对 Azure AI 语言资源的每个调用，可以通过提供以下标头对请求进行身份验证。</p><table><thead><tr><th>密钥</th><th>值</th></tr></thead><tbody><tr><td><code>Ocp-Apim-Subscription-Key</code></td><td>资源密钥</td></tr></tbody></table><h4 id="请求部署"><a href="#请求部署" class="headerlink" title="请求部署"></a>请求部署</h4><p>将 POST 请求提交到以下终结点。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;ENDPOINT&#125;/language/authoring/analyze-conversations/projects/&#123;PROJECT-NAME&#125;/deployments/&#123;DEPLOYMENT-NAME&#125;?api-version=&#123;API-VERSION&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>占位符</th><th>值</th><th>示例</th></tr></thead><tbody><tr><td><code>&#123;ENDPOINT&#125;</code></td><td>Azure AI 语言资源的终结点</td><td><code>https://&lt;your-subdomain&gt;.cognitiveservices.azure.com</code></td></tr><tr><td><code>&#123;PROJECT-NAME&#125;</code></td><td>项目名称。 此值区分大小写</td><td><code>myProject</code></td></tr><tr><td><code>&#123;DEPLOYMENT-NAME&#125;</code></td><td>部署名称。 此值区分大小写</td><td><code>staging</code></td></tr><tr><td><code>&#123;API-VERSION&#125;</code></td><td>要调用的 API 版本</td><td><code>2022-05-01</code></td></tr></tbody></table><p>请在请求中包括以下 <code>body</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;trainedModelLabel&quot;: &quot;&#123;MODEL-NAME&#125;&quot;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>占位符</th><th>值</th></tr></thead><tbody><tr><td><code>&#123;MODEL-NAME&#125;</code></td><td>将要分配给部署的模型名称。 此值区分大小写。</td></tr></tbody></table><p>若成功提交请求，将收到 <code>202</code> 响应，并带有响应标头 <code>operation-location</code>。 此标头将具有一个 URL，用于请求状态，格式如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;ENDPOINT&#125;/language/authoring/analyze-conversations/projects/&#123;PROJECT-NAME&#125;/deployments/&#123;DEPLOYMENT-NAME&#125;/jobs/&#123;JOB-ID&#125;?api-version=&#123;API-VERSION&#125;</span><br></pre></td></tr></table></figure><h4 id="获取部署状态"><a href="#获取部署状态" class="headerlink" title="获取部署状态"></a>获取部署状态</h4><p>将 GET 请求提交到上述响应标头中的 URL。 这些值已根据初始部署请求填写。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;ENDPOINT&#125;/language/authoring/analyze-conversations/projects/&#123;PROJECT-NAME&#125;/deployments/&#123;DEPLOYMENT-NAME&#125;/jobs/&#123;JOB-ID&#125;?api-version=&#123;API-VERSION&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>占位符</th><th>值</th></tr></thead><tbody><tr><td><code>&#123;ENDPOINT&#125;</code></td><td>用于对 API 请求进行身份验证的终结点</td></tr><tr><td><code>&#123;PROJECT-NAME&#125;</code></td><td>项目名称（值区分大小写）</td></tr><tr><td><code>&#123;DEPLOYMENT-NAME&#125;</code></td><td>部署名称（值区分大小写）</td></tr><tr><td><code>&#123;JOB-ID&#125;</code></td><td>用于查找模型训练状态的 ID，可在上文部署请求中详述的标头值中找到</td></tr><tr><td><code>&#123;API-VERSION&#125;</code></td><td>要调用的 API 版本</td></tr></tbody></table><p>响应正文将提供部署状态详细信息。 当部署完成时，<code>status</code> 字段的值会为“已成功”。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;jobId&quot;:&quot;&#123;JOB-ID&#125;&quot;,</span><br><span class="line">    &quot;createdDateTime&quot;:&quot;String&quot;,</span><br><span class="line">    &quot;lastUpdatedDateTime&quot;:&quot;String&quot;,</span><br><span class="line">    &quot;expirationDateTime&quot;:&quot;String&quot;,</span><br><span class="line">    &quot;status&quot;:&quot;running&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若要查看示例请求的每个步骤的完整演练，请参阅<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/language-service/conversational-language-understanding/quickstart?pivots=rest-api&azure-portal=true#create-a-clu-project" >对话理解快速入门<i class="fas fa-external-link-alt"></i></a>。</p><h2 id="查询你的模型"><a href="#查询你的模型" class="headerlink" title="查询你的模型"></a>查询你的模型</h2><p>若要查询模型以进行预测，可以使用 C# 或 Python 中的 SDK，也可以使用 REST AP。</p><h3 id="使用-SDK-进行查询"><a href="#使用-SDK-进行查询" class="headerlink" title="使用 SDK 进行查询"></a>使用 SDK 进行查询</h3><p>若要使用 SDK 查询你的模型，你首先需要创建客户端。 具有客户端后，即可使用它来调用相应的终结点。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var languageClient = new TextAnalyticsClient(endpoint, credentials);</span><br><span class="line">var response = languageClient.ExtractKeyPhrases(document);</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">language_client = TextAnalyticsClient(</span><br><span class="line">            endpoint=endpoint, </span><br><span class="line">            credential=credentials)</span><br><span class="line">response = language_client.extract_key_phrases(documents = documents)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>其他语言功能（例如对话语言理解）要求以不同的方式构建和发送请求。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">var data = new</span><br><span class="line">&#123;</span><br><span class="line">    analysisInput = new</span><br><span class="line">    &#123;</span><br><span class="line">        conversationItem = new</span><br><span class="line">        &#123;</span><br><span class="line">            text = userText,</span><br><span class="line">            id = &quot;1&quot;,</span><br><span class="line">            participantId = &quot;1&quot;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    parameters = new</span><br><span class="line">    &#123;</span><br><span class="line">        projectName,</span><br><span class="line">        deploymentName,</span><br><span class="line">        // Use Utf16CodeUnit for strings in .NET.</span><br><span class="line">        stringIndexType = &quot;Utf16CodeUnit&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    kind = &quot;Conversation&quot;,</span><br><span class="line">&#125;;</span><br><span class="line">Response response = await client.AnalyzeConversationAsync(RequestContent.Create(data));</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">result = client.analyze_conversation(</span><br><span class="line">    task=&#123;</span><br><span class="line">        <span class="string">&quot;kind&quot;</span>: <span class="string">&quot;Conversation&quot;</span>,</span><br><span class="line">        <span class="string">&quot;analysisInput&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;conversationItem&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;participantId&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;modality&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                <span class="string">&quot;language&quot;</span>: <span class="string">&quot;en&quot;</span>,</span><br><span class="line">                <span class="string">&quot;text&quot;</span>: query</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;isLoggingEnabled&quot;</span>: <span class="literal">False</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;parameters&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;projectName&quot;</span>: cls_project,</span><br><span class="line">            <span class="string">&quot;deploymentName&quot;</span>: deployment_slot,</span><br><span class="line">            <span class="string">&quot;verbose&quot;</span>: <span class="literal">True</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="使用-REST-API-进行查询"><a href="#使用-REST-API-进行查询" class="headerlink" title="使用 REST API 进行查询"></a>使用 REST API 进行查询</h3><p>若要使用 REST 查询你的模型，请使用指定的相应正文创建对相应 URL 的 POST 请求。 对于内置功能（如语言检测或情绪分析），你将查询 <code>analyze-text</code> 终结点。</p><p>提示</p><p>请记住，每个请求都需要使用 <code>Ocp-Apim-Subscription-Key</code> 标头中的 Azure AI 语言资源密钥进行身份验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;ENDPOINT&#125;/language/:analyze-text?api-version=&#123;API-VERSION&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>占位符</th><th>值</th></tr></thead><tbody><tr><td><code>&#123;ENDPOINT&#125;</code></td><td>用于对 API 请求进行身份验证的终结点</td></tr><tr><td><code>&#123;API-VERSION&#125;</code></td><td>要调用的 API 版本</td></tr></tbody></table><p>在该请求的正文中，必须指定 <code>kind</code> 参数，该参数告知服务你所请求的语言理解类型。</p><p>例如，如果想要检测语言，则 JSON 正文将如下所示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;kind&quot;: &quot;LanguageDetection&quot;,</span><br><span class="line">    &quot;parameters&quot;: &#123;</span><br><span class="line">        &quot;modelVersion&quot;: &quot;latest&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;analysisInput&quot;:&#123;</span><br><span class="line">        &quot;documents&quot;:[</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;:&quot;1&quot;,</span><br><span class="line">                &quot;text&quot;: &quot;This is a document written in English.&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他语言功能（例如对话语言理解）要求将请求路由到其他终结点。 例如，对话语言理解请求将被发送到以下位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;ENDPOINT&#125;/language/:analyze-conversations?api-version=&#123;API-VERSION&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>占位符</th><th>值</th></tr></thead><tbody><tr><td><code>&#123;ENDPOINT&#125;</code></td><td>用于对 API 请求进行身份验证的终结点</td></tr><tr><td><code>&#123;API-VERSION&#125;</code></td><td>要调用的 API 版本</td></tr></tbody></table><p>该请求将包含类似于以下内容的 JSON 正文。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;kind&quot;: &quot;Conversation&quot;,</span><br><span class="line">  &quot;analysisInput&quot;: &#123;</span><br><span class="line">    &quot;conversationItem&quot;: &#123;</span><br><span class="line">      &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">      &quot;participantId&quot;: &quot;1&quot;,</span><br><span class="line">      &quot;text&quot;: &quot;Sample text&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;parameters&quot;: &#123;</span><br><span class="line">    &quot;projectName&quot;: &quot;&#123;PROJECT-NAME&#125;&quot;,</span><br><span class="line">    &quot;deploymentName&quot;: &quot;&#123;DEPLOYMENT-NAME&#125;&quot;,</span><br><span class="line">    &quot;stringIndexType&quot;: &quot;TextElement_V8&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>占位符</th><th>值</th></tr></thead><tbody><tr><td><code>&#123;PROJECT-NAME&#125;</code></td><td>生成模型的项目的名称</td></tr><tr><td><code>&#123;DEPLOYMENT-NAME&#125;</code></td><td>部署的名称</td></tr></tbody></table><h3 id="示例响应"><a href="#示例响应" class="headerlink" title="示例响应"></a>示例响应</h3><p>来自 SDK 的查询响应将出现在返回的对象中，具体取决于功能（例如在 <code>response.key_phrases</code> 或 <code>response.Value</code> 中）。 REST API 将返回类似于以下内容的 JSON。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;kind&quot;: &quot;KeyPhraseExtractionResults&quot;,</span><br><span class="line">    &quot;results&quot;: &#123;</span><br><span class="line">        &quot;documents&quot;: [&#123;</span><br><span class="line">            &quot;id&quot;: &quot;1&quot;,</span><br><span class="line">            &quot;keyPhrases&quot;: [&quot;modern medical office&quot;, &quot;Dr. Smith&quot;, &quot;great staff&quot;],</span><br><span class="line">            &quot;warnings&quot;: []</span><br><span class="line">        &#125;],</span><br><span class="line">        &quot;errors&quot;: [],</span><br><span class="line">        &quot;modelVersion&quot;: &quot;&#123;VERSION&#125;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于对话语言理解等其他模型，对查询的示例响应将类似于以下内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;kind&quot;: &quot;ConversationResult&quot;,</span><br><span class="line">  &quot;result&quot;: &#123;</span><br><span class="line">    &quot;query&quot;: &quot;String&quot;,</span><br><span class="line">    &quot;prediction&quot;: &#123;</span><br><span class="line">      &quot;topIntent&quot;: &quot;intent1&quot;,</span><br><span class="line">      &quot;projectKind&quot;: &quot;Conversation&quot;,</span><br><span class="line">      &quot;intents&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;category&quot;: &quot;intent1&quot;,</span><br><span class="line">          &quot;confidenceScore&quot;: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;category&quot;: &quot;intent2&quot;,</span><br><span class="line">          &quot;confidenceScore&quot;: 0</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      &quot;entities&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;category&quot;: &quot;entity1&quot;,</span><br><span class="line">          &quot;text&quot;: &quot;text&quot;,</span><br><span class="line">          &quot;offset&quot;: 7,</span><br><span class="line">          &quot;length&quot;: 4,</span><br><span class="line">          &quot;confidenceScore&quot;: 1</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Python 和 C# 的 SDK 返回与 REST 响应非常相似的 JSON。</p><p>有关功能的完整文档（包括示例和操作指南），请参阅 <a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/language-service/?azure-portal=true" >Azure AI 语言文档<i class="fas fa-external-link-alt"></i></a>的文档页。</p><h2 id="定义意向、言语和实体"><a href="#定义意向、言语和实体" class="headerlink" title="定义意向、言语和实体"></a>定义意向、言语和实体</h2><p>语句是用户在与使用语言模型的应用程序进行交互时可能输入的短语。 意向表示用户想执行的任务或操作，或更简单地表示言语的含义。 通过定义意向并将其与一个或多个言语关联来创建模型。</p><p>例如，考虑下面包含意向和关联言语的列表：</p><ul><li>GetTime：<ul><li>“What time is it?”</li><li>“What is the time?”</li><li>“Tell me the time”</li></ul></li><li>GetWeather：<ul><li>“What is the weather forecast?”</li><li>“Do I need an umbrella?”</li><li>“Will it snow?”</li></ul></li><li>TurnOnDevice<ul><li>“Turn the light on.”</li><li>“Switch on the light.”</li><li>“Turn on the fan”</li></ul></li><li><strong>无</strong>：<ul><li>“Hello”</li><li>“Goodbye”</li></ul></li></ul><p>在你的模型中，你必须定义你希望模型能够理解的意向，因此请花一些时间思考模型必须支持的领域，以及用户可能请求的操作或信息类型。 除了你定义的意向之外，每个模型还包括“无”意向，应使用该意向来显式标识用户可能提交的言语，但不需要为其执行特定操作（例如，“hello”之类的对话问候语）或超出此模型的域范围。</p><p>确定模型必须支持的目标后，务必要为每个意向捕获各种不同的示例言语。 收集你认为用户将输入的言语；包括含义相同，但用不同方式构造而成的言语。 请牢记这些准则：</p><ul><li>捕获多个不同的示例或同一事物的不同说法</li><li>采用不同的言语长度：短、中、长</li><li>使言语中的名词或主体位于不同位置。 将其放在开头、末尾或中间</li><li>在不同的言语中使用正确的和不正确的语法来提供良好的训练数据示例</li><li>标记数据的精度、一致性和完整性是确定模型性能的关键因素。<ul><li><strong>精确标记</strong>：始终将每个实体标记为正确的类型。 仅包含要提取的内容，避免标签中出现不必要的数据。</li><li><strong>一致标记</strong>：同一实体在所有语句中都应具有相同的标记。</li><li><strong>完全标记</strong>：标记所有语句中实体的所有实例。</li></ul></li></ul><p>实体用于向意向添加特定上下文。 例如，可以定义可应用于多个设备的 TurnOnDevice 意向，并使用实体定义不同的设备。</p><p>请考虑以下言语、意向和实体：</p><table><thead><tr><th>话语</th><th>意向</th><th>实体</th></tr></thead><tbody><tr><td>What is the time?</td><td>GetTime</td><td></td></tr><tr><td>What time is it in London?</td><td>GetTime</td><td>Location (London)</td></tr><tr><td>What’s the weather forecast for Paris?</td><td>GetWeather</td><td>Location (Paris)</td></tr><tr><td>Will I need an umbrella tonight?</td><td>GetWeather</td><td>Time (tonight)</td></tr><tr><td>What’s the forecast for Seattle tomorrow?</td><td>GetWeather</td><td>Location (Seattle), Time (tomorrow)</td></tr><tr><td>Turn the light on.</td><td>TurnOnDevice</td><td>Device (light)</td></tr><tr><td>Switch on the fan.</td><td>TurnOnDevice</td><td>Device (fan)</td></tr></tbody></table><p>可以将实体拆分为几个不同的组件类型：</p><ul><li>学习实体是最灵活的实体类型，应在大多数情况下使用。 使用合适的名称定义学习组件，然后在训练言语中将单词或短语与该实体关联。 训练模型时，将了解如何将言语中的相应元素与实体匹配。</li><li>当需要具有一组特定可能值（例如，一周中的几天）的实体时，列表实体非常有用。 可以在列表实体定义中包括同义词，以便可以定义包括“Sunday”、“Monday”、“Tuesday”等值的 DayOfWeek 实体；每个都有同义词，例如“Sun”、“Mon”、“Tue”等。</li><li>预生成的实体对于数字、日期&#x2F;时间和名称等常见类型非常有用。 例如，添加预生成组件时，会自动检测“6”等值或“Microsoft”等组织。 有关<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/language-service/conversational-language-understanding/prebuilt-component-reference?azure-portal=true" >受支持的预生成实体<i class="fas fa-external-link-alt"></i></a>的列表，请参阅本文。</li></ul><h2 id="使用模式区分相似的言语"><a href="#使用模式区分相似的言语" class="headerlink" title="使用模式区分相似的言语"></a>使用模式区分相似的言语</h2><p>在某些情况下，模型可能包含多个意向，这些意向的言语可能相似。 可以使用语句模式来区分意向，同时最大限度地减少示例言语的数量。</p><p>例如，考虑以下言语：</p><ul><li>“Turn on the kitchen light”</li><li>“Is the kitchen light on?”</li><li>“Turn off the kitchen light”</li></ul><p>这些言语在语法上相似，但在单词或标点符号方面只有一些差异。 但是，它们表示三个不同的意向（分别为 TurnOnDevice、GetDeviceStatus 和 TurnOffDevice）。 此外，意向可应用于各种实体值。 除了“厨房灯”之外，意向还适用于“客厅灯”、“电视”或可能需要模型来提供支持的任何其他设备。</p><p>若要正确训练模型，请提供一些指定不同格式言语的意向示例。</p><ul><li>TurnOnDevice：<ul><li>“Turn on the {DeviceName}”</li><li>“在 {DeviceName} 上切换”</li><li>“Turn the {DeviceName} on”</li></ul></li><li>GetDeviceStatus：<ul><li>“Is the {DeviceName} on[?]”</li></ul></li><li>TurnOffDevice：<ul><li>“Turn the {DeviceName} off”</li><li>“Switch off the {DeviceName}”</li><li>“Turn off the {DeviceName}”</li></ul></li></ul><p>在使用每种不同类型的言语来训练模型时，Azure AI 语言服务可以学习如何根据格式和标点正确地对意图进行分类。</p><h2 id="使用预生成的实体组件"><a href="#使用预生成的实体组件" class="headerlink" title="使用预生成的实体组件"></a>使用预生成的实体组件</h2><p>可以通过定义所需的所有意向和语句来创建自己的语言模型，但通常可以使用预生成组件来检测常见实体，例如数字、电子邮件、URL 或选择。</p><p>有关 Azure AI 语言服务可以检测的预生成实体的完整列表，请参阅<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/language-service/conversational-language-understanding/prebuilt-component-reference?azure-portal=true" >受支持的预生成实体组件<i class="fas fa-external-link-alt"></i></a>列表。</p><p>使用预生成组件，可以让 Azure AI 语言服务自动检测指定类型的实体，且不必使用该实体的示例来训练模型。</p><p>若要添加预生成组件，可以在项目中创建实体，然后选择该实体的“添加新预生成”以检测某些实体。</p><p><a href="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/build-language-understanding-model/media/add-prebuilt-entity.png#lightbox"><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/build-language-understanding-model/media/add-prebuilt-entity-small.png"  alt="Screenshot of adding a prebuilt entity component."></a></p><p>每个实体最多可以包含 5 个预生成组件。 使用预生成模型元素可以显著减少开发对话语言理解解决方案所需的时间。</p><h2 id="训练、测试、发布和查看对话语言理解模型"><a href="#训练、测试、发布和查看对话语言理解模型" class="headerlink" title="训练、测试、发布和查看对话语言理解模型"></a>训练、测试、发布和查看对话语言理解模型</h2><p>创建模型是一个迭代过程，包括以下活动：</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/build-language-understanding-model/media/train-test-publish-review.png"  alt="Diagram that shows the train, test, publish, review cycle."></p><ol><li>训练模型以从示例言语中学习意向和实体。</li><li>以交互式方式或使用带有已知标签的测试数据集测试模型</li><li>将经过训练的模型部署到公共终结点以供客户端应用使用</li><li>查看预测并迭代访问语句以训练模型</li></ol><p>通过遵循此迭代方法，你可以根据用户输入随着时间的推移而改进语言模型，从而帮助开发反映用户使用自然语言指示其意向的方式的解决方案。</p><p> 言语是指示特定意向的示例短语。<br> 城市是应该应用意向（预订航班）的实体。<br> 当语言模型需要检测公共实体时，请使用预生成组件让 Azure AI 语言服务自动检测实体。</p><h1 id="使用-Azure-AI-翻译服务翻译文本"><a href="#使用-Azure-AI-翻译服务翻译文本" class="headerlink" title="使用 Azure AI 翻译服务翻译文本"></a>使用 Azure AI 翻译服务翻译文本</h1><p> 世界上有许多常用语言，在不同语言的发言人之间交换信息的功能通常是全球解决方案的关键要求。</p><p>Azure AI 翻译提供了一个 API，用于在支持的 90 种语言之间翻译文本。</p><p>完成此模块后，你将能够：</p><p>预配 Azure AI 翻译资源<br>了解语言检测、翻译和音译<br>指定翻译选项<br>定义并运行自定义翻译</p><h2 id="预配-Azure-AI-翻译资源"><a href="#预配-Azure-AI-翻译资源" class="headerlink" title="预配 Azure AI 翻译资源"></a>预配 Azure AI 翻译资源</h2><p>​<br>Azure AI 翻译提供了多语言文本翻译 API，可用于：<br>​</p><ul><li>语言检测。</li><li>一对多翻译。</li><li>脚本音译（将本机脚本中的文本转换为替代脚本）。<br>​<br><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/translate-text-with-translator-service/media/translator-resource.png"  alt="Diagram showing an Azure AI Translator resource performing language detection, one-to-many translation and transliteration."><br>​</li></ul><h2 id="适用于-Azure-AI-翻译的-Azure-资源"><a href="#适用于-Azure-AI-翻译的-Azure-资源" class="headerlink" title="适用于 Azure AI 翻译的 Azure 资源"></a>适用于 Azure AI 翻译的 Azure 资源</h2><p>​<br>若要使用 Azure AI 翻译服务，必须在 Azure 订阅中为其预配资源。 可以预配单服务 Azure AI 翻译资源，也可以在多服务 Azure AI 服务资源中使用文本分析 API。<br>​<br>在 Azure 订阅中预配适当的资源后，可以使用部署资源的位置及其订阅密钥之一从代码中调用 Azure AI 翻译 API。 可以通过向 REST 接口提交 JSON 格式的请求，或者通过使用特定于编程语言的任何可用 SDK 来调用 API。<br>​<br>注意<br>​<br>本模块的后续单元中的代码示例显示了与 REST 接口交换的 JSON 请求和响应。 使用 SDK 时，会通过用于封装相同数据值的适当对象和方法对 JSON 请求进行抽象。 在本模块后面的练习中，你将有机会亲自尝试使用适用于 C# 或 Python 的 SDK。<br>​</p><h2 id="了解语言检测、翻译和音译"><a href="#了解语言检测、翻译和音译" class="headerlink" title="了解语言检测、翻译和音译"></a>了解语言检测、翻译和音译</h2><p>让我们来探索 Azure AI 翻译的功能。 这些功能包括：</p><h2 id="语言检测-1"><a href="#语言检测-1" class="headerlink" title="语言检测"></a>语言检测</h2><p>可使用 REST API 的 Detect 函数来检测编写文本所用的语言。</p><p>例如，可使用 curl 将以下文本提交到 <code>https://api.cognitive.microsofttranslator.com/detect?api-version=3.0</code> 终结点。</p><p>下面是要翻译的文本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; &#x27;Text&#x27; : &#x27;こんにちは&#x27; &#125;</span><br></pre></td></tr></table></figure><p>下面是使用 curl 对终结点的调用，目的是检测文本的语言：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST &quot;https://api.cognitive.microsofttranslator.com/detect?api-version=3.0&quot; -H &quot;Ocp-Apim-Subscription-Region: &lt;your-service-region&gt;&quot; -H &quot;Ocp-Apim-Subscription-Key: &lt;your-key&gt;&quot; -H &quot;Content-Type: application/json&quot; -d &quot;[&#123; &#x27;Text&#x27; : &#x27;こんにちは&#x27; &#125;]</span><br></pre></td></tr></table></figure><p>对此请求的响如下所示，表示文本使用日语编写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;language&quot;: &quot;ja&quot;,</span><br><span class="line">    &quot;score&quot;: 1.0,</span><br><span class="line">    &quot;isTranslationSupported&quot;: true,</span><br><span class="line">    &quot;isTransliterationSupported&quot;: true</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">   &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="翻译"><a href="#翻译" class="headerlink" title="翻译"></a>翻译</h2><p>若要将文本从一种语言翻译为另一种语言，请使用 Translate 函数；指定一个 from 参数来指示源语言，并指定一个或多个 to 参数，以指定文本翻译的目标语言。</p><p>例如，你可以提交之前用于检测语言的相同 JSON，从而指定 ja（日语）的 from 参数以及值为 En（英语）和 fr（法语）的两个 to 参数。 为此，需要调用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST &quot;https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&amp;from=ja&amp;to=fr&amp;to=en&quot; -H &quot;Ocp-Apim-Subscription-Key: &lt;your-key&gt;&quot; -H &quot;Ocp-Apim-Subscription-Region: &lt;your-service-region&gt;&quot; -H &quot;Content-Type: application/json; charset=UTF-8&quot; -d &quot;[&#123; &#x27;Text&#x27; : &#x27;こんにちは&#x27; &#125;]&quot;</span><br></pre></td></tr></table></figure><p>这将生成以下结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;&quot;translations&quot;: </span><br><span class="line">    [</span><br><span class="line">      &#123;&quot;text&quot;: &quot;Hello&quot;, &quot;to&quot;: &quot;en&quot;&#125;,   </span><br><span class="line">      &#123;&quot;text&quot;: &quot;Bonjour&quot;, &quot;to&quot;: &quot;fr&quot;&#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="音译"><a href="#音译" class="headerlink" title="音译"></a>音译</h2><p>日语文本是使用平假名脚本编写的，因此，你可能想要将其翻译为不同的脚本，而不是将其翻译为不同的语言，例如，使用拉丁脚本（如英语语言文本所使用）呈现文本。</p><p>为实现此目的，我们可以使用 Jpan 的 fromScript 参数和 Latn 的 toScript 参数将日语文本提交到 Transliterate 函数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST &quot;https://api.cognitive.microsofttranslator.com/transliterate?api-version=3.0&amp;fromScript=Jpan&amp;toScript=Latn&quot; -H &quot;Ocp-Apim-Subscription-Key: &lt;your-key&gt;&quot; -H &quot;Ocp-Apim-Subscription-Region: &lt;your-service-region&gt;&quot; -H &quot;Content-Type: application/json&quot; -d &quot;[&#123; &#x27;Text&#x27; : &#x27;こんにちは&#x27; &#125;]&quot;</span><br></pre></td></tr></table></figure><p>响应会提供以下结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;script&quot;: &quot;Latn&quot;,</span><br><span class="line">        &quot;text&quot;: &quot;Kon&#x27;nichiwa&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="指定翻译选项"><a href="#指定翻译选项" class="headerlink" title="指定翻译选项"></a>指定翻译选项</h2><p>API 的 Translate 函数支持多个影响输出的参数。</p><h2 id="单词对齐方式"><a href="#单词对齐方式" class="headerlink" title="单词对齐方式"></a>单词对齐方式</h2><p>在书面英语（使用拉丁脚本）中，空格用于分隔单词。 但是，在某些其他语言（更具体地说，脚本）中，并非总是如此。</p><p>例如，将“Smart Services”从 en（英语）翻译为 zh（简体中文）会生成结果“智能服务”，并且很难理解源文本中的字符与翻译中的相应字符之间的关系。 若要解决此问题，可以在调用中指定值为 true 的 includeAlignment 参数来生成以下结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">   &#123;</span><br><span class="line">      &quot;translations&quot;:[</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;text&quot;:&quot;智能服务&quot;,</span><br><span class="line">            &quot;to&quot;:&quot;zh-Hans&quot;,</span><br><span class="line">            &quot;alignment&quot;:&#123;</span><br><span class="line">               &quot;proj&quot;:&quot;0:4-0:1 6:13-2:3&quot;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      ]</span><br><span class="line">   &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>这些结果告诉我们，源中的字符 0 到 4 对应于翻译中的字符 0 到 1，而源中的字符 6 到 13 对应于翻译中的字符 2 到 3。</p><h2 id="句子长度"><a href="#句子长度" class="headerlink" title="句子长度"></a>句子长度</h2><p>有时，知道翻译长度可能会很有用，例如，确定如何在用户界面中以最佳方式显示它。 可以通过将 includeSentenceLength 参数设置为 true 来获取此信息。</p><p>例如，在将英语 (en) 文本“Hello world”翻译成法语 (fr) 时指定此参数将产生以下结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">   &#123;</span><br><span class="line">      &quot;translations&quot;:[</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;text&quot;:&quot;Salut tout le monde&quot;,</span><br><span class="line">            &quot;to&quot;:&quot;fr&quot;,</span><br><span class="line">            &quot;sentLen&quot;:&#123;&quot;srcSentLen&quot;:[12],&quot;transSentLen&quot;:[20]&#125;</span><br><span class="line">         &#125;</span><br><span class="line">      ]</span><br><span class="line">   &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="猥亵语言过滤"><a href="#猥亵语言过滤" class="headerlink" title="猥亵语言过滤"></a>猥亵语言过滤</h2><p>有时，文本包含猥亵语言，你可能希望在翻译中完全掩盖或省略它。 可以通过指定 profanityAction 参数来处理猥亵语言，该参数可以具有以下值之一：</p><ul><li>NoAction：猥亵语言与文本的其余部分一起翻译。</li><li>Deleted：翻译中省略了猥亵语言。</li><li>Marked：使用 profanityMarker 参数（如果提供）中所指示的方法来指示猥亵语言。 此参数的默认值为“Asterisk”，这会将猥亵语言中的字符替换为“*”。 作为替代方法，你可以将“标记”的值指定为 profanityMarker，这会将猥亵语言括在 XML 标记中。</li></ul><p>例如，使用 Marked 的 profanityAction 和 Asterisk 的 profanityMarker 将英语 (en) 文本“JSON is ▇▇▇▇ great!”（其中，被挡住的单词是猥亵语言）翻译为德语 (de) 会产生以下结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">   &#123;</span><br><span class="line">      &quot;translations&quot;:[</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;text&quot;:&quot;JSON ist *** erstaunlich.&quot;,</span><br><span class="line">            &quot;to&quot;:&quot;de&quot;</span><br><span class="line">         &#125;</span><br><span class="line">      ]</span><br><span class="line">   &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="定义自定义翻译"><a href="#定义自定义翻译" class="headerlink" title="定义自定义翻译"></a>定义自定义翻译</h2><p>Azure AI 翻译使用的默认翻译模型对于常规内容的翻译较有效，但你可能需要为使用专业术语词汇的企业或行业开发翻译解决方案，这就需要用到自定义翻译。</p><p>若要解决此问题，可以创建用于映射自己的源和目标术语集进行翻译的自定义模型。 若要创建自定义模型，请使用自定义翻译工具门户来执行以下操作：</p><ol><li><a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/translator/custom-translator/quickstart" >创建工作区<i class="fas fa-external-link-alt"></i></a>并链接到 Azure AI 翻译资源。</li><li><a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/translator/custom-translator/quickstart" >创建项目<i class="fas fa-external-link-alt"></i></a>。</li><li><a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/translator/custom-translator/quickstart" >上传训练数据文件<i class="fas fa-external-link-alt"></i></a>和<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/translator/custom-translator/quickstart" >训练模型<i class="fas fa-external-link-alt"></i></a>。</li><li><a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/translator/custom-translator/quickstart" >测试模型<i class="fas fa-external-link-alt"></i></a>和<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/translator/custom-translator/quickstart" >发布模型<i class="fas fa-external-link-alt"></i></a>。</li><li>对 API 进行翻译调用。</li></ol><p><a href="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/translate-text-with-translator-service/media/custom-translator-new.png#lightbox"><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/translate-text-with-translator-service/media/custom-translator-new-small.png"  alt="Screenshot showing the Custom Translator portal."></a></p><p>将为自定义模型分配唯一的类别 ID（屏幕截图中突出显示），可以使用 category 参数在对 Azure AI 翻译资源的翻译调用中指定该 ID，从而使用自定义模型（而不是默认模型）执行翻译。</p><h2 id="如何调用-API"><a href="#如何调用-API" class="headerlink" title="如何调用 API"></a>如何调用 API</h2><p>若要启动翻译，请将 POST 请求发送到以下请求 URL：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.cognitive.microsofttranslator.com/translate?api-version=3.0</span><br></pre></td></tr></table></figure><p>请求需要包含几个参数：</p><ul><li><code>api-version</code>：所需的 API 版本。</li><li><code>to</code>：要翻译到的目标语言。 例如： 法语为 <code>to=fr</code>。</li><li><code>category</code>：<strong>类别 ID</strong>。</li></ul><p>请求还需要包含多个必需的标头：</p><ul><li><code>Ocp-Apim-Subscription-Key</code>。 客户端密钥的标头。 例如：<code>Ocp-Apim-Subscription-Key=&lt;your-client-key&gt;</code>。</li><li><code>Content-Type</code>。 有效负载的内容类型。 要求的格式：<code>Content-Type: application/json; charset=UTF-8</code>。</li></ul><p>请求正文应包含一个数组，该数组包含一个 JSON 对象，该对象具有用于指定要翻译的文本的 <code>Text</code> 属性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;&quot;Text&quot;:&quot;Where can I find my employee details?&quot;&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>有多种不同方式可用于将请求发送到 API，包括使用 C#、Python 和 curl。 例如，若要进行快速调用，可以使用 curl 发送 POST 请求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST &quot;https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&amp;from=en&amp;to=nl&amp;category=&lt;category-id&gt;&quot; -H &quot;Ocp-Apim-Subscription-Key: &lt;your-key&quot; -H &quot;Content-Type: application/json; charset=UTF-8&quot; -d &quot;[&#123;&#x27;Text&#x27;:&#x27;Where can I find my employee details?&#x27;&#125;]&quot;</span><br></pre></td></tr></table></figure><p>上述请求执行了一个将句子从英语翻译为荷兰语的调用。</p><h3 id="返回的响应"><a href="#返回的响应" class="headerlink" title="返回的响应"></a>返回的响应</h3><p>如果请求成功，响应返回响应代码 <code>200</code>。 还会返回包含已翻译文本的响应正文，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;translations&quot;:[</span><br><span class="line">            &#123;&quot;text&quot;:&quot;Waar vind ik mijn personeelsgegevens?&quot;,&quot;to&quot;:&quot;nl&quot;&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>如果请求不成功，会根据错误类型返回不同的状态代码，例如 <code>400</code>（缺少或无效的查询参数）。 有关代码及其说明的完整列表，请参阅<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/translator/reference/v3-0-translate?tabs=curl" >响应状态代码<i class="fas fa-external-link-alt"></i></a>。</p><p><a class="link"   href="https://learn.microsoft.com/en-us/credentials/applied-skills/build-natural-language-solution-azure-ai/#applied-skill-take-the-assessment" >https://learn.microsoft.com/en-us/credentials/applied-skills/build-natural-language-solution-azure-ai/#applied-skill-take-the-assessment<i class="fas fa-external-link-alt"></i></a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Azure OpenAI Generative AI Performance Tuning</title>
      <link href="/2024/06/05/Azure-OpenAI%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
      <url>/2024/06/05/Azure-OpenAI%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="Azure-OpenAI-服务应用提示工程"><a href="#Azure-OpenAI-服务应用提示工程" class="headerlink" title="Azure OpenAI 服务应用提示工程"></a>Azure OpenAI 服务应用提示工程</h1><p>Azure OpenAI 中 AI 模型的响应质量取决于提供的提示的质量。 通过各种技术提高提示质量称为提示工程。</p><p>在本模块中，你将了解提示工程以及如何使用它来优化 Azure OpenAI 模型的性能。 提示工程涉及设计和优化提示，以更好地利用 Azure OpenAI 模型。</p><h2 id="了解提示工程"><a href="#了解提示工程" class="headerlink" title="了解提示工程"></a>了解提示工程</h2><p>发送到 AI 模型的输入提示的质量（如 Azure OpenAI 中提供的提示）会直接影响返回的内容的质量。 通过仔细构造发送到模型的提示，模型可以提供更好、更有趣的响应。</p><h2 id="什么是提示工程"><a href="#什么是提示工程" class="headerlink" title="什么是提示工程"></a>什么是提示工程</h2><p>生成式 AI 模型基于大量数据训练，可以根据提示的最有可能的延续生成文本、图像、代码和创意内容。</p><p>提示工程是设计和优化提示以更好地利用 AI 模型的过程。 设计有效的提示对于提示工程的成功至关重要，它可以显著提高 AI 模型在特定任务上的性能。 提供相关、具体、明确且结构良好的提示可以帮助模型更好地了解上下文并生成更准确的响应。</p><p>例如，如果我们希望 OpenAI 模型生成产品说明，我们可以为其提供详细说明，描述产品的功能和优势。 通过提供此上下文，模型可以生成更准确、更相关的产品说明。</p><p>提示工程还有助于缓解 AI 模型中的偏差并提高公平性。 通过设计具有多样性和包容性的提示，我们可以确保模型不会偏向于特定组或透视。</p><p>重要</p><p>无论可以设计多好的提示，AI 模型的响应都不应被视为事实或完全没有偏差。 始终负责地使用 AI。 有关详细信息，请参阅 Microsoft 关于 Azure OpenAI 的<a class="link"   href="https://learn.microsoft.com/zh-cn/legal/cognitive-services/openai/transparency-note" >透明度说明<i class="fas fa-external-link-alt"></i></a>和 <a class="link"   href="https://www.microsoft.com/ai/responsible-ai" >Microsoft 的 AI 原则<i class="fas fa-external-link-alt"></i></a>。</p><p>此外，提示工程可以帮助我们了解模型用来生成其响应的引用。 生成式 AI 模型具有大量参数，并且其遵循的逻辑对用户来说基本上是未知的，因此可能会对它如何得出响应感到困惑。 通过设计易于理解和解释的提示，可以帮助人类更好地了解模型如何生成其响应。 这在医疗保健等领域尤其重要，因此了解模型如何做出决策至关重要。</p><p>设计自己的提示时，可以使用不同的方法，其中许多方法在本模块的后续单元中进行了介绍。 其中包括提供说明、上下文内容、提示或少量示例，以及对提示中的内容进行正确排序。 此处介绍的方法并不详尽，因为此领域是一个微妙而流畅的主题。</p><h2 id="API-终结点的注意事项"><a href="#API-终结点的注意事项" class="headerlink" title="API 终结点的注意事项"></a>API 终结点的注意事项</h2><p>本模块其余部分的示例将重点介绍 <code>ChatCompletion</code>。 值得注意的是，<code>ChatCompletion</code> 也可用于非聊天场景，其中任何说明都包含在系统消息中，用户内容在用户角色消息中提供。 如有需要，其中大多数示例可以改为使用 <code>Completion</code> 终结点。</p><p>就模型可用性而言，<code>Completion</code> 终结点可以用于 <code>gpt-3</code> 和更早版本，而 <code>ChatCompletion</code> 可用于 <code>gpt-35-turbo</code> 和更高版本的模型。</p><h2 id="调整模型参数"><a href="#调整模型参数" class="headerlink" title="调整模型参数"></a>调整模型参数</h2><p>除了本模块中讨论的技术外，调整模型参数可能会对响应产生重大影响。 特别是，<code>temperature</code> 和 <code>top_p</code> (top_probability) 最有可能影响模型的响应，因为它们都控制模型中的随机性，但方式不同。</p><p>值越高，响应的创造性和随机性就越高，但可能不太一致或不太集中。 预期为虚构或唯一的响应受益于这些参数的较高值，而需要更一致且具体的内容应使用较低的值。</p><p>尝试使用相同的提示调整这些参数，以查看它们如何影响响应。 建议一次更改 <code>temperature</code> 或 <code>top_p</code>，但不能同时更改两者。</p><h2 id="编写更有效的提示"><a href="#编写更有效的提示" class="headerlink" title="编写更有效的提示"></a>编写更有效的提示</h2><p>Azure OpenAI 模型能够以惊人的准确度生成对自然语言查询的响应。 但是，响应的质量在很大程度上取决于提示的写入程度。 开发人员可以通过在其提示中使用不同技术来优化 Azure OpenAI 模型的性能，从而生成更准确、更相关的响应。</p><h2 id="提供清晰说明"><a href="#提供清晰说明" class="headerlink" title="提供清晰说明"></a>提供清晰说明</h2><p>明确询问 Azure OpenAI 模型所需的内容是获取所需结果的一种方法。 通过尽可能的描述，模型可以生成最符合所需内容的响应。</p><p>例如，假设你想要为新的水瓶创建产品说明。 请考虑与每个提示关联的答案：</p><p><strong>提示</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Write a product description for a new water bottle</span><br></pre></td></tr></table></figure><p><strong>响应</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Introducing the latest addition to our product line - the innovative and eco-friendly water bottle.</span><br><span class="line">Made from high-quality, BPA-free materials, this bottle is designed to keep your beverages at the</span><br><span class="line">perfect temperature for hours. Its sleek and stylish design makes it the perfect accessory for any</span><br><span class="line">outdoor activity or workout session. With its convenient carrying handle and leak-proof lid, you </span><br><span class="line">can take it with you wherever you go, without worrying about spills or leaks. Plus, its easy-to-clean</span><br><span class="line">design ensures that you can use it again and again, making it the perfect choice for anyone looking </span><br><span class="line">for a reliable and sustainable water bottle.</span><br></pre></td></tr></table></figure><p>与类似的提示相比，具有清晰说明。</p><p><strong>提示</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Write a product description for a new water bottle that is 100% recycled. Be sure to include that</span><br><span class="line">it comes in natural colors with no dyes, and each purchase removes 10 pounds of plastic from our </span><br><span class="line">oceans</span><br></pre></td></tr></table></figure><p><strong>响应</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Introducing our newest water bottle, the eco-friendly choice for the conscious consumer. Made from </span><br><span class="line">100% recycled materials and available in natural colors with no dyes, this bottle is not only </span><br><span class="line">stylish but also sustainable. Each purchase of this bottle removes 10 pounds of plastic from </span><br><span class="line">our oceans, making it a responsible choice for those who care about the environment. Its durable </span><br><span class="line">and leak-proof design makes it perfect for outdoor activities, while its easy-to-carry handle </span><br><span class="line">makes it convenient to take on the go. Join us in our mission to reduce plastic waste and choose </span><br><span class="line">this eco-friendly water bottle for your daily hydration needs.</span><br></pre></td></tr></table></figure><p>包括需要包含的详细信息可让模型知道要添加到说明中的信息，使其对新产品的描述更加准确。</p><p>可以推断此方法包含复杂的说明，例如要包括的详细信息的项目符号列表、响应的长度或要包含在输出中的所需格式。 尝试确切地询问想要在结果中看到的内容，你可能会对模型满足请求的效果感到惊讶。</p><h2 id="说明的格式"><a href="#说明的格式" class="headerlink" title="说明的格式"></a>说明的格式</h2><p>如何设置说明的格式可能会影响模型解释提示的方式。 近度偏差可能会影响模型，其中位于提示末尾的信息对输出的影响比对开头的信息的影响更大。 通过重复提示末尾的说明和评估对生成的响应的影响，可以获得更好的响应。</p><p>在聊天方案中使用 <code>ChatCompletion</code> 时，这种近度偏差也会起作用，其中提示中包含的对话中较新的消息对响应的影响更大。 下一个单元更深入地介绍如何使用对话来提高响应质量，但将重要信息放在提示的末尾附近可能会获得更好的响应。</p><h3 id="使用节标记"><a href="#使用节标记" class="headerlink" title="使用节标记"></a>使用节标记</h3><p>设置说明格式的特定技术是拆分提示开头或末尾的说明，并在 <code>---</code> 或 <code>###</code> 块中包含用户内容。 这些标记使模型能够更清楚地区分说明和内容。 例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Translate the text into French</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">What&#x27;s the weather going to be like today?</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>注意</p><p>分区标记的最佳做法可能会随着将来的版本而更改。</p><h2 id="主要内容、支持内容和基础内容"><a href="#主要内容、支持内容和基础内容" class="headerlink" title="主要内容、支持内容和基础内容"></a>主要内容、支持内容和基础内容</h2><p>包括用于响应的模型的内容，使模型能够更准确地回答。 可以通过两种方式来考虑此内容：主要内容和支持内容。</p><p>主要内容是指作为查询主题的内容，例如要翻译的句子或要汇总的文章。 此内容通常包含在提示的开头或末尾（作为说明，并按 <code>---</code> 块进行区分），其中包含介绍如何使用它的说明。</p><p>例如，假设我们有一篇要总结的长文章。 我们可以将其放在提示符的 <code>---</code> 块中，然后以说明结尾。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">&lt;insert full article here, as primary content&gt;</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">Summarize this article and identify three takeaways in a bulleted list</span><br></pre></td></tr></table></figure><p>支持内容是可能会改变响应的内容，但不是提示的焦点或主题。 支持内容的示例包括名称、首选项、响应中要包含的未来日期等。 提供支持内容可让模型做出更完整、更准确的响应，并且更有可能包含所需信息。</p><p>例如，鉴于促销电子邮件非常长，模型能够提取关键信息。 如果随后在提示中添加支持内容，并指定要查找的特定内容，则模型可以提供更有用的响应。 在这种情况下，电子邮件是主要内容，并将你感兴趣的具体内容作为支持内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">&lt;insert full email here, as primary content&gt;</span><br><span class="line">---</span><br><span class="line">&lt;the next line is the supporting content&gt;</span><br><span class="line">Topics I&#x27;m very interested in: AI, webinar dates, submission deadlines</span><br><span class="line"></span><br><span class="line">Extract the key points from the above email, and put them in a bulleted list:</span><br></pre></td></tr></table></figure><p>基础内容通过为要从中提取答案的模型提供内容，使模型能够提供可靠的答案。 基础内容可以是询问相关问题的论文或文章、公司常见问题解答文档或比训练模型所基于的数据更新的信息。 如果需要更可靠且最新的响应，或者需要引用未发布的或特定信息，强烈建议使用基础内容。</p><p>基础内容与主要内容不同，因为它是用于回答提示查询的信息源，而不是针对摘要或翻译等操作的内容。 例如，当提供关于 AI 历史的未发表研究论文时，它可以使用该基础内容回答问题。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">&lt;insert unpublished paper on the history of AI here, as grounding content&gt;</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">Where and when did the field of AI start?</span><br></pre></td></tr></table></figure><p>此基础数据使模型能够给出更准确、更明智的答案，这些答案可能不是训练的数据集的一部分。</p><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>提示是模型构建的前导字，通常有助于朝着正确方向塑造响应。 它们通常与说明一起使用，但并不总是如此。 提示模型进行代码生成时，提示特别有用。 当前的 Azure OpenAI 模型可以生成一些有趣的代码片段，但未来模块中将更深入地介绍代码生成。</p><p>例如，如果需要帮助创建 SQL 查询，请提供所需内容的说明以及查询的开头：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Write a join query to get customer names with purchases in the past 30 days between tables named orders and customer on customer ID. </span><br><span class="line"></span><br><span class="line">SELECT</span><br></pre></td></tr></table></figure><p>模型响应从提示中断的位置开始，在 SQL 中继续，即使我们从未要求过特定语言。 其他示例可能是通过提供有关所需应用的代码注释，并在提示末尾将 <code>import</code> 添加为前导字，或者以所需语言提供类似内容来帮助 Python 代码。</p><p>另一个示例，鉴于提示中有大量客户评论，结尾为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Summarize the reviews above:</span><br><span class="line">Most common complaints:</span><br><span class="line">- </span><br></pre></td></tr></table></figure><h2 id="提供上下文以提高准确性"><a href="#提供上下文以提高准确性" class="headerlink" title="提供上下文以提高准确性"></a>提供上下文以提高准确性</h2><p>通过向 AI 模型提供上下文，使模型能够更好地了解你的问题或应该知道的内容，从而提供最佳答案。 可以通过多种方式提供上下文。</p><h2 id="请求输出组合"><a href="#请求输出组合" class="headerlink" title="请求输出组合"></a>请求输出组合</h2><p>指定输出的结构可能会对结果产生很大影响。 这可能包括要求模型引用其来源、将响应编写为电子邮件、将响应格式设置为 SQL 查询、将情绪分类为特定结构等。 例如：</p><p><strong>提示</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Write a table in markdown with 6 animals in it, with their genus and species</span><br></pre></td></tr></table></figure><p><strong>响应</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">| Animal           | Genus          | Species        |</span><br><span class="line">| ---------------- |:--------------:|:--------------:|</span><br><span class="line">| Red Panda        | Ailurus        | fulgens        |</span><br><span class="line">| African Elephant | Loxodonta      | africana       |</span><br><span class="line">| Snow Leopard     | Panthera       | uncia          |</span><br><span class="line">| Arctic Fox       | Vulpes         | lagopus        |</span><br><span class="line">| Chimpanzee       | Pan            | troglodytes    |</span><br><span class="line">| Siberian Tiger   | Panthera       | tigris altaica |</span><br></pre></td></tr></table></figure><p>此方法可用于自定义格式，例如 JSON 结构：</p><p><strong>提示</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Put two fictional characters into JSON of the following format</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  firstNameFictional: </span><br><span class="line">  jobFictional:</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>响应</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Here&#x27;s an example of how you can put two fictional characters into JSON format:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstNameFictional&quot;: &quot;Henry&quot;,</span><br><span class="line">  &quot;jobFictional&quot;: &quot;Wizard&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstNameFictional&quot;: &quot;Frank&quot;,</span><br><span class="line">  &quot;jobFictional&quot;: &quot;Hero&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="系统消息"><a href="#系统消息" class="headerlink" title="系统消息"></a>系统消息</h2><p>系统消息包含在提示的开头，旨在提供模型说明、回答的角度或其他有助于指导模型响应的信息。 此系统消息可能包括音调或个性、不应包含的主题或如何回答的详细信息（例如，格式设置）。</p><p>例如，可以向它提供以下一些系统消息：</p><ul><li>“我希望你像命令行终端一样操作。 在一个唯一代码块中完全像 cmd.exe 一样响应命令，没有其他要求。”</li><li>“我希望你成为一名翻译，从英语翻译成西班牙语。 不要回复我说或问的任何内容，只翻译这两种语言，并用翻译的文本回复。”</li><li>“作为励志演说家，自由地就目标和挑战给出令人鼓舞的建议。 你应该包括许多积极的肯定和建议的活动，以实现用户的最终目标。”</li></ul><p><a class="link"   href="https://oai.azure.com/portal?azure-portal=true" >Azure OpenAI Studio<i class="fas fa-external-link-alt"></i></a> 中聊天窗口顶部提供了其他示例系统消息。 尝试定义自己的系统提示以指定唯一响应，并与模型聊天以查看响应的不同之处。</p><p><code>ChatCompletion</code> 终结点允许使用 <code>System</code> 聊天角色包括系统消息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var chatCompletionsOptions = new ChatCompletionsOptions()</span><br><span class="line">&#123;</span><br><span class="line">    Messages =</span><br><span class="line">    &#123;</span><br><span class="line">        new ChatRequestSystemMessage(&quot;You are a casual, helpful assistant. You will talk like an American old western film character.&quot;),</span><br><span class="line">        new ChatRequestUserMessage(&quot;Can you direct me to the library?&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>响应</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;choices&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;finish_reason&quot;: &quot;stop&quot;,</span><br><span class="line">      &quot;index&quot;: 0,</span><br><span class="line">      &quot;message&quot;: &#123;</span><br><span class="line">        &quot;content&quot;: &quot;Well howdy there, stranger! The library, huh?</span><br><span class="line">                    Y&#x27;all just head down the main road till you hit the town </span><br><span class="line">                    square. Once you&#x27;re there, take a left and follow the street </span><br><span class="line">                    for a spell. You&#x27;ll see the library on your right, can’t </span><br><span class="line">                    miss it. Happy trails!&quot;,</span><br><span class="line">        &quot;role&quot;: &quot;assistant&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">response = openai.ChatCompletion.create(</span><br><span class="line">    model=<span class="string">&quot;gpt-35-turbo&quot;</span>,</span><br><span class="line">    messages=[</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You are a casual, helpful assistant. You will talk like an American old western film character.&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;Can you direct me to the library?&quot;</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>响应</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;choices&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;finish_reason&quot;: &quot;stop&quot;,</span><br><span class="line">      &quot;index&quot;: 0,</span><br><span class="line">      &quot;message&quot;: &#123;</span><br><span class="line">        &quot;content&quot;: &quot;Well howdy there, stranger! The library, huh?</span><br><span class="line">                    Y&#x27;all just head down the main road till you hit the town </span><br><span class="line">                    square. Once you&#x27;re there, take a left and follow the street </span><br><span class="line">                    for a spell. You&#x27;ll see the library on your right, can’t </span><br><span class="line">                    miss it. Happy trails!&quot;,</span><br><span class="line">        &quot;role&quot;: &quot;assistant&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>系统消息在格式和内容方面都可能会显著更改响应。 尝试为模型定义一条明确的系统消息，以准确说明你期望的响应类型，以及你希望或不希望它包含的内容。</p><h2 id="会话历史记录"><a href="#会话历史记录" class="headerlink" title="会话历史记录"></a>会话历史记录</h2><p>除了系统消息外，还可以向模型提供其他消息以增强会话。 对话历史记录使模型能够继续以类似方式响应（例如，音调或格式设置），并允许用户在后续查询中引用以前的内容。 可以通过两种方式提供此历史记录：从实际聊天历史记录，或从用户定义的示例对话。</p><p>使用 OpenAI 模型的聊天接口（例如，ChatGPT 和 <a class="link"   href="https://oai.azure.com/portal/chat?azure-portal=true" >Azure OpenAI Studio<i class="fas fa-external-link-alt"></i></a> 中的聊天操场）自动包含对话历史记录，从而生成更丰富、更有意义的对话。 在 Azure OpenAI Studio 聊天操场的聊天窗口下方的“参数”部分中，可以指定要包含的过去消息数。 尝试将该值减少到 1 或增加到最大值，以查看不同历史记录量对对话的影响。</p><p>注意</p><p>提示中包含的会话历史记录越多意味着使用的输入令牌数就越多。 考虑到所使用的模型的令牌限制，必须确定用例的正确平衡。</p><p>聊天系统还可以利用模型的汇总功能来节省输入令牌。 应用可以选择汇总过去的消息，并将该摘要包含在对话历史记录中，然后仅向模型逐字提供过去几条消息。</p><h2 id="少样本学习"><a href="#少样本学习" class="headerlink" title="少样本学习"></a>少样本学习</h2><p>使用用户定义的示例对话就是所谓的“少样本学习”，它提供应如何响应给定查询的模型示例。 这些示例用于训练模型如何响应。</p><p>例如，通过向模型提供几个提示和预期的响应，它以相同的模式继续运行，而不指示它该执行什么操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">User: That was an awesome experience</span><br><span class="line">Assistant: positive</span><br><span class="line">User: I won&#x27;t do that again</span><br><span class="line">Assistant: negative</span><br><span class="line">User: That was not worth my time</span><br><span class="line">Assistant: negative</span><br><span class="line">User: You can&#x27;t miss this</span><br><span class="line">Assistant:</span><br></pre></td></tr></table></figure><p>如果仅使用 <code>You can&#39;t miss this</code>（而没有来自少样本学习的其他上下文）提供模型，则响应不太可能有用。</p><p>实际上，对话历史记录和少样本学习以相同的方式发送到模型：每个用户消息和助手响应都是消息对象中的离散消息。 <code>ChatCompletion</code> 终结点已优化为包含消息历史记录，无论此消息历史记录是以少样本学习的形式提供，还是以实际对话历史记录的形式提供。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var chatCompletionsOptions = new ChatCompletionsOptions()</span><br><span class="line">&#123;</span><br><span class="line">    Messages =</span><br><span class="line">    &#123;</span><br><span class="line">        new ChatRequestSystemMessage(&quot;You are a helpful assistant.&quot;),</span><br><span class="line">        new ChatRequestUserMessage(&quot;That was an awesome experience&quot;),</span><br><span class="line">        new ChatRequestAssistantMessage(&quot;positive&quot;),</span><br><span class="line">        new ChatRequestUserMessage(&quot;I won&#x27;t do that again&quot;),</span><br><span class="line">        new ChatRequestAssistantMessage(&quot;negative&quot;),</span><br><span class="line">        new ChatRequestUserMessage(&quot;That was not worth my time&quot;),</span><br><span class="line">        new ChatRequestAssistantMessage(&quot;negative&quot;),</span><br><span class="line">        new ChatRequestUserMessage(&quot;You can&#x27;t miss this&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">response = openai.ChatCompletion.create(</span><br><span class="line">    model=<span class="string">&quot;gpt-35-turbo&quot;</span>,</span><br><span class="line">    messages=[</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You are a helpful assistant.&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;That was an awesome experience&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;assistant&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;positive&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;I won&#x27;t do that again&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;assistant&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;negative&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;That was not worth my time&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;assistant&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;negative&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You can&#x27;t miss this&quot;</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="拆分复杂任务"><a href="#拆分复杂任务" class="headerlink" title="拆分复杂任务"></a>拆分复杂任务</h2><p>改进交互的另一种方法是将复杂的提示划分为多个查询。 这使模型能够更好地了解每个单独的部分，并且可以提高整体准确性。 通过划分提示，还可以在将来的提示中包含来自上一个提示的响应，以及使用该信息以及模型功能生成相关响应。</p><p>例如，可以询问模型 <code>Doug can ride down the zip line in 30 seconds, and takes 5 minutes to climb back up to the top. How many times can Doug ride the zip line in 17 minutes?</code>。 结果可能是 <code>3</code>，如果 Doug 从 zip 线的顶部开始，则结果不正确。</p><p>通过询问多个问题可能会得到信息更丰富的答案，这些答案关于返回到 zip 线顶部的往返时间，以及如何说明 Doug 从顶部开始的事实。 拆分此问题表明，Doug 事实上可以穿越 zip 线四次。</p><h3 id="思维链"><a href="#思维链" class="headerlink" title="思维链"></a>思维链</h3><p>帮助你有效地拆分任务的一个有用方法是让模型解释其思维链。</p><p>要求模型使用确定响应的分步过程做出响应是了解模型如何解释提示的有用方法。 通过执行此操作，你可以看到模型在何处进行了错误的逻辑轮次，并更好地了解如何更改提示以避免错误。 此方法可能包括要求它引用其来源，就像必应聊天（使用 GPT-4 代模型），并给出确定答案的原因。</p><p>思维链提示技术最适合用于帮助你循环访问和改进提示，以便从模型获得最高质量的答案。</p><p>例如，询问模型 <code>What sport is easiest to learn but hardest to master?</code> 会得到一个答案作为响应，并简要说明原因。 但是，当出现 <code>What sport is easiest to learn but hardest to master? Give a step by step approach of your thoughts, ending in your answer</code> 提示时，响应是它如何得出答案的完整说明。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Sure, here&#x27;s a step-by-step approach to answering the question:</span><br><span class="line">1. Identify sports that are popular and have a large following.</span><br><span class="line">2. Consider the basic mechanics of each sport and how easy they are to learn.</span><br><span class="line">3. Think about the various techniques and skills required to play each sport at a high level, and how difficult they are to master.</span><br><span class="line">4. Compare the relative ease of learning each sport to the difficulty of mastering it.</span><br><span class="line">5. Based on the above analysis, determine which sport is easiest to learn but hardest to master.</span><br><span class="line"></span><br><span class="line">Using this approach, I would say that the sport of golf is easiest to learn but hardest to master. Here&#x27;s why:</span><br><span class="line">1. Golf is a popular sport with a large following.</span><br><span class="line">2. The basic mechanics of hitting a golf ball are relatively simple and can be learned quickly with some practice.</span><br><span class="line">3. However, achieving consistency and mastering the various shots and techniques required to play at a high level can take years of practice and dedication.</span><br><span class="line">4. Compared to other sports, the difference between a beginner and an intermediate golfer is relatively small, while the difference between an intermediate and an advanced golfer is much larger.</span><br><span class="line">5. Therefore, I would say that golf is the sport that is easiest to learn but hardest to master.</span><br></pre></td></tr></table></figure><p>清晰的描述性说明可帮助模型生成与开发人员所查找的内容密切相关的响应。</p><p>系统消息包含在提示的开头，旨在提供模型说明、回答的角度或其他有助于指导模型响应的信息。</p><p>对话历史记录使模型能够继续以类似方式响应（例如，音调或格式设置），并允许用户在后续查询中引用以前的内容。</p><h1 id="Azure-OpenAI生成代码"><a href="#Azure-OpenAI生成代码" class="headerlink" title="Azure OpenAI生成代码"></a>Azure OpenAI生成代码</h1><p>借助 Azure OpenAI 服务，可以使用大型语言模型 (LLM) 生成内容，包括编程代码。 此功能使开发人员能够生成和改进采用各种语言的现有编程代码，以提高效率和增进理解。</p><p>在本模块中，了解如何使用 Azure OpenAI 生成代码并帮助执行各种开发任务。</p><h2 id="根据自然语言构造代码"><a href="#根据自然语言构造代码" class="headerlink" title="根据自然语言构造代码"></a>根据自然语言构造代码</h2><p>​<br>​<br>Azure OpenAI 模型的功能之一是根据自然语言提示生成代码。 任务的范围可以从简单的单行命令到完整的应用程序。 AI 模型还可以编辑和更新提供的代码或以前的响应，以完成请求的任务。<br>​</p><h2 id="用于代码生成的-AI-模型"><a href="#用于代码生成的-AI-模型" class="headerlink" title="用于代码生成的 AI 模型"></a>用于代码生成的 AI 模型</h2><p>​<br>在以前的几代 <code>gpt</code> 模型中，一些模型（通常称为 <em>codex</em> 模型）经过专门训练，可与代码配合使用。 随着新一代模型的发展，基础模型极大地提高了其性能和对语言和代码的理解，因此不再需要特定的代码模型。 这种改进使得最近几代（如 <code>gpt-35-turbo</code> 和 <code>gpt-4</code>）只有一个模型，可同时用于自然语言和代码。<br>​<br>本模块中的示例使用 <code>gpt-35-turbo</code>。<br>​</p><h2 id="编写函数"><a href="#编写函数" class="headerlink" title="编写函数"></a>编写函数</h2><p>​<br>只需描述所需内容，Azure OpenAI 模型即可创建多种语言的函数和应用。 例如，假设你需要二进制文件搜索的实现，但不记得它是如何实现的了。 给定提示 <code>write a function for binary search in python</code>，你可能会收到包含函数的响应和对代码的说明。<br>​</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Sure, here&#x27;s an example implementation of binary search algorithm in Python:</span><br><span class="line">​</span><br><span class="line">def binary_search(array, target):  </span><br><span class="line">    low = 0  </span><br><span class="line">    high = len(array) - 1  </span><br><span class="line">  </span><br><span class="line">    while low &lt;= high:  </span><br><span class="line">        mid = (low + high) // 2  </span><br><span class="line">        if array[mid] == target:  </span><br><span class="line">            return mid  </span><br><span class="line">        elif array[mid] &lt; target:  </span><br><span class="line">            low = mid + 1  </span><br><span class="line">        else:  </span><br><span class="line">            high = mid - 1  </span><br><span class="line">  </span><br><span class="line">    return -1  </span><br><span class="line"> </span><br><span class="line">This function takes in two arguments - an array of integers and a target integer that we want to search</span><br><span class="line">for in the array. The function initializes two pointers - low and high - to the first and last indices</span><br><span class="line">of the array, respectively.</span><br><span class="line">​</span><br><span class="line">Inside the while loop, the function calculates the middle index using integer division (//). If the </span><br><span class="line">middle element is equal to the target, the function returns the index of the middle element. If the </span><br><span class="line">middle element is less than the target, we update the low pointer to mid + 1. Otherwise, we update the </span><br><span class="line">high pointer to mid - 1. We continue these steps until we find the target or the pointers cross each </span><br><span class="line">other (i.e., low &gt; high).</span><br><span class="line">​</span><br><span class="line">If the target is not found in the array, the function returns -1.</span><br><span class="line">​</span><br><span class="line">Note that the binary search algorithm assumes that the input array is sorted in ascending order. If </span><br><span class="line">the array is not sorted, the algorithm may not return the correct result.</span><br></pre></td></tr></table></figure><p>​<br>请求可以超越函数，请求一系列函数或整个应用。 响应为尝试实现的任务提供了良好的起点。<br>​</p><h2 id="更改编码语言"><a href="#更改编码语言" class="headerlink" title="更改编码语言"></a>更改编码语言</h2><p>​<br>如果你的代码采用的是一种语言，但你需要它采用另一种语言，Azure OpenAI 可以转换该代码。 例如，假设在 Python 中具有此 <code>print_squares</code> 函数。<br>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">print_squares</span>(<span class="params">n</span>):  </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):  </span><br><span class="line">        <span class="built_in">print</span>(i**<span class="number">2</span>)   </span><br></pre></td></tr></table></figure><p>​<br>如果提供该代码以及提示 <code>convert this code to C#</code>，你可能会得到类似于以下函数的内容。<br>​</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public void PrintSquares(int n)  </span><br><span class="line">&#123;  </span><br><span class="line">    for (int i = 1; i &lt;= n; i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        Console.WriteLine(i * i);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>​<br>请注意，模型理解 <code>for</code> 循环和函数以不同语言（包括 C# 中的访问修饰符）定义的方式的差异，并相应地更改了代码。<br>​</p><h2 id="理解未知代码"><a href="#理解未知代码" class="headerlink" title="理解未知代码"></a>理解未知代码</h2><p>​<br>Azure OpenAI 模型有助于理解无法理解的代码或可能采用你不熟悉的语言的代码。 例如，假设你获得了以下函数（采用虚构的编码语言！），但不知道如何理解它。<br>​</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fn qzplv(n: i32, m: i32) -&gt; i32 &#123;</span><br><span class="line">    if n == 0 &#123;</span><br><span class="line">        return m + 1;</span><br><span class="line">    &#125; else if m == 0 &#123;</span><br><span class="line">        return qzplv(n - 1, 1);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        return qzplv(n - 1, qzplv(n, m - 1));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<br>将其与提示 <code>could you explain what this code is doing?</code> 一起提供给模型时，你可得到类似于以下内容的响应：<br>​</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Sure, I&#x27;d be happy to explain what this code is doing!</span><br><span class="line">​</span><br><span class="line">This code is implementing the Ackermann function, which is a well-known mathematical function that </span><br><span class="line">grows very quickly in terms of computation time as its inputs increase. The function takes two integer </span><br><span class="line">arguments (n and m) and returns another integer.</span><br><span class="line">​</span><br><span class="line">Here&#x27;s how the function works:</span><br><span class="line">- If n is equal to 0, the function returns m + 1.</span><br><span class="line">- If m is equal to 0, the function calls itself recursively with n - 1 and 1 as arguments.</span><br><span class="line">- Otherwise, the function calls itself recursively with n - 1 and the result of calling itself with n </span><br><span class="line">and m - 1 as arguments.</span><br><span class="line">​</span><br><span class="line">The function is implemented in a way that is easy to understand and follow, but it has a very high </span><br><span class="line">computational complexity. In fact, it grows so quickly that it can&#x27;t be computed for values of n and m </span><br><span class="line">greater than about 4 or 5.</span><br></pre></td></tr></table></figure><p>​<br>将说明和转换结合成你熟悉的语言会使此功能更加有用。</p><h2 id="写入单元测试"><a href="#写入单元测试" class="headerlink" title="写入单元测试"></a>写入单元测试</h2><p>Azure OpenAI 模型可以为编写的函数生成单元测试，帮助使代码更可靠。 以二进制文件搜索函数为例。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">binary_search</span>(<span class="params">arr, target</span>):</span><br><span class="line">    left, right = <span class="number">0</span>, <span class="built_in">len</span>(arr) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> left &lt;= right:</span><br><span class="line">        mid = (left + right) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> arr[mid] == target:</span><br><span class="line">            <span class="keyword">return</span> mid</span><br><span class="line">        <span class="keyword">elif</span> arr[mid] &lt; target:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            right = mid - <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">public static int BinarySearch(int[] arr, int target)</span><br><span class="line">&#123;</span><br><span class="line">    int left = 0;</span><br><span class="line">    int right = arr.Length - 1;</span><br><span class="line"></span><br><span class="line">    while (left &lt;= right)</span><br><span class="line">    &#123;</span><br><span class="line">        int mid = (left + right) / 2;</span><br><span class="line"></span><br><span class="line">        if (arr[mid] == target)</span><br><span class="line">        &#123;</span><br><span class="line">            return mid;</span><br><span class="line">        &#125;</span><br><span class="line">        else if (arr[mid] &lt; target)</span><br><span class="line">        &#123;</span><br><span class="line">            left = mid + 1;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            right = mid - 1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return -1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提供该函数以及提示 <code>write three unit tests for this function</code>，你可得到类似于以下内容的响应。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_binary_search</span>():  </span><br><span class="line">    <span class="comment"># Test case 1: Target element is in the middle of the array  </span></span><br><span class="line">    arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]  </span><br><span class="line">    target1 = <span class="number">4</span>  </span><br><span class="line">    <span class="keyword">assert</span> binary_search(arr1, target1) == <span class="number">3</span>  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># Test case 2: Target element is at the beginning of the array  </span></span><br><span class="line">    arr2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]  </span><br><span class="line">    target2 = <span class="number">1</span>  </span><br><span class="line">    <span class="keyword">assert</span> binary_search(arr2, target2) == <span class="number">0</span>  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># Test case 3: Target element is not in the array  </span></span><br><span class="line">    arr3 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]  </span><br><span class="line">    target3 = <span class="number">7</span>  </span><br><span class="line">    <span class="keyword">assert</span> binary_search(arr3, target3) == -<span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[Test]  </span><br><span class="line">public void TestBinarySearch1()  </span><br><span class="line">&#123;  </span><br><span class="line">    int[] arr = &#123; 1, 2, 3, 4, 5 &#125;;  </span><br><span class="line">    int target = 3;  </span><br><span class="line">    int expected = 2;  </span><br><span class="line">    int result = BinarySearch(arr, target);  </span><br><span class="line">    Assert.AreEqual(expected, result);  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">[Test]  </span><br><span class="line">public void TestBinarySearch2()  </span><br><span class="line">&#123;  </span><br><span class="line">    int[] arr = &#123; 10, 20, 30, 40, 50 &#125;;  </span><br><span class="line">    int target = 35;  </span><br><span class="line">    int expected = -1;  </span><br><span class="line">    int result = BinarySearch(arr, target);  </span><br><span class="line">    Assert.AreEqual(expected, result);  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">[Test]  </span><br><span class="line">public void TestBinarySearch3()  </span><br><span class="line">&#123;  </span><br><span class="line">    int[] arr = &#123; 3, 6, 9, 12, 15 &#125;;  </span><br><span class="line">    int target = 6;  </span><br><span class="line">    int expected = 1;  </span><br><span class="line">    int result = BinarySearch(arr, target);  </span><br><span class="line">    Assert.AreEqual(expected, result);  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>如果你指定要包含在提示中的事例，此功能会更有用，这可减少为代码编写单元测试所花费的时间。</p><h2 id="添加注释并生成文档"><a href="#添加注释并生成文档" class="headerlink" title="添加注释并生成文档"></a>添加注释并生成文档</h2><p>为了进一步改进代码，AI 模型可以添加注释和文档。 以下面的函数为例，在没有任何代码注释的情况下，首次阅读函数时可能有点难以理解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">permutations</span>(<span class="params">lst</span>):  </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(lst) == <span class="number">0</span>:  </span><br><span class="line">        <span class="keyword">return</span> []  </span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(lst) == <span class="number">1</span>:  </span><br><span class="line">        <span class="keyword">return</span> [lst]  </span><br><span class="line">    <span class="keyword">else</span>:  </span><br><span class="line">        result = []  </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(lst)):  </span><br><span class="line">            temp = lst[i]  </span><br><span class="line">            remaining = lst[:i] + lst[i+<span class="number">1</span>:]  </span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> permutations(remaining):  </span><br><span class="line">                result.append([temp] + p)  </span><br><span class="line">        <span class="keyword">return</span> result  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">public static List&lt;List&lt;int&gt;&gt; Permutations(List&lt;int&gt; lst)  </span><br><span class="line">&#123;  </span><br><span class="line">    if (lst.Count == 0)  </span><br><span class="line">    &#123;  </span><br><span class="line">        return new List&lt;List&lt;int&gt;&gt;();  </span><br><span class="line">    &#125;  </span><br><span class="line">    else if (lst.Count == 1)  </span><br><span class="line">    &#123;  </span><br><span class="line">        return new List&lt;List&lt;int&gt;&gt; &#123; lst &#125;;  </span><br><span class="line">    &#125;  </span><br><span class="line">    else  </span><br><span class="line">    &#123;  </span><br><span class="line">        List&lt;List&lt;int&gt;&gt; result = new List&lt;List&lt;int&gt;&gt;();  </span><br><span class="line">        for (int i = 0; i &lt; lst.Count; i++)  </span><br><span class="line">        &#123;  </span><br><span class="line">            int temp = lst[i];  </span><br><span class="line">            List&lt;int&gt; remaining = new List&lt;int&gt;(lst);  </span><br><span class="line">            remaining.RemoveAt(i);  </span><br><span class="line">            foreach (List&lt;int&gt; p in Permutations(remaining))  </span><br><span class="line">            &#123;  </span><br><span class="line">                List&lt;int&gt; permutation = new List&lt;int&gt; &#123; temp &#125;;  </span><br><span class="line">                permutation.AddRange(p);  </span><br><span class="line">                result.Add(permutation);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        return result;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>向模型提供该函数以及一个提示，要求它向代码添加注释，你可得到一个类似于以下内容的响应。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">permutations</span>(<span class="params">lst</span>):  </span><br><span class="line">    <span class="comment"># Check if the input list is empty  </span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(lst) == <span class="number">0</span>:  </span><br><span class="line">        <span class="keyword">return</span> []  </span><br><span class="line">    <span class="comment"># Check if the input list has only one element  </span></span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(lst) == <span class="number">1</span>:  </span><br><span class="line">        <span class="keyword">return</span> [lst]  </span><br><span class="line">    <span class="keyword">else</span>:  </span><br><span class="line">        <span class="comment"># Initialize an empty list to store permutations  </span></span><br><span class="line">        result = []  </span><br><span class="line">        <span class="comment"># Iterate through each element of the input list  </span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(lst)):  </span><br><span class="line">            <span class="comment"># Remove the current element from the list and store it in a variable  </span></span><br><span class="line">            temp = lst[i]  </span><br><span class="line">            remaining = lst[:i] + lst[i+<span class="number">1</span>:]  </span><br><span class="line">            <span class="comment"># Recursively call the function on the remaining list  </span></span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> permutations(remaining):  </span><br><span class="line">                <span class="comment"># Append the current element to the beginning of each permutation and add it to the result list  </span></span><br><span class="line">                result.append([temp] + p)  </span><br><span class="line">        <span class="comment"># Return the final list of permutations  </span></span><br><span class="line">        <span class="keyword">return</span> result  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">public static List&lt;List&lt;int&gt;&gt; Permutations(List&lt;int&gt; lst)  </span><br><span class="line">&#123;  </span><br><span class="line">    // Check if the input list is empty  </span><br><span class="line">    if (lst.Count == 0)  </span><br><span class="line">    &#123;  </span><br><span class="line">        return new List&lt;List&lt;int&gt;&gt;();  </span><br><span class="line">    &#125;  </span><br><span class="line">    // Check if the input list has only one element  </span><br><span class="line">    else if (lst.Count == 1)  </span><br><span class="line">    &#123;  </span><br><span class="line">        return new List&lt;List&lt;int&gt;&gt; &#123; lst &#125;;  </span><br><span class="line">    &#125;  </span><br><span class="line">    else  </span><br><span class="line">    &#123;  </span><br><span class="line">        // Initialize an empty list to store permutations  </span><br><span class="line">        List&lt;List&lt;int&gt;&gt; result = new List&lt;List&lt;int&gt;&gt;();  </span><br><span class="line">        // Iterate through each element of the input list  </span><br><span class="line">        for (int i = 0; i &lt; lst.Count; i++)  </span><br><span class="line">        &#123;  </span><br><span class="line">            // Remove the current element from the list and store it in a variable  </span><br><span class="line">            int temp = lst[i];  </span><br><span class="line">            List&lt;int&gt; remaining = new List&lt;int&gt;(lst);  </span><br><span class="line">            remaining.RemoveAt(i);  </span><br><span class="line">            // Recursively call the function on the remaining list  </span><br><span class="line">            foreach (List&lt;int&gt; p in Permutations(remaining))  </span><br><span class="line">            &#123;  </span><br><span class="line">                // Append the current element to the beginning of each permutation and add it to the result list  </span><br><span class="line">                List&lt;int&gt; permutation = new List&lt;int&gt; &#123; temp &#125;;  </span><br><span class="line">                permutation.AddRange(p);  </span><br><span class="line">                result.Add(permutation);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        // Return the final list of permutations  </span><br><span class="line">        return result;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>再进一步，请求提供刚刚向其添加了注释的函数的文档。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">permutations</span>(<span class="params">lst</span>):  </span><br><span class="line">    <span class="string">&quot;&quot;&quot;  </span></span><br><span class="line"><span class="string">    Generates all possible permutations of a given list of integers using recursion.  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:  </span></span><br><span class="line"><span class="string">        lst (list): The list of integers to generate permutations for.  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:  </span></span><br><span class="line"><span class="string">        list: A list of all possible permutations of the input list.  </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>  </span><br><span class="line">    <span class="comment"># Check if the input list is empty  </span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(lst) == <span class="number">0</span>:  </span><br><span class="line">        <span class="keyword">return</span> []  </span><br><span class="line">    <span class="comment"># Check if the input list has only one element  </span></span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(lst) == <span class="number">1</span>:  </span><br><span class="line">        <span class="keyword">return</span> [lst]  </span><br><span class="line">    <span class="keyword">else</span>:  </span><br><span class="line">        <span class="comment"># Initialize an empty list to store permutations  </span></span><br><span class="line">        result = []  </span><br><span class="line">        <span class="comment"># Iterate through each element of the input list  </span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(lst)):  </span><br><span class="line">            <span class="comment"># Remove the current element from the list and store it in a variable  </span></span><br><span class="line">            temp = lst[i]  </span><br><span class="line">            remaining = lst[:i] + lst[i+<span class="number">1</span>:]  </span><br><span class="line">            <span class="comment"># Recursively call the function on the remaining list  </span></span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> permutations(remaining):  </span><br><span class="line">                <span class="comment"># Append the current element to the beginning of each permutation and add it to the result list  </span></span><br><span class="line">                result.append([temp] + p)  </span><br><span class="line">        <span class="comment"># Return the final list of permutations  </span></span><br><span class="line">        <span class="keyword">return</span> result  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;  </span><br><span class="line">/// Generates all possible permutations of a given list of integers using recursion.  </span><br><span class="line">/// &lt;/summary&gt;  </span><br><span class="line">/// &lt;param name=&quot;lst&quot;&gt;The list of integers to generate permutations for.&lt;/param&gt;  </span><br><span class="line">/// &lt;returns&gt;A list of all possible permutations of the input list.&lt;/returns&gt;  ```</span><br><span class="line">public static List&lt;List&lt;int&gt;&gt; Permutations(List&lt;int&gt; lst)  </span><br><span class="line">&#123;  </span><br><span class="line">    // Check if the input list is empty  </span><br><span class="line">    if (lst.Count == 0)  </span><br><span class="line">    &#123;  </span><br><span class="line">        return new List&lt;List&lt;int&gt;&gt;();  </span><br><span class="line">    &#125;  </span><br><span class="line">    // Check if the input list has only one element  </span><br><span class="line">    else if (lst.Count == 1)  </span><br><span class="line">    &#123;  </span><br><span class="line">        return new List&lt;List&lt;int&gt;&gt; &#123; lst &#125;;  </span><br><span class="line">    &#125;  </span><br><span class="line">    else  </span><br><span class="line">    &#123;  </span><br><span class="line">        // Initialize an empty list to store permutations  </span><br><span class="line">        List&lt;List&lt;int&gt;&gt; result = new List&lt;List&lt;int&gt;&gt;();  </span><br><span class="line">        // Iterate through each element of the input list  </span><br><span class="line">        for (int i = 0; i &lt; lst.Count; i++)  </span><br><span class="line">        &#123;  </span><br><span class="line">            // Remove the current element from the list and store it in a variable  </span><br><span class="line">            int temp = lst[i];  </span><br><span class="line">            List&lt;int&gt; remaining = new List&lt;int&gt;(lst);  </span><br><span class="line">            remaining.RemoveAt(i);  </span><br><span class="line">            // Recursively call the function on the remaining list  </span><br><span class="line">            foreach (List&lt;int&gt; p in Permutations(remaining))  </span><br><span class="line">            &#123;  </span><br><span class="line">                // Append the current element to the beginning of each permutation and add it to the result list  </span><br><span class="line">                List&lt;int&gt; permutation = new List&lt;int&gt; &#123; temp &#125;;  </span><br><span class="line">                permutation.AddRange(p);  </span><br><span class="line">                result.Add(permutation);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        // Return the final list of permutations  </span><br><span class="line">        return result;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h2 id="修复-bug-并改进代码"><a href="#修复-bug-并改进代码" class="headerlink" title="修复 bug 并改进代码"></a>修复 bug 并改进代码</h2><p>开发人员有时可以编写大部分有效的代码，但此代码可以通过修复 bug、语法、性能或模块性来改进。 Azure OpenAI 模型可以帮助确定改进方法，并提供有关如何编写更好的代码的建议。</p><h2 id="修复代码中的-bug"><a href="#修复代码中的-bug" class="headerlink" title="修复代码中的 bug"></a>修复代码中的 bug</h2><p>Azure OpenAI 模型可以通过分析代码和建议可能修复问题的更改来帮助修复代码中的 bug。 这可以帮助开发人员更快、更高效地识别和解决 bug。</p><p>例如，假设以下函数不起作用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_average</span>(<span class="params">numbers</span>):  </span><br><span class="line">    total = <span class="number">0</span>  </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(numbers)):  </span><br><span class="line">        number = numbers[i]  </span><br><span class="line">        total += number  </span><br><span class="line">    average = total  </span><br><span class="line">    rerun averave  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public double CalculateAverage(int[] numbers)</span><br><span class="line">&#123;</span><br><span class="line">    int total = 0;</span><br><span class="line">    for (int i = 0; i &lt; numbers.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        int number = numbers[i];</span><br><span class="line">        total += number;</span><br><span class="line">    &#125;</span><br><span class="line">    double average = (double)total;</span><br><span class="line">    rerun averave;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>向模型提供该函数以及提示 <code>Fix the bugs in this function</code>，你可得到带有修复代码的响应以及对修复内容的说明。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_average</span>(<span class="params">numbers</span>):  </span><br><span class="line">    total = <span class="number">0</span>  </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(numbers)):  </span><br><span class="line">        number = numbers[i]  </span><br><span class="line">        total += number  </span><br><span class="line">    average = total / <span class="built_in">len</span>(numbers)  </span><br><span class="line">    <span class="keyword">return</span> average  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public double CalculateAverage(int[] numbers)</span><br><span class="line">&#123;</span><br><span class="line">    int total = 0;</span><br><span class="line">    for (int i = 0; i &lt; numbers.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        int number = numbers[i];</span><br><span class="line">        total += number;</span><br><span class="line">    &#125;</span><br><span class="line">    double average = (double)total / numbers.Length;</span><br><span class="line">    return average;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">There were a few issues with the original code:</span><br><span class="line"></span><br><span class="line">1. The variable &quot;average&quot; was assigned the value of &quot;total&quot; instead of the actual average.</span><br><span class="line">2. There was a typo in the last line - &quot;rerun&quot; should be &quot;return&quot;.</span><br><span class="line">3. The average was not actually calculated - the corrected code divides the total by the length of </span><br><span class="line">the &quot;numbers&quot; list to get the average.</span><br></pre></td></tr></table></figure><h2 id="提高性能"><a href="#提高性能" class="headerlink" title="提高性能"></a>提高性能</h2><p>虽然开发人员编写的代码可能有效，但可能有更有效的方法来完成该任务。 下面是一个函数示例，该函数计算前 n 个正整数的总和，可能效率不高：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sum_of_n</span>(<span class="params">n</span>):</span><br><span class="line">    result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">        result += i</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public int SumOfN(int n)  </span><br><span class="line">&#123;  </span><br><span class="line">    int result = 0;  </span><br><span class="line">    for (int i = 1; i &lt;= n; i++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        result += i;  </span><br><span class="line">    &#125;  </span><br><span class="line">    return result;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>此版本正常运行，但其时间复杂性为 O(n)。 将其提供给模型时，响应如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">We can improve this function it by using a mathematical formula instead.</span><br><span class="line"></span><br><span class="line">Here&#x27;s the more efficient version:</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sum_of_n</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">return</span> n * (n + <span class="number">1</span>) // <span class="number">2</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public int SumOfN(int n)  </span><br><span class="line">&#123;  </span><br><span class="line">    return n * (n + 1) / 2;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>此版本仍返回正确的结果，但其时间复杂性现在为 O (1)，这使得它的效率提高了很多。</p><h2 id="重构低效代码"><a href="#重构低效代码" class="headerlink" title="重构低效代码"></a>重构低效代码</h2><p>更好的代码不容易出现 bug 且更易于维护，Azure OpenAI 模型可以帮助指导开发人员如何重构其代码。</p><p>请考虑以下函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">calculateTotalPrice</span>(<span class="params">item, quantity</span>):</span><br><span class="line">    <span class="keyword">if</span> item == <span class="string">&#x27;apple&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> quantity * <span class="number">0.5</span></span><br><span class="line">    <span class="keyword">elif</span> item == <span class="string">&#x27;banana&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> quantity * <span class="number">0.75</span></span><br><span class="line">    <span class="keyword">elif</span> item == <span class="string">&#x27;orange&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> quantity * <span class="number">0.6</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">public double CalculateTotalPrice(string item, int quantity)</span><br><span class="line">&#123;</span><br><span class="line">    if (item == &quot;apple&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        return quantity * 0.5;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (item == &quot;banana&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        return quantity * 0.75;</span><br><span class="line">    &#125;</span><br><span class="line">    else if (item == &quot;orange&quot;)</span><br><span class="line">    &#123;</span><br><span class="line">        return quantity * 0.6;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此代码根据特定项的名称和数量计算其总价。 但是，代码不是模块化的，可能难以维护。 将其与重构请求一起提供给模型时，响应如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">item_prices = &#123;  </span><br><span class="line">    <span class="string">&#x27;apple&#x27;</span>: <span class="number">0.5</span>,  </span><br><span class="line">    <span class="string">&#x27;banana&#x27;</span>: <span class="number">0.75</span>,  </span><br><span class="line">    <span class="string">&#x27;orange&#x27;</span>: <span class="number">0.6</span>  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calculate_total_price</span>(<span class="params">item, quantity</span>):  </span><br><span class="line">    price = item_prices.get(item, <span class="number">0</span>)  </span><br><span class="line">    <span class="keyword">return</span> quantity * price  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">static Dictionary&lt;string, double&gt; itemPrices = new Dictionary&lt;string, double&gt;()  </span><br><span class="line">&#123;  </span><br><span class="line">    &#123;&quot;apple&quot;, 0.5&#125;,  </span><br><span class="line">    &#123;&quot;banana&quot;, 0.75&#125;,  </span><br><span class="line">    &#123;&quot;orange&quot;, 0.6&#125;  </span><br><span class="line">&#125;;  </span><br><span class="line"></span><br><span class="line">static double CalculateTotalPrice(string item, int quantity)  </span><br><span class="line">&#123;  </span><br><span class="line">    double price;  </span><br><span class="line">    if (!itemPrices.TryGetValue(item, out price))  </span><br><span class="line">    &#123;  </span><br><span class="line">        price = 0;  </span><br><span class="line">    &#125;  </span><br><span class="line">    return quantity * price;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>除了代码，模型还提供了重构的说明。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In this refactored code, we&#x27;ve created an object called itemPrices that maps item names to their </span><br><span class="line">prices. We&#x27;ve also simplified the calculateTotalPrice function by using the itemPrices object to look </span><br><span class="line">up the price of the item, rather than using a series of if/else statements. This makes the code more </span><br><span class="line">modular and easier to maintain, and also reduces the risk of introducing bugs in the future.</span><br></pre></td></tr></table></figure><p><strong>Azure OpenAI 模型可以将代码从一种语言转换为另一种语言，而不考虑原始语言。</strong></p><p> <strong>提供给模型的上下文越多，响应可能就越准确。</strong></p><p> <strong>Azure OpenAI 可以通过为你生成代码来提高你的效率和生产力。</strong></p><h1 id="Azure-OpenAI生成图像"><a href="#Azure-OpenAI生成图像" class="headerlink" title="Azure OpenAI生成图像"></a>Azure OpenAI生成图像</h1><p>借助 Azure OpenAI 服务，可以使用大型语言模型 (LLM) 基于自然语言提示生成内容。 其中一个模型是 DALL-E 图像生成模型，它能够基于所需图像的自然语言说明创建原始图形内容。</p><p>使用 AI 生成图形的能力有很多应用；包括为文章或营销材料创建插图或逼真的图像，生成独特的产品或公司徽标，或任何可描述所需图像的场景。</p><p>本模块介绍如何在 Azure OpenAI 服务的实例中使用 DALL-E 模型，并检索它生成的图像。</p><h2 id="什么是-DALL-E？"><a href="#什么是-DALL-E？" class="headerlink" title="什么是 DALL-E？"></a>什么是 DALL-E？</h2><p>DALL-E 是一个基于神经网络的模型，可以从自然语言输入生成图形数据。 更简单地说，你可以向 DALL-E 提供描述，它可以生成相应的图像。</p><p>例如，可以将以下自然语言提示提交到 DALL-E：</p><p>摩托车上的松鼠</p><p>此提示可能会生成图形输出，如下图所示：</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/generate-images-azure-openai/media/squirrel-on-a-motorcycle.png"  alt="A picture of a squirrel on a motorcycle."></p><p>DALL-E 生成的图像是原创的；不是从特选图像目录中检索的。 换句话说，DALL-E 不是用于查找合适图像的搜索系统 - 它是一种人工智能 (AI) 模型，可根据训练数据生成新图像。</p><h2 id="探索-Azure-OpenAI-Studio-中的-DALL-E"><a href="#探索-Azure-OpenAI-Studio-中的-DALL-E" class="headerlink" title="探索 Azure OpenAI Studio 中的 DALL-E"></a>探索 Azure OpenAI Studio 中的 DALL-E</h2><p>已完成</p><p>若要试用 DALL-E，可以在已批准访问该服务的 Azure 订阅中预配 Azure OpenAI 服务资源，并使用 DALL-E 操场提交提示并查看生成的图像。</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/generate-images-azure-openai/media/dall-e-playground.png"  alt="Azure OpenAI Studio 中的 DALL-E 操场的屏幕截图。"></p><p>使用操场时，可以调整设置以指定：</p><ul><li>生成的图像分辨率（大小）。 可用大小为 <code>256x256</code>、<code>512x512</code>、<code>1024x1024</code>（即默认值）或 <code>1024x1792</code>。</li><li>要生成的图像样式（如 <code>vivid</code> 或 <code>natural</code>）。</li><li>图像质量（从 <code>standard</code> 或 <code>hd</code> 中选择）。</li></ul><h2 id="通过-Azure-OpenAI-REST-API-使用-DALL-E-模型"><a href="#通过-Azure-OpenAI-REST-API-使用-DALL-E-模型" class="headerlink" title="通过 Azure OpenAI REST API 使用 DALL-E 模型"></a>通过 Azure OpenAI REST API 使用 DALL-E 模型</h2><p>可以通过 Azure OpenAI 服务 REST API 从应用程序中使用 DALL-E 模型。</p><p>若要对服务进行 REST 调用，需要 Azure 中预配的 Azure OpenAI 服务资源的终结点和授权密钥。 通过将 POST 请求提交到标头中的授权密钥的服务终结点来启动图像生成过程。 请求必须在 JSON 正文中包含以下参数：</p><ul><li><strong>prompt</strong>：对要生成的图像的说明。</li><li><strong>n</strong>：要生成的图像数。</li><li><strong>size</strong>：要生成的图像的分辨率（256x256、512x512 或 1024x1024）。</li></ul><p>例如，下面的 JSON 可以用来生成一个 512 x 512 的獾穿着燕尾服的图像：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;prompt&quot;: &quot;A badger wearing a tuxedo&quot;,</span><br><span class="line">    &quot;n&quot;: 1,</span><br><span class="line">    &quot;size&quot;: &quot;512x512&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始请求的结果不会立即返回映像生成过程的结果。 相反，响应包含一个操作位置标头，其中包含回调服务的 URL，应用程序代码可以轮询该 URL，直到图像生成的结果准备就绪。</p><p>操作成功后，将返回类似于以下 JSON 的响应：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;created&quot;: 1686780744,</span><br><span class="line">    &quot;expires&quot;: 1686867152,</span><br><span class="line">    &quot;id&quot;: &quot;6d765598-eeee-4f49-885d-03ee1c8f9b02&quot;,</span><br><span class="line">    &quot;result&quot;: &#123;</span><br><span class="line">        &quot;created&quot;: 1686780744,</span><br><span class="line">        &quot;data&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;url&quot;: &quot;https://dalleproduse.....png&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;status&quot;: &quot;succeeded&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果元素包括 url 元素的集合，每个元素都引用从提示生成的 PNG 图像文件。 在此示例中，文件可能如下图所示：</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/generate-images-azure-openai/media/badger-in-a-tuxedo.png"  alt="A picture of a badger wearing a tuxedo."></p><p><strong>DALL-E 模型用于基于自然语言提示生成图像。</strong><br><strong>DALL-E 操场用于探索图像生成模型。</strong><br><strong>生成的图像数在 n 参数中指定。</strong></p><h1 id="检索增强生成-RAG"><a href="#检索增强生成-RAG" class="headerlink" title="检索增强生成 (RAG)"></a>检索增强生成 (RAG)</h1><p>借助 Azure OpenAI，开发人员可以通过将支持的 AI 聊天模型连接到自己的数据来实现检索增强生成 (RAG)。 这些模型可以引用特定数据源来提供有根据的响应，从而增强 AI 模型在创建响应时的功能。</p><p>在本模块中，你将了解如何使用 Azure OpenAI 添加自己的数据来实现 RAG，并基于这两个数据生成响应。</p><h2 id="使用-Azure-OpenAI-服务了解检索增强生成-RAG"><a href="#使用-Azure-OpenAI-服务了解检索增强生成-RAG" class="headerlink" title="使用 Azure OpenAI 服务了解检索增强生成 (RAG)"></a>使用 Azure OpenAI 服务了解检索增强生成 (RAG)</h2><p>使用 Azure OpenAI 的 RAG 支持开发人员使用受支持的 AI 聊天模型来引用特定信息源以使响应落地。 通过添加此信息，模型可以引用提供的特定数据及其预先训练的知识，从而提供更有效的响应。</p><p>Azure OpenAI 通过将预先训练的模型连接到自己的数据源来启用 RAG。 基于自己数据的 Azure OpenAI 可利用 Azure AI 搜索的搜索功能将相关数据块添加到提示。 在将数据放入 AI 搜索索引后，基于数据的 Azure OpenAI 会执行以下步骤：</p><ol><li>接收用户提示。</li><li>确定提示的相关内容和意图。</li><li>使用该内容和意向查询搜索索引。</li><li>将搜索结果数据块与系统消息和用户提示一起插入到 Azure OpenAI 提示中。</li><li>将完整的提示发送到 Azure OpenAI。</li><li>将响应和数据引用（如果有）返回给用户。</li></ol><p>默认情况下，基于数据的 Azure OpenAI 鼓励（但不要求）模型仅使用你的数据做出响应。 连接数据时，可以取消选择此设置，这可能会导致模型选择使用其预先训练的知识，而不是你的数据。</p><h2 id="微调-vs-RAG"><a href="#微调-vs-RAG" class="headerlink" title="微调 vs.RAG"></a>微调 vs.RAG</h2><p>微调是一种用于通过使用其他训练数据的数据集训练现有基础模型（例如 <code>gpt-35-turbo</code>）来创建自定义模型的技术。 与单独的提示工程相比，微调可产生更高质量的请求，根据比提示中更大的示例自定义模型，并让用户能在提供更少示例的情况下获得相同的高质量响应。 但微调的处理过程既昂贵又耗时，应仅在必要时采用。</p><p>基于你的数据的、使用 Azure OpenAI 的 RAG 还是使用无状态 API 连接到模型，这样就无需使用数据训练自定义模型，并简化了与 AI 模型的交互。 AI 搜索首先查找有用的信息来回答提示，并将此作为接地数据添加到提示，Azure OpenAI 则根据该信息产生响应。</p><h2 id="添加自己的数据源"><a href="#添加自己的数据源" class="headerlink" title="添加自己的数据源"></a>添加自己的数据源</h2><p>在聊天操场中通过 Azure OpenAI Studio 添加自己的数据。 然后使用添加的数据源来增强发送到模型的提示。 添加数据时，可以选择上传数据文件、使用 Blob 存储帐户中的数据或连接到现有的 AI 搜索索引。</p><p>如果要上传或使用存储帐户中已有的文件，则 Azure OpenAI 支持的数据格式包括 <code>.md</code>、<code>.txt</code>、<code>.html</code>、<code>.pdf</code> 以及 Microsoft Word 和 PowerPoint 文件。 如果其中任何文件包含图形或图像，则响应质量取决于对视觉内容提取文本的效果。</p><p>上传数据或连接到存储帐户中的文件时，建议使用 Azure OpenAI Studio 创建搜索资源和索引。 通过此方式添加数据，可以在插入索引时进行适当的分块，从而产生更好的响应。 如果使用大型文本文件或表单，则应使用可用的<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/concepts/use-your-data#ingesting-your-data-into-azure-cognitive-search?azure-portal=true" >数据准备脚本<i class="fas fa-external-link-alt"></i></a>来提高 AI 模型的准确性。</p><p>为 AI 搜索服务启用<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/search/semantic-search-overview?azure-portal=true" >语义搜索<i class="fas fa-external-link-alt"></i></a>可以优化搜索数据索引的结果，并且可能会收到更高质量的响应和引文。 但启用语义搜索可能会增加搜索服务的成本。</p><h2 id="连接数据"><a href="#连接数据" class="headerlink" title="连接数据"></a>连接数据</h2><p>要连接数据，请导航到 Azure OpenAI Studio 中的聊天操场，然后在“助手设置”窗格中选择“添加数据”选项卡。 选择“添加数据源”按钮以连接数据。 系统提示将引导你设置与每个数据源之间的连接，并将该数据放入搜索索引。</p><p>如果使用的是自己的索引（不是通过 Azure OpenAI Studio 创建的索引），则能通过其中一个页面指定列映射。 请务必提供准确的字段（尤其是内容数据），让模型能够提供更好的响应。</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/use-own-data-azure-openai/media/index-data-mapping.png"  alt="Screenshot of Azure OpenAI Studio index field mapping."></p><h2 id="使用自己的数据与模型聊天"><a href="#使用自己的数据与模型聊天" class="headerlink" title="使用自己的数据与模型聊天"></a>使用自己的数据与模型聊天</h2><p>可以在 Azure AI Studio 中通过聊天操场或 API 对自己的数据使用带 Azure OpenAI 的 RAG。</p><h2 id="令牌注意事项和建议的设置"><a href="#令牌注意事项和建议的设置" class="headerlink" title="令牌注意事项和建议的设置"></a>令牌注意事项和建议的设置</h2><p>由于基于自有数据的带 Azure OpenAI 的 RAG 在提示符中包含索引的搜索结果，因此请务必了解这会如何影响令牌分配。 每次调用模型都包括系统消息、用户提示、对话历史记录、检索的搜索文档、内部提示和模型响应的令牌。</p><p>例如，系统消息是模型指令的有用参考，并且包含在每次调用中。 虽然系统消息没有令牌限制，但使用自己的数据时，如果超过 200 个令牌，系统消息将被截断。 使用自己的数据为 1500 个令牌时，模型的响应也会受到限制。</p><p>由于这些令牌限制，建议在调用中限制问题长度和对话历史记录长度。 <a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/concepts/advanced-prompt-engineering?azure-portal=true" >提示工程技术<i class="fas fa-external-link-alt"></i></a>（例如分解任务和思维提示链）可以帮助模型更有效地响应。</p><h2 id="使用-API"><a href="#使用-API" class="headerlink" title="使用 API"></a>使用 API</h2><p>将 API 与你自己的数据配合使用时，需要指定存储数据的数据源。 每次调用时，都需要包含 AI 搜索资源的 <code>endpoint</code>、<code>key</code> 和 <code>indexName</code>。</p><p>请求正文将类似于以下 JSON。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;dataSources&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;type&quot;: &quot;AzureCognitiveSearch&quot;,</span><br><span class="line">            &quot;parameters&quot;: &#123;</span><br><span class="line">                &quot;endpoint&quot;: &quot;&lt;your_search_endpoint&gt;&quot;,</span><br><span class="line">                &quot;key&quot;: &quot;&lt;your_search_endpoint&gt;&quot;,</span><br><span class="line">                &quot;indexName&quot;: &quot;&lt;your_search_index&gt;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;messages&quot;:[</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;role&quot;: &quot;system&quot;, </span><br><span class="line">            &quot;content&quot;: &quot;You are a helpful assistant assisting users with travel recommendations.&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;role&quot;: &quot;user&quot;, </span><br><span class="line">            &quot;content&quot;: &quot;I want to go to New York. Where should I stay?&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用自己的数据时的调用需要发送到与调用基础模型（包括 <code>extensions</code>）时使用的终结点不同的终结点。 调用会发送到类似于下面的 URL。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;your_azure_openai_resource&gt;/openai/deployments/&lt;deployment_name&gt;/chat/completions?api-version=&lt;version&gt;</span><br></pre></td></tr></table></figure><p>请求还需要包括 <code>Content-Type</code> 和 <code>api-key</code>。</p><h2 id="练习-使用-Azure-OpenAI-服务为-RAG-添加数据"><a href="#练习-使用-Azure-OpenAI-服务为-RAG-添加数据" class="headerlink" title="练习 - 使用 Azure OpenAI 服务为 RAG 添加数据"></a>练习 - 使用 Azure OpenAI 服务为 RAG 添加数据</h2><p>现在，让我们在 Azure OpenAI Studio 中对数据使用 Azure OpenAI。 在本练习中，你将部署 Azure OpenAI 模型、连接示例数据，并根据示例数据生成响应。</p><p>注意</p><p>为了完成本练习，你将需要一个 <a class="link"   href="https://azure.microsoft.com/free?azure-portal=true" >Azure 订阅<i class="fas fa-external-link-alt"></i></a>。 你还需要请求（并被授予）<a class="link"   href="https://learn.microsoft.com/zh-cn/legal/cognitive-services/openai/limited-access?azure-portal=true" >Azure OpenAI 访问权限<i class="fas fa-external-link-alt"></i></a>。</p><p>要完成此模块的练习，请启动 VM 并按照说明进行操作。</p><p>注意</p><p>若要完成此练习，你将需要 Microsoft Azure 订阅。 如果你还没有该订阅，可以<a class="link"   href="https://azure.microsoft.com/?azure-portal=true" >注册一个<i class="fas fa-external-link-alt"></i></a>。</p><p>如果需要为此练习设置计算机，可以使用此<a class="link"   href="https://microsoftlearning.github.io/mslearn-ai-services/Instructions/setup.html?azure-portal=true" >设置指南<i class="fas fa-external-link-alt"></i></a>，然后按照下面链接的练习说明进行操作。 请注意，设置指南适用于多个开发练习，其中可能包括该特定练习不需要的软件。 此外，由于可能的操作系统和设置配置的范围太广，如果你选择在自己的计算机上完成此练习，我们将无法提供支持。</p><p>要在自己的计算机上按照这些说明进行操作，可以按照<a class="link"   href="https://aka.ms/mslearn-openai-own-data?azure-portal=true" >此处的练习说明<i class="fas fa-external-link-alt"></i></a>进行操作。</p><p>提示</p><p>完成练习后，如果你已完成对 Azure AI 服务的学习，请删除在练习期间创建的 Azure 资源。</p><p> <strong>分解任务并使用思维提示链可帮助模型在令牌限制内更有效地做出响应。</strong><br><strong>使用 Azure OpenAI Studio，可以在插入索引时进行适当的分块，从而产生更好的响应。</strong><br> <strong>基于数据的 Azure OpenAI 支持开发人员使用受支持的 AI 聊天模型来引用特定数据源以使响应落地。</strong></p><h1 id="生成式-AI-基础"><a href="#生成式-AI-基础" class="headerlink" title="生成式 AI 基础"></a>生成式 AI 基础</h1><p>生成式 AI 是有史以来最强大的一项技术进步。 它使开发人员能够构建这样的应用程序：使用利用 Internet 上的大量数据进行训练的机器学习模型来生成与人类创建的内容没有差别的新内容。</p><p>生成式 AI 的功能十分强大，但也带来了一些危险，并且要求数据科学家、开发人员和参与创建生成式 AI 解决方案的其他人采用负责任的方法来识别、衡量和缓解风险。</p><p>本模块探讨了一组由 Microsoft 专家定义的负责任生成式 AI 指南。 负责任生成式 AI 指南基于 Microsoft 的负责任 AI 标准，以考虑与生成式 AI 模型相关的特定注意事项。</p><h2 id="生成式-AI-解决方案"><a href="#生成式-AI-解决方案" class="headerlink" title="生成式 AI 解决方案"></a>生成式 AI 解决方案</h2><p>Microsoft 有关负责任生成式 AI 的指南实用且可操作。 它定义了一个四阶段过程，用于在使用生成式模型时为负责任的 AI 制定和实施计划。 该过程的四个阶段分别为：</p><p>识别与计划解决方案相关的潜在危害。<br>衡量解决方案生成的输出中是否存在这些危害。<br>缓解解决方案中多个层级的危害，以最大程度地减少其存在和影响，确保就用户的潜在风险进行透明的沟通。<br>通过定义并遵循部署和运营就绪计划来负责任地运营解决方案。</p><h2 id="识别潜在危害"><a href="#识别潜在危害" class="headerlink" title="识别潜在危害"></a>识别潜在危害</h2><p>负责任生成式 AI 过程的第一个阶段是识别可能影响计划解决方案的潜在危害。 此阶段包含四个步骤，如下所示：</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/responsible-generative-ai/media/identify-harms.png"  alt="Diagram showing steps to identify, prioritize, test, and share potential harms."></p><ol><li>识别潜在危害</li><li>确定已识别危害的优先级</li><li>测试并验证优先的危害</li><li>记录并共享已验证的危害</li></ol><h2 id="1：识别潜在危害"><a href="#1：识别潜在危害" class="headerlink" title="1：识别潜在危害"></a>1：识别潜在危害</h2><p>与生成式 AI 解决方案相关的潜在危害取决于多种因素，包括用于生成输出的特定服务和模型，以及用于自定义输出的任何微调或基础数据。 生成式 AI 解决方案中的一些常见潜在危害类型包括：</p><ul><li>生成具有攻击性、贬义性或歧视性的内容。</li><li>生成包含不准确事实的内容。</li><li>生成鼓励或支持非法或不道德行为或做法的内容。</li></ul><p>若要完全了解解决方案中服务和模型的已知限制和行为，请参阅可用文档。 例如，Azure OpenAI 服务包括<a class="link"   href="https://learn.microsoft.com/zh-cn/legal/cognitive-services/openai/transparency-note" >透明度说明<i class="fas fa-external-link-alt"></i></a>，可用于了解与服务及其包含的模型相关的特定注意事项。 此外，各模型开发人员可能会提供相应的文档，例如 <a class="link"   href="https://cdn.openai.com/papers/gpt-4-system-card.pdf" >GPT-4 模型的 OpenAI 系统卡<i class="fas fa-external-link-alt"></i></a>。</p><p>请考虑查看 <a class="link"   href="https://aka.ms/RAIImpactAssessmentGuidePDF" >Microsoft 负责任 AI 影响评估指南<i class="fas fa-external-link-alt"></i></a>中的指南，并使用关联的<a class="link"   href="https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RE5cmFk" >负责任 AI 影响评估模板<i class="fas fa-external-link-alt"></i></a>来记录潜在的危害。</p><h2 id="2：确定危害的优先级"><a href="#2：确定危害的优先级" class="headerlink" title="2：确定危害的优先级"></a>2：确定危害的优先级</h2><p>对于已确定的每个潜在危害，请评估其发生的可能性以及由此产生的影响程度（如果存在）。 然后，使用此信息优先处理最可能且影响最大的危害。 此优先级排序将使你能够专注于查找和缓解解决方案中最有害的风险。</p><p>优先级排序必须考虑到解决方案的预期用途以及滥用的可能性，并且可能是主观的。 例如，假设你正在开发一个智能厨房助手，为厨师和业余厨师提供食谱帮助。 潜在的危害可能包括：</p><ul><li>该解决方案提供的烹饪时间不准确，导致食物未煮熟，可能导致生病。</li><li>当提示时，该解决方案提供了一种致命毒药的配方，这种毒药可以用日常成分制成。</li></ul><p>虽然这两种结果都不理想，但你可能会认为，该解决方案支持制造致命毒药的潜力比制造未煮熟食物的潜力具有更大的影响。 但是，鉴于该解决方案的核心使用场景，你可能还会认为该解决方案推荐不准确烹饪时间的频率可能远高于明确要求提供毒药食谱的用户数。 最终优先级确定是开发团队讨论的主题，这可能涉及咨询策略或法律专家，以便充分确定优先级。</p><h2 id="3：测试和验证是否存在危害"><a href="#3：测试和验证是否存在危害" class="headerlink" title="3：测试和验证是否存在危害"></a>3：测试和验证是否存在危害</h2><p>有了优先级列表后，可以测试解决方案以验证危害是否发生，如果发生，在什么条件下发生。 测试还可能揭示存在以前无法识别的危害，你可以将这些危害添加到列表中。</p><p>测试软件解决方案中潜在危害或漏洞的常见方法是使用“红队”测试，其中一组测试人员故意探测解决方案的弱点，并尝试生成有害结果。 前面讨论的智能厨房助手解决方案的示例测试可能包括请求有毒食谱或快速食谱，其中包含应彻底煮熟的成分。 应记录和查看红队的成功情况，以帮助确定使用该解决方案时生成有害输出的现实可能性。</p><p>注意</p><p>红队判研是一种策略，通常用于查找可能危及软件解决方案完整性的安全漏洞或其他弱点。 通过扩展此方法以从生成式 AI 中查找有害内容，可以实施负责任的 AI 过程，该流程基于并补充了现有的网络安全做法。</p><p>若要详细了解生成式 AI 解决方案的红队判研，请参阅 Azure OpenAI 服务文档中的<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/concepts/red-teaming" >红队判研大型语言模型 (LLM) 简介<i class="fas fa-external-link-alt"></i></a>。</p><p>收集证据以支持解决方案中存在潜在危害时，请记录详细信息并与利益干系人共享。 然后，应维护按优先级排列的危害列表，并在确定新的危害时添加到该列表。</p><h2 id="衡量潜在危害"><a href="#衡量潜在危害" class="headerlink" title="衡量潜在危害"></a>衡量潜在危害</h2><p>编译潜在有害输出的优先级列表后，可以测试解决方案以衡量危害的存在情况和影响。 你的目标是创建一个初始基线，用于量化解决方案在给定使用场景中产生的危害，然后在对解决方案进行迭代更改以缓解危害时，根据基线跟踪改进。</p><p>衡量系统是否存在潜在危害的通用方法包括三个步骤：</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/responsible-generative-ai/media/measure-harms.png"  alt="Diagram showing steps to prepare prompts, generate output, and measure harmful results."></p><ol><li>准备可能会导致你为系统记录的每个潜在危害的各种输入提示选项。 例如，如果你已识别的其中一个潜在危害是系统可以帮助用户制造危险毒药，请创建一系列可能会引发此结果的输入提示选项，例如“如何使用家中常见的日常化学品制造出无法检测到的毒药？”</li><li>将提示提交到系统并检索生成的输出。</li><li>应用预定义的标准来评估输出，并根据其包含的潜在危害层级对其进行分类。 分类可以像“有害”或“无害”一样简单，也可以定义一系列危害程度。 无论定义哪个类别，都必须确定可应用于输出的严格标准，以便对其进行分类。</li></ol><p>应记录衡量过程的结果并与利益干系人共享。</p><h2 id="手动和自动测试"><a href="#手动和自动测试" class="headerlink" title="手动和自动测试"></a>手动和自动测试</h2><p>在大多数情况下，应首先手动测试和评估一小部分输入，以确保测试结果一致，并且评估标准定义得足够明确。 然后，设计一种方法来使用大量测试用例自动进行测试和衡量。 自动解决方案可能包括使用分类模型来自动评估输出。</p><p>即使实现了自动方法来测试和衡量危害，也应该定期执行手动测试来验证新场景，并确保自动测试解决方案正常执行。</p><h2 id="缓解潜在危害"><a href="#缓解潜在危害" class="headerlink" title="缓解潜在危害"></a>缓解潜在危害</h2><p>确定基线以及衡量解决方案生成的有害输出的方法后，可以采取措施缓解潜在危害，并在适当时重新测试修改后的系统，将危害层级与基线进行比较。</p><p>缓解生成式 AI 解决方案中的潜在危害涉及分层方法，其中缓解技术可在四个层级中的每一层级应用，如下所示：</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/responsible-generative-ai/media/mitigate-harms.png"  alt="Diagram showing the model, safety system, application, and positioning layers of a generative AI solution."></p><ol><li><strong>Model</strong></li><li><strong>安全系统</strong></li><li><strong>元提示和接地</strong></li><li><strong>用户体验</strong></li></ol><h2 id="1：模型层级"><a href="#1：模型层级" class="headerlink" title="1：模型层级"></a>1：模型层级</h2><p>模型层级由生成式 AI 模型组成，是解决方案的核心。 例如，解决方案可能围绕 GPT-4 等模型构建。</p><p>可在模型层级应用的缓解措施包括：</p><ul><li>选择适合预期解决方案用途的模型。 例如，虽然 GPT-4 可能是一个功能强大且用途广泛的模型，但在只需对小型特定文本输入进行分类的解决方案中，更简单的模型便可提供所需的功能，同时降低生成有害内容的风险。</li><li>使用自己的训练数据<em>微调</em>基础模型，使其生成的响应更有可能与你的解决方案场景相关并契合它的范围。</li></ul><h2 id="2：安全系统层级"><a href="#2：安全系统层级" class="headerlink" title="2：安全系统层级"></a>2：安全系统层级</h2><p>安全系统层级包括平台级配置和功能，可帮助缓解危害。 例如，Azure OpenAI 服务包括对内容筛选器的支持，这些内容筛选器应用标准，根据将四个潜在危害类别（仇恨、性、暴力和自残）的内容分类为四个严重性级别（安全、低、中和高）来禁止显示提示和响应。</p><p>其他安全系统层级缓解措施可能包括滥用检测算法和警报通知，前者用于确定解决方案是否被系统性滥用（例如通过来自机器人的大量自动请求），后者用于快速响应潜在的系统滥用或有害行为。</p><h2 id="3：元提示和接地层"><a href="#3：元提示和接地层" class="headerlink" title="3：元提示和接地层"></a>3：元提示和接地层</h2><p>元提示和接地层侧重于提交到模型的提示的构造。 可在此层应用的危害缓解技术包括：</p><ul><li>指定为模型定义行为参数的元提示或系统输入。</li><li>应用提示工程将接地数据添加到输入提示，最大限度地提高相关、无害输出的可能性。</li><li>使用检索增强生成 (RAG) 方法从受信任的数据源检索上下文数据并将其包含在提示中。</li></ul><h2 id="4：用户体验层"><a href="#4：用户体验层" class="headerlink" title="4：用户体验层"></a>4：用户体验层</h2><p>用户体验层包括软件应用程序（用户通过软件应用程序与生成式 AI 模型进行交互）以及向用户和利益干系人描述解决方案使用的文档或其他用户资料。</p><p>设计应用程序用户界面以将输入限制为特定主题或类型，或者应用输入和输出验证可以降低潜在有害响应的风险。</p><p>生成式 AI 解决方案的文档和其他说明应适当透明地说明系统的功能和限制、其所基于的模型以及你已实施的缓解措施可能无法始终解决的任何潜在危害。</p><h2 id="运营负责任的生成式-AI-解决方案"><a href="#运营负责任的生成式-AI-解决方案" class="headerlink" title="运营负责任的生成式 AI 解决方案"></a>运营负责任的生成式 AI 解决方案</h2><p>识别潜在危害、开发一种方法来衡量其存在情况并在解决方案中实施缓解措施后，就可以准备好发布解决方案了。 在发布之前，需要考虑一些注意事项，以帮助你确保发布和后续运营成功。</p><h2 id="完成发布前评审"><a href="#完成发布前评审" class="headerlink" title="完成发布前评审"></a>完成发布前评审</h2><p>在发布生成式 AI 解决方案之前，请确定组织和行业的各种合规性要求，并确保相应的团队有机会查看系统及其文档。 常见的合规性评审包括：</p><ul><li>Legal</li><li>隐私</li><li>安全性</li><li>辅助功能</li></ul><h2 id="发布和运营解决方案"><a href="#发布和运营解决方案" class="headerlink" title="发布和运营解决方案"></a>发布和运营解决方案</h2><p>成功的发布需要一些规划和准备。 遵循以下指南：</p><ul><li>设计分阶段交付计划，首先将解决方案发布给一组有限的用户。 通过这种方法，你可以在向更广泛的受众发布之前收集反馈并识别问题。</li><li>创建事件响应计划，其中包括响应意外事件所花费的估计时间。</li><li>创建回滚计划，定义在发生事件时将解决方案还原到先前状态的步骤。</li><li>实现在发现有害系统响应时立即阻止这些响应的功能。</li><li>实现在发生系统滥用时阻止特定用户、应用程序或客户端 IP 地址的功能。</li><li>实现一种让用户提供反馈和报告问题的方法。 特别是，使用户能够将生成的内容报告为“不准确”、“不完整”、“有害”、“攻击性”或其他问题。</li><li>跟踪遥测数据，使你能够确定用户满意度并确定功能差距或可用性挑战。 收集的遥测数据应符合隐私法以及你自己组织的策略和对用户隐私的承诺。</li></ul><p><a class="link"   href="https://microsoftlearning.github.io/mslearn-ai-fundamentals/Instructions/Labs/14-azure-openai-content-filters.html#before-you-start" >https://microsoftlearning.github.io/mslearn-ai-fundamentals/Instructions/Labs/14-azure-openai-content-filters.html#before-you-start<i class="fas fa-external-link-alt"></i></a></p><p><strong>内容筛选器使你能够在安全系统层级禁止显示有害内容。</strong><br><strong>AI 影响评估指南记录了系统的预期使用情况，并帮助识别潜在的危害。</strong><br><strong>通过向有限的用户群发布初始版本，可以在广泛发布之前收集反馈并识别问题，从而最大程度地减少危害。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> Azure </tag>
            
            <tag> OpenAI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Azure OpenAI Natural Language</title>
      <link href="/2024/06/04/Azure-openai/"/>
      <url>/2024/06/04/Azure-openai/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Azure OpenAI 为开发人员提供了一个平台，用于在 Python 和 C# SDK 以及 REST API 的帮助下向其应用程序添加人工智能功能。 该平台提供了各种 AI 模型，每个模型都专用于不同的任务，这些任务可通过 Azure OpenAI 服务进行部署。</p><p>本模块指导你了解如何将 Azure OpenAI 构建到自己的应用程序中，为你提供一个使用生成式 AI 开发解决方案的起点。</p><h2 id="将-Azure-OpenAI-集成到应用中"><a href="#将-Azure-OpenAI-集成到应用中" class="headerlink" title="将 Azure OpenAI 集成到应用中"></a>将 Azure OpenAI 集成到应用中</h2><p>Azure OpenAI 提供 C# 和 Python SDK 以及 REST API，开发人员可以用来向其应用程序添加 AI 功能。 Azure OpenAI 中的生成式 AI 功能通过模型提供。 Azure OpenAI 服务中可用的模型属于不同的系列，每个系列都有自己的重点。 若要使用这些模型之一，需要通过 Azure OpenAI 服务进行部署。</p><p>重要</p><p>Azure OpenAI 已发布，但支持负责任地使用该服务的访问权限有限。 用户需要先<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/overview#how-do-i-get-access-to-azure-openai?azure-portal=true" >申请访问权限<i class="fas fa-external-link-alt"></i></a>并获得批准，然后才能创建 Azure OpenAI 资源。</p><h2 id="创建-Azure-OpenAI-资源"><a href="#创建-Azure-OpenAI-资源" class="headerlink" title="创建 Azure OpenAI 资源"></a>创建 Azure OpenAI 资源</h2><p>可以通过 Azure 命令行接口 (CLI) 和 Azure 门户部署 Azure OpenAI 资源。 通过 Azure 门户创建 Azure OpenAI 资源类似于部署单个 Azure AI 服务资源，并且是 Azure AI 服务的一部分。</p><ol><li>导航到 <a class="link"   href="https://portal.azure.com/?azure-portal=true" >Azure 门户<i class="fas fa-external-link-alt"></i></a></li><li>搜索 Azure OpenAI，将其选中，然后单击“创建”</li><li>为空字段输入适当的值，然后创建资源。</li></ol><p>目前 Azure OpenAI 可能部署的区域有限。 选择距离所在物理位置最近的区域。</p><p>创建资源后，你将获得可在应用中使用的密钥和终结点。</p><h2 id="选择和部署模型"><a href="#选择和部署模型" class="headerlink" title="选择和部署模型"></a>选择和部署模型</h2><p>每个模型系列擅长不同的任务，并且每个系列中模型具有不同的功能。 模型系列分为三个主要系列：</p><ul><li><strong>生成式预训练转换器 (GPT)</strong> - 能够理解和生成自然语言和某些代码的模型。 这些模型最适合常规任务、对话和聊天格式。</li><li><strong>代码</strong>（<code>gpt-3</code> 及更早版本） - 代码模型基于 GPT 模型构建，并通过数百万行代码进行训练。 这些模型可以理解和生成代码，包括解释注释或自然语言以生成代码。 <code>gpt-35-turbo</code> 和更高版本的模型包含此代码功能，而无需单独的代码模型。</li><li>嵌入 - 这些模型可以理解和使用嵌入，这是机器学习模型和算法可以使用的特殊数据格式。</li></ul><p>本模块重点介绍常规 GPT 模型，其他模块将介绍其他模型。</p><p>对于较旧的模型，模型系列和功能会在基础模型的名称中有所体现：如 <code>text-davinci-003</code>，该名称指定它是一个文本模型，具有 <code>davinci</code> 级别的功能，并带有标识符 <code>3</code>。 有关模型、功能级别和命名约定的详细信息，请参阅 <a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/openai/concepts/models?azure-portal=true" >Azure OpenAI 模型文档<i class="fas fa-external-link-alt"></i></a>页。</p><p>较新的模型会指定第几代 <code>gpt</code>，以及它们是否为 <code>turbo</code> 版本，例如 <code>gpt-35-turbo</code> 表示 GPT 3.5 Turbo 模型。</p><p>若要部署模型供你使用，请导航到 <a class="link"   href="https://oai.azure.com/?azure-portal=true" >Azure OpenAI Studio<i class="fas fa-external-link-alt"></i></a> 并转到“部署”页。 本模块后面的实验室详细介绍了如何执行此操作。</p><h2 id="已部署模型的身份验证和规范"><a href="#已部署模型的身份验证和规范" class="headerlink" title="已部署模型的身份验证和规范"></a>已部署模型的身份验证和规范</h2><p>在 Azure OpenAI 中部署模型时，选择一个部署名称来指定它。 配置应用时，需要指定资源终结点、密钥和部署名称，以指定要向其发送请求的部署模型。 这使你能够在同一资源中部署各种模型，并根据任务向相应的模型发出请求。</p><h2 id="提示设计"><a href="#提示设计" class="headerlink" title="提示设计"></a>提示设计</h2><p>输入提示的写入方式在 AI 模型的响应方式中起着很大的作用。 例如，如果出现简单请求（如“什么是 Azure OpenAI”）的提示，通常会获得类似于使用搜索引擎的通用答案。</p><p>但是，如果在你的答复中提供有关所需内容的详细信息，则会获得更具体的答案。 例如，假定出现以下提示：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Classify the following news headline into 1 of the following categories: Business, Tech, Politics, Sport, Entertainment</span><br><span class="line"></span><br><span class="line">Headline 1: Donna Steffensen Is Cooking Up a New Kind of Perfection. The Internet’s most beloved cooking guru has a buzzy new book and a fresh new perspective</span><br><span class="line">Category: Entertainment</span><br><span class="line"></span><br><span class="line">Headline 2: Major Retailer Announces Plans to Close Over 100 Stores</span><br><span class="line">Category:</span><br></pre></td></tr></table></figure><p>你可能会在标题下看到“类别:”，其中填写了“业务”。</p><p>可以在 Azure OpenAI Studio Playground 中的“示例”下拉列表中找到与此类似的几个示例。 尽可能详细描述来自模型的响应中所需的内容，你可能会惊讶于它是多么有见地！</p><p>注意</p><p>无法大胆地假设来自 AI 模型的答案是事实或正确。 负责开发和部署 AI 系统的团队或个人应努力识别、衡量和减轻危害。 你有责任验证来自 AI 模型的任何响应，并负责任地使用 AI。 有关如何负责任地使用 Azure OpenAI 模型的进一步指南，请查看 <a class="link"   href="https://learn.microsoft.com/zh-cn/legal/cognitive-services/openai/transparency-note?azure-portal=true" >Microsoft 关于 Azure OpenAI 的透明度说明<i class="fas fa-external-link-alt"></i></a>。</p><p>可在<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/concepts/prompt-engineering?azure-portal=true" >提示工程<i class="fas fa-external-link-alt"></i></a>文档页中找到更多详细信息。</p><h2 id="可用的终结点"><a href="#可用的终结点" class="headerlink" title="可用的终结点"></a>可用的终结点</h2><p>可以通过 REST API 或当前可用于 Python 和 C# 的 SDK 访问 Azure OpenAI。 可用于与已部署模型交互的终结点的使用方式不同，并且某些终结点只能使用某些模型。 可用的终结点包括：</p><ul><li><strong>完成</strong> - 模型接受一个输入提示，并生成一个或多个预测的完成。 你将在 studio 中看到此操场，但在本模块中不会深入讨论。</li><li><strong>ChatCompletion</strong> - 模型接受聊天对话形式的输入（其中角色使用他们发送的消息指定），然后生成下一个聊天完成。</li><li><strong>嵌入</strong> - 模型接受输入并返回该输入的矢量表示形式。</li></ul><p>例如，<code>ChatCompletion</code> 的输入是每条消息都有明确定义角色的会话：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a helpful assistant, teaching people about AI.&quot;&#125;,</span><br><span class="line">&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Does Azure OpenAI support multiple languages?&quot;&#125;,</span><br><span class="line">&#123;&quot;role&quot;: &quot;assistant&quot;, &quot;content&quot;: &quot;Yes, Azure OpenAI supports several languages, and can translate between them.&quot;&#125;,</span><br><span class="line">&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Do other Azure AI Services support translation too?&quot;&#125;</span><br></pre></td></tr></table></figure><p>当你为 AI 模型提供一个真实的对话时，它可以生成具有更准确的语气、措辞和上下文的更好响应。 <code>ChatCompletion</code> 终结点通过发送与下一个用户消息的聊天历史记录，使 ChatGPT 模型能够进行更真实的对话。</p><p><code>ChatCompletion</code> 还支持非聊天场景，例如摘要或实体提取。 可通过提供简短对话、指定系统信息和所需内容，并让用户输入信息来实现此操作。 例如，如果要生成工作描述，请向 <code>ChatCompletion</code> 提供类似于以下对话输入的内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are an assistant designed to write intriguing job descriptions. &quot;&#125;,</span><br><span class="line">&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Write a job description for the following job title: &#x27;Business Intelligence Analyst&#x27;. It should include responsibilities, required qualifications, and highlight benefits like time off and flexible hours.&quot;&#125;</span><br></pre></td></tr></table></figure><p>注意</p><p><code>Completion</code> 适用于所有 <code>gpt-3</code> 生成模型，而 <code>ChatCompletion</code> 是 <code>gpt-4</code> 模型唯一支持的选项，并且是使用 <code>gpt-35-turbo</code> 模型时的首选终结点。 本模块中的实验将 <code>gpt-35-turbo</code> 与 <code>ChatCompletion</code> 终结点结合使用。</p><h2 id="使用-Azure-OpenAI-REST-API"><a href="#使用-Azure-OpenAI-REST-API" class="headerlink" title="使用 Azure OpenAI REST API"></a>使用 Azure OpenAI REST API</h2><p>Azure OpenAI 提供了一个 REST API 用于交互和生成响应，开发人员可以使用它将 AI 功能添加到其应用程序。 本单元介绍 API 的示例用法、输入和输出。</p><p>注意</p><p>在与 API 交互之前，必须在 Azure 门户中创建 Azure OpenAI 资源，在该资源中部署模型，并检索终结点和密钥。 请查看 <a class="link"   href="https://learn.microsoft.com/zh-cn/training/modules/get-started-openai/" >Azure OpenAI 服务入门<i class="fas fa-external-link-alt"></i></a>，了解如何执行此操作。</p><p>每次调用 REST API 时，都需要 Azure OpenAI 资源的终结点和密钥，以及为部署的模型提供的名称。 在以下示例中，使用以下占位符：</p><table><thead><tr><th>占位符名称</th><th>值</th></tr></thead><tbody><tr><td><code>YOUR_ENDPOINT_NAME</code></td><td>此基本终结点位于 Azure 门户的“密钥和终结点”部分。 它是资源的基本终结点，例如 <code>https://sample.openai.azure.com/</code>。</td></tr><tr><td><code>YOUR_API_KEY</code></td><td>密钥位于 Azure 门户的“密钥和终结点”部分。 可以在资源中使用任一密钥。</td></tr><tr><td><code>YOUR_DEPLOYMENT_NAME</code></td><td>此部署名称是在 Azure OpenAI Studio 中部署模型时提供的名称。</td></tr></tbody></table><h2 id="聊天完成"><a href="#聊天完成" class="headerlink" title="聊天完成"></a>聊天完成</h2><p>在 Azure OpenAI 资源中部署模型后，可以使用 <code>POST</code> 请求向服务发送提示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl https://YOUR_ENDPOINT_NAME.openai.azure.com/openai/deployments/YOUR_DEPLOYMENT_NAME/chat/completions?api-version=2023-03-15-preview \</span><br><span class="line">  -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">  -H &quot;api-key: YOUR_API_KEY&quot; \</span><br><span class="line">  -d &#x27;&#123;&quot;messages&quot;:[&#123;&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a helpful assistant, teaching people about AI.&quot;&#125;,</span><br><span class="line">&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Does Azure OpenAI support multiple languages?&quot;&#125;,</span><br><span class="line">&#123;&quot;role&quot;: &quot;assistant&quot;, &quot;content&quot;: &quot;Yes, Azure OpenAI supports several languages, and can translate between them.&quot;&#125;,</span><br><span class="line">&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Do other Azure AI Services support translation too?&quot;&#125;]&#125;&#x27;</span><br></pre></td></tr></table></figure><p>来自 API 的响应将类似于以下 JSON：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;id&quot;: &quot;chatcmpl-6v7mkQj980V1yBec6ETrKPRqFjNw9&quot;,</span><br><span class="line">    &quot;object&quot;: &quot;chat.completion&quot;,</span><br><span class="line">    &quot;created&quot;: 1679001781,</span><br><span class="line">    &quot;model&quot;: &quot;gpt-35-turbo&quot;,</span><br><span class="line">    &quot;usage&quot;: &#123;</span><br><span class="line">        &quot;prompt_tokens&quot;: 95,</span><br><span class="line">        &quot;completion_tokens&quot;: 84,</span><br><span class="line">        &quot;total_tokens&quot;: 179</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;choices&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;message&quot;:</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;role&quot;: &quot;assistant&quot;,</span><br><span class="line">                    &quot;content&quot;: &quot;Yes, other Azure AI Services also support translation. Azure AI Services offer translation between multiple languages for text, documents, or custom translation through Azure AI Services Translator.&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">            &quot;finish_reason&quot;: &quot;stop&quot;,</span><br><span class="line">            &quot;index&quot;: 0</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>REST 终结点允许指定其他可选输入参数，如 <code>temperature</code> 和 <code>max_tokens</code> 等。 如果要在请求中包含任何这些参数，请根据请求将它们添加到输入数据中。</p><h2 id="嵌入"><a href="#嵌入" class="headerlink" title="嵌入"></a>嵌入</h2><p>嵌入对机器学习模型轻松使用的特定格式很有帮助。 若要从输入文本生成嵌入，请向 <code>embeddings</code> 终结点发出 <code>POST</code> 请求。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl https://YOUR_ENDPOINT_NAME.openai.azure.com/openai/deployments/YOUR_DEPLOYMENT_NAME/embeddings?api-version=2022-12-01 \</span><br><span class="line">  -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">  -H &quot;api-key: YOUR_API_KEY&quot; \</span><br><span class="line">  -d &quot;&#123;\&quot;input\&quot;: \&quot;The food was delicious and the waiter...\&quot;&#125;&quot;</span><br></pre></td></tr></table></figure><p>生成嵌入时，请确保在 Azure OpenAI 中使用用于嵌入的模型。 这些模型以 <code>text-embedding</code> 或 <code>text-similarity</code> 开头，具体取决于你要查找的功能。</p><p>来自 API 的响应将类似于以下 JSON：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;object&quot;: &quot;list&quot;,</span><br><span class="line">  &quot;data&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;object&quot;: &quot;embedding&quot;,</span><br><span class="line">      &quot;embedding&quot;: [</span><br><span class="line">        0.0172990688066482523,</span><br><span class="line">        -0.0291879814639389515,</span><br><span class="line">        ....</span><br><span class="line">        0.0134544348834753042,</span><br><span class="line">      ],</span><br><span class="line">      &quot;index&quot;: 0</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  &quot;model&quot;: &quot;text-embedding-ada:002&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用-Azure-OpenAI-SDK"><a href="#使用-Azure-OpenAI-SDK" class="headerlink" title="使用 Azure OpenAI SDK"></a>使用 Azure OpenAI SDK</h2><p>除了上一单元中介绍的 REST API 外，用户还可以通过 C# 和 Python SDK 访问 Azure OpenAI 模型。 通过 REST 和这些 SDK 提供相同的功能。</p><p>注意</p><p>在使用任一 SDK 与 API 交互之前，必须在 Azure 门户中创建 Azure OpenAI 资源，在该资源中部署模型，并检索终结点和密钥。 请查看 <a class="link"   href="https://learn.microsoft.com/zh-cn/training/modules/get-started-openai/" >Azure OpenAI 服务入门<i class="fas fa-external-link-alt"></i></a>，了解如何执行此操作。</p><p>对于本单元中介绍的 SDK，需要 Azure OpenAI 资源的终结点和密钥，以及为部署的模型提供的名称。 在以下代码片段中，使用以下占位符：</p><table><thead><tr><th>占位符名称</th><th>值</th></tr></thead><tbody><tr><td><code>YOUR_ENDPOINT_NAME</code></td><td>此基本终结点位于 Azure 门户的“密钥和终结点”部分。 它是资源的基本终结点，例如 <code>https://sample.openai.azure.com/</code>。</td></tr><tr><td><code>YOUR_API_KEY</code></td><td>密钥位于 Azure 门户的“密钥和终结点”部分。 可以在资源中使用任一密钥。</td></tr><tr><td><code>YOUR_DEPLOYMENT_NAME</code></td><td>此部署名称是在 Azure OpenAI Studio 中部署模型时提供的名称。</td></tr></tbody></table><h2 id="安装库"><a href="#安装库" class="headerlink" title="安装库"></a>安装库</h2><p>首先，安装首选语言的客户端库。 C# SDK 是 REST API 的 .NET 适应，专为 Azure OpenAI 而构建，但它可用于连接到 Azure OpenAI 资源或非 Azure OpenAI 终结点。 Python SDK 由 OpenAI 生成和维护。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package Azure.AI.OpenAI --prerelease</span><br></pre></td></tr></table></figure><h2 id="配置应用以访问-Azure-OpenAI-资源"><a href="#配置应用以访问-Azure-OpenAI-资源" class="headerlink" title="配置应用以访问 Azure OpenAI 资源"></a>配置应用以访问 Azure OpenAI 资源</h2><p>每种语言的配置略有不同，但两种语言都需要设置相同的参数。 必需的参数是 <code>endpoint</code>、<code>key</code> 和部署的名称，当向模型发送提示时，部署的名称被称为 <code>engine</code>。</p><p>将库添加到应用，并为客户端设置所需的参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// Add OpenAI library</span><br><span class="line">using Azure.AI.OpenAI;</span><br><span class="line"></span><br><span class="line">// Define parameters and initialize the client</span><br><span class="line">string endpoint = &quot;&lt;YOUR_ENDPOINT_NAME&gt;&quot;;</span><br><span class="line">string key = &quot;&lt;YOUR_API_KEY&gt;&quot;;</span><br><span class="line">string deploymentName = &quot;&lt;YOUR_DEPLOYMENT_NAME&gt;&quot;; </span><br><span class="line"></span><br><span class="line">OpenAIClient client = new OpenAIClient(new Uri(endpoint), new AzureKeyCredential(key));</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Add OpenAI library</span></span><br><span class="line"><span class="keyword">from</span> openai <span class="keyword">import</span> AzureOpenAI</span><br><span class="line"></span><br><span class="line">deployment_name = <span class="string">&#x27;&lt;YOUR_DEPLOYMENT_NAME&gt;&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># Initialize the Azure OpenAI client</span></span><br><span class="line">client = AzureOpenAI(</span><br><span class="line">        azure_endpoint = <span class="string">&#x27;&lt;YOUR_ENDPOINT_NAME&gt;&#x27;</span>, </span><br><span class="line">        api_key=<span class="string">&#x27;&lt;YOUR_API_KEY&gt;&#x27;</span>,  </span><br><span class="line">        api_version=<span class="string">&quot;20xx-xx-xx&quot;</span> <span class="comment">#  Target version of the API, such as 2024-02-15-preview</span></span><br><span class="line">        )</span><br></pre></td></tr></table></figure><h2 id="调用-Azure-OpenAI-资源"><a href="#调用-Azure-OpenAI-资源" class="headerlink" title="调用 Azure OpenAI 资源"></a>调用 Azure OpenAI 资源</h2><p>配置与 Azure OpenAI 的连接后，将提示发送给模型。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// Build completion options object</span><br><span class="line">ChatCompletionsOptions chatCompletionsOptions = new ChatCompletionsOptions()</span><br><span class="line">&#123;</span><br><span class="line">    Messages =</span><br><span class="line">    &#123;</span><br><span class="line">        new ChatRequestSystemMessage(&quot;You are a helpful AI bot.&quot;),</span><br><span class="line">        new ChatRequestUserMessage(&quot;What is Azure OpenAI?&quot;),</span><br><span class="line">    &#125;,</span><br><span class="line">    DeploymentName = deploymentName</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">// Send request to Azure OpenAI model</span><br><span class="line">ChatCompletions response = client.GetChatCompletions(chatCompletionsOptions);</span><br><span class="line"></span><br><span class="line">// Print the response</span><br><span class="line">string completion = response.Choices[0].Message.Content;</span><br><span class="line">Console.WriteLine(&quot;Response: &quot; + completion + &quot;\n&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">response = client.chat.completions.create(</span><br><span class="line">    model=deployment_name,</span><br><span class="line">    messages=[</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You are a helpful assistant.&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;What is Azure OpenAI?&quot;</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">)</span><br><span class="line">generated_text = response.choices[<span class="number">0</span>].message.content</span><br><span class="line"></span><br><span class="line"><span class="comment"># Print the response</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Response: &quot;</span> + generated_text + <span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure><p>响应对象包含多个值，例如 <code>total_tokens</code> 和 <code>finish_reason</code>。 响应对象的完成类似于以下完成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;Azure OpenAI is a cloud-based artificial intelligence (AI) service that offers a range of tools and services for developing and deploying AI applications. Azure OpenAI provides a variety of services for training and deploying machine learning models, including a managed service for training and deploying deep learning models, a managed service for deploying machine learning models, and a managed service for managing and deploying machine learning models.&quot;</span><br></pre></td></tr></table></figure><p>在 C# 和 Python 中，调用可以包含可选参数，其中包括 <code>temperature</code> 和 <code>max_tokens</code>。 本模块的实验室中包含了使用这些参数的示例。</p><p>向 Azure OpenAI 资源发出请求需要哪些资源值？ 密钥、终结点和部署名称<br>哪三个终结点可用于与已部署的 Azure OpenAI 模型交互？<br>Completion、ChatCompletion 和 Embeddings<br>哪一个是 Azure OpenAI 中为会话的下一个 Completion 建模的最佳可用终结点？<br>ChatCompletion</p><p>来自</p><p><a class="link"   href="https://learn.microsoft.com/zh-cn/collections/e6kjarx0q38?WT.mc_id=cloudskillschallenge_0bc0dea3-e83b-44f1-99a1-f91a1c041817" >https://learn.microsoft.com/zh-cn/collections/e6kjarx0q38?WT.mc_id=cloudskillschallenge_0bc0dea3-e83b-44f1-99a1-f91a1c041817<i class="fas fa-external-link-alt"></i></a></p><!-- https://learn.microsoft.com/zh-cn/training/modules/get-started-openai/1-introduction -->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> Azure </tag>
            
            <tag> OpenAI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HarmonyOS Tabs Component</title>
      <link href="/2024/06/01/HarmonyOS-Tabs-Component/"/>
      <url>/2024/06/01/HarmonyOS-Tabs-Component/</url>
      
        <content type="html"><![CDATA[<h1 id="🔮Tabs"><a href="#🔮Tabs" class="headerlink" title="🔮Tabs"></a>🔮Tabs</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Tabs</span>()&#123;</span><br><span class="line"><span class="title class_">TabContent</span>()&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>example</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Tabs</span>(&#123;<span class="attr">barPosition</span>:<span class="title class_">BarPosition</span>.<span class="property">End</span>&#125;)&#123;</span><br><span class="line">    <span class="title class_">ForEach</span>(<span class="variable language_">this</span>.<span class="property">ilist</span>,<span class="function">(<span class="params">item,index</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="title class_">TabContent</span>()&#123;</span><br><span class="line">        <span class="title class_">Column</span>( )&#123;</span><br><span class="line">          <span class="title class_">Text</span>(item.<span class="property">title</span>)</span><br><span class="line">            .<span class="title function_">fontSize</span>(<span class="string">&#x27;18fp&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        .<span class="title function_">width</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">        .<span class="title function_">height</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">        .<span class="title function_">backgroundColor</span>(<span class="string">&#x27;#FFFFFF&#x27;</span>)</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      .<span class="title function_">tabBar</span>(<span class="variable language_">this</span>.<span class="title function_">tabTile</span>(index,item.<span class="property">title</span>,item.<span class="property">url1</span>,item.<span class="property">url2</span>))</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">   &#125;</span><br><span class="line">  .<span class="title function_">vertical</span>(<span class="literal">false</span>)</span><br><span class="line">  .<span class="title function_">scrollable</span>(<span class="literal">true</span>)<span class="comment">//huadong</span></span><br><span class="line">  .<span class="title function_">animationDuration</span>(<span class="number">400</span>)</span><br><span class="line">  .<span class="title function_">width</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">  .<span class="title function_">backgroundColor</span>(<span class="string">&#x27;#fffff1&#x27;</span>)</span><br><span class="line">  <span class="comment">//.height(&#x27;100vp&#x27;)</span></span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">curIndex</span> = value;</span><br><span class="line">  &#125;)</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h1 id="🎮️tab-data"><a href="#🎮️tab-data" class="headerlink" title="🎮️tab data"></a>🎮️tab data</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">interface  <span class="title class_">INav</span>&#123;</span><br><span class="line">  <span class="attr">title</span>:string;</span><br><span class="line">  <span class="attr">url1</span>:<span class="title class_">Resource</span>;</span><br><span class="line">  url2 :<span class="title class_">Resource</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">  @<span class="title class_">State</span> <span class="attr">ilist</span>:<span class="title class_">INav</span>[]=[&#123;</span><br><span class="line">    <span class="attr">title</span>:<span class="string">&#x27;index&#x27;</span>,</span><br><span class="line">    <span class="attr">url1</span>:$r(<span class="string">&#x27;app.media.icon&#x27;</span>),</span><br><span class="line">    <span class="attr">url2</span>:$r(<span class="string">&#x27;app.media.icon2&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>:<span class="string">&#x27;hot&#x27;</span>,</span><br><span class="line">      <span class="attr">url1</span>:$r(<span class="string">&#x27;app.media.icon&#x27;</span>),</span><br><span class="line">      <span class="attr">url2</span>:$r(<span class="string">&#x27;app.media.icon2&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">title</span>:<span class="string">&#x27;my&#x27;</span>,</span><br><span class="line">      <span class="attr">url1</span>:$r(<span class="string">&#x27;app.media.icon&#x27;</span>),</span><br><span class="line">      <span class="attr">url2</span>:$r(<span class="string">&#x27;app.media.icon2&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  ];</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>barPosition:BarPosition.End 底部</p><p>barPosition:BarPosition.Start 顶部</p><h1 id="🪅Component-swpier"><a href="#🪅Component-swpier" class="headerlink" title="🪅Component  swpier"></a>🪅Component  swpier</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Component</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>  struct swiper1&#123;</span><br><span class="line"></span><br><span class="line">  public <span class="attr">ilist</span>:<span class="title class_">Array</span>&lt;<span class="title class_">Resource</span>&gt; =[</span><br><span class="line">    $r(<span class="string">&#x27;app.media.22222&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.11111&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.22222&#x27;</span>)</span><br><span class="line">  ]</span><br><span class="line">  <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">Column</span>()&#123;</span><br><span class="line">      <span class="title class_">Swiper</span>()&#123;</span><br><span class="line">        <span class="title class_">ForEach</span>(<span class="variable language_">this</span>.<span class="property">ilist</span>,<span class="function">(<span class="params">item,index</span>)=&gt;</span>&#123;</span><br><span class="line">          <span class="title class_">Image</span>(item).<span class="title function_">width</span>(<span class="string">&#x27;98%&#x27;</span>).<span class="title function_">height</span>(<span class="string">&#x27;160vp&#x27;</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">      .<span class="title function_">autoPlay</span>(<span class="literal">true</span>)</span><br><span class="line">      .<span class="title function_">interval</span>(<span class="number">3000</span>)</span><br><span class="line">      .<span class="title function_">duration</span>(<span class="number">400</span>)</span><br><span class="line">      .<span class="title function_">indicator</span>(<span class="literal">true</span>)</span><br><span class="line">      .<span class="title function_">itemSpace</span>(<span class="number">5</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>add img…</p><p>index import</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">swipert</span>()</span><br><span class="line">   .<span class="title function_">height</span>(<span class="string">&#x27;80%&#x27;</span>)</span><br><span class="line">   .<span class="title function_">margin</span>(<span class="string">&#x27;10vp&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="🎰Component-nav-Grid"><a href="#🎰Component-nav-Grid" class="headerlink" title="🎰Component nav Grid"></a>🎰Component nav Grid</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">interface inavit</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">title</span>:string,</span><br><span class="line">  <span class="attr">img</span>:<span class="title class_">Resource</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="title class_">Component</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>  struct homenav&#123;</span><br><span class="line"></span><br><span class="line">  public <span class="attr">ilist</span>:<span class="title class_">Array</span>&lt;inavit&gt; =[</span><br><span class="line">  &#123;<span class="attr">title</span>:<span class="string">&#x27;w&#x27;</span>,<span class="attr">img</span>: $r(<span class="string">&#x27;app.media.110&#x27;</span>)&#125;,</span><br><span class="line">&#123;<span class="attr">title</span>:<span class="string">&#x27;z&#x27;</span>,<span class="attr">img</span>: $r(<span class="string">&#x27;app.media.111&#x27;</span>)&#125;,</span><br><span class="line">&#123;<span class="attr">title</span>:<span class="string">&#x27;r&#x27;</span>,<span class="attr">img</span>: $r(<span class="string">&#x27;app.media.120&#x27;</span>)&#125;,</span><br><span class="line">&#123;<span class="attr">title</span>:<span class="string">&#x27;y&#x27;</span>,<span class="attr">img</span>: $r(<span class="string">&#x27;app.media.129&#x27;</span>)&#125;,</span><br><span class="line">&#123;<span class="attr">title</span>:<span class="string">&#x27;j&#x27;</span>,<span class="attr">img</span>: $r(<span class="string">&#x27;app.media.140&#x27;</span>)&#125;,</span><br><span class="line">&#123;<span class="attr">title</span>:<span class="string">&#x27;y&#x27;</span>,<span class="attr">img</span>: $r(<span class="string">&#x27;app.media.150&#x27;</span>)&#125;,</span><br><span class="line">&#123;<span class="attr">title</span>:<span class="string">&#x27;c&#x27;</span>,<span class="attr">img</span>:  $r(<span class="string">&#x27;app.media.163&#x27;</span>)&#125;,</span><br><span class="line"> &#123;<span class="attr">title</span>:<span class="string">&#x27;j&#x27;</span>,<span class="attr">img</span>: $r(<span class="string">&#x27;app.media.173&#x27;</span>)&#125;</span><br><span class="line">  ]</span><br><span class="line">  <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">Column</span>()&#123;</span><br><span class="line">      <span class="title class_">Grid</span>()&#123;</span><br><span class="line"></span><br><span class="line">          <span class="title class_">ForEach</span>(<span class="variable language_">this</span>.<span class="property">ilist</span>,<span class="function">(<span class="params">item:inavit,index:number</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="title class_">GridItem</span>()&#123;</span><br><span class="line">              <span class="title class_">Column</span>(&#123;<span class="attr">space</span>:<span class="number">5</span>&#125;)&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="title class_">Image</span>(item.<span class="property">img</span>).<span class="title function_">width</span>(<span class="string">&#x27;50vp&#x27;</span>).<span class="title function_">height</span>(<span class="string">&#x27;50vp&#x27;</span>)</span><br><span class="line">                <span class="title class_">Text</span>(item.<span class="property">title</span>).<span class="title function_">fontSize</span>(<span class="string">&#x27;18fp&#x27;</span>)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">      .<span class="title function_">columnsTemplate</span>(<span class="string">&#x27;1fr 1fr 1fr 1fr&#x27;</span>)</span><br><span class="line">      .<span class="title function_">rowsGap</span>(<span class="string">&#x27;10&#x27;</span>)</span><br><span class="line">      .<span class="title function_">margin</span>(<span class="string">&#x27;10&#x27;</span>)</span><br><span class="line">      <span class="comment">//.backgroundColor()</span></span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>index import</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">homenav1</span>()</span><br><span class="line">  .<span class="title function_">height</span>(<span class="string">&#x27;60%&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="🕹️Component-List"><a href="#🕹️Component-List" class="headerlink" title="🕹️Component List"></a>🕹️Component List</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">@<span class="title class_">Component</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>  struct homelist&#123;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">Column</span>()&#123;</span><br><span class="line">      <span class="title class_">List</span>()</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="title class_">ListItem</span>()&#123;</span><br><span class="line"></span><br><span class="line">          <span class="title class_">Image</span>($r(<span class="string">&#x27;app.media.666&#x27;</span>))</span><br><span class="line">            .<span class="title function_">objectFit</span>(<span class="title class_">ImageFit</span>.<span class="property">Cover</span>)</span><br><span class="line">            .<span class="title function_">aspectRatio</span>(<span class="number">2.7</span>)</span><br><span class="line">            .<span class="title function_">margin</span>(<span class="string">&#x27;10vp&#x27;</span>)</span><br><span class="line">         &#125;</span><br><span class="line">        <span class="title class_">ListItem</span>()&#123;</span><br><span class="line"></span><br><span class="line">          <span class="title class_">Image</span>($r(<span class="string">&#x27;app.media.777&#x27;</span>))</span><br><span class="line">            .<span class="title function_">objectFit</span>(<span class="title class_">ImageFit</span>.<span class="property">Cover</span>)</span><br><span class="line">            .<span class="title function_">aspectRatio</span>(<span class="number">2.7</span>)</span><br><span class="line">            .<span class="title function_">margin</span>(<span class="string">&#x27;10vp&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Text(&#x27;hhhh&#x27;)</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Err<br>does not meet UI component syntax.<br>组件声明错误</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Azure OpenAI Solution</title>
      <link href="/2024/06/01/Azure-AI/"/>
      <url>/2024/06/01/Azure-AI/</url>
      
        <content type="html"><![CDATA[<h1 id="开始使用-Azure-OpenAI-服务"><a href="#开始使用-Azure-OpenAI-服务" class="headerlink" title="开始使用 Azure OpenAI 服务"></a>开始使用 Azure OpenAI 服务</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>假设你想要生成一个汇总文本和建议代码的支持应用程序。 若要生成此应用，需要利用 ChatGPT 中显示的功能，ChatGPT 是 OpenAI 研究公司构建的聊天机器人，它接受用户的自然语言输入，并返回机器创建的类人响应。</p><p>生成式 AI 模型支持 ChatGPT 基于自然语言提示生成新内容（如文本、代码和图像）的能力。 许多生成 AI 模型是<a class="link"   href="https://learn.microsoft.com/zh-cn/dotnet/machine-learning/deep-learning-overview?azure-portal=true" >深度学习算法<i class="fas fa-external-link-alt"></i></a>的子集。 这些算法支持视觉、语音、语言、决策、搜索等各种工作负载。</p><p>Azure OpenAI 服务将这些生成式 AI 模型引入 Azure 平台，使你能够开发功能强大的 AI 解决方案，这些解决方案受益于 Azure 云平台提供的其他服务的安全性、可伸缩性和集成。 这些模型可用于通过 REST API、各种 SDK 和 Studio 接口生成应用程序。 本模块将指导你完成 Azure OpenAI Studio 体验，为你使用生成式 AI 进一步开发解决方案奠定了基础。</p><h2 id="访问-Azure-OpenAI-服务"><a href="#访问-Azure-OpenAI-服务" class="headerlink" title="访问 Azure OpenAI 服务"></a>访问 Azure OpenAI 服务</h2><p>使用 Azure OpenAI 构建生成型 AI 解决方案的第一步是在 Azure 订阅中预配 Azure OpenAI 资源。 Azure OpenAI 服务目前处于受限访问状态。 用户需要在 <a class="link"   href="https://aka.ms/oai/access?azure-portal=true" >https://aka.ms/oai/access<i class="fas fa-external-link-alt"></i></a> 上申请服务访问权限。</p><p>注意</p><p>Azure OpenAI 服务已发布，但支持以合乎道德的方式使用该服务的访问权限有限。 可以在<a class="link"   href="https://learn.microsoft.com/zh-cn/legal/cognitive-services/openai/transparency-note?azure-portal=true" >此处<i class="fas fa-external-link-alt"></i></a>阅读 Azure OpenAI 服务的 Microsoft 透明度说明。</p><p>有权访问 Azure OpenAI 服务后，可以通过在 <a class="link"   href="https://portal.azure.com/?azure-portal=true" >Azure 门户<i class="fas fa-external-link-alt"></i></a>中创建资源或使用 Azure 命令行接口 (CLI) 开始。</p><h2 id="在-Azure-门户中创建-Azure-OpenAI-服务资源"><a href="#在-Azure-门户中创建-Azure-OpenAI-服务资源" class="headerlink" title="在 Azure 门户中创建 Azure OpenAI 服务资源"></a>在 Azure 门户中创建 Azure OpenAI 服务资源</h2><p>创建 Azure OpenAI 服务资源时，需要提供订阅名称、资源组名称、区域、唯一实例名称，并选择定价层。 <img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/get-started-openai/media/create-azure-openai-portal.png"  alt="Screenshot of the Azure portal&#39;s page to create an Azure OpenAI Service resource."></p><h2 id="在-Azure-CLI-中创建-Azure-OpenAI-服务资源"><a href="#在-Azure-CLI-中创建-Azure-OpenAI-服务资源" class="headerlink" title="在 Azure CLI 中创建 Azure OpenAI 服务资源"></a>在 Azure CLI 中创建 Azure OpenAI 服务资源</h2><p>若要从 CLI 创建 Azure OpenAI 服务资源，请参阅此示例，并将以下变量替换为自己的变量：</p><ul><li>MyOpenAIResource：替换为资源的唯一名称</li><li>OAIResourceGroup：替换为资源组名称</li><li>eastus：替换为要部署资源的区域</li><li>subscriptionID：替换为订阅 ID</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">az cognitiveservices account create \</span><br><span class="line">-n MyOpenAIResource \</span><br><span class="line">-g OAIResourceGroup \</span><br><span class="line">-l eastus \</span><br><span class="line">--kind OpenAI \</span><br><span class="line">--sku s0 \</span><br><span class="line">--subscription subscriptionID</span><br></pre></td></tr></table></figure><p>注意</p><p>可以通过 CLI 命令 <code>az account list-locations</code> 查找可用于服务的区域。 若要了解如何通过 CLI 登录到 Azure 并创建 Azure 组，请参阅<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/how-to/create-resource?pivots=cli#sign-in-to-the-cli?azure-portal=true" >此处的文档<i class="fas fa-external-link-alt"></i></a>。</p><h3 id="区域可用性"><a href="#区域可用性" class="headerlink" title="区域可用性"></a>区域可用性</h3><p>Azure OpenAI 服务提供了对多种类型的模型的访问。 某些模型仅在选定区域中可用。 有关区域可用性，请参阅 <a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/concepts/models#model-summary-table-and-region-availability/?azure-portal=true" >Azure OpenAI 模型可用性指南<i class="fas fa-external-link-alt"></i></a>。 可以为每个区域创建两个 Azure OpenAI 资源。</p><p>Azure OpenAI Studio 提供对模型管理、部署、试验、自定义和学习资源的访问权限。</p><p>创建资源后，可以通过 Azure 门户访问 Azure OpenAI Studio，也可以在 <a class="link"   href="https://oai.azure.com/?azure-portal=true" >https://oai.azure.com<i class="fas fa-external-link-alt"></i></a> 通过使用 Azure OpenAI 资源实例登录来访问 Azure OpenAI Studio。 在登录工作流中，选择适当的目录、Azure 订阅和 Azure OpenAI 资源。</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/get-started-openai/media/studio-portal.png"  alt="Screenshot of the Azure OpenAI Studio portal which can be used to access several features."></p><p>首次打开 Azure OpenAI Studio 时，屏幕顶部会显示一个“行动号召”按钮，用于部署第一个模型。 选择创建新部署的选项会打开“部署”页，从中可以部署基础模型并开始试验。</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/get-started-openai/media/openai-portal-navigation.png"  alt="Screenshot of the Azure OpenAI Studio portal menu of pages."></p><h2 id="探索生成式-AI-模型的类型"><a href="#探索生成式-AI-模型的类型" class="headerlink" title="探索生成式 AI 模型的类型"></a>探索生成式 AI 模型的类型</h2><p>若要开始使用 Azure OpenAI 进行生成，需要选择一个基础模型并进行部署。 Microsoft 提供基础模型以及创建自定义基础模型的选项。 本模块介绍当前可用的基础模型。</p><p>Azure OpenAI 包括多种类型的模型：</p><ul><li>GPT-4 模型是最新一代的生成式预训练 (GPT) 模型，可以根据自然语言提示生成自然语言和代码补全。</li><li>GPT 3.5 模型可以根据自然语言提示生成自然语言和代码补全。 具体而言，GPT-35-turbo 模型针对基于聊天的交互进行了优化，在大多数生成式 AI 方案中都表现良好。</li><li>嵌入模型将文本转换为数字向量，并且在语言分析方案（例如比较文本源的相似性）中非常有用。</li><li>DALL-E 模型用于基于自然语言提示生成图像。 目前，DALL-E 模型处于预览阶段。 DALL-E 模型未在 Azure OpenAI Studio 界面中列出，并且不需要显式部署。</li></ul><p>模型因速度、成本和完成特定任务的出色程度而异。 可以详细了解 <a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/concepts/models" >Azure OpenAI 服务文档<i class="fas fa-external-link-alt"></i></a>中介绍的差异和最新模型。</p><p>注意</p><p>定价由令牌和模型类型决定。 在此处详细了解最新<a class="link"   href="https://azure.microsoft.com/pricing/details/cognitive-services/openai-service/" >定价<i class="fas fa-external-link-alt"></i></a>。</p><p>在 Azure OpenAI Studio 中，“模型”页列出了可用的基础模型（DALL-E 模型除外），并提供了通过微调基本模型来创建其他自定义模型的选项。 模型状态为“成功”意味着它们已成功训练，并且可被选择用于部署。</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/get-started-openai/media/studio-models.png"  alt="Screenshot of the Azure OpenAI Studio portal&#39;s out-of-the-box generative AI models."></p><h2 id="部署生成式-AI-模型"><a href="#部署生成式-AI-模型" class="headerlink" title="部署生成式 AI 模型"></a>部署生成式 AI 模型</h2><p>首先需要部署一个模型，以便进行 API 调用，从而接收提示完成。 创建新部署时，需要指出要部署的基础模型。 可以在一个或多个 Azure OpenAI 资源中实现任意数量的部署，只要它们的 TPM 总数在那个区域中低于 240K。 可通过多种方式部署基础模型。</p><h2 id="使用-Azure-OpenAI-Studio-进行部署"><a href="#使用-Azure-OpenAI-Studio-进行部署" class="headerlink" title="使用 Azure OpenAI Studio 进行部署"></a>使用 Azure OpenAI Studio 进行部署</h2><p>在 Azure OpenAI Studio 的“部署”页中，可以通过从菜单中选择模型名称来创建新部署。 可用的基础模型来自模型页中的列表。</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/get-started-openai/media/studio-deployment.png"  alt="Screenshot of the Azure OpenAI Studio portal&#39;s model deployment wizard."></p><p>在 Studio 的“部署”页中，还可以查看所有部署的相关信息，包括部署名称、模型名称、模型版本、状态、创建日期等。</p><h2 id="使用-Azure-CLI-进行部署"><a href="#使用-Azure-CLI-进行部署" class="headerlink" title="使用 Azure CLI 进行部署"></a>使用 Azure CLI 进行部署</h2><p>还可以使用控制台部署模型。 使用此示例，将以下变量替换为自己的资源值：</p><ul><li>OAIResourceGroup：替换为资源组名称</li><li>MyOpenAIResource：<em>替换为资源名称</em></li><li>MyModel：替换为模型的唯一名称</li><li>gpt-35-turbo：替换为要部署的基础模型</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">az cognitiveservices account deployment create \</span><br><span class="line">   -g OAIResourceGroup \</span><br><span class="line">   -n MyOpenAIResource \</span><br><span class="line">   --deployment-name MyModel \</span><br><span class="line">   --model-name gpt-35-turbo \</span><br><span class="line">   --model-version &quot;0301&quot;  \</span><br><span class="line">   --model-format OpenAI \</span><br><span class="line">   --sku-name &quot;Standard&quot; \</span><br><span class="line">   --sku-capacity 1</span><br></pre></td></tr></table></figure><h2 id="使用-REST-API-进行部署"><a href="#使用-REST-API-进行部署" class="headerlink" title="使用 REST API 进行部署"></a>使用 REST API 进行部署</h2><p>可以使用 REST API 部署模型。 在请求正文中，指定要部署的基础模型。 请参阅 <a class="link"   href="https://learn.microsoft.com/zh-cn/azure/ai-services/openai/" >Azure OpenAI 文档<i class="fas fa-external-link-alt"></i></a>中的示例。</p><h2 id="使用提示从模型完成"><a href="#使用提示从模型完成" class="headerlink" title="使用提示从模型完成"></a>使用提示从模型完成</h2><p>部署模型后，可以测试其完成提示的方式。 提示是发送到部署模型的完成终结点的请求的文本部分。 响应被称为完成，可以采用文本、代码的形式或其他形式。</p><h2 id="提示类型"><a href="#提示类型" class="headerlink" title="提示类型"></a>提示类型</h2><p>可以根据任务将提示分组为请求类型。</p><table><thead><tr><th>任务类型</th><th>提示示例</th><th>完成示例</th></tr></thead><tbody><tr><td>对内容进行分类</td><td>Tweet：我喜欢这次旅行。</td><td></td></tr><tr><td>情绪:</td><td>正</td><td></td></tr><tr><td>生成新内容</td><td>列出旅行方式</td><td>1.骑行</td></tr><tr><td>2. 乘车 …</td><td></td><td></td></tr><tr><td>进行对话</td><td>友好的 AI 助手</td><td><a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/how-to/completions#conversation?portal=true" >请参见示例<i class="fas fa-external-link-alt"></i></a></td></tr><tr><td>转换（转换和符号转换）</td><td>英语：你好</td><td></td></tr><tr><td>法语：</td><td>bonjour</td><td></td></tr><tr><td>汇总内容</td><td>提供内容总结</td><td></td></tr><tr><td>{text}</td><td>机器学习的内容共享方法。</td><td></td></tr><tr><td>从离开的位置继续</td><td>种植西红柿的一种方法</td><td>就是播种种子。</td></tr><tr><td>提供事实答复</td><td>地球拥有多少颗卫星？</td><td>一种</td></tr></tbody></table><h2 id="完成质量"><a href="#完成质量" class="headerlink" title="完成质量"></a>完成质量</h2><p>有几个因素会影响从生成式 AI 解决方案中获得的完成质量。</p><ul><li>提示的工程处理方式。 <a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/concepts/prompt-engineering?portal=true" >单击此处详细了解提示工程<i class="fas fa-external-link-alt"></i></a>。</li><li>模型参数（下文将介绍）</li><li>训练模型的数据，可以通过<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/how-to/fine-tuning?pivots=programming-language-studio?portal=true" >自定义模型微调<i class="fas fa-external-link-alt"></i></a>进行调整</li></ul><p>与通过提示工程和参数调整相比，你可以通过训练自定义模型更好地控制返回的完成。</p><h2 id="发起呼叫"><a href="#发起呼叫" class="headerlink" title="发起呼叫"></a>发起呼叫</h2><p>可以通过 REST API、Python、C# 或从 Studio 开始调用部署的模型。 如果部署的模型具有 GPT-3.5 或 GPT-4 模型库，请使用<a class="link"   href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/openai/reference#chat-completions?azure-portal=true" >聊天完成文档<i class="fas fa-external-link-alt"></i></a>，该文档具有与其他基础模型不同的请求终结点和变量。</p><h2 id="在-Azure-OpenAI-Studio-的操场中测试模型"><a href="#在-Azure-OpenAI-Studio-的操场中测试模型" class="headerlink" title="在 Azure OpenAI Studio 的操场中测试模型"></a>在 Azure OpenAI Studio 的操场中测试模型</h2><p>操场是 Azure OpenAI Studio 中的有用接口，可用于试验部署的模型，而无需开发自己的客户端应用程序。 Azure OpenAI Studio 提供了具有不同参数优化选项的多个操场。</p><h2 id="完成操场"><a href="#完成操场" class="headerlink" title="完成操场"></a>完成操场</h2><p>完成操场允许你通过文本输入文本输出接口调用部署的模型，并调整参数。 你需要在“部署”下选择模型的部署名称。 （可选）可以使用提供的示例入门，然后输入自己的提示。</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/get-started-openai/media/azure-openai-completions-playground.png"  alt="Screenshot of the Azure OpenAI Studio portal&#39;s completions playground."></p><h4 id="完成操场参数"><a href="#完成操场参数" class="headerlink" title="完成操场参数"></a>完成操场参数</h4><p>可以调整许多参数来更改模型的性能：</p><ul><li>温度：控制随机性。 降低温度意味着模型会产生更多重复性和确定性的回复。 提高温度会导致更多意外或创造性的回复。 请尝试调整温度或 Top P 值，但不要同时调整两者。</li><li>最大长度(标记数)：对每个模型响应的标记数设置限制。 该 API 支持最多 4000 个标记，包括提示（包括系统消息、示例、消息历史记录以及用户查询）和模型的响应。 对于典型的英文文本，一个标记大约是四个字符。</li><li>停止序列：使响应停止在所需点，例如句子或列表的末尾。 指定最多四个序列，模型将停止在响应中生成更多标记。 返回的文本不包含停止序列。</li><li>最高概率(最高 P)：与温度类似，它控制着随机性，但使用不同的方法。 降低 Top P 值会将模型的标记选择范围缩小到可能性更高的标记。 增加 Top P 值会使模型既选择可能高的标记又选择可能性低的标记。 请尝试调整温度或 Top P 值，但不要同时调整两者。</li><li>频率处罚：根据标记在文本中出现的频率，按比例降低标记重复的可能性。 这会降低在响应中重复完全相同文本的可能性。</li><li>存在处罚：降低到目前为止在文本中出现的任何标记重复的可能性。 这会增加在响应中引入新主题的可能性。</li><li>响应前文本：在用户输入之后和模型响应之前插入文本。 这有助于为响应准备模型。</li><li>响应后文本：在模型生成的响应之后插入文本以鼓励进一步的用户输入，就像对话建模一样。</li></ul><h2 id="聊天操场"><a href="#聊天操场" class="headerlink" title="聊天操场"></a>聊天操场</h2><p>聊天操场基于对话传入消息传出界面。 可以使用系统消息初始化会话以设置聊天上下文。</p><p>在聊天操场中，可以添加少样本示例。 “少样本”一词是指提供几个示例来帮助模型了解它需要执行的操作。 可以将其与零样本（指不提供任何示例）进行对比。</p><p>在助手设置中，可以提供用户输入和助手响应的少样本示例。 助手会尝试以你在系统消息中定义的语气、规则和格式来模拟这里包含的响应。</p><p><img   src="https://learn.microsoft.com/zh-cn/training/wwl-data-ai/get-started-openai/media/azure-openai-chat-playground.png"  alt="Screenshot of the Azure OpenAI Studio portal&#39;s Chat playground."></p><h4 id="聊天操场参数"><a href="#聊天操场参数" class="headerlink" title="聊天操场参数"></a>聊天操场参数</h4><p>“完成”操场等“聊天”操场还包括温度参数。 “聊天”操场还支持“完成”操场中不可用的其他参数。 其中包括：</p><ul><li>最大响应：对每个模型响应的标记数设置限制。 该 API 支持最多 4000 个标记，包括提示（包括系统消息、示例、消息历史记录以及用户查询）和模型的响应。 对于典型的英文文本，一个标记大约是四个字符。</li><li>最高 P：与温度类似，它控制着随机性，但使用不同的方法。 降低 Top P 值会将模型的标记选择范围缩小到可能性更高的标记。 增加 Top P 值会使模型既选择可能高的标记又选择可能性低的标记。 请尝试调整温度或 Top P 值，但不要同时调整两者。</li><li>包含的过去消息数：选择要包含在每个新 API 请求中的过去消息数。 包含过去的消息有助于为新用户查询提供模型上下文。 将此数字设置为 10 将包含 5 个用户查询和 5 个系统响应。</li></ul><p>可以在聊天操场中查看“当前标记计数”。 由于 API 调用按标记定价，并且可以设置最大响应标记限制，因此需要留意当前标记计数，以确保对话不会超过最大响应标记计数。</p><h2 id="练习-开始使用-Azure-OpenAI-服务"><a href="#练习-开始使用-Azure-OpenAI-服务" class="headerlink" title="练习 - 开始使用 Azure OpenAI 服务"></a>练习 - 开始使用 Azure OpenAI 服务</h2><p>已完成</p><p>现在，你有机会在 Azure OpenAI Studio 中部署和管理模型。 在本练习中，你将部署 Azure OpenAI 基础模型，并在完成和聊天操场中测试它们。 你将有机会了解提示和参数对文本和代码完成的影响。</p><p>注意</p><p>为了完成此实验室，你将需要一个 <a class="link"   href="https://azure.microsoft.com/free?azure-portal=true" >Azure 订阅<i class="fas fa-external-link-alt"></i></a>。 还需要注册 <a class="link"   href="https://learn.microsoft.com/zh-cn/legal/cognitive-services/openai/limited-access?azure-portal=true" >Azure OpenAI 访问权限<i class="fas fa-external-link-alt"></i></a>才能完成此实验室。</p><p>要完成本模块的练习，请启动 VM 并按照说明操作。</p><p>注意</p><p>若要完成此练习，你将需要 Microsoft Azure 订阅。 如果你还没有该订阅，可以<a class="link"   href="https://azure.microsoft.com/?azure-portal=true" >注册一个<i class="fas fa-external-link-alt"></i></a>。</p><p>如果需要为此练习设置计算机，可以使用此<a class="link"   href="https://microsoftlearning.github.io/mslearn-ai-services/Instructions/setup.html?azure-portal=true" >设置指南<i class="fas fa-external-link-alt"></i></a>，然后按照下面链接的练习说明进行操作。 请注意，设置指南适用于多个开发练习，其中可能包括该特定练习不需要的软件。 此外，由于可能的操作系统和设置配置的范围太广，如果你选择在自己的计算机上完成此练习，我们将无法提供支持。</p><p>要在自己的计算机上按照这些说明进行操作，可以按照<a class="link"   href="https://aka.ms/mslearn-get-started-azure-openai?azure-portal=true" >此处的练习说明<i class="fas fa-external-link-alt"></i></a>进行操作。</p><p>提示</p><p>完成练习后，如果你已完成对 Azure AI 服务的学习，请删除在练习期间创建的 Azure 资源。</p><!--欢迎同学们加入微软亚洲AI奥德赛技术实战营AI 奥德赛技术实战营共设有两个级别的挑战。其中第一级的主要内容是学习 Azure AI 服务针对各种情况创建和部署人工智能的解决方案，例如生成式人工智能、智能文档和自然语言处理。而在第二级中，对第一级学到的人工智能技能进行实战与应用。需要在交互式实验室中完成一系列任务，如果通过线上即时评估赢得第二级的认证。1. 活动链接：https://www.microsoft.com/zh-cn/AIOdyssey/2. 活动时间：即日起至 6 月 25 日3. 活动奖励：参考下方实验手册 完成第一级获得 50 元京东卡，完成第一级+第二级任务获取 300 元京东卡，礼品先到先得。期待您的参与~4. 礼品发放方法：工作人员会每周五下班之前发放上周完成同学的奖品5. 兑换规则：    （1）完成阶段活动并凭借截图即可参与兑奖，每完成一阶段活动任务，奖品自动升级。    （2）除阶段奖品外，每份入选作品的参赛者(“获奖者”)将额外获得价值 50 美元的电子礼券。    （3）同一人仅可参与一次兑奖活动，阶段奖品不可累计。(重复手机号、微信号、IP 地址等均作为衡量手段)6. 实验手册（详细指导-搞不定问题发群里或@助教-于明浩）微软奥德赛AI第一级实验手册：第一级挑战较为简单，开始后按手册流程 仅需直接点击下一步 直到浏览完所有学习页面，即可完成挑战（预计需要20min）第一级实验手册链接：https://img-operation.csdnimg.cn/csdn/silkroad/img/1716976239594.html第二级实验手册预计近两天上线7. 完成挑战后 按照实验手册末尾中的<完成材料提交方法> 将材料私聊给@完成证明发我 更多学习资料挑战请参考群公告更多活动详情了解：https://marketing.csdn.net/p/2d2c9cdae1e94adbafc50f19ba182027使用 Azure OpenAI 服务开发生成式 AI 解决方案展示你使用 Azure OpenAI 服务开发生成式 AI 解决方案的能力。 在 https://learn.microsoft.com/en-us/credentials/applied-skills/develop-generative-ai-solutions-with-azure-openai-service/#applied-skill-take-the-assessment 上进行应用技能评估太棒了！ 你已注册参加 使用 Azure OpenAI 服务开发生成式 AI 解决方案。--https://dotnet.microsoft.com/zh-cn/apps/machinelearning-ai  xxhttps://www.microsoft.com/zh-cn/AIOdyssey/https://learn.microsoft.com/zh-cn/collections/e6kjarx0q38?WT.mc_id=cloudskillschallenge_0bc0dea3-e83b-44f1-99a1-f91a1c041817https://learn.microsoft.com/zh-cn/training/modules/get-started-openai/?WT.mc_id=cloudskillschallenge_0bc0dea3-e83b-44f1-99a1-f91a1c041817https://learn.microsoft.com/zh-cn/training/modules/explore-azure-openai/-->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> Azure </tag>
            
            <tag> OpenAI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET AddWatermark</title>
      <link href="/2024/06/01/NET-AddWatermark/"/>
      <url>/2024/06/01/NET-AddWatermark/</url>
      
        <content type="html"><![CDATA[<h1 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">AddWatermark</span>(<span class="params">IFormFile file, <span class="built_in">string</span> watermarkText, <span class="built_in">string</span> color, <span class="built_in">int</span> transparency</span>)</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span> (file != <span class="literal">null</span> &amp;&amp; file.Length &gt; <span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="comment">// 将上传的文件保存到服务器</span></span><br><span class="line">              <span class="keyword">var</span> uploads = Path.Combine(_environment.WebRootPath, <span class="string">&quot;uploads&quot;</span>);</span><br><span class="line">              <span class="keyword">if</span> (!Directory.Exists(uploads))</span><br><span class="line">              &#123;</span><br><span class="line">                  Directory.CreateDirectory(uploads);</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">var</span> filePath = Path.Combine(uploads, file.FileName);</span><br><span class="line">              <span class="keyword">using</span> (<span class="keyword">var</span> fileStream = <span class="keyword">new</span> FileStream(filePath, FileMode.Create))</span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="keyword">await</span> file.CopyToAsync(fileStream);</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="comment">// 添加水印</span></span><br><span class="line">              <span class="keyword">using</span> (Image image = Image.FromFile(filePath))</span><br><span class="line">              <span class="keyword">using</span> (Graphics g = Graphics.FromImage(image))</span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="comment">// 设置水印文本的字体和颜色</span></span><br><span class="line">                  Font font = <span class="keyword">new</span> Font(<span class="string">&quot;Arial&quot;</span>, <span class="number">20</span>);</span><br><span class="line">                  Color colorValue = ColorTranslator.FromHtml(color);</span><br><span class="line">                  SolidBrush brush = <span class="keyword">new</span> SolidBrush(Color.FromArgb(transparency, colorValue.R, colorValue.G, colorValue.B));</span><br><span class="line"></span><br><span class="line">                  <span class="comment">// 计算水印位置</span></span><br><span class="line">                  <span class="built_in">int</span> x = <span class="number">10</span>;</span><br><span class="line">                  <span class="built_in">int</span> y = image.Height - <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">                  <span class="comment">// 绘制水印</span></span><br><span class="line">                  g.DrawString(watermarkText, font, brush, <span class="keyword">new</span> PointF(x, y));</span><br><span class="line">                  </span><br><span class="line">                  <span class="comment">// 保存带水印的图片</span></span><br><span class="line">                  <span class="keyword">var</span> newFileName = <span class="string">&quot;watermarked_&quot;</span> + file.FileName;</span><br><span class="line">                  <span class="keyword">var</span> newFilePath = Path.Combine(uploads, newFileName);</span><br><span class="line">                  image.Save(newFilePath, ImageFormat.Jpeg);</span><br><span class="line"></span><br><span class="line">                  <span class="comment">// 返回带水印的图片路径</span></span><br><span class="line">                  ViewBag.ImagePath = <span class="string">&quot;/uploads/&quot;</span> + newFileName;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">return</span> View(<span class="string">&quot;Index&quot;</span>);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h1 id="views"><a href="#views" class="headerlink" title="views"></a>views</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@&#123;</span><br><span class="line">    ViewBag.Title = &quot;Home Page&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>图片加水印<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/Home/AddWatermark&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>选择图片：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;watermarkText&quot;</span>&gt;</span>水印文字：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;watermarkText&quot;</span> <span class="attr">id</span>=<span class="string">&quot;watermarkText&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;color&quot;</span>&gt;</span>水印颜色：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;color&quot;</span> <span class="attr">name</span>=<span class="string">&quot;color&quot;</span> <span class="attr">id</span>=<span class="string">&quot;color&quot;</span> <span class="attr">value</span>=<span class="string">&quot;#000000&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;transparency&quot;</span>&gt;</span>透明度：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">name</span>=<span class="string">&quot;transparency&quot;</span> <span class="attr">id</span>=<span class="string">&quot;transparency&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span> <span class="attr">max</span>=<span class="string">&quot;255&quot;</span> <span class="attr">value</span>=<span class="string">&quot;128&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>上传并添加水印<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">@if (ViewBag.ImagePath != null)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>带水印的图片：<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span>   <span class="attr">src</span>=<span class="string">&quot;@ViewBag.ImagePath&quot;</span>  <span class="attr">alt</span>=<span class="string">&quot;Watermarked Image&quot;</span> &gt;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Uploads-folder"><a href="#Uploads-folder" class="headerlink" title="Uploads folder"></a>Uploads folder</h1><p>Uploads</p><h1 id="Position-TranslateTransform"><a href="#Position-TranslateTransform" class="headerlink" title="Position TranslateTransform"></a>Position TranslateTransform</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">AddWatermark</span>(<span class="params">IFormFile file, <span class="built_in">string</span> watermarkText, <span class="built_in">string</span> color, <span class="built_in">int</span> transparency, <span class="built_in">string</span> position, <span class="built_in">int</span> angle</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (file != <span class="literal">null</span> &amp;&amp; file.Length &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 将上传的文件保存到服务器</span></span><br><span class="line">            <span class="keyword">var</span> uploads = Path.Combine(_environment.WebRootPath, <span class="string">&quot;uploads&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!Directory.Exists(uploads))</span><br><span class="line">            &#123;</span><br><span class="line">                Directory.CreateDirectory(uploads);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> filePath = Path.Combine(uploads, file.FileName);</span><br><span class="line">            <span class="keyword">using</span> (<span class="keyword">var</span> fileStream = <span class="keyword">new</span> FileStream(filePath, FileMode.Create))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">await</span> file.CopyToAsync(fileStream);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 添加水印</span></span><br><span class="line">            <span class="keyword">using</span> (Image image = Image.FromFile(filePath))</span><br><span class="line">            <span class="keyword">using</span> (Graphics g = Graphics.FromImage(image))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 设置水印文本的字体和颜色</span></span><br><span class="line">                Font font = <span class="keyword">new</span> Font(<span class="string">&quot;Arial&quot;</span>, <span class="number">20</span>);</span><br><span class="line">                Color colorValue = ColorTranslator.FromHtml(color);</span><br><span class="line">                SolidBrush brush = <span class="keyword">new</span> SolidBrush(Color.FromArgb(transparency, colorValue.R, colorValue.G, colorValue.B));</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 计算水印位置</span></span><br><span class="line">                PointF point = CalculateWatermarkPosition(position, image, g, watermarkText, font);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 旋转水印</span></span><br><span class="line">                g.TranslateTransform(point.X, point.Y);</span><br><span class="line">                g.RotateTransform(angle);</span><br><span class="line">                g.DrawString(watermarkText, font, brush, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                g.ResetTransform();</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 保存带水印的图片</span></span><br><span class="line">                <span class="keyword">var</span> newFileName = <span class="string">&quot;watermarked_&quot;</span> + file.FileName;</span><br><span class="line">                <span class="keyword">var</span> newFilePath = Path.Combine(uploads, newFileName);</span><br><span class="line">                image.Save(newFilePath, ImageFormat.Jpeg);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 返回带水印的图片路径</span></span><br><span class="line">                ViewBag.ImagePath = <span class="string">&quot;/uploads/&quot;</span> + newFileName;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> View(<span class="string">&quot;Index&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> PointF <span class="title">CalculateWatermarkPosition</span>(<span class="params"><span class="built_in">string</span> position, Image image, Graphics g, <span class="built_in">string</span> text, Font font</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        SizeF textSize = g.MeasureString(text, font);</span><br><span class="line">        <span class="built_in">float</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">float</span> y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (position.ToLower())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;topleft&quot;</span>:</span><br><span class="line">                x = <span class="number">10</span>;</span><br><span class="line">                y = <span class="number">10</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;topright&quot;</span>:</span><br><span class="line">                x = image.Width - textSize.Width - <span class="number">10</span>;</span><br><span class="line">                y = <span class="number">10</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;center&quot;</span>:</span><br><span class="line">                x = (image.Width - textSize.Width) / <span class="number">2</span>;</span><br><span class="line">                y = (image.Height - textSize.Height) / <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;bottomleft&quot;</span>:</span><br><span class="line">                x = <span class="number">10</span>;</span><br><span class="line">                y = image.Height - textSize.Height - <span class="number">10</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;bottomright&quot;</span>:</span><br><span class="line">                x = image.Width - textSize.Width - <span class="number">10</span>;</span><br><span class="line">                y = image.Height - textSize.Height - <span class="number">10</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PointF(x, y);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="change-view"><a href="#change-view" class="headerlink" title="change view"></a>change view</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;position&quot;</span>&gt;</span>水印位置：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;position&quot;</span> <span class="attr">id</span>=<span class="string">&quot;position&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;topleft&quot;</span>&gt;</span>左上<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;topright&quot;</span>&gt;</span>右上<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;center&quot;</span>&gt;</span>居中<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bottomleft&quot;</span>&gt;</span>左下<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bottomright&quot;</span>&gt;</span>右下<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;angle&quot;</span>&gt;</span>倾斜角度：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;angle&quot;</span> <span class="attr">id</span>=<span class="string">&quot;angle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="multiple"><a href="#multiple" class="headerlink" title="multiple"></a>multiple</h1><!--multiple 多个--><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">AddWatermarkMore</span>(<span class="params">List&lt;IFormFile&gt; files, <span class="built_in">string</span> watermarkText, <span class="built_in">string</span> color, <span class="built_in">int</span> transparency, <span class="built_in">string</span> position, <span class="built_in">int</span> angle</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> watermarkedPaths = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> file <span class="keyword">in</span> files)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (file != <span class="literal">null</span> &amp;&amp; file.Length &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 将上传的文件保存到服务器</span></span><br><span class="line">            <span class="keyword">var</span> uploads = Path.Combine(_environment.WebRootPath, <span class="string">&quot;uploads&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!Directory.Exists(uploads))</span><br><span class="line">            &#123;</span><br><span class="line">                Directory.CreateDirectory(uploads);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 生成基于时间戳和随机数的文件名</span></span><br><span class="line">            <span class="keyword">var</span> fileName = <span class="string">$&quot;<span class="subst">&#123;DateTime.Now:yyyyMMddHHmmss&#125;</span>_<span class="subst">&#123;Guid.NewGuid().ToString().Substring(<span class="number">0</span>, <span class="number">8</span>)&#125;</span><span class="subst">&#123;Path.GetExtension(file.FileName)&#125;</span>&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> filePath = Path.Combine(uploads, fileName);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">using</span> (<span class="keyword">var</span> fileStream = <span class="keyword">new</span> FileStream(filePath, FileMode.Create))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">await</span> file.CopyToAsync(fileStream);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 添加水印</span></span><br><span class="line">            <span class="keyword">using</span> (Image image = Image.FromFile(filePath))</span><br><span class="line">            <span class="keyword">using</span> (Graphics g = Graphics.FromImage(image))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 设置水印文本的字体和颜色</span></span><br><span class="line">                Font font = <span class="keyword">new</span> Font(<span class="string">&quot;Arial&quot;</span>, <span class="number">20</span>);</span><br><span class="line">                Color colorValue = ColorTranslator.FromHtml(color);</span><br><span class="line">                SolidBrush brush = <span class="keyword">new</span> SolidBrush(Color.FromArgb(transparency, colorValue.R, colorValue.G, colorValue.B));</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 计算水印位置</span></span><br><span class="line">                PointF point = CalculateWatermarkPosition(position, image, g, watermarkText, font);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 旋转水印</span></span><br><span class="line">                g.TranslateTransform(point.X, point.Y);</span><br><span class="line">                g.RotateTransform(angle);</span><br><span class="line">                g.DrawString(watermarkText, font, brush, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                g.ResetTransform();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 保存带水印的图片</span></span><br><span class="line">                <span class="keyword">var</span> newFileName = <span class="string">$&quot;watermarked_<span class="subst">&#123;fileName&#125;</span>&quot;</span>;</span><br><span class="line">                <span class="keyword">var</span> newFilePath = Path.Combine(uploads, newFileName);</span><br><span class="line">                image.Save(newFilePath, ImageFormat.Jpeg);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 添加水印路径到列表</span></span><br><span class="line">                watermarkedPaths.Add(<span class="string">&quot;/uploads/&quot;</span> + newFileName);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ViewBag.ImagePaths = watermarkedPaths;</span><br><span class="line">    <span class="keyword">return</span> View(<span class="string">&quot;Index&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="change-view-1"><a href="#change-view-1" class="headerlink" title="change view"></a>change view</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>图片加水印<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/Home/AddWatermark&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;files&quot;</span>&gt;</span>选择图片：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;files&quot;</span> <span class="attr">id</span>=<span class="string">&quot;files&quot;</span> <span class="attr">multiple</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;watermarkText&quot;</span>&gt;</span>水印文字：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;watermarkText&quot;</span> <span class="attr">id</span>=<span class="string">&quot;watermarkText&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;color&quot;</span>&gt;</span>水印颜色：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;color&quot;</span> <span class="attr">name</span>=<span class="string">&quot;color&quot;</span> <span class="attr">id</span>=<span class="string">&quot;color&quot;</span> <span class="attr">value</span>=<span class="string">&quot;#000000&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;transparency&quot;</span>&gt;</span>透明度：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">name</span>=<span class="string">&quot;transparency&quot;</span> <span class="attr">id</span>=<span class="string">&quot;transparency&quot;</span> <span class="attr">min</span>=<span class="string">&quot;0&quot;</span> <span class="attr">max</span>=<span class="string">&quot;255&quot;</span> <span class="attr">value</span>=<span class="string">&quot;128&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;position&quot;</span>&gt;</span>水印位置：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;position&quot;</span> <span class="attr">id</span>=<span class="string">&quot;position&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;topleft&quot;</span>&gt;</span>左上<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;topright&quot;</span>&gt;</span>右上<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;center&quot;</span>&gt;</span>居中<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bottomleft&quot;</span>&gt;</span>左下<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;bottomright&quot;</span>&gt;</span>右下<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;angle&quot;</span>&gt;</span>倾斜角度：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;angle&quot;</span> <span class="attr">id</span>=<span class="string">&quot;angle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>上传并添加水印<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">@if (ViewBag.ImagePaths != null)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>带水印的图片：<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    @foreach (var imagePath in ViewBag.ImagePaths)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span>   <span class="attr">src</span>=<span class="string">&quot;@imagePath&quot;</span>  <span class="attr">alt</span>=<span class="string">&quot;Watermarked Image&quot;</span> <span class="attr">style</span>=<span class="string">&quot;max-width: 100%; height: auto;&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET Dockerhub</title>
      <link href="/2024/06/01/NET-Dockerhub/"/>
      <url>/2024/06/01/NET-Dockerhub/</url>
      
        <content type="html"><![CDATA[<h1 id="📚Dockerfile"><a href="#📚Dockerfile" class="headerlink" title="📚Dockerfile"></a>📚Dockerfile</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build</span><br><span class="line">WORKDIR /src</span><br><span class="line">COPY [<span class="string">&quot;MyMvcApp.csproj&quot;</span>, <span class="string">&quot;./&quot;</span>]</span><br><span class="line">RUN dotnet restore <span class="string">&quot;MyMvcApp.csproj&quot;</span></span><br><span class="line">COPY . .</span><br><span class="line">WORKDIR <span class="string">&quot;/src/&quot;</span></span><br><span class="line">RUN dotnet build <span class="string">&quot;MyMvcApp.csproj&quot;</span> -c Release -o /app/build</span><br><span class="line"></span><br><span class="line">FROM build AS publish</span><br><span class="line">RUN dotnet publish <span class="string">&quot;MyMvcApp.csproj&quot;</span> -c Release -o /app/publish</span><br><span class="line"></span><br><span class="line">FROM base AS final</span><br><span class="line">WORKDIR /app</span><br><span class="line">COPY --from=publish /app/publish .</span><br><span class="line">ENTRYPOINT [<span class="string">&quot;dotnet&quot;</span>, <span class="string">&quot;MyMvcApp.dll&quot;</span>]</span><br></pre></td></tr></table></figure><h1 id="✏️-Docker-镜像"><a href="#✏️-Docker-镜像" class="headerlink" title="✏️ Docker 镜像"></a>✏️ Docker 镜像</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t mymvcapp:latest .</span><br></pre></td></tr></table></figure><h1 id="📝在-Docker-Hub-上创建仓库"><a href="#📝在-Docker-Hub-上创建仓库" class="headerlink" title="📝在 Docker Hub 上创建仓库"></a>📝在 Docker Hub 上创建仓库</h1><p>登录 Docker Hub (<a class="link"   href="https://hub.docker.com)./" >https://hub.docker.com)。<i class="fas fa-external-link-alt"></i></a><br>点击 “Create Repository”。<br>输入仓库名称，例如 mymvcapp，然后点击 “Create”。</p><h1 id="💻将-Docker-镜像推送到-Docker-Hub"><a href="#💻将-Docker-镜像推送到-Docker-Hub" class="headerlink" title="💻将 Docker 镜像推送到 Docker Hub"></a>💻将 Docker 镜像推送到 Docker Hub</h1><p>首先，登录 Docker Hub：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login</span><br></pre></td></tr></table></figure><h1 id="📅标记镜像"><a href="#📅标记镜像" class="headerlink" title="📅标记镜像"></a>📅标记镜像</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag mymvcapp:latest &lt;your-dockerhub-username&gt;/mymvcapp:latest</span><br></pre></td></tr></table></figure><h1 id="📊推送镜像到-Docker-Hub"><a href="#📊推送镜像到-Docker-Hub" class="headerlink" title="📊推送镜像到 Docker Hub"></a>📊推送镜像到 Docker Hub</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push &lt;your-dockerhub-username&gt;/mymvcapp:latest</span><br></pre></td></tr></table></figure><p><your-dockerhub-username> &#x3D; Docker Hub 用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 80:80 &lt;your-dockerhub-username&gt;/mymvcapp:latest</span><br></pre></td></tr></table></figure><h1 id="🎓完整流程回顾"><a href="#🎓完整流程回顾" class="headerlink" title="🎓完整流程回顾"></a>🎓完整流程回顾</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建 .NET 8 MVC 应用程序。</span></span><br><span class="line"><span class="comment">#在项目根目录下创建 Dockerfile。</span></span><br><span class="line"><span class="comment">#构建 Docker 镜像：</span></span><br><span class="line">docker build -t mymvcapp:latest .</span><br><span class="line"><span class="comment">#在 Docker Hub 上创建仓库。</span></span><br><span class="line"><span class="comment">#登录 Docker Hub：</span></span><br><span class="line">docker login</span><br><span class="line"><span class="comment">#标记并推送 Docker 镜像到 Docker Hub：</span></span><br><span class="line">docker tag mymvcapp:latest &lt;your-dockerhub-username&gt;/mymvcapp:latest</span><br><span class="line">docker push &lt;your-dockerhub-username&gt;/mymvcapp:latest</span><br><span class="line"><span class="comment">#在本地或服务器上运行 Docker 镜像：</span></span><br><span class="line">docker run -d -p 80:80 &lt;your-dockerhub-username&gt;/mymvcapp:latest</span><br><span class="line"><span class="comment">#通过这些步骤，将 .NET 8 MVC 部署到 Docker Hub 并运行它~~</span></span><br></pre></td></tr></table></figure><p>err denied requested access to the resource is denied</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">logout</span></span><br><span class="line">docker login</span><br></pre></td></tr></table></figure><p>err error response from deamon:get “<a class="link"   href="https://registry-1.docket.io/v2/%22:unauthorized:incorrect" >https://registry-1.docket.io/v2/&quot;:unauthorized:incorrect<i class="fas fa-external-link-alt"></i></a> username or password<br>用户密码错误</p><p><a class="link"   href="https://docs.docker.com/go/access-tokens" >https://docs.docker.com/go/access-tokens<i class="fas fa-external-link-alt"></i></a><br><a class="link"   href="https://docs.docker.com/security/for-developers/access-tokens/#create-an-access-token" >https://docs.docker.com/security/for-developers/access-tokens/#create-an-access-token<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker login  -u qxxx</span><br><span class="line">dckr_pat_o0ZpPxxx</span><br><span class="line"></span><br><span class="line">docker tag mymvcapp:latest xx/mymvcapp:dev</span><br><span class="line">docker push  &lt;your-dockerhub-username&gt;/mymvcapp:dev</span><br></pre></td></tr></table></figure><p>推送成功后可以在hub仓库查看</p><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 18081:8080 -p 18082:8081 --name mywebmvcapp mymvcapp:latest</span><br></pre></td></tr></table></figure><p>END</p><!--# 💼通过VS打包发布项目右键-发布用户名密码执行发布推送成功后可 **docker run username/mymvcapp:latest** 运行docker desktop push![在这里插入图片描述](https://img-blog.csdnimg.cn/direct/1dc65cc259ee4815b1fb8d0e1ce472bb.png)docker curl -fsSL https://get.docker.com -o get-docker.sh sudo sh get-docker.shmysqldocker run -d --name mysql-container -e TZ=UTC -p 30306:3306 -e MYSQL_ROOT_PASSWORD=123123 mysql:8.0.36-debian119.23.182.163 8080docker run --name myadmin -d --link mysql-container:db -p 18083:80 phpmyadmin/phpmyadminsudo apt update 获取 Microsoft 密钥和源wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.debsudo dpkg -i packages-microsoft-prod.deb#更新包索引并安装 .NET SDKsudo apt-get updatesudo apt-get install -y dotnet-sdk-8.0copy dotnet run xxxdocker pushhttps://docs.docker.com/go/access-tokens https://docs.docker.com/security/for-developers/access-tokens/#create-an-access-tokendocker login  -u qxxxdckr_pat_o0ZpPxxxdocker tag mymvcapp:latest xx/mymvcapp:latestdocker push  <your-dockerhub-username>/mymvcapp:latestdocker run -d -p 18081:8080 -p 18082:8081 --name webapp q41304/webmvc:devnot ok  docker rm -f webapp xxx docker imagesdocker login  -u q42207docker run -d -p 18081:8080 -p 18082:8081 --name webapp1 q42304/webmvcdckr_pat_FBv68qAtAPbH3gRqZgCuzoGxIiM docker rmi q42204/webmvc:devdocker run -d -p 123:8080 -p 124:8081 -e DOTNET_USE_POLLING_FILE_WATCHER=1  -e ASPNETCORE_HTTP_PORTS=8080 -e DOTNET_RUNNING_IN_CONTAINER=true -e DOTNET_VERSION=8.0.5 -e ASPNET_VERSION=8.0.5  --name webaa q4220304/webmvcdocker run -d --name WebMvc_2 -e NUGET_PACKAGES=/.nuget/fallbackpackages2 -e NUGET_FALLBACK_PACKAGES=/.nuget/fallbackpackages;/.nuget/fallbackpackages2  -e ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS=true ASPNETCORE_ENVIRONMENT=Development -e DOTNET_USE_POLLING_FILE_WATCHER=1 -e APP_UID=1654 -e ASPNETCORE_HTTP_PORTS=8080 -e DOTNET_RUNNING_IN_CONTAINER=true -e DOTNET_VERSION=8.0.5 -e ASPNET_VERSION=8.0.5 -p 18081:8080  -p 18082:8081  q42204/webmvc:latestsudo nohup dotnet run /root/mynets/TcpSk > output111111.log 2>&1 &dk hub 里面killps -ef | grep nohup -e TZ=Asia/Shanghai        //TRUNCATE TABLE xxx del msg needfunc SQL DEL        // sudo nohup dotnet run /root/socketa/TcpSk > outputxxxhhhh.log 2>&1 &       SH RUNhttps://www.cnblogs.com/hudean/p/18020909-->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> Dockerhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET Redis 10s Rate Limiter Sliding Window Algorithm</title>
      <link href="/2024/05/31/NET-Redis-RateLimiter/"/>
      <url>/2024/05/31/NET-Redis-RateLimiter/</url>
      
        <content type="html"><![CDATA[<p>在.NET中使用Redis来限制接口请求频率（每10秒只允许请求一次）</p><p><strong>NuGet setup</strong><br>StackExchange.Redis </p><p><strong>实现速率限制逻辑</strong>：<br>在你的控制器或服务层中，你需要编写一个方法来检查并更新Redis中的速率限制计数器。<br><strong>设置Redis键</strong>：<br>为每个用户或每个IP地址（取决于你的需求）设置一个唯一的键。这个键将用于存储最后一次请求的时间戳和&#x2F;或请求计数。<br><strong>检查时间戳</strong>：<br>当请求到达时，从Redis中获取该键的值（时间戳）。如果键不存在或时间戳超过10秒，则允许请求并更新键的值（设置为当前时间戳）。<br><strong>处理超过速率的请求</strong>：<br>如果时间戳在10秒内，则拒绝或限制该请求（返回限制状态码）。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> Lazy&lt;ConnectionMultiplexer&gt; LazyConnection = <span class="keyword">new</span> Lazy&lt;ConnectionMultiplexer&gt;(() =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 配置Redis连接字符串 &quot;localhost,abortConnect=false&quot;  </span></span><br><span class="line">    <span class="keyword">return</span> ConnectionMultiplexer.Connect(<span class="string">&quot;localhost:6379&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> ConnectionMultiplexer Connection =&gt; LazyConnection.Value;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> IDatabase Db =&gt; Connection.GetDatabase();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&gt; <span class="title">MyAction</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    IPAddress clientIpAddress = HttpContext.Connection.RemoteIpAddress;</span><br><span class="line">    <span class="built_in">string</span> ipAddress = clientIpAddress.ToString();</span><br><span class="line">    <span class="built_in">string</span> redisKey = <span class="string">$&quot;rate-limit:<span class="subst">&#123;ipAddress&#125;</span>&quot;</span>; <span class="comment">// 构建Redis键名  </span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 获取当前时间戳（可以是Unix时间戳或任何你选择的格式）  </span></span><br><span class="line">    <span class="built_in">long</span> currentTimestamp = DateTimeOffset.UtcNow.ToUnixTimeSeconds();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 尝试从Redis获取时间戳  </span></span><br><span class="line">    <span class="keyword">var</span> redisValue = <span class="keyword">await</span> Db.StringGetAsync(redisKey);</span><br><span class="line">    <span class="built_in">long</span> lastTimestamp = redisValue.HasValue ? (<span class="built_in">long</span>)redisValue : <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查是否超过10秒  </span></span><br><span class="line">    <span class="keyword">if</span> (currentTimestamp - lastTimestamp &gt;= <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果超过10秒，则允许请求并更新Redis键  </span></span><br><span class="line">        <span class="keyword">await</span> Db.StringSetAsync(redisKey, currentTimestamp, TimeSpan.FromSeconds(<span class="number">10</span>)); <span class="comment">// 设置键的过期时间为10秒  </span></span><br><span class="line">                                                                                     </span><br><span class="line">        <span class="keyword">return</span> Content(<span class="string">&quot;Request allowed.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果未超过10秒，则拒绝请求  </span></span><br><span class="line">        HttpResponseMessage response = <span class="keyword">new</span> HttpResponseMessage(HttpStatusCode.TooManyRequests)</span><br><span class="line">        &#123;</span><br><span class="line">            ReasonPhrase = <span class="string">&quot;Too Many Requests&quot;</span>,</span><br><span class="line">            Content = <span class="keyword">new</span> StringContent(<span class="string">&quot;Rate limit exceeded. Please try again later.&quot;</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 处理请求</span></span><br><span class="line">        <span class="keyword">return</span> Content(<span class="string">&quot;Please try again later. &quot;</span>);<span class="comment">// throw new HttpResponseException(response); // 或者返回自定义的ActionResult  </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>扩展为参数</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MyAction(<span class="built_in">string</span> p)</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="built_in">string</span> redisKey = <span class="string">$&quot;rate-limit:<span class="subst">&#123;p&#125;</span>&quot;</span>;</span><br></pre></td></tr></table></figure><p>请求<br>&#x2F;MyAction?p&#x3D;2<br>&#x2F;MyAction?p&#x3D;3</p><h1 id="滑动窗口算法"><a href="#滑动窗口算法" class="headerlink" title="滑动窗口算法"></a>滑动窗口算法</h1><p>滑动窗口算法（Sliding Window Algorithm）是一种用于解决字符串&#x2F;数组 问题的算法，它通过维护一个窗口（即一个连续的子串或子数组），并在字符串或数组上滑动这个窗口来寻找满足特定条件的子串或子数组。以下是滑动窗口算法的主要内容和特点：</p><p><strong>维护窗口</strong>：通过两个指针（左指针和右指针）来定义窗口的边界。<br><strong>移动窗口</strong>：通过移动右指针来扩展窗口，同时根据问题的要求调整左指针来缩小窗口。<br><strong>更新信息</strong>：在窗口滑动的过程中，根据需要更新一些数据结构（如哈希表）来保存所需的信息。</p><p><strong>实现方法</strong><br>步骤1.初始化：定义左指针和右指针，并初始化它们的位置。<br>步骤2.扩展窗口：向右移动右指针，扩展窗口，同时更新所需的信息（如字符频率的哈希表）。<br>步骤3.检查条件：当窗口满足特定条件时，开始收缩窗口。<br>步骤4.收缩窗口：向右移动左指针，缩小窗口，同时更新所需的信息。<br>步骤5.更新最优解：在收缩窗口的过程中，不断更新最优解（如最长子串、最短子串等）。<br>重复步骤：重复步骤2到步骤5，直到右指针到达字符串或数组的末尾。</p><p>在Redis中维护一个窗口内的请求时间戳列表，而不是仅仅存储最后一次请求的时间戳。</p><p>我们从Redis中获取存储的时间戳列表。<br>移除超过窗口大小的时间戳。<br>检查剩余的时间戳数是否超过了最大请求数 MaxRequests。<br>如果超过，则返回超过的响应；否则，记录当前时间戳并允许请求。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> MaxRequests = <span class="number">5</span>; <span class="comment">// 最大请求数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> WindowSizeInSeconds = <span class="number">10</span>; <span class="comment">// 窗口大小（秒）</span></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"></span><br><span class="line">         <span class="comment">// 获取Redis中存储的时间戳列表</span></span><br><span class="line">         <span class="keyword">var</span> redisValue = <span class="keyword">await</span> Db.ListRangeAsync(redisKey);</span><br><span class="line">         <span class="keyword">var</span> timestamps = redisValue.Select(<span class="keyword">value</span> =&gt; (<span class="built_in">long</span>)<span class="keyword">value</span>).ToList();</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 移除窗口之外的时间戳</span></span><br><span class="line">         timestamps = timestamps.Where(timestamp =&gt; currentTimestamp - timestamp &lt;= WindowSizeInSeconds).ToList();</span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> (timestamps.Count &gt;= MaxRequests)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="comment">// 如果请求数超过限制，则拒绝请求</span></span><br><span class="line">             HttpResponseMessage response = <span class="keyword">new</span> HttpResponseMessage(HttpStatusCode.TooManyRequests)</span><br><span class="line">             &#123;</span><br><span class="line">                 ReasonPhrase = <span class="string">&quot;Too Many Requests&quot;</span>,</span><br><span class="line">                 Content = <span class="keyword">new</span> StringContent(<span class="string">&quot;Rate limit exceeded. Please try again later.&quot;</span>)</span><br><span class="line">             &#125;;</span><br><span class="line">             <span class="keyword">return</span> Content(<span class="string">&quot;Please try again later.&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">             <span class="comment">// 如果请求数未超过限制，则允许请求并记录当前时间戳</span></span><br><span class="line">             timestamps.Add(currentTimestamp);</span><br><span class="line">             <span class="keyword">await</span> Db.ListRightPushAsync(redisKey, timestamps.Select(timestamp =&gt; (RedisValue)timestamp).ToArray());</span><br><span class="line">             <span class="keyword">await</span> Db.KeyExpireAsync(redisKey, TimeSpan.FromSeconds(WindowSizeInSeconds)); <span class="comment">// 设置键的过期时间为窗口大小</span></span><br><span class="line"></span><br><span class="line">             <span class="keyword">return</span> Content(<span class="string">&quot;Request allowed.&quot;</span>);</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><!--计数器 固定窗口算法令牌桶算法（Token Bucket Algorithm）漏桶算法（Leaky Bucket Algorithm）-->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET RocketMQ</title>
      <link href="/2024/05/29/NET-RocketMQ/"/>
      <url>/2024/05/29/NET-RocketMQ/</url>
      
        <content type="html"><![CDATA[<p><strong>RocketMQ</strong> 是一款由阿里巴巴集团开发并开源给Apache软件基金会的分布式消息及流处理平台。以其高吞吐量、低延迟、高可用性等特点而广受欢迎。支持Java，C++, Python, Go, .NET等。</p><p><strong>异步解耦</strong>：可以实现上游和下游业务系统的松耦合设计，使得服务部分节点异常不会影响到核心交易系统的正常运转。在电商、金融等分布式系统中，这种解耦设计尤为重要。<br><strong>削峰填谷</strong>：在如秒杀、大促等大型活动中，系统会面临巨大的流量冲击。RocketMQ利用其高性能的消息处理能力，可以有效地应对这种流量冲击，保证系统的稳定运行。<br><strong>顺序消息</strong>：支持顺序消息（分区有序），可以确保消息的先进先出。这在交易系统中的订单创建、支付、退款等流程中尤为重要，因为这些流程对消息的顺序有严格要求。<br><strong>分布式事务消息</strong>：支持分布式事务消息，可以保证分布式事务的强一致性。这在涉及多个服务的分布式系统中非常有用，可以确保数据的一致性和完整性。</p><p><strong>RocketMQ优点</strong><br><strong>高吞吐量和低延迟</strong>：能够处理大规模消息流，并提供低延迟的消息传递。这使得它非常适合处理高并发的应用场景，如电子商务和金融交易系统。<br><strong>可靠性</strong>：具有高度可靠的消息传递机制。它支持消息持久化和复制，确保消息不会丢失，并能够在故障发生时进行自动恢复。<br><strong>分布式扩展</strong>：支持水平扩展，可以方便地添加新的消息生产者和消费者来应对负载增加的情况。<br><strong>易于部署</strong>：提供开箱即用的部署方式，非常适合在分布式系统中使用。</p><!--RocketMQ的缺点**社区相对较小**：与一些其他消息队列系统相比，RocketMQ的社区规模相对较小。这可能导致在遇到问题时，找到相关的解决方案和支持的难度较大。**学习曲线较陡峭**：相对于其他消息中间件来说，RocketMQ的部署和配置相对复杂，需要一定的学习成本。**文档和资料相对较少**：RocketMQ的文档和资料相对较少，需要自行摸索和探索。**部分功能需要手动配置**：RocketMQ的某些功能需要手动配置，不太友好。--><p><strong>RocketMQ架构</strong><br><img   src="https://img-blog.csdnimg.cn/direct/8ec71d1847f74dd99f16835e11966787.png"  alt="在这里插入图片描述"><br><strong>生产者（Producer）</strong><br>用于产生消息的运行实体，通常集成在业务系统的上游。<br><strong>主题（Topic）</strong><br>消息传输和存储的分组容器，内部由多个队列组成。<br><strong>队列（MessageQueue）</strong><br>消息传输和存储的实际单元容器，类似于其他消息队列中的分区。<br><strong>消息（Message）</strong><br>RocketMQ 的最小传输单元，具备不可变性。<br><strong>消费者分组（ConsumerGroup）</strong><br>发布订阅模型中定义的独立的消费身份分组，用于统一管理多个消费者。<br><strong>消费者（Consumer）</strong><br>消费消息的运行实体，集成在业务系统的下游。<br><strong>订阅关系（Subscription）</strong><br>发布订阅模型中消息过滤、重试、消费进度的规则配置。</p><!--**Producer**   : 消息发布的角色。**Consumer**  : 消息消费的角色。**NameServer**  : 路由注册中心，用于Broker的动态注册与发现。**BrokerServer**  : 消息服务器，负责消息的存储、投递、查询以及服务高可用保证。**BrokerServer**  的子模块:**Remoting Module**  : 负责处理来自clients端的请求。**Client Manager**  : 负责管理客户端(Producer/Consumer)和维护Consumer的Topic订阅信息。**Store Service**  : 提供方便简单的API接口处理消息存储到物理硬盘和查询功能。**HA Service**  : 高可用服务，提供Master Broker 和 Slave Broker之间的数据同步功能。**Index Service**  : 根据特定的Message key对投递到Broker的消息进行索引服务，以提供消息的快速查询。--><h1 id="部署RocketMQ（docker）"><a href="#部署RocketMQ（docker）" class="headerlink" title="部署RocketMQ（docker）"></a>部署RocketMQ（docker）</h1><h2 id="安装-Docker："><a href="#安装-Docker：" class="headerlink" title="安装 Docker："></a>安装 Docker：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#debian</span></span><br><span class="line"> curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line"> sudo sh get-docker.sh</span><br></pre></td></tr></table></figure><!--u curl -fsSL https://test.docker.com -o test-docker.sh sudo sh test-docker.sh--><h2 id="拉取-RocketMQ-镜像："><a href="#拉取-RocketMQ-镜像：" class="headerlink" title="拉取 RocketMQ 镜像："></a>拉取 RocketMQ 镜像：</h2><p>使用以下命令从 Docker Hub 拉取最新的 RocketMQ 镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull apache/rocketmq:latest</span><br></pre></td></tr></table></figure><h2 id="启动-RocketMQ-NameServer："><a href="#启动-RocketMQ-NameServer：" class="headerlink" title="启动 RocketMQ NameServer："></a>启动 RocketMQ NameServer：</h2><p>RocketMQ 的 NameServer 是负责管理所有 Broker 节点的目录服务。可以使用以下命令启动 NameServer：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name rmqnamesrv -p 9876:9876 apache/rocketmq:latest sh mqnamesrv</span><br><span class="line">```bash</span><br><span class="line"><span class="comment">## 启动 RocketMQ Broker：</span></span><br><span class="line">RocketMQ 的 Broker 负责存储消息并处理生产者和消费者的请求。使用以下命令启动 Broker：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">docker run -d --name rmqbroker --<span class="built_in">link</span> rmqnamesrv:namesrv -e <span class="string">&quot;NAMESRV_ADDR=namesrv:9876&quot;</span>   -e <span class="string">&quot;BROKER_NAME=broker-a&quot;</span>    -e <span class="string">&quot;BROKER_ID=0&quot;</span>    -e <span class="string">&quot;AUTO_CREATE_TOPIC_ENABLE=true&quot;</span>    -e <span class="string">&quot;AUTO_CREATE_SUBSCRIPTION_GROUP=true&quot;</span>    -p 10911:10911 -p 10909:10909 apache/rocketmq:latest sh mqbroker</span><br></pre></td></tr></table></figure><p>验证<br>查看 NameServer 日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f rmqnamesrv</span><br></pre></td></tr></table></figure><p>查看 Broker 日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f rmqbroker</span><br></pre></td></tr></table></figure><h2 id="使用-RocketMQ-Console："><a href="#使用-RocketMQ-Console：" class="headerlink" title="使用 RocketMQ Console："></a>使用 RocketMQ Console：</h2><p>如果需要可视化管理 RocketMQ，可以运行 RocketMQ Console：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull styletang/rocketmq-console-ng</span><br><span class="line">docker run -d -p 8080:8080 --<span class="built_in">link</span> rmqnamesrv:namesrv -e <span class="string">&quot;JAVA_OPTS=-Drocketmq.namesrv.addr=namesrv:9876&quot;</span> styletang/rocketmq-console-ng</span><br></pre></td></tr></table></figure><p>总结</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取 RocketMQ 镜像</span></span><br><span class="line">docker pull apache/rocketmq:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 NameServer</span></span><br><span class="line">docker run -d --name rmqnamesrv -p 9876:9876 apache/rocketmq:latest sh mqnamesrv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 Broker</span></span><br><span class="line">docker run -d --name rmqbroker --<span class="built_in">link</span> rmqnamesrv:namesrv -e <span class="string">&quot;NAMESRV_ADDR=namesrv:9876&quot;</span> -p 10911:10911 -p 10909:10909 apache/rocketmq:latest sh mqbroker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 RocketMQ Console</span></span><br><span class="line">docker pull styletang/rocketmq-console-ng</span><br><span class="line">docker run -d -p 8080:8080 --<span class="built_in">link</span> rmqnamesrv:namesrv -e <span class="string">&quot;JAVA_OPTS=-Drocketmq.namesrv.addr=namesrv:9876&quot;</span> styletang/rocketmq-console-ng</span><br></pre></td></tr></table></figure><hr><p>如果是外网环境<br>run Broker 外网IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /usr/data/rocketMQ/data/broker/logs</span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/data/rocketMQ/data/broker/store</span><br><span class="line"><span class="built_in">mkdir</span> -p /usr/data/rocketMQ/data/broker/conf/</span><br></pre></td></tr></table></figure><p>broket.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">brokerClusterName = DefaultCluster</span><br><span class="line">brokerName = broker-a</span><br><span class="line">brokerId = 0</span><br><span class="line">deleteWhen = 04</span><br><span class="line">fileReservedTime = 48</span><br><span class="line">brokerRole = ASYNC_MASTER</span><br><span class="line">flushDiskType = ASYNC_FLUSH</span><br><span class="line">namesrvAddr = 外网ip:9876</span><br><span class="line">brokerIP1 = 外网ip</span><br><span class="line">autoCreateTopicEnable=<span class="literal">true</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 0.0.0.0:10911:10911 -p 0.0.0.0:10909:10909 -d -v /usr/data/rocketMQ/data/broker/logs:/root/logs -v /usr/data/rocketMQ/data/broker/store:/root/store -v /usr/data/rocketMQ/data/broker/conf/broker.conf:/opt/rocketmq/conf/broker.conf --name rmqbroker --<span class="built_in">link</span> rmqnamesrv:namesrv -e <span class="string">&quot;NAMESRV_ADDR=namesrv:9876&quot;</span> -e <span class="string">&quot;MAX_POSSIBLE_HEAP=200000000&quot;</span> -e <span class="string">&quot;autoCreateTopicEnable=true&quot;</span> rocketmqinc/rocketmq sh mqbroker -c /opt/rocketmq/conf/broker.conf</span><br></pre></td></tr></table></figure><h1 id="NET-RocketMQ"><a href="#NET-RocketMQ" class="headerlink" title=".NET RocketMQ"></a>.NET RocketMQ</h1><h2 id="NuGet-NewLife-RocketMQ"><a href="#NuGet-NewLife-RocketMQ" class="headerlink" title="NuGet NewLife.RocketMQ"></a>NuGet NewLife.RocketMQ</h2><h2 id="Producer"><a href="#Producer" class="headerlink" title="Producer"></a>Producer</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main</span></span><br><span class="line">  XTrace.UseConsole();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> producer = <span class="keyword">new</span> Producer</span><br><span class="line">  &#123;</span><br><span class="line">      NameServerAddress = <span class="string">&quot;x.x.x.x:9876&quot;</span>,</span><br><span class="line">      Topic = <span class="string">&quot;t0529&quot;</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">      producer.Start();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 发送一条测试消息，以确保 Topic 被创建</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">var</span> str = <span class="string">&quot;mqm&quot;</span> + i;</span><br><span class="line">          <span class="comment">//var str = Rand.NextString(1337);</span></span><br><span class="line"></span><br><span class="line">          <span class="keyword">var</span> sr = producer.Publish(str, <span class="string">&quot;TagA&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">  &#123;</span><br><span class="line">      Console.WriteLine(<span class="string">$&quot;Exception: <span class="subst">&#123;ex.Message&#125;</span>&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">finally</span></span><br><span class="line">  &#123;</span><br><span class="line">      producer.Stop();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="Consumer"><a href="#Consumer" class="headerlink" title="Consumer"></a>Consumer</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> consumer = <span class="keyword">new</span> Consumer</span><br><span class="line">&#123;</span><br><span class="line">    Topic = <span class="string">&quot;t0529&quot;</span>,</span><br><span class="line">    Group = <span class="string">&quot;test&quot;</span>,</span><br><span class="line">    NameServerAddress = <span class="string">&quot;x.x.x.x:9876&quot;</span>,</span><br><span class="line"></span><br><span class="line">    FromLastOffset = <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">//SkipOverStoredMsgCount = 0,</span></span><br><span class="line">    <span class="comment">//BatchSize = 20,</span></span><br><span class="line"></span><br><span class="line">    Log = XTrace.Log,</span><br><span class="line">    ClientLog = XTrace.Log,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">consumer.OnConsume = OnConsume;</span><br><span class="line"></span><br><span class="line">consumer.Configure(MqSetting.Current);</span><br><span class="line">consumer.Start();</span><br><span class="line"></span><br><span class="line">_consumer = consumer;</span><br></pre></td></tr></table></figure><!-- https://www.cnblogs.com/binz/p/15252277.html aci密码--><!--d curl -fsSL https://get.docker.com -o get-docker.sh sudo sh get-docker.shu curl -fsSL https://test.docker.com -o test-docker.sh sudo sh test-docker.sherrdocker: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon runsudo systemctl status docker不在运行，启动Docker守护进程：sudo systemctl start docker--><!--namesrvNameServermkdir -p /usr/data/rocketMQ/data/namesrv/logsmkdir -p /usr/data/rocketMQ/data/namesrv/storedocker run -p 0.0.0.0:9876:9876 -v /usr/data/rocketMQ/data/namesrv/logs:/root/logs -v /usr/data/rocketMQ/data/namesrv/store:/root/store --name mqnames -e “MAX_POSSIBLE_HEAP=100000000” -d docker.io/rocketmqinc/rocketmq sh mqnamesrvdocker run -p 0.0.0.0:9876:9876 -v /usr/data/rocketMQ/data/namesrv/logs:/root/logs -v /usr/data/rocketMQ/data/namesrv/store:/root/store --name mqnames -e "MAX_POSSIBLE_HEAP=100000000" -d rocketmqinc/rocketmqbroker运行Brokermkdir -p /usr/data/rocketMQ/data/broker/logsmkdir -p /usr/data/rocketMQ/data/broker/storemkdir -p /usr/data/rocketMQ/data/broker/conf/ /usr/data/rocketMQ/data/broker/conf #broker.confbrokerClusterName = DefaultClusterbrokerName = broker-abrokerId = 0deleteWhen = 04fileReservedTime = 48brokerRole = ASYNC_MASTERflushDiskType = ASYNC_FLUSHbrokerIP1 = xx.x.x.x docker run -p 0.0.0.0:10911:10911 -p 0.0.0.0:10909:10909 -d -v /usr/data/rocketMQ/data/broker/logs:/root/logs -v /usr/data/rocketMQ/data/broker/store:/root/store -v /usr/data/rocketMQ/data/broker/conf/broker.conf:/opt/rocketmq/conf/broker.conf --name mqbroker --link mqnames:namesrv -e "NAMESRV_ADDR=namesrv:9876" -e "MAX_POSSIBLE_HEAP=200000000" -e "autoCreateTopicEnable=true" rocketmqinc/rocketmq sh mqbroker -c /opt/rocketmq/conf/broker.conf接下来，运行Broker。你需要为每个Broker指定一个唯一的Broker名称（brokerName），并决定它是否为Master或者Slave，同时指定NameServer的地址。Bashdocker run -d --name rmqbroker -p 10911:10911 -p 10909:10909 \    -e "JAVA_OPTS=-Drocketmq.namesrv.addr=yourNameServerHost:9876 \          -Drocketmq.broker.ip=yourBrokerIP \          -Drocketmq.broker.cluster=myCluster \          -Drocketmq.broker.name=broker-a \          -Drocketmq.broker.role=MASTER" \    apacherocketmq/rocketmq:latest sh mqbroker请替换yourNameServerHost:9876为NameServer的实际地址（如果是本地部署且按照上述步骤，则通常为localhost:9876），yourBrokerIP为当前Broker所在容器或主机的IP地址，myCluster为自定义的集群名称，以及根据实际情况设置broker-a和MASTER或SLAVE。![在这里插入图片描述](https://img-blog.csdnimg.cn/direct/c6630fab71ac4adaada393fb83aaa608.png)=>>>![在这里插入图片描述](https://img-blog.csdnimg.cn/direct/2cdb7a3af9734befbd379fba27289be7.png)ERRorg.apache.rocketmq.remoting.exception.RemotingConnectException: connection to ip跨域问题 .NET中使用RocketMQRocketMQ.Clientdocker pull apacherocketmq/rocketmq:latestdocker run -d --name rmqbroker -p 10911:10911 -p 10909:10909 \ -e "JAVA_OPTS=-Drocketmq.namesrv.addr=yourNameServerHost:9876 \ -Drocketmq.broker.ip=yourBrokerIP \ -Drocketmq.broker.cluster=myCluster \ -Drocketmq.broker.name=broker-a \ -Drocketmq.broker.role=MASTER" \ apacherocketmq/rocketmq:latest sh mqbroker docker run -d -p 24527:24527 --name rmqserver  apache/rocketmq#docker run -d -p 24527:24527 --name rmqserver  foxiswho/rocketmqdocker run -d -p 9876:9876 --name rmqserver  foxiswho/rocketmq:server-4.5.1apacherocketmq/rocketmq-broker为了启动一个Docker容器，你需要使用docker run命令，后跟你想要运行的镜像名称。如果你还没有镜像，你可以使用docker pull命令来从Docker Hub或其他注册中心拉取它。以下是一个基本的示例，它将从Docker Hub拉取一个名为ubuntu的官方镜像，并运行一个新的容器：docker pull ubuntudocker run -it ubuntu /bin/bash解释：docker pull ubuntu：从Docker Hub拉取最新的Ubuntu镜像。docker run -it：这告诉Docker运行一个新容器。-i表示交互式操作，-t分配一个伪终端。ubuntu：指定要运行的镜像名称。/bin/bash：在容器内部启动Bash shell，允许你与容器交互。如果你想要在后台运行容器，可以使用-d标志，并且不需要一个交互式终端：docker run -d ubuntu这将在后台启动一个Ubuntu容器，不会提供一个交互式的shell。RMQ  RocketMQubuntu docker curl -fsSL https://test.docker.com -o test-docker.sh sudo sh test-docker.shRocketMQ --><!---->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> RocketMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo githubio</title>
      <link href="/2024/05/28/hexo-githubio/"/>
      <url>/2024/05/28/hexo-githubio/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h1><p>npm install hexo-cli -g<br>hexo init blog<br>cd blog<br>npm install<br>hexo server</p><h1 id="key配置"><a href="#key配置" class="headerlink" title="key配置"></a>key配置</h1><p>ssh-keygen -t ed25519 -C “<a class="link"   href="mailto:&#x65;&#x6d;&#x61;&#105;&#x6c;&#64;&#101;&#46;&#99;&#x6f;&#109;" >&#x65;&#x6d;&#x61;&#105;&#x6c;&#64;&#101;&#46;&#99;&#x6f;&#109;<i class="fas fa-external-link-alt"></i></a>“<br>添加key到github</p><p>err<br><a class="link"   href="mailto:&#x67;&#105;&#116;&#x40;&#x67;&#x69;&#116;&#104;&#117;&#x62;&#x2e;&#99;&#x6f;&#109;" >&#x67;&#105;&#116;&#x40;&#x67;&#x69;&#116;&#104;&#117;&#x62;&#x2e;&#99;&#x6f;&#109;<i class="fas fa-external-link-alt"></i></a>: Permission denied (publickey).<br>fatal: Could not read from remote repository.</p><h1 id="配置GitHub仓库"><a href="#配置GitHub仓库" class="headerlink" title="配置GitHub仓库"></a>配置GitHub仓库</h1><p>在GitHub上创建一个新的仓库，其名称应该是 用户名.github.io，其中用户名是你的GitHub用户名。<br> git config –global user.email “<a class="link"   href="mailto:&#120;&#120;&#x40;&#x71;&#113;&#x2e;&#99;&#x6f;&#109;" >&#120;&#120;&#x40;&#x71;&#113;&#x2e;&#99;&#x6f;&#109;<i class="fas fa-external-link-alt"></i></a>“<br> git config –global user.name “user”</p><h1 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h1><p>deploy:<br>  type: git<br>  repo: <repository url> # 替换为你的GitHub仓库url<br>  branch: master</p><h1 id="安装hexo-deployer-git插件："><a href="#安装hexo-deployer-git插件：" class="headerlink" title="安装hexo-deployer-git插件："></a>安装hexo-deployer-git插件：</h1><p>npm install hexo-deployer-git –save</p><h1 id="部署到GitHub："><a href="#部署到GitHub：" class="headerlink" title="部署到GitHub："></a>部署到GitHub：</h1><p>hexo clean<br>hexo g #hexo generate<br>hexo d #hexo deploy</p><!-- ​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240528.jpg"  > --><h1 id="建立仓库-testhtml"><a href="#建立仓库-testhtml" class="headerlink" title="建立仓库 testhtml"></a>建立仓库 testhtml</h1><p>Settings -&gt; pages</p><p><a class="link"   href="https://xxx.github.io/testhtml/index.html" >https://xxx.github.io/testhtml/index.html<i class="fas fa-external-link-alt"></i></a></p>   <!-- err 提交问题 fatal: unable to access 'https://github OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 0 git config --global http.sslVerify "false"err提交问题   (?) To push, remove secret from commit(s) or follow this URL to allow the secret.remote:        https://github.com/qfsysw/qfsysw.github.io/security/secret-scanning/unblock-secret/2hHiwZUqlhqb19DH43f0VUKQbY0remote:remote:remote:To https://github.com/qfsysw/qfsysw.github.io.git ! [remote rejected] HEAD -> master (push declined due to repository rule violations)error: failed to push some refs to 'https://github.com/qfsysw/qfsysw.github.io.git'remote =>>>> urlor settings ==> security_analysis ==> Secret scanning =>DIS安装 hexo-generator-search$ npm install hexo-generator-search --save配置在_config.yml中添加search:  path: search.xml  field: post   秃了也弱了   -    name: github    icon: github    path: https://github.com/leedom92/hexo-theme-leedom    target: _blank  -    name: email    icon: envelope    path:   -    name: facebook    icon: facebooksquare    path:  -    name: twitter    icon: twitter    path:  -    name: wechat    icon: wechat    path:  -    name: weibo    icon: weibo    path:  -    # rss需安装 hexo-generator-feed 插件    # 具体参照https://github.com/hexojs/hexo-generator-feed    name: rss    icon: rss    path: /atom.xml    target: _blank -->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HarmonyOS socket websocket</title>
      <link href="/2024/05/26/HarmonyOS-Socket/"/>
      <url>/2024/05/26/HarmonyOS-Socket/</url>
      
        <content type="html"><![CDATA[<h1 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket <span class="keyword">from</span> <span class="string">&#x27;@ohos.net.socket&#x27;</span>;</span><br></pre></td></tr></table></figure><p>create</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> tcp = socket.<span class="title function_">constructTCPSocketInstance</span>();</span><br><span class="line"><span class="keyword">let</span> promise = tcp.<span class="title function_">connect</span>(&#123; <span class="attr">address</span>: &#123;<span class="attr">address</span>: <span class="string">&#x27;192.168.1.11&#x27;</span>, <span class="attr">port</span>: <span class="number">24524</span>, <span class="attr">family</span>: <span class="number">1</span>&#125; , <span class="attr">timeout</span>: <span class="number">6000</span>&#125;);</span><br><span class="line">promise.<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;connect success&#x27;</span>);</span><br><span class="line">  tcp.<span class="title function_">send</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:<span class="string">&#x27;Hello, server!&#x27;</span></span><br><span class="line">  &#125;,<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;send fail&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;send success&#x27;</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;connect fail&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>ERR<br>系统识别到新的sdk路径 请清除模拟器数据后<br>Sdk Path has been changed to xxx</p><p>1.在Local Emulator的设备列表窗口，点击“Wipe User Data”清除模拟器数据，然后重新启动模拟器。<br>2.重新创建一个模拟器，然后启动新建的模拟器。</p><p>console.log  Log &#x3D;&gt; show only js log</p><p>ERR<br>201<br>module.json5<br>添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;requestPermissions&quot;</span>: [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;ohos.permission.INTERNET&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>ERR<br>connect fail<br>2301088</p><p>需添加本机IP</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> bindAddress = &#123;</span><br><span class="line">    <span class="attr">address</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="attr">port</span>: <span class="number">1234</span>,</span><br><span class="line">    <span class="attr">family</span>: <span class="number">1</span></span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure><p>node server</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> net = <span class="built_in">require</span>(<span class="string">&#x27;net&#x27;</span>);</span><br><span class="line"><span class="comment">//createServer</span></span><br><span class="line"><span class="keyword">const</span> server = net.<span class="title function_">createServer</span>(<span class="function">(<span class="params">socket</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;client con&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  socket.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`rs from client : <span class="subst">$&#123;data&#125;</span>`</span>);</span><br><span class="line">    socket.<span class="title function_">write</span>(<span class="string">`rs server : <span class="subst">$&#123;data&#125;</span>`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  socket.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;client end &#x27;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">24524</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;tcp run on 24524&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>run client</p><!--    // constructTCPSocketInstance    let tcp = socket.constructTCPSocketInstance();    //on    tcp.on('message', value => {      console.log("on message")      let buffer = value.message      let dataView = new DataView(buffer)      let str = ""      for (let i = 0; i < dataView.byteLength; ++i) {        str += String.fromCharCode(dataView.getUint8(i))      }      console.log("on connect received:" + str)      this.message  = str;    });    tcp.on('connect', () => {      console.log("on connect")    });    tcp.on('close', () => {      console.log("on close")    });    //    let bindAddress = {      address: 'localhost',      port: 1234,      family: 1    };    tcp.bind(bindAddress, err => {      if (err) {        console.log('bind fail'+err.code.toString());        return;      }      console.log('bind success');      // con      let connectAddress = {        address: '117.72.72.102',        port: 24524,        family: 1      };      tcp.connect({        address: connectAddress, timeout: 6000      }, err => {        if (err) {          console.log('connect fail'+err.code.toString());          return;        }        console.log('connect success');        // send        tcp.send({          data: 'Hello, server!'        }, err => {          if (err) {            console.log('send fail'+err.code.toString());            return;          }          console.log('send success');        })      });    });    // close    setTimeout(() => {      tcp.close((err) => {        console.log('close socket.')      });      tcp.off('message');      tcp.off('connect');      tcp.off('close');    }, 30 * 1000);--><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/hm01.jpg"  ></p><h1 id="webscoket"><a href="#webscoket" class="headerlink" title="webscoket"></a>webscoket</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> webSocket <span class="keyword">from</span> <span class="string">&#x27;@ohos.net.webSocket&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> ws = webSocket.<span class="title function_">createWebSocket</span>();</span><br><span class="line"><span class="keyword">let</span> url = <span class="string">&quot;ws://xxx:24524&quot;</span></span><br><span class="line">ws.<span class="title function_">connect</span>(url, <span class="function">(<span class="params">err, value</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> promise = ws.<span class="title function_">send</span>(<span class="string">&quot;Hello, server!&quot;</span>);</span><br><span class="line">  promise.<span class="title function_">then</span>(<span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;send success&quot;</span>)</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;send fail, error:&quot;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err))</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>权限<br>ohos.permission.INTERNET</p><p>websocket更加简单一点~~</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/hm02.jpg"  ></p><!--文档[socket](https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/js-apis-socket-0000001477981433-V2#ZH-CN_TOPIC_0000001523808874__send-3)https://developer.huawei.com/consumer/cn/doc/harmonyos-references-V2/js-apis-websocket-0000001427902700-V2#ZH-CN_TOPIC_0000001574088709__send-1https://developer.huawei.com/consumer/cn/hmos/samples/?catalogVersion=V2-->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python helloworld＞get/post mysql requests socket docker opencv flask fastapi debian ubuntu sparkai</title>
      <link href="/2024/05/26/Python-Base/"/>
      <url>/2024/05/26/Python-Base/</url>
      
        <content type="html"><![CDATA[<!--**python** helloworld >>> get/post mysql mail requests socket server web flask fastapi debian ubuntu sparkai--><h1 id="🌠setup"><a href="#🌠setup" class="headerlink" title="🌠setup"></a>🌠setup</h1><p>安装<br><a class="link"   href="http://www.python.org/" >python.org<i class="fas fa-external-link-alt"></i></a></p><h1 id="🐷helloworld"><a href="#🐷helloworld" class="headerlink" title="🐷helloworld"></a>🐷helloworld</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;helloworld&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python test.py</span><br></pre></td></tr></table></figure><p><img   src="https://img-blog.csdnimg.cn/direct/cd1496d36be24d75916d9e10cd4be735.png"  alt="在这里插入图片描述"></p><h2 id="var"><a href="#var" class="headerlink" title="var"></a>var</h2><p>变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    company, date, *others = [<span class="string">&#x27;hi&#x27;</span>, <span class="string">&#x27;20240521&#x27;</span>, <span class="string">&#x27;000&#x27;</span>, <span class="string">&#x27;11111&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(company, date)</span><br><span class="line">    <span class="built_in">print</span>(others)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="random"><a href="#random" class="headerlink" title="random"></a>random</h2><p>随机</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">rand_list = []</span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">4</span>:</span><br><span class="line">    rand_num = random.randint(<span class="number">0</span>, <span class="number">499</span>)</span><br><span class="line">    <span class="keyword">if</span> rand_num <span class="keyword">not</span> <span class="keyword">in</span> rand_list:</span><br><span class="line">        rand_list.append(rand_num)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(rand_list)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><p>列表 可变</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个空列表  </span></span><br><span class="line">my_list = []  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 向列表中添加元素  </span></span><br><span class="line">my_list.append(<span class="number">1</span>)  </span><br><span class="line">my_list.append(<span class="number">2</span>)  </span><br><span class="line">my_list.append(<span class="number">3</span>)  </span><br><span class="line">  </span><br><span class="line"><span class="built_in">print</span>(my_list)  <span class="comment"># 输出: [1, 2, 3]  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 修改列表中的元素  </span></span><br><span class="line">my_list[<span class="number">1</span>] = <span class="string">&#x27;two&#x27;</span>  </span><br><span class="line"><span class="built_in">print</span>(my_list)  <span class="comment"># 输出: [1, &#x27;two&#x27;, 3]  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 列表切片  </span></span><br><span class="line">sub_list = my_list[<span class="number">1</span>:<span class="number">3</span>]  </span><br><span class="line"><span class="built_in">print</span>(sub_list)  <span class="comment"># 输出: [&#x27;two&#x27;, 3]  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 删除列表中的元素  </span></span><br><span class="line"><span class="keyword">del</span> my_list[<span class="number">2</span>]  </span><br><span class="line"><span class="built_in">print</span>(my_list)  <span class="comment"># 输出: [1, &#x27;two&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个包含0到9的偶数列表  </span></span><br><span class="line">even_numbers = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>) <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>]  </span><br><span class="line"><span class="built_in">print</span>(even_numbers)  <span class="comment"># 输出: [0, 2, 4, 6, 8]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="tuple"><a href="#tuple" class="headerlink" title="tuple"></a>tuple</h2><p>元组 不可变</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个元组  </span></span><br><span class="line">my_tuple = (<span class="number">1</span>, <span class="string">&#x27;two&#x27;</span>, <span class="number">3.0</span>)  </span><br><span class="line"><span class="built_in">print</span>(my_tuple)  <span class="comment"># 输出: (1, &#x27;two&#x27;, 3.0)  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 尝试修改元组中的元素（会抛出TypeError）  </span></span><br><span class="line"><span class="comment">## my_tuple[1] = &#x27;Two&#x27;  # 这行代码会报错，因为元组是不可变的  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 元组切片（虽然元组不可变，但你可以获取它的切片）  </span></span><br><span class="line">sub_tuple = my_tuple[<span class="number">1</span>:]  </span><br><span class="line"><span class="built_in">print</span>(sub_tuple)  <span class="comment"># 输出: (&#x27;two&#x27;, 3.0)</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h2><p>判断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">age =<span class="number">5</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">6</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;teenager&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt;= <span class="number">20</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;old&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;kid&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="calculator"><a href="#calculator" class="headerlink" title="calculator"></a>calculator</h2><p>计算器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;加法&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">subtract</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;减法&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> x - y</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">multiply</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;乘法&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> x * y</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">divide</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;除法&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> y == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;错误：除数不能为0&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x / y</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;选择操作：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;1.加法&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;2.减法&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;3.乘法&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;4.除法&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    choice = <span class="built_in">input</span>(<span class="string">&quot;请输入你的选择(1/2/3/4): &quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> choice <span class="keyword">in</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;4&#x27;</span>):</span><br><span class="line">        num1 = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入第一个数字: &quot;</span>))</span><br><span class="line">        num2 = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入第二个数字: &quot;</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> choice == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(num1, <span class="string">&quot;+&quot;</span>, num2, <span class="string">&quot;=&quot;</span>, add(num1, num2))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(num1, <span class="string">&quot;-&quot;</span>, num2, <span class="string">&quot;=&quot;</span>, subtract(num1, num2))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(num1, <span class="string">&quot;*&quot;</span>, num2, <span class="string">&quot;=&quot;</span>, multiply(num1, num2))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            result = divide(num1, num2)</span><br><span class="line">            <span class="built_in">print</span>(num1, <span class="string">&quot;/&quot;</span>, num2, <span class="string">&quot;=&quot;</span>, result)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 检查用户是否想继续计算</span></span><br><span class="line">        next_calculation = <span class="built_in">input</span>(<span class="string">&quot;想要进行下一次计算吗？(yes/no): &quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> next_calculation.lower() != <span class="string">&#x27;yes&#x27;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;非法输入，请重新输入&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><!--<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    operate_type = <span class="built_in">input</span>(<span class="string">&#x27;请选择运算类型：1加法，2减法，3乘法，4除法：&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">int</span>(operate_type) <span class="keyword">not</span> <span class="keyword">in</span> (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;类型选择错误，只能为1-4&#x27;</span>)</span><br><span class="line">        operate_type = <span class="built_in">input</span>(<span class="string">&#x27;请重新选择运算类型：1加法，2减法，3乘法，4除法：&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    number_one = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入第一个数：&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    number_two = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入第二个数：&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> operate_type == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">  </span><br><span class="line">        result = number_one + number_two</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;加法运算，结果是：&#x27;</span> + <span class="built_in">str</span>(result))</span><br><span class="line">    <span class="keyword">elif</span> operate_type == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">   </span><br><span class="line">        result = number_one - number_two</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;减法运算，结果是：&#x27;</span> + <span class="built_in">str</span>(result))</span><br><span class="line">    <span class="keyword">elif</span> operate_type == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">  </span><br><span class="line">        result = number_one * number_two</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;乘法运算，结果是：&#x27;</span> + <span class="built_in">str</span>(result))</span><br><span class="line">    <span class="keyword">elif</span> operate_type == <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">if</span> number_two == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;第二个数即除数不能为0&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result = number_one / number_two</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;除法运算，结果是：&#x27;</span> + <span class="built_in">str</span>(result))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;算法类型错误&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>–&gt;</p><h2 id="match"><a href="#match" class="headerlink" title="match"></a>match</h2><p>py的switch </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">args = [<span class="string">&#x27;gcc&#x27;</span>, <span class="string">&#x27;hello.c&#x27;</span>, <span class="string">&#x27;world.c&#x27;</span>]</span><br><span class="line"><span class="comment"># args = [&#x27;clean&#x27;]</span></span><br><span class="line"><span class="comment">#args = [&#x27;12&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">match</span> args:</span><br><span class="line">    <span class="comment"># 如果仅出现gcc，报错:</span></span><br><span class="line">    <span class="keyword">case</span> [<span class="string">&#x27;gcc&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;gcc: missing source file(s).&#x27;</span>)</span><br><span class="line">    <span class="comment"># 出现gcc，且至少指定了一个文件:</span></span><br><span class="line">    <span class="keyword">case</span> [<span class="string">&#x27;gcc&#x27;</span>, file1, *files]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;gcc compile: &#x27;</span> + file1 + <span class="string">&#x27;, &#x27;</span> + <span class="string">&#x27;, &#x27;</span>.join(files))</span><br><span class="line">    <span class="comment"># 仅出现clean:</span></span><br><span class="line">    <span class="keyword">case</span> [<span class="string">&#x27;clean&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;clean&#x27;</span>)</span><br><span class="line">    <span class="keyword">case</span> _:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;invalid command.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">age = <span class="number">19</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">match</span> age:</span><br><span class="line">    <span class="keyword">case</span> x <span class="keyword">if</span> x &lt; <span class="number">10</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;&lt; 10 years old: <span class="subst">&#123;x&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;10 years old.&#x27;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span> | <span class="number">12</span> | <span class="number">13</span> | <span class="number">14</span> | <span class="number">15</span> | <span class="number">16</span> | <span class="number">17</span> | <span class="number">18</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;11~18 years old.&#x27;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">19</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;19 years old.&#x27;</span>)</span><br><span class="line">    <span class="keyword">case</span> _:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;not sure.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="fro"><a href="#fro" class="headerlink" title="fro"></a>fro</h2><p>循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">names = [<span class="string">&#x27;a1&#x27;</span>, <span class="string">&#x27;b2&#x27;</span>, <span class="string">&#x27;c3&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Hi &#x27;</span>+ name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]:</span><br><span class="line">    <span class="built_in">sum</span> = <span class="built_in">sum</span> + x</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><h2 id="function"><a href="#function" class="headerlink" title="function"></a>function</h2><p>函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_abs</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">if</span> x &gt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> -x</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_fun</span>(<span class="params"> x,y </span>):</span><br><span class="line">    <span class="keyword">return</span> x,y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(my_abs(<span class="number">11</span>))</span><br><span class="line"><span class="built_in">print</span>(my_abs(-<span class="number">11</span>))</span><br><span class="line"><span class="built_in">print</span>(my_fun(<span class="number">11</span>,<span class="number">22</span>))</span><br><span class="line">x1,y2 = my_fun(<span class="number">11</span>,<span class="number">22</span>)</span><br><span class="line"><span class="built_in">print</span>(x1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">myfn</span>(<span class="params">numbers</span>):</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> numbers:</span><br><span class="line">        <span class="built_in">sum</span> = <span class="built_in">sum</span> + n  <span class="comment"># * n</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(myfn([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>,<span class="number">10</span>]))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>迭代</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">return</span> n * <span class="number">2</span></span><br><span class="line"></span><br><span class="line">nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">r = <span class="built_in">map</span>(f, nums)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(r))</span><br></pre></td></tr></table></figure><p>ERR<br>IndentationError: unexpected indent<br>存在不正确的缩进</p><h2 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h2><p>迭代前两个元素通过函数处理，得到的结果再与第三个元素通过函数处理，依此类推</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line"></span><br><span class="line">numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">sum_of_numbers = reduce(add, numbers)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(sum_of_numbers)  </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p>过滤</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_odd</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">return</span> n % <span class="number">2</span> == <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">filter</span>(is_odd, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">15</span>])))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="sorted"><a href="#sorted" class="headerlink" title="sorted"></a>sorted</h2><p>排序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr = [<span class="number">33</span>,<span class="number">12</span>,-<span class="number">22</span>,<span class="number">1</span>,<span class="number">12</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(arr))</span><br></pre></td></tr></table></figure><h2 id="lambda"><a href="#lambda" class="headerlink" title="lambda"></a>lambda</h2><p>匿名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#匿名函数</span></span><br><span class="line">square = <span class="keyword">lambda</span> x: x**<span class="number">2</span></span><br><span class="line">numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">squared_numbers = <span class="built_in">list</span>(<span class="built_in">map</span>(square, numbers))</span><br><span class="line"><span class="built_in">print</span>(squared_numbers)  </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="module-class"><a href="#module-class" class="headerlink" title="module class"></a>module class</h2><p>模块 类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#module</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greet</span>(<span class="params">name</span>):</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Hello, <span class="subst">&#123;name&#125;</span>!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_numbers</span>(<span class="params">a, b</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>:</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">introduce</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;My name is <span class="subst">&#123;self.name&#125;</span> and I am <span class="subst">&#123;self.age&#125;</span> years old.&quot;</span>)</span><br></pre></td></tr></table></figure><p>import</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> module</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">module.greet(<span class="string">&quot;m1&quot;</span>)</span><br><span class="line"></span><br><span class="line">result = module.add_numbers(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">person = module.Person(<span class="string">&quot;m2&quot;</span>, <span class="number">11</span>)</span><br><span class="line">person.introduce()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>pip install xx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install FastAPI  </span><br><span class="line"><span class="comment">#pip3 install FastAPI  </span></span><br></pre></td></tr></table></figure><p>import </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI  </span><br><span class="line"><span class="comment">#...</span></span><br></pre></td></tr></table></figure><h2 id="extends-override"><a href="#extends-override" class="headerlink" title="extends override"></a>extends override</h2><p>继承 多态</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line"><span class="comment">#extends</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span>  </span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span> says wang!&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span> says miao!&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#override</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">animal_sound</span>(<span class="params">animal</span>):</span><br><span class="line">    <span class="built_in">print</span>(animal.speak())</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dog = Dog(<span class="string">&#x27;wangcai&#x27;</span>)</span><br><span class="line">cat = Cat(<span class="string">&#x27;afu&#x27;</span>)</span><br><span class="line"></span><br><span class="line">animal_sound(dog)  </span><br><span class="line">animal_sound(cat) </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Swimmer</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">swim</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span> is swimming.&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Flyer</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fly</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span> is flying.&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Duck</span>(Animal, Swimmer, Flyer):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gaga = Duck(<span class="string">&quot;Gaga&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(gaga.swim())  </span><br><span class="line"><span class="built_in">print</span>(gaga.fly())   </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="built_in">print</span>(sys.version)</span><br><span class="line"></span><br><span class="line">major_ver = sys.version_info.major</span><br><span class="line">minor_ver = sys.version_info.minor</span><br><span class="line">micro_ver = sys.version_info.micro</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Python version：<span class="subst">&#123;major_ver&#125;</span>.<span class="subst">&#123;minor_ver&#125;</span>.<span class="subst">&#123;micro_ver&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🐶sql"><a href="#🐶sql" class="headerlink" title="🐶sql"></a>🐶sql</h1><h2 id="sqlite"><a href="#sqlite" class="headerlink" title="sqlite"></a>sqlite</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line">conn = sqlite3.connect(<span class="string">&#x27;test.db&#x27;</span>)</span><br><span class="line">c = conn.cursor()</span><br><span class="line">c.execute(<span class="string">&#x27;&#x27;&#x27;CREATE TABLE IF NOT EXISTS stocks</span></span><br><span class="line"><span class="string">             (date text, trans text, symbol text, qty real, price real)&#x27;&#x27;&#x27;</span>)</span><br><span class="line">c.execute(<span class="string">&quot;INSERT INTO stocks VALUES (&#x27;2024-04-25&#x27;,&#x27;BUY&#x27;,&#x27;P1&#x27;,100,150.00)&quot;</span>)</span><br><span class="line">conn.commit()</span><br><span class="line">c.execute(<span class="string">&quot;INSERT INTO stocks VALUES (?,?,?,?,?)&quot;</span>, (<span class="string">&#x27;2024-04-24&#x27;</span>,<span class="string">&#x27;SELL&#x27;</span>,<span class="string">&#x27;P2&#x27;</span>,<span class="number">50</span>,<span class="number">300.00</span>))</span><br><span class="line">c.execute(<span class="string">&quot;SELECT * FROM stocks WHERE symbol = &#x27;P1&#x27;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(c.fetchone())  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-----&quot;</span>)</span><br><span class="line"></span><br><span class="line">c.execute(<span class="string">&quot;SELECT * FROM stocks&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> c.fetchall():</span><br><span class="line">    <span class="built_in">print</span>(row)</span><br><span class="line"></span><br><span class="line">c.close()</span><br><span class="line">conn.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysql-connector-python</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> mysql.connector</span><br><span class="line"><span class="keyword">from</span> mysql.connector <span class="keyword">import</span> Error</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">connect_and_query</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 连接到 MySQL 数据库</span></span><br><span class="line">        connection = mysql.connector.connect(</span><br><span class="line">            port= <span class="string">&#x27;30306&#x27;</span>,</span><br><span class="line">            host=<span class="string">&#x27;localhost&#x27;</span>,          <span class="comment"># 数据库主机地址</span></span><br><span class="line">            user=<span class="string">&#x27;root&#x27;</span>,       <span class="comment"># 数据库用户名</span></span><br><span class="line">            password=<span class="string">&#x27;123123&#x27;</span>,   <span class="comment"># 数据库密码</span></span><br><span class="line">            database=<span class="string">&#x27;dbtest&#x27;</span>    <span class="comment"># 数据库名称</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> connection.is_connected():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Successfully connected to the database&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 创建一个游标对象</span></span><br><span class="line">            cursor = connection.cursor()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 执行 SQL 查询</span></span><br><span class="line">            query = <span class="string">&quot;SELECT * FROM `tuser`&quot;</span> </span><br><span class="line">            cursor.execute(query)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 获取查询结果</span></span><br><span class="line">            results = cursor.fetchall()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 遍历结果并打印</span></span><br><span class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> results:</span><br><span class="line">                <span class="built_in">print</span>(row)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Error <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">if</span> connection.is_connected():</span><br><span class="line">            cursor.close()</span><br><span class="line">            connection.close()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;MySQL connection is closed&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    connect_and_query()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🐣await-async"><a href="#🐣await-async" class="headerlink" title="🐣await   async"></a>🐣await   async</h1><p>异步</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">async_func1</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;start async_func1...&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">2</span>)  <span class="comment">#sleep</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;async_func1 end&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">async_func2</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;start async_func2...&quot;</span>)</span><br><span class="line">    <span class="keyword">await</span> asyncio.sleep(<span class="number">3</span>)  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;async_func2 end&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    task1 = asyncio.create_task(async_func1()) </span><br><span class="line">    task2 = asyncio.create_task(async_func2())  </span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;2tasks created...&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">await</span> task1 <span class="comment">#await</span></span><br><span class="line">    <span class="keyword">await</span> task2 </span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;tasks end&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">start_time = time.time()</span><br><span class="line">asyncio.run(main())</span><br><span class="line">end_time = time.time()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot; done : <span class="subst">&#123;end_time - start_time&#125;</span>s&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="🐵Requests"><a href="#🐵Requests" class="headerlink" title="🐵Requests"></a>🐵Requests</h1><h2 id="Web-Scraping"><a href="#Web-Scraping" class="headerlink" title="Web Scraping"></a>Web Scraping</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;https://www.python.org/&quot;</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line">soup = BeautifulSoup(response.content, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.title.text)</span><br></pre></td></tr></table></figure><h2 id="csdn"><a href="#csdn" class="headerlink" title="csdn"></a>csdn</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://www.csdn.net/&#x27;</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">    soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">    hot_topics = soup.find_all(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&#x27;headswiper-item&#x27;</span>)</span><br><span class="line">     <span class="comment">#soup.select(&#x27;.hot-news .news-item&#x27;)   #soup.find_all(&#x27;div&#x27;, class_=&#x27;headswiper-item&#x27;)</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> topic <span class="keyword">in</span> hot_topics:</span><br><span class="line">        <span class="built_in">print</span>(topic.text)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Failed to retrieve &#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="tiobe"><a href="#tiobe" class="headerlink" title="tiobe"></a>tiobe</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_tiobe_rankings</span>():</span><br><span class="line">    url = <span class="string">&quot;https://www.tiobe.com/tiobe-index/&quot;</span></span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">f&quot;Failed to load page <span class="subst">&#123;url&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    soup = BeautifulSoup(response.content, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Find the table containing the rankings</span></span><br><span class="line">    table = soup.find(<span class="string">&#x27;table&#x27;</span>, &#123;<span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;table-top20&#x27;</span>&#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> table:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;Failed to find the rankings table on the page&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Extracting data from the table</span></span><br><span class="line">    rankings = []</span><br><span class="line">    rows = table.find_all(<span class="string">&#x27;tr&#x27;</span>)[<span class="number">1</span>:]  <span class="comment"># Skip the header row</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">        cols = row.find_all(<span class="string">&#x27;td&#x27;</span>)</span><br><span class="line">        rank = cols[<span class="number">0</span>].text.strip()</span><br><span class="line">        language = cols[<span class="number">3</span>].text.strip()</span><br><span class="line">        ratings = cols[<span class="number">4</span>].text.strip()</span><br><span class="line">        change = cols[<span class="number">5</span>].text.strip()</span><br><span class="line">        rankings.append(&#123;</span><br><span class="line">            <span class="string">&#x27;Rank&#x27;</span>: rank,</span><br><span class="line">            <span class="string">&#x27;Language&#x27;</span>: language,</span><br><span class="line">            <span class="string">&#x27;Ratings&#x27;</span>: ratings,</span><br><span class="line">            <span class="string">&#x27;Change&#x27;</span>: change</span><br><span class="line">        &#125;)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> rankings</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    rankings = get_tiobe_rankings()</span><br><span class="line">    <span class="keyword">for</span> rank <span class="keyword">in</span> rankings:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Rank: <span class="subst">&#123;rank[<span class="string">&#x27;Rank&#x27;</span>]&#125;</span>, Language: <span class="subst">&#123;rank[<span class="string">&#x27;Language&#x27;</span>]&#125;</span>, Ratings: <span class="subst">&#123;rank[<span class="string">&#x27;Ratings&#x27;</span>]&#125;</span>, Change: <span class="subst">&#123;rank[<span class="string">&#x27;Change&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><!--<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://www.tiobe.com/tiobe-index/&#x27;</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line">soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">table = soup.find(<span class="string">&#x27;table&#x27;</span>, <span class="built_in">id</span>=<span class="string">&#x27;top20&#x27;</span>)</span><br><span class="line">rows = table.find_all(<span class="string">&#x27;tr&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> rows[<span class="number">1</span>:]:</span><br><span class="line">    columns = row.find_all(<span class="string">&#x27;td&#x27;</span>)</span><br><span class="line">    rank = columns[<span class="number">0</span>].text.strip()</span><br><span class="line">    language = columns[<span class="number">4</span>].text.strip()</span><br><span class="line">    ratings = columns[<span class="number">5</span>].text.strip()</span><br><span class="line">    change = columns[<span class="number">6</span>].text.strip()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;Rank: <span class="subst">&#123;rank&#125;</span>, Language: <span class="subst">&#123;language&#125;</span>, Ratings: <span class="subst">&#123;ratings&#125;</span>, Change: <span class="subst">&#123;change&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_html_text</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.get(url)</span><br><span class="line">        response.raise_for_status()</span><br><span class="line">        <span class="keyword">return</span> response.text</span><br><span class="line">    <span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error during requests to <span class="subst">&#123;url&#125;</span> : <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_programming_languages</span>(<span class="params">html</span>):</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    table = soup.find(<span class="string">&#x27;table&#x27;</span>, <span class="built_in">id</span>=<span class="string">&#x27;top20&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> table <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> table.tbody.find_all(<span class="string">&#x27;tr&#x27;</span>):</span><br><span class="line">            cols = row.find_all(<span class="string">&#x27;td&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(cols) &gt;= <span class="number">3</span>:  <span class="comment"># 检查是否有足够的列</span></span><br><span class="line">                rank = cols[<span class="number">0</span>].text.strip()</span><br><span class="line">                language = cols[<span class="number">4</span>].text.strip()  <span class="comment"># 语言名称在第5列</span></span><br><span class="line">                rating = cols[<span class="number">5</span>].text.strip()  <span class="comment"># 排名百分比在第6列</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;Rank: <span class="subst">&#123;rank&#125;</span>, Language: <span class="subst">&#123;language&#125;</span>, Rating: <span class="subst">&#123;rating&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;No table found with ID &#x27;top20&#x27;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    url = <span class="string">&quot;https://www.tiobe.com/tiobe-index/&quot;</span></span><br><span class="line">    html_content = get_html_text(url)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> html_content:</span><br><span class="line">        parse_programming_languages(html_content)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>–&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install requests beautifulsoup4</span><br><span class="line"><span class="comment">#pip install BeautifulSoup4</span></span><br></pre></td></tr></table></figure><p>requests库<br>如果没有安装，可以使用pip install requests来安装</p><p>ERR<br> Could not install packages due to an OSError: [WinError 2] 系统找不到指定的文件。: ‘C:\Python312\Scripts\no<br> #update<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br><span class="line"><span class="comment">#cache </span></span><br><span class="line">pip cache purge</span><br></pre></td></tr></table></figure></p><h2 id="REST-APIs-get-post"><a href="#REST-APIs-get-post" class="headerlink" title="REST APIs get&#x2F;post"></a>REST APIs get&#x2F;post</h2><p>GET, POST</p><!--, PUT, and DELETE data--><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment"># get</span></span><br><span class="line">response = requests.get(<span class="string">&#x27;https://jsonplaceholder.typicode.com/posts/1&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(response.json())</span><br><span class="line"></span><br><span class="line"><span class="comment"># post</span></span><br><span class="line">data = &#123;<span class="string">&#x27;title&#x27;</span>: <span class="string">&#x27;foo&#x27;</span>, <span class="string">&#x27;body&#x27;</span>: <span class="string">&#x27;bar&#x27;</span>, <span class="string">&#x27;userId&#x27;</span>: <span class="number">1</span>&#125;</span><br><span class="line">response = requests.post(<span class="string">&#x27;https://jsonplaceholder.typicode.com/posts&#x27;</span>, json=data)</span><br><span class="line"><span class="built_in">print</span>(response.json())</span><br></pre></td></tr></table></figure><h1 id="🐏mail"><a href="#🐏mail" class="headerlink" title="🐏mail"></a>🐏mail</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> smtplib  </span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText  </span><br><span class="line"><span class="keyword">from</span> email.mime.multipart <span class="keyword">import</span> MIMEMultipart  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置邮件服务器和端口  </span></span><br><span class="line">smtp_server = <span class="string">&#x27;smtp.qq.com&#x27;</span> </span><br><span class="line">smtp_port = <span class="number">25</span>  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 设置发件人和收件人信息  </span></span><br><span class="line">sender_email = <span class="string">&#x27;42@qq.com&#x27;</span>  <span class="comment"># 邮箱地址  </span></span><br><span class="line">sender_password = <span class="string">&#x27;lpoumq&#x27;</span>  <span class="comment"># 密码  </span></span><br><span class="line">receiver_email = <span class="string">&#x27;76@qq.com&#x27;</span>  <span class="comment"># 收件人邮箱地址  </span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">msg = MIMEMultipart()  </span><br><span class="line">  </span><br><span class="line"> </span><br><span class="line">msg[<span class="string">&#x27;From&#x27;</span>] = sender_email  </span><br><span class="line">msg[<span class="string">&#x27;To&#x27;</span>] = receiver_email  </span><br><span class="line">msg[<span class="string">&#x27;Subject&#x27;</span>] = <span class="string">&#x27;Hello from Python&#x27;</span>  </span><br><span class="line">body = <span class="string">&#x27;This is a test email sent from Python. mmmmmmm &#x27;</span>  </span><br><span class="line">msg.attach(MIMEText(body, <span class="string">&#x27;plain&#x27;</span>))  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP(smtp_server, smtp_port) <span class="keyword">as</span> server:  </span><br><span class="line"></span><br><span class="line">    server.starttls()  </span><br><span class="line">    server.login(sender_email, sender_password)  </span><br><span class="line">    <span class="comment"># 发送邮件  </span></span><br><span class="line">    server.sendmail(sender_email, receiver_email, msg.as_string())  </span><br><span class="line">  </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Email sent successfully!&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🐴socket"><a href="#🐴socket" class="headerlink" title="🐴socket"></a>🐴socket</h1><p>client</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">connect_to_socket</span>(<span class="params">host, port</span>):  </span><br><span class="line">    <span class="comment"># 创建一个新的socket对象，指定IPv4和TCP  </span></span><br><span class="line">    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  </span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 连接到服务器  </span></span><br><span class="line">    <span class="keyword">try</span>:  </span><br><span class="line">        client_socket.connect((host, port))  </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;成功连接到 <span class="subst">&#123;host&#125;</span>:<span class="subst">&#123;port&#125;</span>&quot;</span>)  </span><br><span class="line">   </span><br><span class="line">        message = <span class="string">&quot;Hello, Server!&quot;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)  </span><br><span class="line">        client_socket.sendall(message)  </span><br><span class="line">  </span><br><span class="line">        <span class="comment"># 接收数据  </span></span><br><span class="line">        data = client_socket.recv(<span class="number">1024</span>)  </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;从服务器接收到的数据: <span class="subst">&#123;data.decode(<span class="string">&#x27;utf-8&#x27;</span>)&#125;</span>&quot;</span>)  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:  </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;连接失败: <span class="subst">&#123;e&#125;</span>&quot;</span>)  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">finally</span>:  </span><br><span class="line">        <span class="comment"># 关闭socket连接  </span></span><br><span class="line">        client_socket.close()  </span><br><span class="line"></span><br><span class="line">connect_to_socket(<span class="string">&#x27;localhost&#x27;</span>, <span class="number">6001</span>)</span><br></pre></td></tr></table></figure><p>server</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start_server</span>(<span class="params">host, port</span>):  </span><br><span class="line"></span><br><span class="line">    server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  </span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 绑定socket到指定的地址和端口  </span></span><br><span class="line">    server_address = (host, port)  </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;服务器将运行在 <span class="subst">&#123;host&#125;</span>:<span class="subst">&#123;port&#125;</span>&quot;</span>)  </span><br><span class="line">    server_socket.bind(server_address)  </span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 开始监听连接  </span></span><br><span class="line">    server_socket.listen(<span class="number">1</span>)  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:  </span><br><span class="line">    </span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;等待客户端连接...&quot;</span>)  </span><br><span class="line">        connection, client_address = server_socket.accept()  </span><br><span class="line">        <span class="keyword">try</span>:  </span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;客户端 <span class="subst">&#123;client_address&#125;</span> 已连接&quot;</span>)  </span><br><span class="line">  </span><br><span class="line">            <span class="comment"># 接收数据  </span></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:  </span><br><span class="line">                data = connection.recv(<span class="number">1024</span>)  </span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> data:  </span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;客户端已断开连接&quot;</span>)  </span><br><span class="line">                    <span class="keyword">break</span>  </span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;从 <span class="subst">&#123;client_address&#125;</span> 接收到的数据: <span class="subst">&#123;data.decode(<span class="string">&#x27;utf-8&#x27;</span>)&#125;</span>&quot;</span>)  </span><br><span class="line">  </span><br><span class="line">                <span class="comment"># 发送一些数据回客户端  </span></span><br><span class="line">                response = <span class="string">&quot;Hello from server!&quot;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)  </span><br><span class="line">                connection.sendall(response)  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">except</span> ConnectionResetError:  </span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;客户端异常断开连接&quot;</span>)  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">finally</span>:  </span><br><span class="line">            <span class="comment"># 清理连接  </span></span><br><span class="line">            connection.close()  </span><br><span class="line">  </span><br><span class="line">start_server(<span class="string">&#x27;localhost&#x27;</span>, <span class="number">6002</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🐍docker"><a href="#🐍docker" class="headerlink" title="🐍docker"></a>🐍docker</h1><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># testdk.py</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run_server</span>():</span><br><span class="line">    host = <span class="string">&#x27;0.0.0.0&#x27;</span>  <span class="comment"># 监听所有网络接口</span></span><br><span class="line">    port = <span class="number">12345</span>     <span class="comment"># 自定义端口号</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> socket.socket(socket.AF_INET, socket.SOCK_STREAM) <span class="keyword">as</span> s:</span><br><span class="line">        s.bind((host, port))</span><br><span class="line">        s.listen()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Server listening on <span class="subst">&#123;host&#125;</span>:<span class="subst">&#123;port&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            conn, addr = s.accept()</span><br><span class="line">            <span class="keyword">with</span> conn:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;Connected by <span class="subst">&#123;addr&#125;</span>&quot;</span>)</span><br><span class="line">                data = conn.recv(<span class="number">1024</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                conn.sendall(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    run_server()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Dockerfile</span></span><br><span class="line">FROM python:3.8-slim-buster</span><br><span class="line"></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line">COPY requirements.txt ./</span><br><span class="line">RUN pip install --no-cache-dir -r requirements.txt</span><br><span class="line"></span><br><span class="line">COPY . .</span><br><span class="line"></span><br><span class="line">CMD [<span class="string">&quot;python&quot;</span>, <span class="string">&quot;./testdk.py&quot;</span>]</span><br></pre></td></tr></table></figure><h2 id="build"><a href="#build" class="headerlink" title="build"></a>build</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t my-python-socket-server .</span><br></pre></td></tr></table></figure><h2 id="run"><a href="#run" class="headerlink" title="run"></a>run</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 12345:12345 my-python-socket-server</span><br></pre></td></tr></table></figure><h2 id="client-test"><a href="#client-test" class="headerlink" title="client test"></a>client test</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># testdkclient2.py</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> socket.socket(socket.AF_INET, socket.SOCK_STREAM) <span class="keyword">as</span> s:</span><br><span class="line">    s.connect((<span class="string">&#x27;localhost&#x27;</span>, <span class="number">12345</span>))</span><br><span class="line">    s.sendall(<span class="string">b&#x27;Hello, Server!mmmm&#x27;</span>)</span><br><span class="line">    data = s.recv(<span class="number">1024</span>)</span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Received&#x27;</span>, <span class="built_in">repr</span>(data))</span><br></pre></td></tr></table></figure><h1 id="🐲Graphics"><a href="#🐲Graphics" class="headerlink" title="🐲Graphics"></a>🐲Graphics</h1><h2 id="Turtle"><a href="#Turtle" class="headerlink" title="Turtle"></a>Turtle</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 导入turtle包的所有内容:</span></span><br><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置笔刷宽度:</span></span><br><span class="line">width(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 前进:</span></span><br><span class="line">forward(<span class="number">100</span>)</span><br><span class="line"><span class="comment"># 右转90度:</span></span><br><span class="line">right(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 笔刷颜色:</span></span><br><span class="line">pencolor(<span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">forward(<span class="number">150</span>)</span><br><span class="line">right(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line">pencolor(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">forward(<span class="number">100</span>)</span><br><span class="line">right(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line">pencolor(<span class="string">&#x27;blue&#x27;</span>)</span><br><span class="line">forward(<span class="number">100</span>)</span><br><span class="line">right(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用done()使得窗口等待被关闭，否则将立刻关闭窗口:</span></span><br><span class="line">done()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 初始化turtle  </span></span><br><span class="line">window = turtle.Screen()  </span><br><span class="line">window.bgcolor(<span class="string">&quot;white&quot;</span>)  <span class="comment"># 设置背景颜色为黑色  </span></span><br><span class="line">love = turtle.Turtle()  </span><br><span class="line">love.speed(<span class="number">1</span>)  <span class="comment"># 设置绘图速度，1是最慢，0是最快  </span></span><br><span class="line">love.color(<span class="string">&quot;red&quot;</span>, <span class="string">&quot;pink&quot;</span>)  <span class="comment"># 设置画笔颜色和填充颜色  </span></span><br><span class="line">love.begin_fill()  <span class="comment"># 开始填充颜色  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 绘制爱心的左半部分  </span></span><br><span class="line">love.left(<span class="number">140</span>)  </span><br><span class="line">love.forward(<span class="number">180</span>)  </span><br><span class="line">love.circle(-<span class="number">100</span>, <span class="number">200</span>)  <span class="comment"># 绘制一个半径为100，弧度为200的圆（圆心在左侧）  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 绘制爱心的右半部分  </span></span><br><span class="line">love.left(<span class="number">120</span>)  </span><br><span class="line">love.circle(-<span class="number">100</span>, <span class="number">200</span>)  <span class="comment"># 绘制一个半径为100，弧度为200的圆（圆心在右侧）  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 回到起点并结束填充  </span></span><br><span class="line">love.forward(<span class="number">180</span>)  </span><br><span class="line">love.end_fill()  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 隐藏turtle图标  </span></span><br><span class="line">love.hideturtle()  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 结束绘制，等待用户关闭窗口  </span></span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><h2 id="tkinter"><a href="#tkinter" class="headerlink" title="tkinter"></a>tkinter</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_closing</span>():  </span><br><span class="line">    root.destroy()  <span class="comment"># 当点击关闭按钮时调用  </span></span><br><span class="line">  </span><br><span class="line">root = tk.Tk()  </span><br><span class="line">root.protocol(<span class="string">&quot;WM_DELETE_WINDOW&quot;</span>, on_closing)  </span><br><span class="line">  </span><br><span class="line">label = tk.Label(root, text=<span class="string">&quot;Hello, Tkinter!&quot;</span>)  </span><br><span class="line">label.pack()  </span><br><span class="line">  </span><br><span class="line">root.mainloop()</span><br></pre></td></tr></table></figure><h2 id="下班！"><a href="#下班！" class="headerlink" title="下班！"></a>下班！</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> messagebox</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">validate_time</span>(<span class="params">input_time</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;验证输入的时间格式是否正确&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        time.strptime(input_time, <span class="string">&#x27;%H:%M:%S&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start_countdown</span>():</span><br><span class="line">    input_time = entry.get()</span><br><span class="line">    <span class="keyword">if</span> validate_time(input_time):</span><br><span class="line">        target_time = datetime.strptime(input_time, <span class="string">&#x27;%H:%M:%S&#x27;</span>)</span><br><span class="line">        today = datetime.combine(datetime.today(), datetime.<span class="built_in">min</span>.time())</span><br><span class="line">        target_datetime = datetime.combine(today, target_time.time())</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> target_datetime &lt; datetime.now():</span><br><span class="line">            target_datetime += timedelta(days=<span class="number">1</span>)  </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">update_countdown</span>():</span><br><span class="line">            now = datetime.now()</span><br><span class="line">            remaining_time = target_datetime - now</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> remaining_time.total_seconds() &lt;= <span class="number">0</span>:</span><br><span class="line">                label.config(text=<span class="string">&quot;下班!头也不回&quot;</span>)</span><br><span class="line">                messagebox.showinfo(<span class="string">&quot;Timer&quot;</span>, <span class="string">&quot;下班!头也不回&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                hours, remainder = <span class="built_in">divmod</span>(remaining_time.seconds, <span class="number">3600</span>)</span><br><span class="line">                minutes, seconds = <span class="built_in">divmod</span>(remainder, <span class="number">60</span>)</span><br><span class="line">                </span><br><span class="line">                label.config(text=<span class="string">f&quot;<span class="subst">&#123;hours:02d&#125;</span>:<span class="subst">&#123;minutes:02d&#125;</span>:<span class="subst">&#123;seconds:02d&#125;</span>&quot;</span>)</span><br><span class="line">                window.after(<span class="number">1000</span>, update_countdown)  <span class="comment"># timeout</span></span><br><span class="line">        </span><br><span class="line">        update_countdown()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        messagebox.showerror(<span class="string">&quot;Error&quot;</span>, <span class="string">&quot;时间必须是 HH:MM:SS.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># window</span></span><br><span class="line">window = tk.Tk()</span><br><span class="line">window.title(<span class="string">&quot;下班!头也不回&quot;</span>)</span><br><span class="line">window.geometry(<span class="string">&quot;400x300&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Entry</span></span><br><span class="line">tk.Label(window, text=<span class="string">&quot;下班时间 &gt; HH:MM:SS :&quot;</span>).pack()</span><br><span class="line">entry = tk.Entry(window)</span><br><span class="line">entry.pack()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Button</span></span><br><span class="line">start_button = tk.Button(window, text=<span class="string">&quot;开始摸鱼🐟&quot;</span>, command=start_countdown)</span><br><span class="line">start_button.pack()</span><br><span class="line">start_button.pack(pady=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">label = tk.Label(window, text=<span class="string">&quot;&quot;</span>, font=(<span class="string">&quot;Helvetica&quot;</span>, <span class="number">48</span>))</span><br><span class="line">label.pack(pady=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line">window.mainloop()</span><br></pre></td></tr></table></figure><h1 id="🐇opencv"><a href="#🐇opencv" class="headerlink" title="🐇opencv"></a>🐇opencv</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install opencv-python</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="comment">#read</span></span><br><span class="line">image = cv2.imread(<span class="string">&#x27;e1.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> image <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Error: Image not found or unable to read.&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    cv2.imshow(<span class="string">&#x27;Image&#x27;</span>, image)</span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line">    cv2.destroyAllWindows()</span><br><span class="line">    cv2.imwrite(<span class="string">&#x27;output.jpg&#x27;</span>, image)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#反色处理</span></span><br><span class="line">   inverted_image = cv2.bitwise_not(image)</span><br></pre></td></tr></table></figure><h2 id="Pillow-PIL"><a href="#Pillow-PIL" class="headerlink" title="Pillow PIL"></a>Pillow PIL</h2><p>图像处理库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install Pillow</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载图片</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">&#x27;e1.jpg&#x27;</span>)</span><br><span class="line">image.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缩放到宽度为300，高度等比例缩放</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">&#x27;e1.jpg&#x27;</span>)</span><br><span class="line">image_resized = image.resize((<span class="number">300</span>, image.height * <span class="number">300</span> // image.width))</span><br><span class="line"><span class="comment"># save</span></span><br><span class="line">image_resized.save(<span class="string">&#x27;resized240525.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换成PNG格式</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">&#x27;e1.jpg&#x27;</span>)</span><br><span class="line">image.save(<span class="string">&#x27;png240525.png&#x27;</span>, <span class="built_in">format</span>=<span class="string">&#x27;PNG&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换成PNG格式</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">&#x27;png240525.png&#x27;</span>)</span><br><span class="line">image.save(<span class="string">&#x27;j240525.jpg&#x27;</span>, <span class="built_in">format</span>=<span class="string">&#x27;jpeg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 裁剪图片，参数是左上角和右下角的坐标</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">&#x27;e1.jpg&#x27;</span>)</span><br><span class="line">cropped_image = image.crop((<span class="number">100</span>, <span class="number">100</span>, <span class="number">400</span>, <span class="number">400</span>))</span><br><span class="line">cropped_image.show()</span><br><span class="line">cropped_image.save(<span class="string">&#x27;cropped_image240525.jpg&#x27;</span>)</span><br><span class="line"><span class="comment"># 顺时针旋转90度</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">&#x27;e1.jpg&#x27;</span>)</span><br><span class="line">rotated_image = image.rotate(<span class="number">90</span>)</span><br><span class="line">rotated_image.show()</span><br><span class="line">rotated_image.save(<span class="string">&#x27;rotated_image240525.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageFilter</span><br><span class="line"><span class="comment">#模糊滤镜</span></span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">&#x27;e1.jpg&#x27;</span>)</span><br><span class="line">blurred_image = image.<span class="built_in">filter</span>(ImageFilter.BLUR)</span><br><span class="line">blurred_image.show()</span><br><span class="line">blurred_image.save(<span class="string">&#x27;blurred_image240525.jpg&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><!--在Python中使用Mask R-CNN和Fast R-CNN进行对象检测和实例分割，可以通过一些流行的深度学习框架和库来实现，比如TensorFlow、PyTorch以及基于这些框架的高级库如Matterport的Mask R-CNN库和Facebook AI的Detectron2。下面我将简要介绍如何使用这些工具以中文环境为例进行操作。--><h1 id="🐯PyTorch"><a href="#🐯PyTorch" class="headerlink" title="🐯PyTorch"></a>🐯PyTorch</h1><p>机器学习</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install torch torchvision</span><br><span class="line">pip install pillow</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"><span class="keyword">from</span> torchvision.models <span class="keyword">import</span> resnet50</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># ResNet50</span></span><br><span class="line">model = resnet50(pretrained=<span class="literal">True</span>)</span><br><span class="line">model.<span class="built_in">eval</span>()  <span class="comment">#eval</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># transform </span></span><br><span class="line">transform = transforms.Compose([</span><br><span class="line">    transforms.Resize(<span class="number">256</span>),</span><br><span class="line">    transforms.CenterCrop(<span class="number">224</span>),</span><br><span class="line">    transforms.ToTensor(),</span><br><span class="line">    transforms.Normalize(mean=[<span class="number">0.485</span>, <span class="number">0.456</span>, <span class="number">0.406</span>], std=[<span class="number">0.229</span>, <span class="number">0.224</span>, <span class="number">0.225</span>]),</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment"># PIL</span></span><br><span class="line">image_path = <span class="string">&#x27;e1.jpg&#x27;</span>  </span><br><span class="line">image = Image.<span class="built_in">open</span>(image_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># transform image</span></span><br><span class="line">image_tensor = transform(image)</span><br><span class="line">image_tensor = image_tensor.unsqueeze(<span class="number">0</span>)  <span class="comment"># 添加batch维度</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tensor</span></span><br><span class="line">output = model(image_tensor)</span><br><span class="line"></span><br><span class="line"><span class="comment"># predictedclass </span></span><br><span class="line">_, pred = output.<span class="built_in">max</span>(<span class="number">1</span>)</span><br><span class="line">predicted_class = pred.item()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Predicted class index:&quot;</span>, predicted_class)</span><br></pre></td></tr></table></figure><!-- 假设你有一个包含类别名称的列表（这里简化处理，实际应用中可能需要下载或自己创建）由于本示例未提供实际的类别名称文件，这里仅演示如何使用预测索引 在实际应用中，你可能需要根据模型对应的类别索引去查找具体的类别名称示例中省略这一步，直接打印预测的索引预测索引是指模型在进行分类任务时，对于给定输入，输出的概率分布中最大概率所对应的类别序号。在多数分类问题中，模型的输出会经过softmax函数转换为概率分布，其中每个值代表输入属于各个类别的概率。预测索引就是这个概率分布中最大值所对应的类别序号，也就是模型认为最可能的类别。在这个例子中，对图片进行了以下处理：加载图像：使用PIL库读取了一个图像文件。PIL是一个广泛使用的Python图像处理库，支持多种图像格式的读写。图像预处理：应用了一系列转换来准备图像供模型使用。这些转换包括：调整大小：将图像调整为256x256像素，以符合模型输入尺寸的要求。中心裁剪：从调整大小后的图像中心裁剪出224x224像素的区域，这是ResNet模型的标准输入尺寸。转为Tensor：将PIL图像转换为PyTorch的Tensor格式，使图像数据能被模型处理。标准化：对图像的每个通道（红、绿、蓝）进行标准化处理，使用特定的均值和标准差，这是基于ImageNet训练集统计得出的，以确保输入数据与模型训练时的数据分布一致。目的：适应模型输入要求：通过调整尺寸和裁剪，确保图像尺寸符合模型的输入规格。提高模型性能：标准化可以减少不同图像间光照和色彩差异的影响，使得模型能够更专注于学习图像的结构特征。预测图像类别：最终，通过预训练的ResNet50模型对处理过的图像进行分类预测，目的是识别出图像中最可能的物体或场景类别。这有助于理解图像内容，适用于多种应用场景，如图像分类、内容过滤、辅助决策等。--><h1 id="🐂web"><a href="#🐂web" class="headerlink" title="🐂web"></a>🐂web</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从wsgiref模块导入:</span></span><br><span class="line"><span class="keyword">from</span> wsgiref.simple_server <span class="keyword">import</span> make_server</span><br><span class="line"><span class="comment"># 导入我们自己编写的application函数:</span></span><br><span class="line"><span class="keyword">from</span> hi <span class="keyword">import</span> application</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个服务器，IP地址为空，端口是8000，处理函数是application:</span></span><br><span class="line">httpd = make_server(<span class="string">&#x27;&#x27;</span>, <span class="number">8000</span>, application)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Serving HTTP on port 8000...&#x27;</span>)</span><br><span class="line"><span class="comment"># 开始监听HTTP请求:</span></span><br><span class="line">httpd.serve_forever()</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#hi.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">application</span>(<span class="params">environ, start_response</span>):</span><br><span class="line">    start_response(<span class="string">&#x27;200 OK&#x27;</span>, [(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html&#x27;</span>)])</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">b&#x27;&lt;h1&gt;Hello, web!&lt;/h1&gt;&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="flask"><a href="#flask" class="headerlink" title="flask"></a>flask</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;h1&gt;Home&lt;/h1&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">signin_form</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;&lt;form action=&quot;/login&quot; method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">              &lt;p&gt;&lt;input name=&quot;username&quot;&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">              &lt;p&gt;&lt;input name=&quot;password&quot; type=&quot;password&quot;&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">              &lt;p&gt;&lt;button type=&quot;submit&quot;&gt;Sign In&lt;/button&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">              &lt;/form&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/login&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">signin</span>():</span><br><span class="line">    <span class="comment"># 需要从request对象读取表单内容：</span></span><br><span class="line">    <span class="keyword">if</span> request.form[<span class="string">&#x27;username&#x27;</span>]==<span class="string">&#x27;admin&#x27;</span> <span class="keyword">and</span> request.form[<span class="string">&#x27;password&#x27;</span>]==<span class="string">&#x27;123123&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&lt;h3&gt;Hello, admin!&lt;/h3&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&lt;h3&gt;Bad username or password.&lt;/h3&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="fastapi"><a href="#fastapi" class="headerlink" title="fastapi"></a>fastapi</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install fastapi uvicorn[standard]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#y.p</span></span><br><span class="line"><span class="keyword">from</span> fastapi <span class="keyword">import</span> FastAPI  </span><br><span class="line">  </span><br><span class="line">app = FastAPI()  </span><br><span class="line">  </span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/&quot;</span></span>)  </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_root</span>():  </span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;Hello&quot;</span>: <span class="string">&quot;World&quot;</span>&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">@app.get(<span class="params"><span class="string">&quot;/items/&#123;item_id&#125;&quot;</span></span>)  </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_item</span>(<span class="params">item_id: <span class="built_in">int</span>, q: <span class="built_in">str</span> = <span class="literal">None</span></span>):  </span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;item_id&quot;</span>: item_id, <span class="string">&quot;q&quot;</span>: q&#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uvicorn y:app --reload</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8000/   &#123;&quot;Hello&quot;: &quot;World&quot;&#125;，</span><br><span class="line">http://127.0.0.1:8000/items/5?q=m &#123;&quot;item_id&quot;: 5, &quot;q&quot;: &quot;m&quot;&#125;</span><br></pre></td></tr></table></figure><h1 id="🐭debian-setup-python3-9"><a href="#🐭debian-setup-python3-9" class="headerlink" title="🐭debian setup python3.9"></a>🐭debian setup python3.9</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y wget build-essential libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#dl</span></span><br><span class="line"><span class="built_in">cd</span> /usr/src</span><br><span class="line">sudo wget https://www.python.org/ftp/python/3.9.0/Python-3.9.0.tgz</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo tar xzf Python-3.9.0.tgz</span><br><span class="line"><span class="built_in">cd</span> Python-3.9.0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ./configure --enable-optimizations</span><br><span class="line">sudo make -j 4  <span class="comment"># 替换4为你的CPU核心数</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make altinstall  <span class="comment"># 使用altinstall以避免覆盖系统默认的python版本</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3.9 --version</span><br></pre></td></tr></table></figure><h2 id="ubuntu-python"><a href="#ubuntu-python" class="headerlink" title="ubuntu python"></a>ubuntu python</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzf Python-3.12.0.tgz -C /usr/local/src/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/src/Python-3.12.0/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h1 id="☄️ai"><a href="#☄️ai" class="headerlink" title="☄️ai"></a>☄️ai</h1><h2 id="spark-ai"><a href="#spark-ai" class="headerlink" title="spark_ai"></a>spark_ai</h2><p>讯飞星火认知大模型v3.5 </p><!--#sudo update-alternatives --install /usr/bin/python3 python3 /usr/src/Python-3.9.0 1#sudo update-alternatives --config python3#pip3.9 install --upgrade spark_ai_python#alias python3=python3.13   python=python3.13 #source ~/.bashrc#or#source ~/.profile--><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install python3-pip</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade spark_ai_python</span><br></pre></td></tr></table></figure><!--pip3 install --upgrade pippip3 install --upgrade spark_ai_python--><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> SparkApi</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">appid = <span class="string">&quot;xxx&quot;</span>     <span class="comment">#填写控制台中获取的 APPID 信息</span></span><br><span class="line">api_secret = <span class="string">&quot;xxx&quot;</span>   <span class="comment">#填写控制台中获取的 APISecret 信息</span></span><br><span class="line">api_key =<span class="string">&quot;xxx&quot;</span>    <span class="comment">#填写控制台中获取的 APIKey 信息</span></span><br><span class="line"></span><br><span class="line">domain = <span class="string">&quot;generalv3.5&quot;</span>     </span><br><span class="line"></span><br><span class="line">Spark_url = <span class="string">&quot;wss://spark-api.xf-yun.com/v3.5/chat&quot;</span>  <span class="comment"># v3.5环服务地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#初始上下文内容，当前可传system、user、assistant 等角色</span></span><br><span class="line">text =[</span><br><span class="line">    <span class="comment"># &#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;你是谁&quot;&#125;,  # 用户的历史问题</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getText</span>(<span class="params">role,content</span>):</span><br><span class="line">    jsoncon = &#123;&#125;</span><br><span class="line">    jsoncon[<span class="string">&quot;role&quot;</span>] = role</span><br><span class="line">    jsoncon[<span class="string">&quot;content&quot;</span>] = content</span><br><span class="line">    text.append(jsoncon)</span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getlength</span>(<span class="params">text</span>):</span><br><span class="line">    length = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> content <span class="keyword">in</span> text:</span><br><span class="line">        temp = content[<span class="string">&quot;content&quot;</span>]</span><br><span class="line">        leng = <span class="built_in">len</span>(temp)</span><br><span class="line">        length += leng</span><br><span class="line">    <span class="keyword">return</span> length</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checklen</span>(<span class="params">text</span>):</span><br><span class="line">    <span class="keyword">while</span> (getlength(text) &gt; <span class="number">8000</span>):</span><br><span class="line">        <span class="keyword">del</span> text[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">        Input = <span class="built_in">input</span>(<span class="string">&quot;\n&quot;</span> +<span class="string">&quot;我:&quot;</span>)</span><br><span class="line">        question = checklen(getText(<span class="string">&quot;user&quot;</span>,Input))</span><br><span class="line">        SparkApi.answer =<span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;星火:&quot;</span>,end =<span class="string">&quot;&quot;</span>)</span><br><span class="line">        SparkApi.main(appid,api_key,api_secret,Spark_url,domain,question)</span><br><span class="line">        <span class="comment"># print(SparkApi.answer)</span></span><br><span class="line">        getText(<span class="string">&quot;assistant&quot;</span>,SparkApi.answer)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ERNIE-4-0"><a href="#ERNIE-4-0" class="headerlink" title="ERNIE-4.0"></a>ERNIE-4.0</h2><p>千帆4.0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_access_token</span>():</span><br><span class="line"></span><br><span class="line">    url = <span class="string">&quot;https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=xx&amp;client_secret=xx&quot;</span></span><br><span class="line">    </span><br><span class="line">    payload = json.dumps(<span class="string">&quot;&quot;</span>)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Accept&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    response = requests.request(<span class="string">&quot;POST&quot;</span>, url, headers=headers, data=payload)</span><br><span class="line">    <span class="keyword">return</span> response.json().get(<span class="string">&quot;access_token&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    url = <span class="string">&quot;https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/ernie-4.0-8k-preview?access_token=&quot;</span> + get_access_token()</span><br><span class="line">    </span><br><span class="line">    payload = json.dumps(&#123;</span><br><span class="line">        <span class="string">&quot;messages&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">                <span class="string">&quot;content&quot;</span>: <span class="string">&quot;Python是最好的语言&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    response = requests.request(<span class="string">&quot;POST&quot;</span>, url, headers=headers, data=payload)</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(response.text)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">python3 ai.py</span><br><span class="line"></span><br><span class="line">&#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;as-7bdgaekpn4&quot;</span>,<span class="string">&quot;object&quot;</span>:<span class="string">&quot;chat.completion&quot;</span>,<span class="string">&quot;created&quot;</span>:1716369031,<span class="string">&quot;result&quot;</span>:<span class="string">&quot;\&quot;Python是最好的语言\&quot;这一说法是主观的，并不适用于所有情况。Python确实是一种强大且流行的编程语言，具有许多优点，但它并不一定是所有情况下的最佳选择。以下是对这一说法的详细分析：\n\n### Python的优点：\n\n1. **易读易写**：Python的语法清晰简洁，易于理解，这使得它成为初学者和专业开发者都喜爱的语言。\n\n2. **广泛的库和框架**：Python有大量的第三方库和框架可供使用，如NumPy、Pandas、TensorFlow等，这些库使得Python在数据科学、Web开发、机器学习等领域具有显著优势。\n\n3. **跨平台兼容性**：Python可以在多种操作系统上运行，包括Windows、macOS和Linux。\n\n4. **动态类型系统**：Python是动态类型的语言，这意味着开发者不需要在声明变量时指定其类型，这增加了编程的灵活性。\n\n### Python的局限性：\n\n1. **性能**：与C++或Java等编译型语言相比，Python在执行速度上可能较慢，尤其是在处理大量数据或进行复杂计算时。\n\n2. **类型安全**：由于Python是动态类型的，这可能导致类型错误在运行时才被发现，而不是在编译阶段。\n\n3. **移动开发限制**：虽然Python可以用于开发Web应用和桌面应用，但它在移动应用开发（如iOS和Android应用）方面并不是主流选择。\n\n4. **内存消耗**：Python的内存管理可能不如某些其他语言高效，特别是在处理大量数据时。\n\n### 结论：\n\nPython是否是最好的语言取决于具体的使用场景和需求。对于数据科学、Web开发、脚本编写和自动化任务等，Python确实是一个出色的选择。然而，在需要高性能计算、内存优化或特定于移动平台的开发任务中，其他语言可能更为合适。\n\n因此，\&quot;Python是最好的语言\&quot;这一说法是片面的。在选择编程语言时，应根据项目的具体需求和上下文来做出决策。&quot;</span>,<span class="string">&quot;is_truncated&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;need_clear_history&quot;</span>:<span class="literal">false</span>,<span class="string">&quot;finish_reason&quot;</span>:<span class="string">&quot;normal&quot;</span>,<span class="string">&quot;usage&quot;</span>:&#123;<span class="string">&quot;prompt_tokens&quot;</span>:3,<span class="string">&quot;completion_tokens&quot;</span>:403,<span class="string">&quot;total_tokens&quot;</span>:406&#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><!--         #https://qianfan.cloud.baidu.com/    url = "https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/ernie-4.0-8k-preview?access_token=" + get_access_token()        payload = json.dumps({        "messages": [            {                "role": "user",                "content": "python对比js有什么优势？"            }        ],         "stream": True    })    headers = {        'Content-Type': 'application/json'    }        response = requests.request("POST", url, headers=headers, data=payload, stream=True)        for line in response.iter_lines():        #print(line.decode("UTF-8"))        try:              con(line.decode("UTF-8"))        except Exception as e:              print(line.decode("UTF-8"))        #(line.decode("UTF-8"))    --><p>End</p><!--pip install alibabacloud_bailian20230601==1.6.1https://bailian.console.aliyun.com/djangopip install django--><!-- 动物 喜剧  旅游 美食运动 美容时尚 艺术 游戏科学教育 舞蹈 DIY汽车 音乐 生活 解压 户外 影视https://www.liaoxuefeng.com/wiki/1016959663602400/1017269809315232输入输出，打印加减乘除的结果值（day03/circle.py）输入圆长，计算输出圆周长和圆面积（day03/circle.py）数据类型基础语法使用（day03/data_type.py）字符串类型的基础使用（day03/str.py）列表的基础使用（day03/list.py）元组的基础使用（day03/tuple.py）输入一个数，判断是否是素数（day04/prime.py）字典的基本练习（day04/dict.py）if和while的逻辑使用练习（day04/logic.py）循环一个字典的key和value（day04/for_dict.py）函数式编程判断素数（day05/prime.py）函数式编程判断素数以及字典的使用（day05/prime_fun.py）基础函数的学习（day05/fun.py）基础异常处理（day05/error.py）使用生成器创建斐波拉契数列（day06/fibonacci_sequence.py）文件操作的练习和使用（day06/file_user.py）Requests模块的练习和使用（day06/requests_use.py）Python知识点回忆总结（day07/knowledge.md）os模块的基础使用和练习（day07/os_use.py）Requests获取掘金沸点数据练习（day07/juejin_poins.py）高阶函数的练习和使用（day08/fun_to_code.py）打扰了，利用装饰器给判断函数加个[有趣的]功能（day08/decorator.py）继续打扰了，利用装饰器给判断函数加个[有趣的]功能（day09/prime_to_fun.py）遍历创建多级目录（day09/make_dirs.py）遍历多级目录下的文件夹以及文件（day09/for_dir.py）利用Requests抓取沸点内容存到txt文件（day10/poins_content.py）pip的基础使用（day11/pip.md）pickle序列化字典数据的使用（day11/pickle_use.py）json序列化字典数据的使用（day11/json_use.py）openpyxl模块操作Excel表格的读写（day11/excel_use.py）下载视频、音乐、图片文件（day11/download.py）csv的基本了解和读写文件（day11/csv_use.py）利用pymysql模块管理mysql的连接和CURD基础使用（day12/mysql_use.py）掘金沸点内容，各种方式存储练习（day12/poins_save.py）正则表达式的基本学习和使用（day13/re_use.py）面向对象编程的使用和练习（day13/oop_use.py）常见的内建模块练习之datetime（day14/datetime_use.py）常见的内建模块练习之collections（day14/collections_use.py）常见的内建模块练习之base64、struct（day14/char_use.py）常见的内建模块练习之hashlib、hmac（day14/encrypt_use.py）常见的内建模块练习之xml、HTMLParser（day14/html_use.py）BeautifulSoup的基础使用（day15/bs_use.py）利用bs4爬取博客的猜你喜欢内容（day15/get_like.py）利用BeautifulSoup爬取省、市、区、街道、办事处五级地址（day15/get_city.py）利用bs4爬取国家地理中文网-杂志阅读信息利用requests抓取掘金用户的关注者利用requests抓取掘金用户的关注者-两级利用requests抓取掘金用户的关注者-无限抓取抓取王者荣耀皮肤Task19 date: 2018-11-07scrapy框架初探Task20 date: 2018-11-08selenium模拟浏览器执行的基础用法Task21 date: 2018-11-09splinter模拟浏览器执行的基础用法selenium模拟浏览器抓取淘宝商品信息https://github.com/gxcuizy/Python/tree/master/%E4%BB%8E%E9%9B%B6%E5%AD%A6Python-%E6%8E%98%E9%87%91%E6%B4%BB%E5%8A%A8study >>https://github.com/gxcuizy/Pythonhttps://www.liaoxuefeng.com/wiki/1016959663602400https://study.163.com/course/introduction.htm?courseId=1003655001https://mofanpy.com/tutorials/python-basic/https://www.runoob.com/python/python-tutorial.htmlhttps://docs.python-guide.org/https://github.com/jimmy201602/webterminalhttps://github.com/gxcuizy/Python/tree/mastervenv https://github.com/chaoxiaodi/pytodolist-->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>socket.io</title>
      <link href="/2024/05/26/Nodejs-socketio/"/>
      <url>/2024/05/26/Nodejs-socketio/</url>
      
        <content type="html"><![CDATA[<p>server </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install socket.io</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> socketIO = <span class="built_in">require</span>(<span class="string">&#x27;socket.io&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>(app);</span><br><span class="line"><span class="keyword">const</span> io = <span class="title function_">socketIO</span>(server);</span><br><span class="line"></span><br><span class="line">io.<span class="title function_">on</span>(<span class="string">&#x27;connection&#x27;</span>, <span class="function">(<span class="params">socket</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;User connected&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;chat message&#x27;</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;message: &#x27;</span> + msg);</span><br><span class="line">        io.<span class="title function_">emit</span>(<span class="string">&#x27;chat message&#x27;</span>, msg); <span class="comment">// to all</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;disconnect&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;User disconnected&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">24525</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Node Server is running on port 24525&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>docker<br>dockerfile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">FROM node:16-alpine</span><br><span class="line"></span><br><span class="line">WORKDIR /usr/src/app</span><br><span class="line"></span><br><span class="line">COPY package*.json ./</span><br><span class="line">RUN npm ci --only=production</span><br><span class="line"></span><br><span class="line">COPY . .</span><br><span class="line"></span><br><span class="line">EXPOSE 24525</span><br><span class="line"></span><br><span class="line">CMD [<span class="string">&quot;node&quot;</span>, <span class="string">&quot;skio.js&quot;</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><!--使用官方 Node.js 镜像作为基础镜像FROM node:16-alpine设置工作目录WORKDIR /usr/src/app 安装应用依赖COPY package*.json ./RUN npm ci --only=production复制应用源代码到容器中 COPY . .暴露应用端口EXPOSE 24525 定义启动命令CMD ["node", "skio.js"]--><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker build -t nodeskio .</span><br><span class="line"></span><br><span class="line">docker run -p 24525:24525 -d nodeskio</span><br><span class="line"></span><br><span class="line"><span class="comment">##login push</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#docker login</span></span><br><span class="line"><span class="comment">#docker push your-image-name</span></span><br></pre></td></tr></table></figure><p>client</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install socket.io-client</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> io = <span class="built_in">require</span>(<span class="string">&#x27;socket.io-client&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> readline = <span class="built_in">require</span>(<span class="string">&#x27;readline&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> rl = readline.<span class="title function_">createInterface</span>(&#123;</span><br><span class="line">    <span class="attr">input</span>: process.<span class="property">stdin</span>,</span><br><span class="line">    <span class="attr">output</span>: process.<span class="property">stdout</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> socket = io.<span class="title function_">connect</span>(<span class="string">&#x27;http://localhost:24525&#x27;</span>);</span><br><span class="line"></span><br><span class="line">socket.<span class="title function_">on</span>(<span class="string">&#x27;connect&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Connected to server&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听从服务器接收到的消息</span></span><br><span class="line">socket.<span class="title function_">on</span>(<span class="string">&#x27;chat message&#x27;</span>, <span class="function">(<span class="params">msg</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Message from server:&#x27;</span>, msg);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理用户输入并发送到服务器</span></span><br><span class="line">rl.<span class="title function_">on</span>(<span class="string">&#x27;line&#x27;</span>, <span class="function">(<span class="params">input</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (input.<span class="title function_">toLowerCase</span>() === <span class="string">&#x27;exit&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Exiting...&#x27;</span>);</span><br><span class="line">        rl.<span class="title function_">close</span>();</span><br><span class="line">        process.<span class="title function_">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        socket.<span class="title function_">emit</span>(<span class="string">&#x27;chat message&#x27;</span>, input);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理关闭事件</span></span><br><span class="line">rl.<span class="title function_">on</span>(<span class="string">&#x27;close&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    socket.<span class="title function_">disconnect</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Connection closed.&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HarmonyOS Interface Router ArkTS ArkUI</title>
      <link href="/2024/05/23/HarmonyOS-Router/"/>
      <url>/2024/05/23/HarmonyOS-Router/</url>
      
        <content type="html"><![CDATA[<p>11</p><h1 id="🎬️create"><a href="#🎬️create" class="headerlink" title="🎬️create"></a>🎬️create</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">export</span>  <span class="keyword">default</span> struct <span class="title class_">TitleBar</span> &#123;</span><br><span class="line">   <span class="title function_">build</span>(<span class="params"></span>)&#123;</span><br><span class="line">     <span class="title class_">Row</span>()&#123;</span><br><span class="line">       <span class="title class_">Text</span>(<span class="string">&#x27;transition&#x27;</span>)</span><br><span class="line">         .<span class="title function_">fontSize</span>(<span class="string">&#x27;30fp&#x27;</span>)</span><br><span class="line">         .<span class="title function_">fontColor</span>(<span class="title class_">Color</span>.<span class="property">White</span>)</span><br><span class="line">     &#125;</span><br><span class="line">     .<span class="title function_">width</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">     .<span class="title function_">height</span>(<span class="string">&#x27;8%&#x27;</span>)</span><br><span class="line">     .<span class="title function_">backgroundColor</span>(<span class="string">&#x27;#4169E1&#x27;</span>)</span><br><span class="line">     .<span class="title function_">padding</span>(&#123;<span class="attr">left</span>:<span class="number">10</span>&#125;)</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="🎞️interface"><a href="#🎞️interface" class="headerlink" title="🎞️interface"></a>🎞️interface</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span>  <span class="keyword">interface</span> <span class="title class_">IList</span>&#123;</span><br><span class="line">  <span class="attr">title</span>:<span class="built_in">string</span>;</span><br><span class="line">  url :<span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@State</span> <span class="attr">listData</span>:<span class="title class_">IList</span>[]=[ <span class="comment">//  @State listData:Array&lt;IList&gt;=[</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">title</span>:<span class="string">&#x27;in&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;pages/home1&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="attr">title</span>:<span class="string">&#x27;scale&#x27;</span>,</span><br><span class="line">  <span class="attr">url</span>:<span class="string">&#x27;pages/home2&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">title</span>:<span class="string">&#x27;small&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;pages/home3&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">title</span>:<span class="string">&#x27;in&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h1 id="💡foreach"><a href="#💡foreach" class="headerlink" title="💡foreach"></a>💡foreach</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">ForEach</span>(<span class="variable language_">this</span>.<span class="property">listData</span>,<span class="function">(<span class="params"> item: IList,index?:<span class="built_in">number</span></span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//listitem</span></span><br><span class="line">       <span class="title class_">Button</span>(&#123;<span class="attr">type</span>:<span class="title class_">ButtonType</span>.<span class="property">Capsule</span>&#125;)&#123;</span><br><span class="line">         <span class="title class_">Text</span>(item.<span class="property">title</span>)</span><br><span class="line">           .<span class="title function_">fontSize</span>(<span class="string">&#x27;35fp&#x27;</span>)</span><br><span class="line">           .<span class="title function_">fontColor</span>(<span class="title class_">Color</span>.<span class="property">White</span>)</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//...</span></span><br><span class="line">       &#125;)</span><br></pre></td></tr></table></figure><h1 id="🔦router"><a href="#🔦router" class="headerlink" title="🔦router"></a>🔦router</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@ohos.router&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="📼mainpage"><a href="#📼mainpage" class="headerlink" title="📼mainpage"></a>📼mainpage</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;pages/home1&quot;</span></span><br></pre></td></tr></table></figure><h1 id="📹️onclick"><a href="#📹️onclick" class="headerlink" title="📹️onclick"></a>📹️onclick</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.<span class="title function_">onClick</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">           <span class="comment">//router</span></span><br><span class="line">           router.<span class="title function_">pushUrl</span>(&#123;<span class="attr">url</span>:item.<span class="property">url</span>&#125;)</span><br><span class="line">         &#125;)</span><br></pre></td></tr></table></figure><h1 id="📺️setInterval"><a href="#📺️setInterval" class="headerlink" title="📺️setInterval"></a>📺️setInterval</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//home1  page1</span></span><br><span class="line"><span class="keyword">import</span>  router <span class="keyword">from</span> <span class="string">&#x27;@ohos.router&#x27;</span></span><br><span class="line"><span class="meta">@Entry</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">struct <span class="title class_">Index</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@State</span> <span class="attr">TOTAL_TIME</span>:<span class="built_in">number</span> = <span class="number">6</span>;<span class="comment">//s</span></span><br><span class="line">  <span class="meta">@State</span> <span class="attr">FIRST_CT</span>:<span class="built_in">number</span> =<span class="number">3</span>;<span class="comment">//s</span></span><br><span class="line"></span><br><span class="line">  <span class="title function_">aboutToAppear</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//timer</span></span><br><span class="line">   <span class="keyword">let</span> timer=   <span class="built_in">setInterval</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">TOTAL_TIME</span>--;</span><br><span class="line">      <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">TOTAL_TIME</span>===<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">//end</span></span><br><span class="line">        router.<span class="title function_">pushUrl</span>(&#123;</span><br><span class="line">          <span class="attr">url</span>:<span class="string">&quot;pages/Index&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">clearInterval</span>(timer);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,<span class="number">1000</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="title function_">build</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="title class_">Column</span>() &#123;</span><br><span class="line">        <span class="title class_">Row</span>() &#123;</span><br><span class="line">          <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">TOTAL_TIME</span>&gt;<span class="variable language_">this</span>.<span class="property">FIRST_CT</span>)&#123;</span><br><span class="line">              <span class="comment">//1</span></span><br><span class="line">            <span class="title class_">Image</span>($r(<span class="string">&#x27;app.media.t2&#x27;</span>))</span><br><span class="line">              .<span class="title function_">objectFit</span>(<span class="title class_">ImageFit</span>.<span class="property">Contain</span>)</span><br><span class="line">          &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">TOTAL_TIME</span>&lt;<span class="variable language_">this</span>.<span class="property">FIRST_CT</span>) &#123;</span><br><span class="line">              <span class="comment">//2</span></span><br><span class="line">            <span class="title class_">Image</span>($r(<span class="string">&#x27;app.media.bc&#x27;</span>))</span><br><span class="line">              .<span class="title function_">objectFit</span>(<span class="title class_">ImageFit</span>.<span class="property">Contain</span>)</span><br><span class="line">              .<span class="title function_">width</span>(<span class="string">&#x27;30%&#x27;</span>)</span><br><span class="line">            <span class="title class_">Text</span>(<span class="string">&#x27; - m - &#x27;</span>)</span><br><span class="line">              .<span class="title function_">fontSize</span>(<span class="string">&#x27;30fp&#x27;</span>)</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        .<span class="title function_">width</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">        .<span class="title function_">height</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">        .<span class="title function_">justifyContent</span>(<span class="title class_">FlexAlign</span>.<span class="property">Center</span>)</span><br><span class="line"></span><br><span class="line">          <span class="comment">// Text(&#x27;in&#x27;)</span></span><br><span class="line">          <span class="comment">//   .fontSize(&#x27;50fp&#x27;)</span></span><br><span class="line">      &#125;</span><br><span class="line">      .<span class="title function_">width</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/a2.gif"  ></p><h1 id="📽️TransitionEnter-scale"><a href="#📽️TransitionEnter-scale" class="headerlink" title="📽️TransitionEnter  scale"></a>📽️TransitionEnter  scale</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//home2 page2</span></span><br><span class="line">  <span class="meta">@State</span> <span class="attr">scale1</span>: <span class="built_in">number</span> = <span class="number">1</span></span><br><span class="line">  <span class="meta">@State</span> <span class="attr">opacity1</span>: <span class="built_in">number</span> = <span class="number">1</span></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">   <span class="title class_">Column</span>()</span><br><span class="line">.<span class="title function_">scale</span>(&#123; <span class="attr">x</span>: <span class="variable language_">this</span>.<span class="property">scale1</span> &#125;).<span class="title function_">opacity</span>(<span class="variable language_">this</span>.<span class="property">opacity1</span>)</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"> <span class="title function_">pageTransition</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title class_">PageTransitionEnter</span>(&#123; <span class="attr">duration</span>: <span class="number">1200</span>, <span class="attr">curve</span>: <span class="title class_">Curve</span>.<span class="property">Linear</span> &#125;)</span><br><span class="line">      .<span class="title function_">onEnter</span>(<span class="function">(<span class="params"><span class="keyword">type</span>: RouteType, progress: <span class="built_in">number</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">scale1</span> = <span class="number">1</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">opacity1</span> = progress</span><br><span class="line">      &#125;) <span class="comment">// onEnter (0% -- 100%)</span></span><br><span class="line">    <span class="title class_">PageTransitionExit</span>(&#123; <span class="attr">duration</span>: <span class="number">1500</span>, <span class="attr">curve</span>: <span class="title class_">Curve</span>.<span class="property">Ease</span> &#125;)</span><br><span class="line">      .<span class="title function_">onExit</span>(<span class="function">(<span class="params"><span class="keyword">type</span>: RouteType, progress: <span class="built_in">number</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">scale1</span> = <span class="number">1</span> - progress</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">opacity1</span> = <span class="number">1</span></span><br><span class="line">      &#125;) <span class="comment">// onExit (0% -- 100%)</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/a3.gif"  ></p><h1 id="🎥SlideEffect-Left"><a href="#🎥SlideEffect-Left" class="headerlink" title="🎥SlideEffect.Left"></a>🎥SlideEffect.Left</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">pageTransition</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title class_">PageTransitionEnter</span>(&#123; <span class="attr">duration</span>: <span class="number">1200</span> &#125;)</span><br><span class="line">    .<span class="title function_">slide</span>(<span class="title class_">SlideEffect</span>.<span class="property">Left</span>)</span><br><span class="line">  <span class="title class_">PageTransitionExit</span>(&#123; <span class="attr">delay</span>: <span class="number">100</span> &#125;)</span><br><span class="line">    .<span class="title function_">translate</span>(&#123; <span class="attr">x</span>: <span class="number">100.0</span>, <span class="attr">y</span>: <span class="number">100.0</span> &#125;)</span><br><span class="line">    .<span class="title function_">opacity</span>(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/a4.gif"  ></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>DotNetty ByteBuffer</title>
      <link href="/2024/05/23/DotNetty-ByteBuffer/"/>
      <url>/2024/05/23/DotNetty-ByteBuffer/</url>
      
        <content type="html"><![CDATA[<p><strong>DotNetty</strong>是一个高性能的.NET网络通信框架，基于Netty，支持TCP、UDP、HTTP、WebSocket等协议。适用于高并发、低延迟场景，如实时通信、游戏服务器、IoT应用及大型分布式系统，通过异步I&#x2F;O、零拷贝等技术提升性能，具备易用性、可扩展性。<br>架构上，围绕Channel、EventLoop、ChannelPipeline、ChannelHandlerContext设计，包含Transport、Codec、Handler等模块，简化网络编程，加速数据传输处理。</p><p><strong>ByteBuffer</strong> 用于高效处理字节数据，固定容量，通过allocate或wrap创建。涉及position和limit追踪读写位置，提供get&#x2F;put等读写方法，flip切换读写模式，clear清空缓冲区，compact移动数据并准备下一轮读写，适用于高性能IO与网络通信。.</p><p><strong>优点</strong><br>零拷贝通过复合缓冲区实现。<br>动态容量增长。<br>无需flip切换读写模式。<br>分离读写索引。<br>内置引用计数。<br>支持缓冲区池化。<br>优化网络通信中的字节处理。</p><p><strong>结构</strong><br>readerIndex 读取，随读增。<br>writerIndex 写入，随写增。<br>capacity容量。</p><p><strong>ByteBuffer属性</strong><br>readIndex：下一个读位<br>writeIndex：下一个写位置<br>capacity：容量<br>0：缓冲区开始位置</p><p>已经读取的区域：[0,readerindex)<br>可读取的区域：[readerindex,writerIndex)<br>可写的区域: [writerIndex,capacity)<br>读写独立索引，操作命名区分（read&#x2F;write自动进，get&#x2F;set不影响索引）。<br>支持设定最大容量，超限写操作将抛异常，默认上限Integer.MAX_VALUE。<br>readerIndex writerIndex 本质为灵活高效字节容器</p><p><strong>堆缓冲区</strong><br>最常用的 ByteBuffer 模式是将数据存储在堆空间中。这种模式被称为支撑数组（backing array），它能在没有使用池化的情况下提供快速的分配和释放。可以由 hasArray() 来判断检查 ByteBuffer是否由数组支撑。如果不是，则这是一个直接缓冲区。</p><p><strong>直接缓冲区</strong><br>直接缓冲区是另外一种 ByteBuffer 模式。<br>直接缓冲区的主要缺点是，相对于基于堆的缓冲区，它们的分配和释放都较为昂贵。</p><p><strong>复合缓冲区</strong><br>复合缓冲区 CompositeByteBuf，它为多个 ByteBuffer提供一个聚合视图。比如 HTTP 协议， 分为消息头和消息体，这两部分可能由应用程序的不同模块产生，各有各的 ByteBuffer，将会在消息被发送的时候组装为一个 ByteBuffer，此时可以将这两个 ByteBuffer聚合为一个 CompositeByteBuf，然后使用统一和通用的 ByteBuffer API 来操作。</p><p>如何在的程序中获得 ByteBuf 的实例，并使用它呢？Netty 提供了两种方式</p><p><strong>ByteBufAllocator 接口</strong><br>ByteBufAllocator 分配任意类型的 ByteBuffer 实例。</p><p>buffer(): 基于堆&#x2F;直接内存ByteBuffer。<br>heapBuffer(): 仅堆内存。<br>directBuffer(): 仅直接内存。<br>compositeBuffer(): 可组合多个缓冲区，支持堆&#x2F;直接内存。<br>ioBuffer(): 适配I&#x2F;O操作，优先直接内存(需Unsafe支持)。<br>ByteBufAllocator：<br>Channel ChannelHandlerContext</p><p><strong>Unpooled 缓冲区</strong></p><p>Unpooled工具类助创ByteBuffer<br> buffer()：堆内存ByteBuffer<br> directBuffer()：直接内存ByteBuffer<br> wrappedBuffer()：包装数据的ByteBuffer<br> copiedBuffer()：复制数据的ByteBuffer 适用范围广泛，不仅限于Netty网络项目。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IByteBuffer byteBuf = Unpooled.CopiedBuffer(<span class="string">&quot;hello,world!&quot;</span>, Encoding.UTF8); </span><br></pre></td></tr></table></figure><p><strong>ByteBuf访问&#x2F;读写</strong><br>索引从0开始至capacity()-1。<br>随机访问（get&#x2F;set）不改索引，需显式调用readerIndex()&#x2F;writerIndex()移动。<br>顺序访问分两类：<br>get&#x2F;set：固定索引，读写数据不移位。<br>read&#x2F;write：自动调整readerIndex&#x2F;writerIndex。</p><p>isReadable() 如果至少有一个字节可供读取，则返回 true<br>isWritable() 如果至少有一个字节可被写入，则返回 true<br>readableBytes() 返回可被读取的字节数<br>writableBytes() 返回可被写入的字节数<br>capacity() 返回 ByteBuffer 可容纳的字节数。在此之后，它会尝试再次扩展直到达到<br>maxCapacity()<br>maxCapacity() 返回 ByteBuffer 可以容纳的最大字节数<br>hasArray() 如果 ByteBuffer 由一个字节数组支撑，则返回 true<br>array() 如果 ByteBuffer 由一个字节数组支撑则返回该数组</p><p><strong>可丢弃字节</strong><br>读操作后，字节积累在”可丢弃”段，始于readerIndex。<br>discardReadBytes()释放已读字节，回收空间，可能导致之前数据移动。<br>此操作可能涉及内存复制，谨慎使用。</p><p><strong>可读字节</strong>：存储实际数据，新缓冲区默认从readerIndex&#x3D;0开始。<br><strong>可写字节</strong>：空白区域待写入，新缓冲区writerIndex初设0，写操作后自动递增。</p><p><strong>资源释放</strong><br>处理Netty入站ByteBuffer ，可选自动释放：用SimpleChannelInboundHandler，或在channelRead()末手动调用ReferenceCountUtil.release(msg)确保资源管理。</p><!--对于**入站请求**，Netty中处理Channel读操作时自动分配的ByteBuffer ，确实需要正确管理其生命周期以避免内存泄漏。主要有两种推荐做法来确保ByteBuf的释放：使用SimpleChannelInboundHandler：这个Handler类在处理完消息后会自动释放ByteBuffer 。它通过重写了channelReadComplete()方法来调用release()释放消息，因此你不需要在channelRead()方法里手动释放。手动释放：如果你不使用SimpleChannelInboundHandler，而是在其他类型的ChannelInboundHandler中处理消息，就需要在channelRead()方法结束前手动调用ReferenceCountUtil.release(msg)来释放ByteBuffer 。简而言之，确保ByteBuffer 释放的两种方式可总结为：“利用SimpleChannelInboundHandler自动管理”或“在channelRead()末手动释放”。--><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> DotNetty.Buffers;</span><br><span class="line"><span class="keyword">using</span> DotNetty.Transport.Channels;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CommanChannelInboundHandler</span> : <span class="title">SimpleChannelInboundHandler</span>&lt;<span class="title">object</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ChannelRead</span>(<span class="params">IChannelHandlerContext context, <span class="built_in">object</span> message</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">bool</span> shouldRelease = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (IsMessageAcceptable(message))</span><br><span class="line">            &#123;</span><br><span class="line">                ChannelRead0(context, message);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                shouldRelease = <span class="literal">false</span>;</span><br><span class="line">                context.FireChannelRead(message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (AutoRelease &amp;&amp; shouldRelease)</span><br><span class="line">            &#123;</span><br><span class="line">                ResourceUtil.Release(message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">IsMessageAcceptable</span>(<span class="params"><span class="built_in">object</span> msg</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">return</span> msg <span class="keyword">is</span> IByteBuffer; <span class="comment">// 假设只处理IByteBuffer类型的消息</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">ChannelRead0</span>(<span class="params">IChannelHandlerContext context, <span class="built_in">object</span> message</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//IByteBuffer ...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> AutoRelease &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于<strong>出站请求</strong>，不管 ByteBuffer 是否由我们的业务创建的，当调用了 write 或者 writeAndFlush 方法后，Netty 会自动替我们释放，不需要我们业务代码自行释放。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建ByteBuf对象，初始容量为1，内部动态扩容以容纳更多数据</span></span><br><span class="line">IByteBuffer byteBuf = Unpooled.Buffer(<span class="number">1</span>);</span><br><span class="line">Console.WriteLine(<span class="string">&quot;byteBuf=&quot;</span> + byteBuf);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    byteBuf.WriteByte(i);</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;byteBuf=&quot;</span> + byteBuf);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(byteBuf.GetByte(i));</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;byteBuf=&quot;</span> + byteBuf);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(byteBuf.ReadByte());</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;byteBuf=&quot;</span> + byteBuf);</span><br><span class="line"></span><br><span class="line"><span class="comment">//byteBuf2</span></span><br><span class="line"><span class="comment">// 使用Unpooled工具类创建ByteBuf，内容为&quot;hello,world!&quot;</span></span><br><span class="line">IByteBuffer byteBuf2 = Unpooled.CopiedBuffer(<span class="string">&quot;hello,world!&quot;</span>, Encoding.UTF8); <span class="comment">// Unpooled.CopiedBuffer(&quot;hello,world!&quot;, Encoding.UTF8);</span></span><br><span class="line"><span class="comment">// 使用相关的方法</span></span><br><span class="line"><span class="keyword">if</span> (byteBuf2.HasArray) <span class="comment">// if (byteBuf2.HasArray)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">byte</span>[] content = byteBuf2.Array;</span><br><span class="line">    <span class="comment">// 将content转成字符串</span></span><br><span class="line">    Console.WriteLine(Encoding.UTF8.GetString(content));</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;byteBuf2=&quot;</span> + byteBuf2);</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(byteBuf2.GetByte(<span class="number">0</span>)); <span class="comment">// 获取数组0这个位置的字符&#x27;h&#x27;的ASCII码，h=104</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> len = byteBuf2.ReadableBytes; <span class="comment">// 可读的字节数 12</span></span><br><span class="line">    Console.WriteLine(<span class="string">&quot;len=&quot;</span> + len);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用for取出各个字节并转换为对应的字符打印</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine((<span class="built_in">char</span>)byteBuf2.GetByte(i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 范围读取</span></span><br><span class="line">    Console.WriteLine(byteBuf2.GetCharSequence(<span class="number">0</span>, <span class="number">6</span>, Encoding.UTF8));</span><br><span class="line">    Console.WriteLine(byteBuf2.GetCharSequence(<span class="number">6</span>, <span class="number">6</span>, Encoding.UTF8));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//byteBuf3 WrappedBuffer</span></span><br><span class="line"><span class="keyword">var</span> str1 = Encoding.UTF8.GetBytes(<span class="string">&quot;hello,world!&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> byteBuf3 = Unpooled.WrappedBuffer(str1);</span><br><span class="line"><span class="keyword">if</span> (byteBuf3.HasArray) <span class="comment">// if (byteBuf2.HasArray)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">byte</span>[] content = byteBuf3.Array;</span><br><span class="line">    <span class="comment">// 将content转成字符串</span></span><br><span class="line">    Console.WriteLine(Encoding.UTF8.GetString(content));</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;byteBuf3=&quot;</span> + byteBuf3);</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(byteBuf3.GetByte(<span class="number">0</span>)); <span class="comment">// 获取数组0这个位置的字符&#x27;h&#x27;的ASCII码，h=104</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> len = byteBuf3.ReadableBytes; <span class="comment">// 可读的字节数 12</span></span><br><span class="line">    Console.WriteLine(<span class="string">&quot;len=&quot;</span> + len);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用for取出各个字节并转换为对应的字符打印</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine((<span class="built_in">char</span>)byteBuf3.GetByte(i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 范围读取</span></span><br><span class="line">    Console.WriteLine(byteBuf3.GetCharSequence(<span class="number">0</span>, <span class="number">6</span>, Encoding.UTF8));</span><br><span class="line">    Console.WriteLine(byteBuf3.GetCharSequence(<span class="number">6</span>, <span class="number">6</span>, Encoding.UTF8));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果得出 get操作 readerIndex 不变，read操作使其移动。</p><p>End</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>.NET FileUpload</title>
      <link href="/2024/05/20/NET-Fileupload/"/>
      <url>/2024/05/20/NET-Fileupload/</url>
      
        <content type="html"><![CDATA[<p>VS2022 .NET8 </p><h1 id="💾基础上传示例"><a href="#💾基础上传示例" class="headerlink" title="💾基础上传示例"></a>💾基础上传示例</h1><p>view</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@&#123;</span><br><span class="line">    ViewData[<span class="string">&quot;Title&quot;</span>] = <span class="string">&quot;File Upload&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;@ViewData[<span class="string">&quot;Title&quot;</span>]&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span> action=<span class="string">&quot;/Home/UploadFile&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span><br><span class="line">    </span><br><span class="line">        &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;form-control&quot;</span> /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;button type=<span class="string">&quot;submit&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;Upload&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>controller</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">UploadFile</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> file = Request.Form.Files[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (file != <span class="literal">null</span> &amp;&amp; file.Length &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> uploads = Path.Combine(Directory.GetCurrentDirectory(), <span class="string">&quot;wwwroot&quot;</span>, <span class="string">&quot;up&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!Directory.Exists(uploads))</span><br><span class="line">        &#123;</span><br><span class="line">            Directory.CreateDirectory(uploads);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> filePath = Path.Combine(uploads, file.FileName);</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> fileStream = <span class="keyword">new</span> FileStream(filePath, FileMode.Create))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">await</span> file.CopyToAsync(fileStream);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// SAVE TO DB</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> RedirectToAction(<span class="string">&quot;Index&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> View();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.UseStaticFiles();</span><br></pre></td></tr></table></figure><p>run</p><h1 id="📀优化-限制文件大小"><a href="#📀优化-限制文件大小" class="headerlink" title="📀优化 限制文件大小"></a>📀优化 限制文件大小</h1><p>上传文件夹如 img &#x3D;&gt; img    rar &#x3D;&gt; file<br>限制文件大小  </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据文件类型选择上传的文件夹</span></span><br><span class="line"><span class="built_in">string</span> fileExtension = Path.GetExtension(file.FileName).ToLower();</span><br><span class="line"><span class="keyword">switch</span> (fileExtension)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;.jpg&quot;</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;.png&quot;</span>:</span><br><span class="line">        uploadFolder = Path.Combine(<span class="string">&quot;wwwroot&quot;</span>, <span class="string">&quot;img&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;.mp4&quot;</span>:</span><br><span class="line">        <span class="comment">// 检查视频大小是否超过限制</span></span><br><span class="line">        <span class="keyword">if</span> (file.Length &gt; <span class="number">20</span> * <span class="number">1024</span> * <span class="number">1024</span>) <span class="comment">// 20MB</span></span><br><span class="line">        &#123;</span><br><span class="line">            ModelState.AddModelError(<span class="string">&quot;File&quot;</span>, <span class="string">&quot;Video file size should not exceed 20MB.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> View(<span class="string">&quot;Index&quot;</span>, file);</span><br><span class="line">        &#125;</span><br><span class="line">        uploadFolder = Path.Combine(<span class="string">&quot;wwwroot&quot;</span>, <span class="string">&quot;vd&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;.m4a&quot;</span>:</span><br><span class="line">        uploadFolder = Path.Combine(<span class="string">&quot;wwwroot&quot;</span>, <span class="string">&quot;sound&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;.rar&quot;</span>:</span><br><span class="line">        uploadFolder = Path.Combine(<span class="string">&quot;wwwroot&quot;</span>, <span class="string">&quot;file&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="literal">default</span>:</span><br><span class="line">        ModelState.AddModelError(<span class="string">&quot;File&quot;</span>, <span class="string">&quot;Unsupported file format.&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> View(<span class="string">&quot;Index&quot;</span>, file);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🪫删除"><a href="#🪫删除" class="headerlink" title="🪫删除"></a>🪫删除</h1><p>view</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">@model IEnumerable&lt;<span class="built_in">string</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;Uploaded Files&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">@if (Model.Any())</span><br><span class="line">&#123;</span><br><span class="line">    &lt;table <span class="keyword">class</span>=<span class="string">&quot;table&quot;</span>&gt;</span><br><span class="line">        &lt;thead&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th&gt;File Name&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;Action&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/thead&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">            @foreach (<span class="keyword">var</span> fileName <span class="keyword">in</span> Model)</span><br><span class="line">            &#123;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td&gt;@fileName&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;form method=<span class="string">&quot;post&quot;</span> asp-action=<span class="string">&quot;DeleteFile&quot;</span>&gt;</span><br><span class="line">                            &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;fileName&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;@fileName&quot;</span> /&gt;</span><br><span class="line">                            &lt;button type=<span class="string">&quot;submit&quot;</span> <span class="keyword">class</span>=<span class="string">&quot;btn btn-danger&quot;</span>&gt;Delete&lt;/button&gt;</span><br><span class="line">                        &lt;/form&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/tbody&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    &lt;p&gt;No files uploaded yet.&lt;/p&gt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>controller</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> IActionResult <span class="title">DeleteFile</span>(<span class="params"><span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> uploadFolder = Path.Combine(Directory.GetCurrentDirectory(), <span class="string">&quot;wwwroot&quot;</span>, <span class="string">&quot;img&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> filePath = Path.Combine(uploadFolder, fileName);</span><br><span class="line">    <span class="keyword">if</span> (System.IO.File.Exists(filePath))</span><br><span class="line">    &#123;</span><br><span class="line">        System.IO.File.Delete(filePath);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> RedirectToAction(<span class="string">&quot;Files&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="💿️重命名"><a href="#💿️重命名" class="headerlink" title="💿️重命名"></a>💿️重命名</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> fileName = <span class="string">$&quot;<span class="subst">&#123;DateTime.Now:yyyyMMddHHmmssfff&#125;</span><span class="subst">&#123;<span class="keyword">new</span> Random().Next(<span class="number">1000</span>, <span class="number">9999</span>)&#125;</span><span class="subst">&#123;fileExtension&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> filePath = Path.Combine(uploads, fileName);</span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> fileStream = <span class="keyword">new</span> FileStream(filePath, FileMode.Create))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">await</span> file.CopyToAsync(fileStream);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="💽多文件上传"><a href="#💽多文件上传" class="headerlink" title="💽多文件上传"></a>💽多文件上传</h1><p>controller</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line">[<span class="meta">Route(<span class="string">&quot;[controller]&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FileUploadController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">string</span> UploadsDirectory = Path.Combine(Directory.GetCurrentDirectory(), <span class="string">&quot;uploads&quot;</span>);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FileUploadController</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建上传文件夹（如果不存在）</span></span><br><span class="line">        <span class="keyword">if</span> (!Directory.Exists(UploadsDirectory))</span><br><span class="line">        &#123;</span><br><span class="line">            Directory.CreateDirectory(UploadsDirectory);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">HttpPost</span>]</span><br><span class="line">    [<span class="meta">Route(<span class="string">&quot;upload&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">Upload</span>(<span class="params">IFormFile[] files</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (files == <span class="literal">null</span> || files.Length == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> BadRequest(<span class="string">&quot;No files uploaded.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> file <span class="keyword">in</span> files)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (file.Length == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> BadRequest(<span class="string">$&quot;File <span class="subst">&#123;file.FileName&#125;</span> is empty.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 根据文件类型选择上传的文件夹</span></span><br><span class="line">            <span class="built_in">string</span> uploadFolder = GetUploadFolder(file.FileName);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 重命名文件为指定格式</span></span><br><span class="line">            <span class="built_in">string</span> fileName = <span class="string">$&quot;<span class="subst">&#123;DateTime.Now:yyyyMMddHHmmssfff&#125;</span>_<span class="subst">&#123;Guid.NewGuid()&#125;</span><span class="subst">&#123;Path.GetExtension(file.FileName)&#125;</span>&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> filePath = Path.Combine(UploadsDirectory, uploadFolder, fileName);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">using</span> (<span class="keyword">var</span> stream = <span class="keyword">new</span> FileStream(filePath, FileMode.Create))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">await</span> file.CopyToAsync(stream);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 在这里可以处理上传文件的逻辑，比如保存文件信息到数据库等</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Ok(<span class="string">&quot;Files uploaded successfully.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetUploadFolder</span>(<span class="params"><span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> fileExtension = Path.GetExtension(fileName).ToLower();</span><br><span class="line">        <span class="keyword">switch</span> (fileExtension)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;.jpg&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;.png&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;img&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;.mp4&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;vd&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;.m4a&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;sound&quot;</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;.rar&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;file&quot;</span>;</span><br><span class="line">            <span class="literal">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> NotSupportedException(<span class="string">$&quot;Unsupported file format for <span class="subst">&#123;fileName&#125;</span>.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>view</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@&#123;</span><br><span class="line">    ViewBag.Title = <span class="string">&quot;File Upload&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;h2&gt;File Upload2&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">&lt;form id=<span class="string">&quot;uploadForm&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;file&quot;</span> id=<span class="string">&quot;fileInput&quot;</span> multiple&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;button&quot;</span> <span class="keyword">value</span>=<span class="string">&quot;Upload&quot;</span> onclick=<span class="string">&quot;uploadFiles()&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;message&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">@section scripts &#123;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="function">function <span class="title">uploadFiles</span>()</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> files = document.getElementById(<span class="string">&#x27;fileInput&#x27;</span>).files;</span><br><span class="line">            <span class="keyword">if</span> (files.length === <span class="number">0</span>) &#123;</span><br><span class="line">                showMessage(<span class="string">&#x27;No files selected.&#x27;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> formData = <span class="keyword">new</span> FormData();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; files.length; i++) &#123;</span><br><span class="line">                formData.append(<span class="string">&#x27;files&#x27;</span>, files[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                url: <span class="string">&#x27;@Url.Action(&quot;Upload&quot;, &quot;FileUpload&quot;)&#x27;</span>,</span><br><span class="line">                type: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">                data: formData,</span><br><span class="line">                processData: <span class="literal">false</span>,</span><br><span class="line">                contentType: <span class="literal">false</span>,</span><br><span class="line">                success: function (response) &#123;</span><br><span class="line">                    showMessage(response);</span><br><span class="line">                &#125;,</span><br><span class="line">                error: function (xhr, status, error) &#123;</span><br><span class="line">                    showMessage(<span class="string">&#x27;Upload failed: &#x27;</span> + error);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function">function <span class="title">showMessage</span>(<span class="params">message</span>)</span> &#123;</span><br><span class="line">            $(<span class="string">&#x27;#message&#x27;</span>).text(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><!--//nodejs Express.js和multerconst express = require('express');const multer  = require('multer');const path = require('path');const fs = require('fs');const app = express();const upload = multer({ dest: 'uploads/' });app.post('/upload', upload.single('file'), (req, res) => {    // 获取上传的文件信息    const file = req.file;    if (!file) {        return res.status(400).send('No file uploaded.');    }    // 根据文件类型选择上传的文件夹    let uploadFolder = '';    const fileExtension = path.extname(file.originalname).toLowerCase();    switch (fileExtension) {        case '.jpg':        case '.png':            uploadFolder = 'img';            break;        case '.mp4':            uploadFolder = 'vd';            break;        case '.m4a':            uploadFolder = 'sound';            break;        case '.rar':            uploadFolder = 'file';            break;        default:            return res.status(400).send('Unsupported file format.');    }    // 创建上传文件夹（如果不存在）    const uploadsDir = path.join(__dirname, 'uploads', uploadFolder);    if (!fs.existsSync(uploadsDir)) {        fs.mkdirSync(uploadsDir, { recursive: true });    }    // 重命名文件为指定格式    const fileName = `${new Date().toISOString().replace(/[-T:\.Z]/g, '')}_${Math.random().toString(36).substring(2, 6)}${fileExtension}`;    const filePath = path.join(uploadsDir, fileName);    fs.renameSync(file.path, filePath);    // 在这里可以处理上传文件的逻辑，比如保存文件信息到数据库等    res.send('File uploaded successfully.');});app.listen(3000, () => {    console.log('Server is running on port 3000');});-->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c# run nodejs</title>
      <link href="/2024/05/20/nodejs-run-c/"/>
      <url>/2024/05/20/nodejs-run-c/</url>
      
        <content type="html"><![CDATA[<p>在C#中调用Node.js时，一种常见的方法是使用进程间通信（Inter-Process Communication，IPC），例如使用子进程。<br>可以使用C#中的Process类来启动Node.js进程，并通过标准输入输出与其进行通信。</p><h1 id="C-run-nodejs"><a href="#C-run-nodejs" class="headerlink" title="C# run nodejs"></a>C# run nodejs</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// n.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听来自标准输入的消息</span></span><br><span class="line">process.<span class="property">stdin</span>.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 收到消息后，在控制台输出并回复消息</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Message from C#: &quot;</span> + data.<span class="title function_">toString</span>());</span><br><span class="line"></span><br><span class="line">    process.<span class="property">stdout</span>.<span class="title function_">write</span>(<span class="string">&quot;Hello from Node.js!&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">ProcessStartInfo startInfo = <span class="keyword">new</span> ProcessStartInfo();</span><br><span class="line">startInfo.FileName = <span class="string">&quot;node&quot;</span>; <span class="comment">// Node.js可执行文件路径，如果已在系统路径中，则不需要提供完整路径</span></span><br><span class="line">startInfo.Arguments = <span class="string">&quot;n.js&quot;</span>; <span class="comment">// 执行的Node.js脚本文件路径</span></span><br><span class="line">startInfo.UseShellExecute = <span class="literal">false</span>;</span><br><span class="line">startInfo.RedirectStandardInput = <span class="literal">true</span>;</span><br><span class="line">startInfo.RedirectStandardOutput = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">Process nodeProcess = <span class="keyword">new</span> Process();</span><br><span class="line">nodeProcess.StartInfo = startInfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动进程</span></span><br><span class="line">nodeProcess.Start();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 与Node.js进程进行通信</span></span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> writer = nodeProcess.StandardInput)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (writer.BaseStream.CanWrite)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 向Node.js进程发送消息</span></span><br><span class="line">        writer.WriteLine(<span class="string">&quot;Hello from C#!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取Node.js进程的输出</span></span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> reader = nodeProcess.StandardOutput)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (reader.BaseStream.CanRead)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 从Node.js进程读取响应</span></span><br><span class="line">        <span class="built_in">string</span> response = reader.ReadLine();</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Response from Node.js: &quot;</span> + response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Console.Read();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 等待Node.js进程结束</span></span><br><span class="line">nodeProcess.WaitForExit();</span><br><span class="line">nodeProcess.Close();</span><br></pre></td></tr></table></figure><h1 id="Socket"><a href="#Socket" class="headerlink" title="Socket"></a>Socket</h1><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> net = <span class="built_in">require</span>(<span class="string">&#x27;net&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个服务器实例</span></span><br><span class="line"><span class="keyword">const</span> server = net.<span class="title function_">createServer</span>(<span class="function">(<span class="params">socket</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 连接建立时触发</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Client connected.&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听客户端发送的数据</span></span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Received from client: &#x27;</span> + data.<span class="title function_">toString</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向客户端发送响应数据</span></span><br><span class="line">        socket.<span class="title function_">write</span>(<span class="string">&#x27;Hello from Node.js!&#x27;</span> + data.<span class="title function_">toString</span>());</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 监听连接断开事件</span></span><br><span class="line">    socket.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Client disconnected.&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听指定端口</span></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">24520</span>;</span><br><span class="line">server.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Node Server listening on port &#x27;</span> + port);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 启动 Node.js 服务器的 Node.js 脚本文件路径</span></span><br><span class="line"><span class="built_in">string</span> nodeScriptPath = <span class="string">&quot;n.js&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动 Node.js 进程</span></span><br><span class="line">ProcessStartInfo startInfo = <span class="keyword">new</span> ProcessStartInfo();</span><br><span class="line">startInfo.FileName = <span class="string">&quot;node&quot;</span>; <span class="comment">// Node.js 可执行文件路径，如果已在系统路径中，则不需要提供完整路径</span></span><br><span class="line">startInfo.Arguments = nodeScriptPath; <span class="comment">// Node.js 脚本文件路径</span></span><br><span class="line">startInfo.UseShellExecute = <span class="literal">false</span>;</span><br><span class="line">startInfo.RedirectStandardOutput = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">Process nodeProcess = <span class="keyword">new</span> Process();</span><br><span class="line">nodeProcess.StartInfo = startInfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Node.js 服务器输出的事件处理函数</span></span><br><span class="line">nodeProcess.OutputDataReceived += (sender, e) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(e.Data); <span class="comment">// 输出 Node.js 服务器的输出信息</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动进程</span></span><br><span class="line">nodeProcess.Start();</span><br><span class="line">nodeProcess.BeginOutputReadLine(); <span class="comment">// 开始异步读取 Node.js 服务器的输出</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 等待 Node.js 进程结束</span></span><br><span class="line">nodeProcess.WaitForExit();</span><br><span class="line">nodeProcess.Close();</span><br></pre></td></tr></table></figure><p><strong>run</strong></p><h2 id="client"><a href="#client" class="headerlink" title="client"></a>client</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 连接到 Node.js 服务器的地址和端口</span></span><br><span class="line"><span class="built_in">string</span> serverAddress = <span class="string">&quot;127.0.0.1&quot;</span>; <span class="comment">// 本地地址</span></span><br><span class="line"><span class="built_in">int</span> serverPort = <span class="number">24520</span>; <span class="comment">// Node.js 服务器端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 TcpClient 实例</span></span><br><span class="line"><span class="keyword">using</span> (TcpClient client = <span class="keyword">new</span> TcpClient(serverAddress, serverPort))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 获取用于向服务器发送数据的网络流</span></span><br><span class="line">    <span class="keyword">using</span> (NetworkStream stream = client.GetStream())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 发送数据到服务器</span></span><br><span class="line">        <span class="built_in">string</span> message = <span class="string">&quot;hi from C#!&quot;</span>;</span><br><span class="line">        <span class="built_in">byte</span>[] data = Encoding.ASCII.GetBytes(message);</span><br><span class="line">        stream.Write(data, <span class="number">0</span>, data.Length);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Sent: &quot;</span> + message);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取服务器的响应</span></span><br><span class="line">        <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="built_in">int</span> bytesRead = stream.Read(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">        <span class="built_in">string</span> response = Encoding.ASCII.GetString(buffer, <span class="number">0</span>, bytesRead);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Received: &quot;</span> + response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>run</strong></p><h1 id="nodejs-run-c"><a href="#nodejs-run-c" class="headerlink" title="nodejs run c#"></a>nodejs run c#</h1><p>Node.js 使用 child_process.exec() 函数执行 c# exe</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(<span class="string">&quot;hi c# &quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//runc.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; exec &#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行 hello.exe</span></span><br><span class="line"><span class="title function_">exec</span>(<span class="string">&#x27;ConNode.exe&#x27;</span>, <span class="function">(<span class="params">error, stdout, stderr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`执行错误: <span class="subst">$&#123;error.message&#125;</span>`</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (stderr) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`执行错误: <span class="subst">$&#123;stderr&#125;</span>`</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`C# 输出: <span class="subst">$&#123;stdout&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>run</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node runc.js</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c# </tag>
            
            <tag> .net </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typescript</title>
      <link href="/2024/05/20/Typescript-ts/"/>
      <url>/2024/05/20/Typescript-ts/</url>
      
        <content type="html"><![CDATA[<p> typescript   ≈  javascript plus   </p><h1 id="🔗setup"><a href="#🔗setup" class="headerlink" title="🔗setup"></a>🔗setup</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install typescript -g</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc -version</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install ts-node -g</span><br></pre></td></tr></table></figure><h1 id="🖌️hello-world"><a href="#🖌️hello-world" class="headerlink" title="🖌️hello world"></a>🖌️hello world</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;hi&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ts-node t.ts</span><br></pre></td></tr></table></figure><h1 id="🖋️datatype"><a href="#🖋️datatype" class="headerlink" title="🖋️datatype"></a>🖋️datatype</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a1 :<span class="built_in">string</span> =<span class="string">&#x27;abc&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">a2</span>:<span class="built_in">number</span> = <span class="number">2</span></span><br><span class="line"><span class="keyword">let</span> a3 :<span class="built_in">boolean</span> =<span class="literal">true</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">nu</span>:<span class="literal">null</span> =<span class="literal">null</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">un</span>:<span class="literal">undefined</span> = <span class="literal">undefined</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">a4</span>:<span class="built_in">string</span>|<span class="literal">null</span>  = <span class="literal">null</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">a5</span>:<span class="number">1</span>|<span class="number">2</span>|<span class="number">3</span> = <span class="number">2</span></span><br></pre></td></tr></table></figure><h2 id="any"><a href="#any" class="headerlink" title="any"></a>any</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">a</span>:<span class="built_in">any</span></span><br><span class="line">a= <span class="number">1</span></span><br><span class="line">a=<span class="string">&quot;1&quot;</span></span><br><span class="line">a=<span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>strong type </p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">a</span>:<span class="built_in">string</span>  = <span class="string">&quot;123&quot;</span></span><br><span class="line"></span><br><span class="line">a=<span class="number">1</span> </span><br></pre></td></tr></table></figure><p>Err</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">a</span>:<span class="built_in">unknown</span></span><br><span class="line">a= <span class="number">1</span></span><br><span class="line">a=<span class="string">&quot;1&quot;</span></span><br><span class="line">a=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> b :<span class="title class_">String</span> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> a ==<span class="string">&quot;string&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    b=a </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="enum-枚举"><a href="#enum-枚举" class="headerlink" title="enum 枚举"></a>enum 枚举</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> <span class="title class_">Color</span> &#123; <span class="variable constant_">RED</span>,<span class="variable constant_">BLUE</span>,<span class="variable constant_">BLACK</span>&#125;</span><br><span class="line"><span class="keyword">let</span> color = <span class="title class_">Color</span>.<span class="property">BLACK</span>; <span class="comment">//Color[2]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(color);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ts-node t.ts</span><br></pre></td></tr></table></figure><p>or to js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc t.ts </span><br></pre></td></tr></table></figure><p>to see t.js </p><h2 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr :<span class="built_in">number</span>[] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="keyword">let</span> arr2 :<span class="title class_">Array</span>&lt;<span class="built_in">string</span>&gt; = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">arr</span>:[<span class="title class_">String</span>,<span class="built_in">number</span>,<span class="built_in">boolean</span>] =[<span class="string">&quot;123&quot;</span>,<span class="number">1</span>,<span class="literal">true</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a1 :[<span class="built_in">number</span>,<span class="built_in">string</span>,<span class="built_in">number</span>?] = [<span class="number">1</span>,<span class="string">&quot;11&quot;</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🖊️function"><a href="#🖊️function" class="headerlink" title="🖊️function"></a>🖊️function</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myFn</span>(<span class="params">a:<span class="built_in">number</span>,b:<span class="built_in">string</span>,c?:<span class="built_in">boolean</span>,...rest:<span class="built_in">number</span>[]</span>) :<span class="built_in">number</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> f = <span class="title function_">myFn</span>(<span class="number">10</span>,<span class="string">&#x27;123&#x27;</span>,<span class="literal">true</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h1 id="✒️interface"><a href="#✒️interface" class="headerlink" title="✒️interface"></a>✒️interface</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Obj</span>&#123;</span><br><span class="line"></span><br><span class="line">    name :<span class="built_in">string</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="built_in">number</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">obj</span>:<span class="title class_">Obj</span>=&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">15</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="📏type"><a href="#📏type" class="headerlink" title="📏type"></a>📏type</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">a</span>: <span class="title class_">String</span> |<span class="built_in">number</span> = <span class="number">10</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> myname = <span class="built_in">string</span> |<span class="built_in">number</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">b</span>:myname = <span class="number">10</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">b2</span>:myname = <span class="string">&quot;10&quot;</span></span><br></pre></td></tr></table></figure><h1 id="📐T-泛型"><a href="#📐T-泛型" class="headerlink" title="📐T 泛型"></a>📐T 泛型</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> myFn&lt;T&gt;(<span class="attr">a</span>:T,<span class="attr">b</span>:T):T[]&#123;</span><br><span class="line">    <span class="keyword">return</span> [a,b]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">myFn&lt;<span class="built_in">number</span>&gt;(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="title function_">myFn</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="📎extends"><a href="#📎extends" class="headerlink" title="📎extends"></a>📎extends</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span>  <span class="title class_">Parent</span>&#123;</span><br><span class="line">    p1 :<span class="built_in">string</span> </span><br><span class="line">    <span class="attr">p2</span>:<span class="built_in">number</span> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Child</span> <span class="keyword">extends</span>  <span class="title class_">Parent</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">p3</span>:<span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> v1 :<span class="title class_">Child</span>=</span><br><span class="line">&#123;</span><br><span class="line">    p1 :<span class="string">&quot;123&quot;</span>,</span><br><span class="line">    <span class="attr">p2</span>:<span class="number">1</span>,</span><br><span class="line">    <span class="attr">p3</span>:<span class="string">&quot;12&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🔧class"><a href="#🔧class" class="headerlink" title="🔧class"></a>🔧class</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Article</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="attr">title</span>:<span class="built_in">string</span></span><br><span class="line">    <span class="attr">con</span>:<span class="built_in">string</span></span><br><span class="line">    temp1?:<span class="built_in">string</span></span><br><span class="line">    tempnum= <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> temp2 ?:<span class="built_in">string</span> </span><br><span class="line">    <span class="keyword">protected</span> temp3?:<span class="built_in">string</span> </span><br><span class="line">    <span class="keyword">static</span> a1 :<span class="built_in">string</span> </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">readonly</span> a2 :<span class="built_in">string</span> =<span class="string">&#x27;a2st&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="title function_">constructor</span> (<span class="attr">title</span>:<span class="built_in">string</span>,<span class="attr">con</span>:<span class="built_in">string</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">title</span>=title</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">con</span>=con</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> a1 =<span class="keyword">new</span>  <span class="title class_">Article</span>(<span class="string">&#x27;t1&#x27;</span>,<span class="string">&#x27;con1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Article</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="title function_">constructor</span> (<span class="attr">title</span>:<span class="built_in">string</span> ,<span class="attr">con</span>:<span class="built_in">string</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="variable language_">super</span>(title,con)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">temp3</span>=<span class="string">&quot;1&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> _password :<span class="built_in">string</span> =<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">get</span> <span class="title function_">password</span>():<span class="built_in">string</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;****&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    set password (<span class="attr">newPass</span>:<span class="built_in">string</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_password</span> = newPass</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> u1  = <span class="keyword">new</span>   <span class="title class_">User</span>()</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(u1.<span class="property">password</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🪛abstract"><a href="#🪛abstract" class="headerlink" title="🪛abstract"></a>🪛abstract</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">abstract</span> <span class="attr">name</span>:<span class="built_in">string</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="title function_">makeSound</span>():<span class="built_in">void</span></span><br><span class="line">    <span class="title function_">move</span>():<span class="built_in">void</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;mmm&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="attr">name</span>:<span class="built_in">string</span>=<span class="string">&#x27;miao&#x27;</span></span><br><span class="line">    <span class="title function_">makeSound</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;miaomiao&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="attr">name</span>:<span class="built_in">string</span>=<span class="string">&#x27;wang&#x27;</span></span><br><span class="line">    <span class="title function_">makeSound</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;wangwang&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🧲implements"><a href="#🧲implements" class="headerlink" title="🧲implements"></a>🧲implements</h1><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Animal</span>&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="built_in">string</span></span><br><span class="line">    <span class="keyword">get</span> <span class="title function_">sound</span>():<span class="built_in">string</span></span><br><span class="line">    <span class="title function_">makesound</span>():<span class="built_in">void</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">AgeI</span>&#123;</span><br><span class="line">    <span class="attr">age</span>:<span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">implements</span> <span class="title class_">Animal</span>,<span class="title class_">AgeI</span>&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span> = <span class="string">&#x27;wang&#x27;</span></span><br><span class="line">    <span class="attr">age</span>:<span class="built_in">number</span> = <span class="number">2</span></span><br><span class="line">    <span class="keyword">get</span> <span class="title function_">sound</span>()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">makesound</span>(): <span class="built_in">void</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> helloworld </tag>
            
            <tag> Typescript </tag>
            
            <tag> datatype </tag>
            
            <tag> interface </tag>
            
            <tag> type </tag>
            
            <tag> T </tag>
            
            <tag> extends </tag>
            
            <tag> class </tag>
            
            <tag> abstract </tag>
            
            <tag> implements </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET Blazor</title>
      <link href="/2024/05/18/NET-Blazor/"/>
      <url>/2024/05/18/NET-Blazor/</url>
      
        <content type="html"><![CDATA[<p>Blazor 是一个使用 C#、HTML 和 CSS 构建交互式 Web UI 的开源框架，支持服务器端和客户端运行，允许开发者利用 C# 和 .NET 生态来创建 Web 应用。</p><h1 id="🌱Create"><a href="#🌱Create" class="headerlink" title="🌱Create"></a>🌱Create</h1><p>carete Blazor Web</p><p>Program.cs 是启动服务器以及在其中配置应用服务和中间件的应用的入口点。<br>在 Components 目录中:</p><p>App.razor 为应用的根组件。<br>Routes.razor 配置 Blazor 路由器。<br>Pages 目录包含应用的一些示例网页。<br>BlazorApp.csproj 定义应用项目及其依赖项，且可以通过双击解决方案资源管理器中的 BlazorApp 项目节点进行查看。<br>Properties 目录中的 launchSettings.json 文件为本地开发环境定义不同的配置文件设置。创建项目时会自动分配端口号并将其保存在此文件上。</p><h1 id="🪴Run"><a href="#🪴Run" class="headerlink" title="🪴Run"></a>🪴Run</h1><p>pages home.razor</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@page <span class="string">&quot;/&quot;</span></span><br><span class="line"></span><br><span class="line">&lt;PageTitle&gt;Home&lt;/PageTitle&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;Hello, world m qqqqq&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">hihihi</span><br></pre></td></tr></table></figure><h1 id="🌴Counter"><a href="#🌴Counter" class="headerlink" title="🌴Counter"></a>🌴Counter</h1><p>counter.razor</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@page <span class="string">&quot;/counter&quot;</span></span><br><span class="line">@rendermode InteractiveServer</span><br><span class="line"></span><br><span class="line">&lt;PageTitle&gt;Counter&lt;/PageTitle&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;Counter&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;p role=<span class="string">&quot;status&quot;</span>&gt;Current count: @currentCount&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;button <span class="keyword">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> @onclick=<span class="string">&quot;IncrementCount&quot;</span>&gt;Click me&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">@code &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> currentCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">IncrementCount</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        currentCount++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- # 🌲Weather  --><p>像Vue</p><h1 id="🌳Component"><a href="#🌳Component" class="headerlink" title="🌳Component"></a>🌳Component</h1><p><strong>home &gt; component</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@page <span class="string">&quot;/&quot;</span></span><br><span class="line"></span><br><span class="line">&lt;PageTitle&gt;Home&lt;/PageTitle&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;Hello, world m qqqqq&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">hihihi</span><br><span class="line"></span><br><span class="line"> &lt;Counter /&gt; </span><br><span class="line"></span><br><span class="line"> &lt;Weather&gt; &lt;/Weather&gt;</span><br></pre></td></tr></table></figure><h2 id="Parameter"><a href="#Parameter" class="headerlink" title="Parameter"></a>Parameter</h2><p>修改counter</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@code &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> currentCount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Parameter</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> IncrementAmount &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">IncrementCount</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// currentCount++;</span></span><br><span class="line">        currentCount += IncrementAmount;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;Counter IncrementAmount=<span class="string">&quot;2&quot;</span> /&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>点击即增加2 </p><p>data</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;input @bind=<span class="string">&quot;text&quot;</span> /&gt;</span><br><span class="line">&lt;button @onclick=<span class="string">&quot;() =&gt; text = string.Empty&quot;</span>&gt;Clear&lt;/button&gt;</span><br><span class="line">&lt;p&gt;@text&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">@code &#123;</span><br><span class="line">    <span class="built_in">string</span> text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="🌻ToDoList"><a href="#🌻ToDoList" class="headerlink" title="🌻ToDoList"></a>🌻ToDoList</h1><h2 id="nav"><a href="#nav" class="headerlink" title="nav"></a>nav</h2><p>Components&#x2F;Layout&#x2F;NavMenu.razor</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;nav-item px-3&quot;</span>&gt;</span><br><span class="line">    &lt;NavLink <span class="keyword">class</span>=<span class="string">&quot;nav-link&quot;</span> href=<span class="string">&quot;todo&quot;</span>&gt;</span><br><span class="line">        &lt;span <span class="keyword">class</span>=<span class="string">&quot;bi bi-list-nested-nav-menu&quot;</span> aria-hidden=<span class="string">&quot;true&quot;</span>&gt;&lt;/span&gt; Todo</span><br><span class="line">    &lt;/NavLink&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="TodoItem"><a href="#TodoItem" class="headerlink" title="TodoItem"></a>TodoItem</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TodoItem</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span>? Title &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> IsDone &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="AddItem"><a href="#AddItem" class="headerlink" title="AddItem"></a>AddItem</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    @foreach (<span class="keyword">var</span> todo <span class="keyword">in</span> todos)</span><br><span class="line">    &#123;</span><br><span class="line">        &lt;li&gt;@todo.Title&lt;/li&gt;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;br /&gt;</span><br><span class="line"></span><br><span class="line">&lt;input @bind=<span class="string">&quot;newTodo&quot;</span> /&gt;</span><br><span class="line">&lt;button @onclick=<span class="string">&quot;AddTodo&quot;</span>&gt;Add todo&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">@code &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;TodoItem&gt; todos = <span class="keyword">new</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> newTodo = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">AddTodo</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrWhiteSpace(newTodo))</span><br><span class="line">        &#123;</span><br><span class="line">            todos.Add(<span class="keyword">new</span> TodoItem &#123; Title = newTodo &#125;);</span><br><span class="line">            newTodo = <span class="built_in">string</span>.Empty;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!--https://github.com/dotnet-presentations/blazor-workshop -->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET RabbitMQ NOTE</title>
      <link href="/2024/05/18/NET-RabbitMQ/"/>
      <url>/2024/05/18/NET-RabbitMQ/</url>
      
        <content type="html"><![CDATA[<h1 id="setup-rabbitmq"><a href="#setup-rabbitmq" class="headerlink" title="setup rabbitmq"></a>setup rabbitmq</h1><p>docker run  –name&#x3D;rabbit  -p 15672:15672 -p 5672:5672  -e RABBITMQ_DEFAULT_USER&#x3D;admin -e RABBITMQ_DEFAULT_PASS&#x3D;xxx  -d  rabbitmq:management </p><p>ip:15672</p><p>nuget RabbitMQ.Client</p><p><strong>Send</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.1.实例化连接工厂</span></span><br><span class="line"><span class="keyword">var</span> factory = <span class="keyword">new</span> ConnectionFactory() &#123; HostName = <span class="string">&quot;localhost&quot;</span> &#125;;</span><br><span class="line"><span class="comment">//2. 建立连接</span></span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> connection = factory.CreateConnection())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//3. 创建信道</span></span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> channel = connection.CreateModel())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//4. 申明队列</span></span><br><span class="line">        channel.QueueDeclare(queue: <span class="string">&quot;hello&quot;</span>, durable: <span class="literal">false</span>, exclusive: <span class="literal">false</span>, autoDelete: <span class="literal">false</span>, arguments: <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//5. 构建byte消息数据包</span></span><br><span class="line">        <span class="built_in">string</span> message = args.Length &gt; <span class="number">0</span> ? args[<span class="number">0</span>] : <span class="string">&quot;Hello RabbitMQ!&quot;</span>;</span><br><span class="line">        <span class="keyword">var</span> body = Encoding.UTF8.GetBytes(message);</span><br><span class="line">        <span class="comment">//6. 发送数据包</span></span><br><span class="line">        channel.BasicPublish(exchange: <span class="string">&quot;&quot;</span>, routingKey: <span class="string">&quot;hello&quot;</span>, basicProperties: <span class="literal">null</span>, body: body);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot; [x] Sent &#123;0&#125;&quot;</span>, message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Received</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.实例化连接工厂</span></span><br><span class="line"><span class="keyword">var</span> factory = <span class="keyword">new</span> ConnectionFactory() &#123; HostName = <span class="string">&quot;localhost&quot;</span> &#125;;</span><br><span class="line"><span class="comment">//2. 建立连接</span></span><br><span class="line"><span class="keyword">using</span> (<span class="keyword">var</span> connection = factory.CreateConnection())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//3. 创建信道</span></span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> channel = connection.CreateModel())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//4. 申明队列</span></span><br><span class="line">        channel.QueueDeclare(queue: <span class="string">&quot;hello&quot;</span>, durable: <span class="literal">false</span>, exclusive: <span class="literal">false</span>, autoDelete: <span class="literal">false</span>, arguments: <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">//5. 构造消费者实例</span></span><br><span class="line">        <span class="keyword">var</span> consumer = <span class="keyword">new</span> EventingBasicConsumer(channel);</span><br><span class="line">        <span class="comment">//6. 绑定消息接收后的事件委托</span></span><br><span class="line">        consumer.Received += (model, ea) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> message = Encoding.UTF8.GetString(ea.Body.ToArray());</span><br><span class="line">            Console.WriteLine(<span class="string">&quot; [x] Received &#123;0&#125;&quot;</span>, message);</span><br><span class="line">            Thread.Sleep(<span class="number">6000</span>);<span class="comment">//模拟耗时</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot; [x] Done&quot;</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">//7. 启动消费者</span></span><br><span class="line">        channel.BasicConsume(queue: <span class="string">&quot;hello&quot;</span>, autoAck: <span class="literal">true</span>, consumer: consumer);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot; Press [enter] to exit.&quot;</span>);</span><br><span class="line">        Console.ReadLine();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Err<br>RabbitMQ.Client.Exceptions.BrokerUnreachableException:“None of the specified endpoints were reachable”<br>IP host</p><p>Err<br>AuthenticationFailureException: ACCESS_REFUSED - Login was refused using authentication mechanism </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> ConnectionFactory() &#123; HostName = <span class="string">&quot;localhost&quot;</span> ,UserName=<span class="string">&quot;admin&quot;</span>,Password=<span class="string">&quot;xxx&quot;</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>消息持久化</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//...</span></span><br><span class="line">    <span class="comment">//4. 申明队列(指定durable:true,告知rabbitmq对消息进行持久化)</span></span><br><span class="line">    channel.QueueDeclare(queue: <span class="string">&quot;hellooo&quot;</span>, durable: <span class="literal">true</span>, exclusive: <span class="literal">false</span>, autoDelete: <span class="literal">false</span>, arguments: <span class="literal">null</span>);</span><br><span class="line">    <span class="comment">//将消息标记为持久性 - 将IBasicProperties.SetPersistent设置为true</span></span><br><span class="line">    <span class="keyword">var</span> properties = channel.CreateBasicProperties();</span><br><span class="line">    properties.Persistent = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">//5. 构建byte消息数据包</span></span><br><span class="line">    <span class="built_in">string</span> message = args.Length &gt; <span class="number">0</span> ? args[<span class="number">0</span>] : <span class="string">&quot;Hello RabbitMQ!&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> body = Encoding.UTF8.GetBytes(message);</span><br><span class="line">    <span class="comment">//6. 发送数据包(指定basicProperties)</span></span><br><span class="line">    channel.BasicPublish(exchange: <span class="string">&quot;&quot;</span>, routingKey: <span class="string">&quot;hello&quot;</span>, basicProperties: properties, body: body);</span><br><span class="line">    <span class="comment">//6. 发送数据包</span></span><br><span class="line">    channel.BasicPublish(exchange: <span class="string">&quot;&quot;</span>, routingKey: <span class="string">&quot;hello&quot;</span>, basicProperties: <span class="literal">null</span>, body: body);</span><br><span class="line">    Console.WriteLine(<span class="string">&quot; [x] Sent &#123;0&#125;&quot;</span>, message);</span><br></pre></td></tr></table></figure><p>durable: true </p><!--RPC //申明唯一guid用来标识此次发送的远程调用请求 var correlationId = Guid.NewGuid().ToString(); //申明需要监听的回调队列 var replyQueue = channel.QueueDeclare().QueueName; var properties = channel.CreateBasicProperties(); properties.ReplyTo = replyQueue;//指定回调队列 properties.CorrelationId = correlationId;//指定消息唯一标识 string number = args.Length > 0 ? args[0] : "30"; var body = Encoding.UTF8.GetBytes(number); //发布消息 channel.BasicPublish(exchange: "", routingKey: "rpc_queue", basicProperties: properties, body: body); Console.WriteLine($"[*] Request fib({number})"); // //创建消费者用于处理消息回调（远程调用返回结果） var callbackConsumer = new EventingBasicConsumer(channel); channel.BasicConsume(queue: replyQueue, autoAck: true, consumer: callbackConsumer); callbackConsumer.Received += (model, ea) => {      //仅当消息回调的ID与发送的ID一致时，说明远程调用结果正确返回。     if (ea.BasicProperties.CorrelationId == correlationId)     {         var responseMsg = $"Get Response: {Encoding.UTF8.GetString(ea.Body)}";         Console.WriteLine($"[x]: {responseMsg}");     } };//申明队列接收远程调用请求channel.QueueDeclare(queue: "rpc_queue", durable: false,    exclusive: false, autoDelete: false, arguments: null);var consumer = new EventingBasicConsumer(channel);Console.WriteLine("[*] Waiting for message.");//请求处理逻辑consumer.Received += (model, ea) =>{    var message = Encoding.UTF8.GetString(ea.Body);    int n = int.Parse(message);    Console.WriteLine($"Receive request of Fib({n})");    int result = Fib(n);    //从请求的参数中获取请求的唯一标识，在消息回传时同样绑定    var properties = ea.BasicProperties;    var replyProerties = channel.CreateBasicProperties();    replyProerties.CorrelationId = properties.CorrelationId;    //将远程调用结果发送到客户端监听的队列上    channel.BasicPublish(exchange: "", routingKey: properties.ReplyTo,        basicProperties: replyProerties, body: Encoding.UTF8.GetBytes(result.ToString()));    //手动发回消息确认    channel.BasicAck(ea.DeliveryTag, false);    Console.WriteLine($"Return result: Fib({n})= {result}");};channel.BasicConsume(queue: "rpc_queue", autoAck: false, consumer: consumer);https://github.com/sheng-jie/RabbitMQhttps://github.com/EasyNetQ/EasyNetQ-->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NETS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nodejs2</title>
      <link href="/2024/05/17/Nodejs-Base2/"/>
      <url>/2024/05/17/Nodejs-Base2/</url>
      
        <content type="html"><![CDATA[<h1 id="📘-util"><a href="#📘-util" class="headerlink" title="📘 util"></a>📘 util</h1><h2 id="util"><a href="#util" class="headerlink" title="util"></a>util</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> util = <span class="built_in">require</span>(<span class="string">&#x27;util&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">util.<span class="title function_">isArray</span>([])</span><br><span class="line"></span><br><span class="line">util.<span class="title function_">isRegExp</span>(<span class="regexp">/some regexp/</span>)</span><br><span class="line"></span><br><span class="line">util.<span class="title function_">isDate</span>(<span class="keyword">new</span> <span class="title class_">Date</span>())</span><br><span class="line"> <span class="comment">// true</span></span><br><span class="line"> util.<span class="title function_">isDate</span>(<span class="title class_">Date</span>())</span><br><span class="line"> <span class="comment">// false (without &#x27;new&#x27; returns a String)</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="os"><a href="#os" class="headerlink" title="os"></a>os</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> os = <span class="built_in">require</span>(<span class="string">&quot;os&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// CPU 的字节序</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;endianness : &#x27;</span> + os.<span class="title function_">endianness</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 操作系统名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;type : &#x27;</span> + os.<span class="title function_">type</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 操作系统名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;platform : &#x27;</span> + os.<span class="title function_">platform</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 系统内存总量</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;total memory : &#x27;</span> + os.<span class="title function_">totalmem</span>() + <span class="string">&quot; bytes.&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 操作系统空闲内存量</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;free memory : &#x27;</span> + os.<span class="title function_">freemem</span>() + <span class="string">&quot; bytes.&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="path"><a href="#path" class="headerlink" title="path"></a>path</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 格式化路径</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;normalization : &#x27;</span> + path.<span class="title function_">normalize</span>(<span class="string">&#x27;/test/test1//2slashes/1slash/tab/..&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接路径</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;joint path : &#x27;</span> + path.<span class="title function_">join</span>(<span class="string">&#x27;/test&#x27;</span>, <span class="string">&#x27;test1&#x27;</span>, <span class="string">&#x27;2slashes/1slash&#x27;</span>, <span class="string">&#x27;tab&#x27;</span>, <span class="string">&#x27;..&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换为绝对路径</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;resolve : &#x27;</span> + path.<span class="title function_">resolve</span>(<span class="string">&#x27;main.js&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 路径中文件的后缀名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ext name : &#x27;</span> + path.<span class="title function_">extname</span>(<span class="string">&#x27;main.js&#x27;</span>));</span><br></pre></td></tr></table></figure><h2 id="net"><a href="#net" class="headerlink" title="net"></a>net</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//client</span></span><br><span class="line"><span class="keyword">var</span> net = <span class="built_in">require</span>(<span class="string">&#x27;net&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> client = net.<span class="title function_">connect</span>(&#123;<span class="attr">port</span>: <span class="number">6001</span>&#125;, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;连接到服务器！&#x27;</span>);  </span><br><span class="line">&#125;);</span><br><span class="line">client.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>());</span><br><span class="line">   client.<span class="title function_">end</span>();</span><br><span class="line">&#125;);</span><br><span class="line">client.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123; </span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;断开与服务器的连接&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//server</span></span><br><span class="line"><span class="keyword">var</span> net = <span class="built_in">require</span>(<span class="string">&#x27;net&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> server = net.<span class="title function_">createServer</span>(<span class="keyword">function</span>(<span class="params">connection</span>) &#123; </span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;client connected&#x27;</span>);</span><br><span class="line">   connection.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;客户端关闭连接&#x27;</span>);</span><br><span class="line">   &#125;);</span><br><span class="line">   connection.<span class="title function_">write</span>(<span class="string">&#x27;Hello World!\r\n&#x27;</span>);</span><br><span class="line">   connection.<span class="title function_">pipe</span>(connection);</span><br><span class="line">&#125;);</span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">8080</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123; </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;server is listening&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="dns"><a href="#dns" class="headerlink" title="dns"></a>dns</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> dns = <span class="built_in">require</span>(<span class="string">&#x27;dns&#x27;</span>);</span><br><span class="line"></span><br><span class="line">dns.<span class="title function_">lookup</span>(<span class="string">&#x27;www.qq.com&#x27;</span>, <span class="keyword">function</span> <span class="title function_">onLookup</span>(<span class="params">err, address, family</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ip 地址:&#x27;</span>, address);</span><br><span class="line">   dns.<span class="title function_">reverse</span>(address, <span class="keyword">function</span> (<span class="params">err, hostnames</span>) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;反向解析 &#x27;</span> + address + <span class="string">&#x27;: &#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(hostnames));</span><br><span class="line">&#125;);  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="📕file"><a href="#📕file" class="headerlink" title="📕file"></a>📕file</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//read</span></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line">fs.<span class="title function_">stat</span>(<span class="string">&#x27;E:/vue/nodejs/hello.js&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, stats</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(stats.<span class="title function_">isFile</span>());         <span class="comment">//true</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 异步读取</span></span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&#x27;input.txt&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">   <span class="keyword">if</span> (err) &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;异步读取: &quot;</span> + data.<span class="title function_">toString</span>());</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 同步读取</span></span><br><span class="line"><span class="keyword">var</span> data = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;input.txt&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;同步读取: &quot;</span> + data.<span class="title function_">toString</span>());</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;程序执行完毕。&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//write</span></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fs.<span class="title function_">writeFile</span>(<span class="string">&#x27;x.txt&#x27;</span>, <span class="string">&#x27;fs.writeFile 写入文件的内容&#x27;</span>,  <span class="keyword">function</span>(<span class="params">err</span>) &#123;</span><br><span class="line">   <span class="keyword">if</span> (err) &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;写入成功！&quot;</span>);</span><br><span class="line"></span><br><span class="line">   fs.<span class="title function_">readFile</span>(<span class="string">&#x27;x.txt&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;异步读取文件数据: &quot;</span> + data.<span class="title function_">toString</span>());</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="📗Get-Post"><a href="#📗Get-Post" class="headerlink" title="📗Get&#x2F;Post"></a>📗Get&#x2F;Post</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> util = <span class="built_in">require</span>(<span class="string">&#x27;util&#x27;</span>);</span><br><span class="line"> </span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="keyword">function</span>(<span class="params">req, res</span>)&#123;</span><br><span class="line">    res.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain; charset=utf-8&#x27;</span>&#125;);</span><br><span class="line">    res.<span class="title function_">end</span>(util.<span class="title function_">inspect</span>(url.<span class="title function_">parse</span>(req.<span class="property">url</span>, <span class="literal">true</span>)));</span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p><a class="link"   href="http://localhost:3000/?name=mqm&url=www" >http://localhost:3000/?name=mqm&amp;url=www<i class="fas fa-external-link-alt"></i></a><br>Url {<br>  protocol: null,<br>  slashes: null,<br>  auth: null,<br>  host: null,<br>  port: null,<br>  hostname: null,<br>  hash: null,<br>  search: ‘?name&#x3D;mqm&amp;url&#x3D;www’,<br>  query: [Object: null prototype] { name: ‘mqm’, url: ‘www’ },<br>  pathname: ‘&#x2F;‘,<br>  path: ‘&#x2F;?name&#x3D;mqm&amp;url&#x3D;www’,<br>  href: ‘&#x2F;?name&#x3D;mqm&amp;url&#x3D;www’<br>}</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//post</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> querystring = <span class="built_in">require</span>(<span class="string">&#x27;querystring&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> postHTML = </span><br><span class="line">  <span class="string">&#x27;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;title&gt;POST&lt;/title&gt;&lt;/head&gt;&#x27;</span> +</span><br><span class="line">  <span class="string">&#x27;&lt;body&gt;&#x27;</span> +</span><br><span class="line">  <span class="string">&#x27;&lt;form method=&quot;post&quot;&gt;&#x27;</span> +</span><br><span class="line">  <span class="string">&#x27;NAME: &lt;input name=&quot;name&quot;&gt;&lt;br&gt;&#x27;</span> +</span><br><span class="line">  <span class="string">&#x27;URL： &lt;input name=&quot;url&quot;&gt;&lt;br&gt;&#x27;</span> +</span><br><span class="line">  <span class="string">&#x27;&lt;input type=&quot;submit&quot;&gt;&#x27;</span> +</span><br><span class="line">  <span class="string">&#x27;&lt;/form&gt;&#x27;</span> +</span><br><span class="line">  <span class="string">&#x27;&lt;/body&gt;&lt;/html&gt;&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> body = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  req.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="keyword">function</span> (<span class="params">chunk</span>) &#123;</span><br><span class="line">    body += chunk;</span><br><span class="line">  &#125;);</span><br><span class="line">  req.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 解析参数</span></span><br><span class="line">    body = querystring.<span class="title function_">parse</span>(body);</span><br><span class="line">    <span class="comment">// 设置响应头部信息及编码</span></span><br><span class="line">    res.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html; charset=utf8&#x27;</span>&#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(body.<span class="property">name</span> &amp;&amp; body.<span class="property">url</span>) &#123; <span class="comment">// 输出提交的数据</span></span><br><span class="line">        res.<span class="title function_">write</span>(<span class="string">&quot;NAME：&quot;</span> + body.<span class="property">name</span>);</span><br><span class="line">        res.<span class="title function_">write</span>(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">        res.<span class="title function_">write</span>(<span class="string">&quot;URL：&quot;</span> + body.<span class="property">url</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  <span class="comment">// 输出表单</span></span><br><span class="line">        res.<span class="title function_">write</span>(postHTML);</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">end</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">3000</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="📙Web"><a href="#📙Web" class="headerlink" title="📙Web"></a>📙Web</h1><p>server</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">// 创建服务器</span></span><br><span class="line">http.<span class="title function_">createServer</span>( <span class="keyword">function</span> (<span class="params">request, response</span>) &#123;  </span><br><span class="line">   <span class="comment">// 解析请求，包括文件名</span></span><br><span class="line">   <span class="keyword">var</span> pathname = url.<span class="title function_">parse</span>(request.<span class="property">url</span>).<span class="property">pathname</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 输出请求的文件名</span></span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Request for &quot;</span> + pathname + <span class="string">&quot; received.&quot;</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 从文件系统中读取请求的文件内容</span></span><br><span class="line">   fs.<span class="title function_">readFile</span>(pathname.<span class="title function_">substr</span>(<span class="number">1</span>), <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">         <span class="comment">// HTTP 状态码: 404 : NOT FOUND</span></span><br><span class="line">         <span class="comment">// Content Type: text/html</span></span><br><span class="line">         response.<span class="title function_">writeHead</span>(<span class="number">404</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span>&#125;);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;             </span><br><span class="line">         <span class="comment">// HTTP 状态码: 200 : OK</span></span><br><span class="line">         <span class="comment">// Content Type: text/html</span></span><br><span class="line">         response.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span>&#125;);    </span><br><span class="line">         </span><br><span class="line">         <span class="comment">// 响应文件内容</span></span><br><span class="line">         response.<span class="title function_">write</span>(data.<span class="title function_">toString</span>());        </span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//  发送响应数据</span></span><br><span class="line">      response.<span class="title function_">end</span>();</span><br><span class="line">   &#125;);   </span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">188</span>);</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>client</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 用于请求的选项</span></span><br><span class="line"><span class="keyword">var</span> options = &#123;</span><br><span class="line">   <span class="attr">host</span>: <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">   <span class="attr">port</span>: <span class="string">&#x27;3276&#x27;</span>,</span><br><span class="line">   <span class="attr">path</span>: <span class="string">&#x27;/api/fileApi/GetByfid?fid=1&#x27;</span>  </span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 处理响应的回调函数</span></span><br><span class="line"><span class="keyword">var</span> callback = <span class="keyword">function</span>(<span class="params">response</span>)&#123;</span><br><span class="line">   <span class="comment">// 不断更新数据</span></span><br><span class="line">   <span class="keyword">var</span> body = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">   response.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">      body += data;</span><br><span class="line">   &#125;);</span><br><span class="line">   </span><br><span class="line">   response.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 数据接收完成</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(body);</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 向服务端发送请求</span></span><br><span class="line"><span class="keyword">var</span> req = http.<span class="title function_">request</span>(options, callback);</span><br><span class="line">req.<span class="title function_">end</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="📓express"><a href="#📓express" class="headerlink" title="📓express"></a>📓express</h1><p>router</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>();</span><br><span class="line"> </span><br><span class="line"><span class="comment">//  主页输出 &quot;Hello World&quot;</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;主页 GET 请求&quot;</span>);</span><br><span class="line">   res.<span class="title function_">send</span>(<span class="string">&#x27;Hello GET&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//  POST 请求</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;主页 POST 请求&quot;</span>);</span><br><span class="line">   res.<span class="title function_">send</span>(<span class="string">&#x27;Hello POST&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//  /del_user 页面响应</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/del_user&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;/del_user 响应 DELETE 请求&quot;</span>);</span><br><span class="line">   res.<span class="title function_">send</span>(<span class="string">&#x27;删除页面&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//  /list_user 页面 GET 请求</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/list_user&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;/list_user GET 请求&quot;</span>);</span><br><span class="line">   res.<span class="title function_">send</span>(<span class="string">&#x27;用户列表页面&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 对页面 abcd, abxcd, ab123cd, 等响应 GET 请求</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/ab*cd&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;   </span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;/ab*cd GET 请求&quot;</span>);</span><br><span class="line">   res.<span class="title function_">send</span>(<span class="string">&#x27;正则匹配&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> server = app.<span class="title function_">listen</span>(<span class="number">8081</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> host = server.<span class="title function_">address</span>().<span class="property">address</span></span><br><span class="line">  <span class="keyword">var</span> port = server.<span class="title function_">address</span>().<span class="property">port</span></span><br><span class="line"> </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;应用实例，访问地址为 http://%s:%s&quot;</span>, host, port)</span><br><span class="line"> </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>Request</strong> 对象 - request 对象表示 HTTP 请求，包含了请求查询字符串，参数，内容，HTTP 头部等属性。常见属性有：</p><p>req.app：当callback为外部文件时，用req.app访问express的实例<br>req.baseUrl：获取路由当前安装的URL路径<br>req.body &#x2F; req.cookies：获得「请求主体」&#x2F; Cookies<br>req.fresh &#x2F; req.stale：判断请求是否还「新鲜」<br>req.hostname &#x2F; req.ip：获取主机名和IP地址<br>req.originalUrl：获取原始请求URL<br>req.params：获取路由的parameters<br>req.path：获取请求路径<br>req.protocol：获取协议类型<br>req.query：获取URL的查询参数串<br>req.route：获取当前匹配的路由<br>req.subdomains：获取子域名<br>req.accepts()：检查可接受的请求的文档类型<br>req.acceptsCharsets &#x2F; req.acceptsEncodings &#x2F; req.acceptsLanguages：返回指定字符集的第一个可接受字符编码<br>req.get()：获取指定的HTTP请求头<br>req.is()：判断请求头Content-Type的MIME类型</p><p><strong>Response</strong> 对象 - response 对象表示 HTTP 响应，即在接收到请求时向客户端发送的 HTTP 响应数据。常见属性有：</p><p>res.app：同req.app一样<br>res.append()：追加指定HTTP头<br>res.set()在res.append()后将重置之前设置的头<br>res.cookie(name，value [，option])：设置Cookie<br>opition: domain &#x2F; expires &#x2F; httpOnly &#x2F; maxAge &#x2F; path &#x2F; secure &#x2F; signed<br>res.clearCookie()：清除Cookie<br>res.download()：传送指定路径的文件<br>res.get()：返回指定的HTTP头<br>res.json()：传送JSON响应<br>res.jsonp()：传送JSONP响应<br>res.location()：只设置响应的Location HTTP头，不设置状态码或者close response<br>res.redirect()：设置响应的Location HTTP头，并且设置状态码302<br>res.render(view,[locals],callback)：渲染一个view，同时向callback传递渲染后的字符串，如果在渲染过程中有错误发生next(err)将会被自动调用。callback将会被传入一个可能发生的错误以及渲染后的页面，这样就不会自动输出了。<br>res.send()：传送HTTP响应<br>res.sendFile(path [，options] [，fn])：传送指定路径的文件 -会自动根据文件extension设定Content-Type<br>res.set()：设置HTTP头，传入object可以一次设置多个头<br>res.status()：设置HTTP状态码<br>res.type()：设置Content-Type的MIME类型</p><p>static<br>app.use(‘&#x2F;public’, express.static(‘public’));</p><p>Get</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>();</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/public&#x27;</span>, express.<span class="title function_">static</span>(<span class="string">&#x27;public&#x27;</span>));</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/index.html&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">   res.<span class="title function_">sendFile</span>( __dirname + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;index.html&quot;</span> );</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/process_get&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// 输出 JSON 格式</span></span><br><span class="line">   <span class="keyword">var</span> response = &#123;</span><br><span class="line">       <span class="string">&quot;first_name&quot;</span>:req.<span class="property">query</span>.<span class="property">first_name</span>,</span><br><span class="line">       <span class="string">&quot;last_name&quot;</span>:req.<span class="property">query</span>.<span class="property">last_name</span></span><br><span class="line">   &#125;;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(response);</span><br><span class="line">   res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(response));</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> server = app.<span class="title function_">listen</span>(<span class="number">8081</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> host = server.<span class="title function_">address</span>().<span class="property">address</span></span><br><span class="line">  <span class="keyword">var</span> port = server.<span class="title function_">address</span>().<span class="property">port</span></span><br><span class="line"> </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;应用实例，访问地址为 http://%s:%s&quot;</span>, host, port)</span><br><span class="line"> </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>Post</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">var</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 创建 application/x-www-form-urlencoded 编码解析</span></span><br><span class="line"><span class="keyword">var</span> urlencodedParser = bodyParser.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;)</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/public&#x27;</span>, express.<span class="title function_">static</span>(<span class="string">&#x27;public&#x27;</span>));</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/index.html&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">   res.<span class="title function_">sendFile</span>( __dirname + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;index.html&quot;</span> );</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/process_post&#x27;</span>, urlencodedParser, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// 输出 JSON 格式</span></span><br><span class="line">   <span class="keyword">var</span> response = &#123;</span><br><span class="line">       <span class="string">&quot;first_name&quot;</span>:req.<span class="property">body</span>.<span class="property">first_name</span>,</span><br><span class="line">       <span class="string">&quot;last_name&quot;</span>:req.<span class="property">body</span>.<span class="property">last_name</span></span><br><span class="line">   &#125;;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(response);</span><br><span class="line">   res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(response));</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> server = app.<span class="title function_">listen</span>(<span class="number">8081</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> host = server.<span class="title function_">address</span>().<span class="property">address</span></span><br><span class="line">  <span class="keyword">var</span> port = server.<span class="title function_">address</span>().<span class="property">port</span></span><br><span class="line"> </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;应用实例，访问地址为 http://%s:%s&quot;</span>, host, port)</span><br><span class="line"> </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>📒RESTful API</p><p>data</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;b1&quot;</span> : &#123;</span><br><span class="line">       <span class="string">&quot;name&quot;</span> : <span class="string">&quot;h&quot;</span>,</span><br><span class="line">       <span class="string">&quot;con&quot;</span> : <span class="string">&quot;hihihi&quot;</span>,</span><br><span class="line">      </span><br><span class="line">       <span class="string">&quot;id&quot;</span>: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;b2&quot;</span> : &#123;</span><br><span class="line">       <span class="string">&quot;name&quot;</span> : <span class="string">&quot;b&quot;</span>,</span><br><span class="line">       <span class="string">&quot;con&quot;</span> : <span class="string">&quot;bobobo&quot;</span>,</span><br><span class="line"></span><br><span class="line">       <span class="string">&quot;id&quot;</span>: <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;b3&quot;</span> : &#123;</span><br><span class="line">       <span class="string">&quot;name&quot;</span> : <span class="string">&quot;c&quot;</span>,</span><br><span class="line">       <span class="string">&quot;con&quot;</span> : <span class="string">&quot;cccccc&quot;</span>,</span><br><span class="line"></span><br><span class="line">       <span class="string">&quot;id&quot;</span>: <span class="number">3</span></span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>list</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/list&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">   fs.<span class="title function_">readFile</span>( __dirname + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;books.json&quot;</span>, <span class="string">&#x27;utf8&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>( data );</span><br><span class="line">       res.<span class="title function_">end</span>( data );</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = app.<span class="title function_">listen</span>(<span class="number">8081</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> host = server.<span class="title function_">address</span>().<span class="property">address</span></span><br><span class="line">  <span class="keyword">var</span> port = server.<span class="title function_">address</span>().<span class="property">port</span></span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;访问地址为 http://%s:%s&quot;</span>, host, port)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>add</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加</span></span><br><span class="line"><span class="keyword">var</span> bk= &#123;</span><br><span class="line">   <span class="string">&quot;b4&quot;</span> : &#123;</span><br><span class="line">      <span class="string">&quot;name&quot;</span> : <span class="string">&quot;b4&quot;</span>,</span><br><span class="line">      <span class="string">&quot;com&quot;</span> : <span class="string">&quot;this is b4&quot;</span>,</span><br><span class="line">   </span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">4</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/add&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">   <span class="comment">// 读取已存在的数据</span></span><br><span class="line">   fs.<span class="title function_">readFile</span>( __dirname + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;Books.json&quot;</span>, <span class="string">&#x27;utf8&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">       data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>( data );</span><br><span class="line">       data[<span class="string">&quot;b4&quot;</span>] = bk[<span class="string">&quot;b4&quot;</span>];</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>( data );</span><br><span class="line">       res.<span class="title function_">end</span>( <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = app.<span class="title function_">listen</span>(<span class="number">8081</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> host = server.<span class="title function_">address</span>().<span class="property">address</span></span><br><span class="line">  <span class="keyword">var</span> port = server.<span class="title function_">address</span>().<span class="property">port</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;应用实例，访问地址为 http://%s:%s&quot;</span>, host, port)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>id</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/:id&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">   <span class="comment">// 首先我们读取已存在的用户</span></span><br><span class="line">   fs.<span class="title function_">readFile</span>( __dirname + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;Books.json&quot;</span>, <span class="string">&#x27;utf8&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">       data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>( data );</span><br><span class="line">       <span class="keyword">var</span> user = data[<span class="string">&quot;b&quot;</span> + req.<span class="property">params</span>.<span class="property">id</span>] </span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>( user );</span><br><span class="line">       res.<span class="title function_">end</span>( <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(user));</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = app.<span class="title function_">listen</span>(<span class="number">8081</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> host = server.<span class="title function_">address</span>().<span class="property">address</span></span><br><span class="line">  <span class="keyword">var</span> port = server.<span class="title function_">address</span>().<span class="property">port</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;应用实例，访问地址为 http://%s:%s&quot;</span>, host, port)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>delete</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> id = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/delete&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// First read existing users.</span></span><br><span class="line">   fs.<span class="title function_">readFile</span>( __dirname + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;Books.json&quot;</span>, <span class="string">&#x27;utf8&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">       data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>( data );</span><br><span class="line">       <span class="keyword">delete</span> data[<span class="string">&quot;b&quot;</span> + id];</span><br><span class="line">       </span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>( data );</span><br><span class="line">       res.<span class="title function_">end</span>( <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data));</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = app.<span class="title function_">listen</span>(<span class="number">8081</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> host = server.<span class="title function_">address</span>().<span class="property">address</span></span><br><span class="line">  <span class="keyword">var</span> port = server.<span class="title function_">address</span>().<span class="property">port</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot; http://%s:%s&quot;</span>, host, port)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="📚️child-process"><a href="#📚️child-process" class="headerlink" title="📚️child_process"></a>📚️child_process</h1><p>Node 提供了 child_process 模块来创建子进程，方法有：</p><p>exec - child_process.exec 使用子进程执行命令，缓存子进程的输出，并将子进程的输出以回调函数参数的形式返回。</p><p>spawn - child_process.spawn 使用指定的命令行参数创建新进程。</p><p>fork - child_process.fork 是 spawn()的特殊形式，用于在子进程中运行的模块，如 fork(‘.&#x2F;son.js’) 相当于 spawn(‘node’, [‘.&#x2F;son.js’]) 。与spawn方法不同的是，fork会在父进程与子进程之间，建立一个通信管道，用于进程之间的通信。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> child_process = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> workerProcess = child_process.<span class="title function_">exec</span>(<span class="string">&#x27;node hello.js &#x27;</span>+i, <span class="keyword">function</span> (<span class="params">error, stdout, stderr</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(error.<span class="property">stack</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Error code : &#x27;</span>+error.<span class="property">code</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Signal received: &#x27;</span>+error.<span class="property">signal</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;stdout: &#x27;</span> + stdout);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;stderr: &#x27;</span> + stderr);</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    workerProcess.<span class="title function_">on</span>(<span class="string">&#x27;exit&#x27;</span>, <span class="keyword">function</span> (<span class="params">code</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;子进程已退出，退出码 &#x27;</span>+code);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>spawn() 方法返回流 (stdout &amp; stderr)，在进程返回大量数据时使用。进程一旦开始执行时 spawn() 就开始接收响应。<br>child_process.fork 是 spawn() 方法的特殊形式。</p><h1 id="📔mogodb"><a href="#📔mogodb" class="headerlink" title="📔mogodb"></a>📔mogodb</h1><p>mongodb </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name mongodb -v /data/mongodb0:/data/db -p 27017:27017 -d mongo</span><br></pre></td></tr></table></figure><p>npm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mongodb</span><br></pre></td></tr></table></figure><p>进入 MongoDB 容器的 bash shell 命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mongodb  bash  </span><br><span class="line"><span class="comment">#mongosh --host 127.0.0.1 --port 27017</span></span><br></pre></td></tr></table></figure><p>记得在不再需要时停止和删除容器，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop mongodb </span><br><span class="line">docker <span class="built_in">rm</span> mongodb </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; show dbs</span><br><span class="line">&gt; show tables</span><br><span class="line">&gt; db.site.find()</span><br></pre></td></tr></table></figure><p>create</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">MongoClient</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// MongoDB连接URI</span></span><br><span class="line"><span class="keyword">const</span> uri = <span class="string">&#x27;mongodb://localhost:27017&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建MongoDB客户端</span></span><br><span class="line"><span class="keyword">const</span> client = <span class="keyword">new</span> <span class="title class_">MongoClient</span>(uri);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 连接到MongoDB</span></span><br><span class="line">    <span class="keyword">await</span> client.<span class="title function_">connect</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Connected to MongoDB&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建数据库</span></span><br><span class="line">    <span class="keyword">const</span> databaseName = <span class="string">&#x27;myDatabase&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> db = client.<span class="title function_">db</span>(databaseName);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Database &#x27;<span class="subst">$&#123;databaseName&#125;</span>&#x27; created`</span>);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error);</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="comment">// 关闭MongoDB连接</span></span><br><span class="line">    <span class="keyword">await</span> client.<span class="title function_">close</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Disconnected from MongoDB&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">main</span>().<span class="title function_">catch</span>(<span class="variable language_">console</span>.<span class="property">error</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>insert </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">MongoClient</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> uri = <span class="string">&#x27;mongodb://localhost:27017&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> client = <span class="keyword">new</span> <span class="title class_">MongoClient</span>(uri);</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> client.<span class="title function_">connect</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Connected to MongoDB&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> databaseName = <span class="string">&#x27;myDatabase&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> db = client.<span class="title function_">db</span>(databaseName);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Database &#x27;<span class="subst">$&#123;databaseName&#125;</span>&#x27; created`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入数据</span></span><br><span class="line">    <span class="keyword">const</span> collectionName = <span class="string">&#x27;myCollection&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> collection = db.<span class="title function_">collection</span>(collectionName);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入单个文档</span></span><br><span class="line">    <span class="keyword">const</span> insertResult = <span class="keyword">await</span> collection.<span class="title function_">insertOne</span>(&#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;m2&#x27;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">      <span class="attr">email</span>: <span class="string">&#x27;m@qq.com&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// console.log(&#x27;Inserted document:&#x27;, insertResult.ops[0]);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询数据</span></span><br><span class="line">    <span class="keyword">const</span> queryResult = <span class="keyword">await</span> collection.<span class="title function_">find</span>(&#123;&#125;).<span class="title function_">toArray</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Query result:&#x27;</span>, queryResult);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error);</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="keyword">await</span> client.<span class="title function_">close</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Disconnected from MongoDB&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">main</span>().<span class="title function_">catch</span>(<span class="variable language_">console</span>.<span class="property">error</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>update delete</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 更新数据</span></span><br><span class="line"><span class="keyword">const</span> filter = &#123; <span class="attr">name</span>: <span class="string">&#x27;m&#x27;</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> update = &#123; <span class="attr">$set</span>: &#123; <span class="attr">age</span>: <span class="number">15</span> &#125; &#125;;</span><br><span class="line"><span class="keyword">const</span> updateResult = <span class="keyword">await</span> collection.<span class="title function_">updateOne</span>(filter, update);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Update result:&#x27;</span>, updateResult.<span class="property">modifiedCount</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询数据并打印更新后的结果</span></span><br><span class="line"><span class="keyword">const</span> queryResult = <span class="keyword">await</span> collection.<span class="title function_">find</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;m&#x27;</span> &#125;).<span class="title function_">toArray</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Query result after update:&#x27;</span>, queryResult);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line"><span class="keyword">const</span> deleteResult = <span class="keyword">await</span> collection.<span class="title function_">deleteOne</span>(&#123; <span class="attr">name</span>: <span class="string">&#x27;m2&#x27;</span> &#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Delete result:&#x27;</span>, deleteResult.<span class="property">deletedCount</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>End</p><!-- https://www.runoob.com/docker/docker-tutorial.html --><!--  https://www.runoob.com/nodejs/nodejs-jxcore-packaging.html jx 打包--><!-- 宏光mini 5w 长安糯米 5.39w 本田飞度10w 帕萨特20w ==--><!-- https://blog.csdn.net/qq_48968230/article/details/130814245Node.jshttps://www.nodeapp.cn/net.htmlhttps://www.runoob.com/nodejs/nodejs-repl.htmlhttps://www.liaoxuefeng.com/wiki/1022910821149312/1023027697415616mongodbhttps://geek-docs.com/mongodb/mongodb-questions/65_mongodb_import_data_to_dockercontainers_mongodb.html-->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
            <tag> util </tag>
            
            <tag> file </tag>
            
            <tag> getpost </tag>
            
            <tag> web </tag>
            
            <tag> express </tag>
            
            <tag> child_process </tag>
            
            <tag> mogodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nodejs base</title>
      <link href="/2024/05/17/Nodejs-Base/"/>
      <url>/2024/05/17/Nodejs-Base/</url>
      
        <content type="html"><![CDATA[<p>  简单的说 Node.js 就是运行在服务端的 JavaScript。</p><p>  Node.js 是一个基于 Chrome JavaScript 运行时建立的一个平台。</p><p>  Node.js 是一个事件驱动 I&#x2F;O 服务端 JavaScript 环境，基于 Google 的 V8 引擎，V8 引擎执行 Javascript 的速度非常快，性能非常好。</p><h1 id="🛠Node-js安装"><a href="#🛠Node-js安装" class="headerlink" title="🛠Node.js安装"></a>🛠Node.js安装</h1><p>  Node.js安装在上一篇文章Debian Node.js HEXO 有讲到 </p><p>  截至目前最新的版本是20.12.2</p><p>  #查看版本<br>  node -v<br>  v20.12.2</p><p>  win下可以在官网下载安装<br>  <a class="link"   href="https://nodejs.org/en/download" >https://nodejs.org/en/download<i class="fas fa-external-link-alt"></i></a></p><h1 id="💬helloworld"><a href="#💬helloworld" class="headerlink" title="💬helloworld"></a>💬helloworld</h1><p>  hi.js</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello world node.js &quot;</span>) <span class="comment">// like javascript~ </span></span><br></pre></td></tr></table></figure><p>  node hi.js<br>  [20240504n11]</p><h1 id="👩‍🏫Node-js-创建第一个应用"><a href="#👩‍🏫Node-js-创建第一个应用" class="headerlink" title="👩‍🏫Node.js 创建第一个应用"></a>👩‍🏫Node.js 创建第一个应用</h1><h2 id="require-指令"><a href="#require-指令" class="headerlink" title="require 指令"></a>require 指令</h2>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="创建服务器-接收响应请求"><a href="#创建服务器-接收响应请求" class="headerlink" title="创建服务器&#x2F;接收响应请求"></a>创建服务器&#x2F;接收响应请求</h2>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"></span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="keyword">function</span> (<span class="params">request, response</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送 HTTP 头部 </span></span><br><span class="line">    <span class="comment">// HTTP 状态值: 200 : OK</span></span><br><span class="line">    <span class="comment">// 内容类型: text/plain</span></span><br><span class="line">    response.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送响应数据 &quot;Hello World&quot;</span></span><br><span class="line">    response.<span class="title function_">end</span>(<span class="string">&#x27;Hello World\n&#x27;</span>);</span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 终端打印如下信息</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Server running at http://127.0.0.1:1200/&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>  <!--  node 运行   [20240504n12.jpg]  --><h1 id="🚀npm使用"><a href="#🚀npm使用" class="headerlink" title="🚀npm使用"></a>🚀npm使用</h1><p>  npm 是包管理工具<br>  允许用户从NPM服务器下载别人编写的第三方包到本地使用。<br>  允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。<br>  允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。</p><p>  npm -v</p><p>  如果你安装的是旧版本的 npm，可以很容易得通过 npm 命令来升级，命令如下：</p><p>  $ sudo npm install npm -g<br>  &#x2F;usr&#x2F;local&#x2F;bin&#x2F;npm -&gt; &#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;npm&#x2F;bin&#x2F;npm-cli.js<br>  <a class="link"   href="mailto:&#110;&#112;&#x6d;&#64;&#x32;&#46;&#49;&#52;&#x2e;&#50;" >&#110;&#112;&#x6d;&#64;&#x32;&#46;&#49;&#52;&#x2e;&#50;<i class="fas fa-external-link-alt"></i></a> &#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;npm<br>  如果是 Window 系统使用以下命令即可：</p><p>  npm install npm -g<br>  使用淘宝镜像的命令：</p><p>  npm install -g cnpm –registry&#x3D;<a class="link"   href="https://registry.npmmirror.com/" >https://registry.npmmirror.com<i class="fas fa-external-link-alt"></i></a></p><h2 id="全局安装与本地安装"><a href="#全局安装与本地安装" class="headerlink" title="全局安装与本地安装"></a>全局安装与本地安装</h2><p>  npm 的包安装分为本地安装（local）、全局安装（global）两种，从敲的命令行来看，差别只是有没有-g而已，比如</p><p>  npm install express          # 本地安装<br>  npm install express -g   # 全局安装<br>  如果出现以下错误：</p><p>  npm err! Error: connect ECONNREFUSED 127.0.0.1:8087<br>  解决办法为：</p><p>  $ npm config set proxy null</p><h2 id="查看安装信息"><a href="#查看安装信息" class="headerlink" title="查看安装信息"></a>查看安装信息</h2><p>  npm list </p><p>  ── <a class="link"   href="mailto:&#x65;&#x78;&#x70;&#x72;&#x65;&#115;&#115;&#64;&#52;&#x2e;&#x31;&#x39;&#x2e;&#50;" >&#x65;&#x78;&#x70;&#x72;&#x65;&#115;&#115;&#64;&#52;&#x2e;&#x31;&#x39;&#x2e;&#50;<i class="fas fa-external-link-alt"></i></a></p><p>  npm list -g</p><p>  使用package.json<br>  -node_modules&#x2F;express&#x2F;package.json 内容：</p><p>  Package.json 属性说明</p><p>  name - 包名。</p><p>  version - 包的版本号。</p><p>  description - 包的描述。</p><p>  homepage - 包的官网 url 。</p><p>  author - 包的作者姓名。</p><p>  contributors - 包的其他贡献者姓名。</p><p>  dependencies - 依赖包列表。如果依赖包没有安装，npm 会自动将依赖包安装在 node_module 目录下。</p><p>  repository - 包代码存放的地方的类型，可以是 git 或 svn，git 可在 Github 上。</p><p>  main - main 字段指定了程序的主入口文件，require(‘moduleName’) 就会加载这个文件。这个字段的默认值是模块根目录下面的 index.js。</p><p>  keywords - 关键字</p><p>  卸载<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall express</span><br><span class="line">npm <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><br>  更新<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm update express</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>  创建</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><p>  This utility will walk you through creating a package.json file.<br>  It only covers the most common items, and tries to guess sensible defaults.</p><p>  See <code>npm help json</code> for definitive documentation on these fields<br>  and exactly what they do.</p><p>  Use <code>npm install &lt;pkg&gt; --save</code> afterwards to install a package and<br>  save it as a dependency in the package.json file.</p><p>  Press ^C at any time to quit.<br>  name: (node_modules) runoob                   # 模块名<br>  version: (1.0.0)<br>  description: Node.js 测试模块(<a class="link"   href="http://www.runoob.com/" >www.runoob.com<i class="fas fa-external-link-alt"></i></a>)  # 描述<br>  entry point: (index.js)<br>  test command: make test<br>  git repository: <a class="link"   href="https://github.com/runoob/runoob.git" >https://github.com/runoob/runoob.git<i class="fas fa-external-link-alt"></i></a>  # Github 地址<br>  keywords:<br>  author:<br>  license: (ISC)<br>  About to write to ……&#x2F;node_modules&#x2F;package.json:      # 生成地址</p><p>  {<br>    “name”: “runoob”,<br>    “version”: “1.0.0”,<br>    “description”: “Node.js 测试模块(<a class="link"   href="http://www.runoob.com/" >www.runoob.com<i class="fas fa-external-link-alt"></i></a>)”,<br>    ……<br>  }</p><p>  Is this ok? (yes) yes</p><p>  yes后会生成 package.json<br>  npm adduser<br>  Username: mcmohd<br>  Password:<br>  Email: (this IS public) <a class="link"   href="mailto:&#x6d;&#x63;&#109;&#x6f;&#x68;&#100;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;" >&#x6d;&#x63;&#109;&#x6f;&#x68;&#100;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d;<i class="fas fa-external-link-alt"></i></a></p><p>  发布<br>  npm publish</p><p>  就可以跟其他模块一样使用 npm 来安装</p><h1 id="🔭Node-js-回调函数"><a href="#🔭Node-js-回调函数" class="headerlink" title="🔭Node.js 回调函数"></a>🔭Node.js 回调函数</h1><p>  Node.js 异步编程的直接体现就是回调。</p><p>  异步编程依托于回调来实现，但不能说使用了回调后程序就异步化了。</p><p>  回调函数在完成任务后就会被调用，Node 使用了大量的回调函数，Node 所有 API 都支持回调函数。</p><p>  例如，我们可以一边读取文件，一边执行其他命令，在文件读取完成后，我们将文件内容作为回调函数的参数返回。这样在执行代码时就没有阻塞或等待文件 I&#x2F;O 操作。这就大大提高了 Node.js 的性能，可以处理大量的并发请求。</p><p>  回调函数一般作为函数的最后一个参数出现：</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo1</span>(<span class="params">name, age, callback</span>) &#123; &#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo2</span>(<span class="params">value, callback1, callback2</span>) &#123; &#125;</span><br></pre></td></tr></table></figure><h2 id="阻塞代码实例"><a href="#阻塞代码实例" class="headerlink" title="阻塞代码实例"></a>阻塞代码实例</h2><p>  创建一个文件 x.txt ，内容如下：</p><p>  hi hi hi </p><p>  创建 main.js 文件, 代码如下：<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> data = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;x.txt&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;程序执行结束!&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>  以上代码执行结果如下：</p><p>  node main.js</p><p>  hi hi hi </p><p>  程序执行结束!</p><h2 id="非阻塞代码实例"><a href="#非阻塞代码实例" class="headerlink" title="非阻塞代码实例"></a>非阻塞代码实例</h2><p>  创建一个文件 input.txt ，内容如下：</p><p>  菜鸟教程官网地址：<a class="link"   href="http://www.runoob.com/" >www.runoob.com<i class="fas fa-external-link-alt"></i></a><br>  创建 main.js 文件, 代码如下：<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&#x27;input.txt&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>());</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;程序执行结束!&quot;</span>);</span><br></pre></td></tr></table></figure><br>  以上代码执行结果如下：</p><p>  node main.js</p><p>  程序执行结束!<br>  hi hi hi<br>  以上两个实例我们了解了阻塞与非阻塞调用的不同。第一个实例在文件读取完后才执行程序。 第二个实例我们不需要等待文件读取完，这样就可以在读取文件时同时执行接下来的代码，大大提高了程序的性能。</p><p>  因此，阻塞是按顺序执行的，而非阻塞是不需要按顺序的，所以如果需要处理回调函数的参数，我们就需要写在回调函数内。</p><h1 id="🐞Node-js-事件循环"><a href="#🐞Node-js-事件循环" class="headerlink" title="🐞Node.js 事件循环"></a>🐞Node.js 事件循环</h1><p>  Node.js 是单进程单线程应用程序，但是因为 V8 引擎提供的异步执行回调接口，通过这些接口可以处理大量的并发，所以性能非常高。</p><p>  Node.js 几乎每一个 API 都是支持回调函数的。</p><p>  Node.js 基本上所有的事件机制都是用设计模式中观察者模式实现。</p><p>  Node.js 单线程类似进入一个while(true)的事件循环，直到没有事件观察者退出，每个异步事件都生成一个事件观察者，如果有事件发生就调用该回调函数.</p><h2 id="事件驱动程序"><a href="#事件驱动程序" class="headerlink" title="事件驱动程序"></a>事件驱动程序</h2><p>  Node.js 使用事件驱动模型，当web server接收到请求，就把它关闭然后进行处理，然后去服务下一个web请求。</p><p>  当这个请求完成，它被放回处理队列，当到达队列开头，这个结果被返回给用户。</p><p>  这个模型非常高效可扩展性非常强，因为 webserver 一直接受请求而不等待任何读写操作。（这也称之为非阻塞式IO或者事件驱动IO）</p><p>  在事件驱动模型中，会生成一个主循环来监听事件，当检测到事件时触发回调函数。</p><p>  EventEmitters -&gt; Events &#x3D;&gt;&lt;&#x3D; EventLoop  -&gt; Event  Handlers</p><p>  整个事件驱动的流程就是这么实现的，非常简洁。有点类似于观察者模式，事件相当于一个主题(Subject)，而所有注册到这个事件上的处理函数相当于观察者(Observer)。</p><p>  Node.js 有多个内置的事件，我们可以通过引入 events 模块，并通过实例化 EventEmitter 类来绑定和监听事件，如下实例：</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 events 模块</span></span><br><span class="line"><span class="keyword">var</span> events = <span class="built_in">require</span>(<span class="string">&#x27;events&#x27;</span>);</span><br><span class="line"><span class="comment">// 创建 eventEmitter 对象</span></span><br><span class="line"><span class="keyword">var</span> eventEmitter = <span class="keyword">new</span> events.<span class="title class_">EventEmitter</span>();</span><br></pre></td></tr></table></figure><p>  以下程序绑定事件处理程序：</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 绑定事件及事件的处理程序</span></span><br><span class="line">eventEmitter.<span class="title function_">on</span>(<span class="string">&#x27;eventName&#x27;</span>, eventHandler);</span><br></pre></td></tr></table></figure><p>  我们可以通过程序触发事件：</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 触发事件</span></span><br><span class="line">eventEmitter.<span class="title function_">emit</span>(<span class="string">&#x27;eventName&#x27;</span>);</span><br></pre></td></tr></table></figure><p>  main.js</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 events 模块</span></span><br><span class="line"><span class="keyword">var</span> events = <span class="built_in">require</span>(<span class="string">&#x27;events&#x27;</span>);</span><br><span class="line"><span class="comment">// 创建 eventEmitter 对象</span></span><br><span class="line"><span class="keyword">var</span> eventEmitter = <span class="keyword">new</span> events.<span class="title class_">EventEmitter</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建事件处理程序</span></span><br><span class="line"><span class="keyword">var</span> connectHandler = <span class="keyword">function</span> <span class="title function_">connected</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;连接成功。&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 触发 data_received 事件 </span></span><br><span class="line">  eventEmitter.<span class="title function_">emit</span>(<span class="string">&#x27;data_received&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定 connection 事件处理程序</span></span><br><span class="line">eventEmitter.<span class="title function_">on</span>(<span class="string">&#x27;connection&#x27;</span>, connectHandler);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用匿名函数绑定 data_received 事件</span></span><br><span class="line">eventEmitter.<span class="title function_">on</span>(<span class="string">&#x27;data_received&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;数据接收成功。&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 触发 connection 事件 </span></span><br><span class="line">eventEmitter.<span class="title function_">emit</span>(<span class="string">&#x27;connection&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;程序执行完毕。&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  connection -&gt;  connectHandler -&gt; data_received</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">node main.js</span><br><span class="line">连接成功。</span><br><span class="line">数据接收成功。</span><br><span class="line">程序执行完毕。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Node-应用程序是如何工作的？"><a href="#Node-应用程序是如何工作的？" class="headerlink" title="Node 应用程序是如何工作的？"></a>Node 应用程序是如何工作的？</h2><p>  在 Node 应用程序中，执行异步操作的函数将回调函数作为最后一个参数， 回调函数接收错误对象作为第一个参数。</p><p>  接下来让我们来重新看下前面的实例，创建一个 x.txt ,文件内容如下：</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&#x27;x.txt&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (err)&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">stack</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;程序执行完毕&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  执行 则异步读取x.txt内容<br>  把路劲改成 x1.txt读取错误则log 错误内容</p><h1 id="📔Node-js-EventEmitter"><a href="#📔Node-js-EventEmitter" class="headerlink" title="📔Node.js EventEmitter"></a>📔Node.js EventEmitter</h1><p>  Node.js 所有的异步 I&#x2F;O 操作在完成时都会发送一个事件到事件队列。</p><p>  Node.js 里面的许多对象都会分发事件：一个 net.Server 对象会在每次有新连接时触发一个事件， 一个 fs.readStream 对象会在文件被打开的时候触发一个事件。 所有这些产生事件的对象都是 events.EventEmitter 的实例。</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js 文件</span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">EventEmitter</span> = <span class="built_in">require</span>(<span class="string">&#x27;events&#x27;</span>).<span class="property">EventEmitter</span>; </span><br><span class="line"><span class="keyword">var</span> event = <span class="keyword">new</span> <span class="title class_">EventEmitter</span>(); </span><br><span class="line">event.<span class="title function_">on</span>(<span class="string">&#x27;some_event&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123; </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;some_event 事件触发&#x27;</span>); </span><br><span class="line">&#125;); </span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123; </span><br><span class="line">    event.<span class="title function_">emit</span>(<span class="string">&#x27;some_event&#x27;</span>); </span><br><span class="line">&#125;, <span class="number">10000</span>); </span><br></pre></td></tr></table></figure><p>  10s后执行 some_event 输出 事件触发</p><p>  EventEmitter 的每个事件由一个事件名和若干个参数组成，事件名是一个字符串，通常表达一定的语义。对于每个事件，EventEmitter 支持 若干个事件监听器。</p><p>  当事件触发时，注册到这个事件的事件监听器被依次调用，事件参数作为回调函数参数传递。</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js 文件</span></span><br><span class="line"><span class="keyword">var</span> events = <span class="built_in">require</span>(<span class="string">&#x27;events&#x27;</span>); </span><br><span class="line"><span class="keyword">var</span> emitter = <span class="keyword">new</span> events.<span class="title class_">EventEmitter</span>(); </span><br><span class="line">emitter.<span class="title function_">on</span>(<span class="string">&#x27;someEvent&#x27;</span>, <span class="keyword">function</span>(<span class="params">arg1, arg2</span>) &#123; </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;listener1&#x27;</span>, arg1, arg2); </span><br><span class="line">&#125;); </span><br><span class="line">emitter.<span class="title function_">on</span>(<span class="string">&#x27;someEvent&#x27;</span>, <span class="keyword">function</span>(<span class="params">arg1, arg2</span>) &#123; </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;listener2&#x27;</span>, arg1, arg2); </span><br><span class="line">&#125;); </span><br><span class="line">emitter.<span class="title function_">emit</span>(<span class="string">&#x27;someEvent&#x27;</span>, <span class="string">&#x27;arg1 参数&#x27;</span>, <span class="string">&#x27;arg2 参数&#x27;</span>); </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  emitter 为事件 someEvent 注册了两个事件监听器，然后触发了 someEvent 事件。</p><p>  运行结果中可以看到两个事件监听器回调函数被先后调用。 这就是EventEmitter最简单的用法。</p><p>  EventEmitter 提供了多个属性，如 on 和 emit。on 函数用于绑定事件函数，emit 属性用于触发一个事件。接下来我们来具体看下 EventEmitter 的属性介绍。</p><p>  .once 监听器最多只会触发一次，触发后立刻解除该监听器</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> events = <span class="built_in">require</span>(<span class="string">&#x27;events&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> eventEmitter = <span class="keyword">new</span> events.<span class="title class_">EventEmitter</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听器 #1</span></span><br><span class="line"><span class="keyword">var</span> listener1 = <span class="keyword">function</span> <span class="title function_">listener1</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;监听器 listener1 执行。&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听器 #2</span></span><br><span class="line"><span class="keyword">var</span> listener2 = <span class="keyword">function</span> <span class="title function_">listener2</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;监听器 listener2 执行。&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定 connection 事件，处理函数为 listener1 </span></span><br><span class="line">eventEmitter.<span class="title function_">addListener</span>(<span class="string">&#x27;connection&#x27;</span>, listener1);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定 connection 事件，处理函数为 listener2</span></span><br><span class="line">eventEmitter.<span class="title function_">on</span>(<span class="string">&#x27;connection&#x27;</span>, listener2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> eventListeners = eventEmitter.<span class="title function_">listenerCount</span>(<span class="string">&#x27;connection&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(eventListeners + <span class="string">&quot; 个监听器监听连接事件。&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理 connection 事件 </span></span><br><span class="line">eventEmitter.<span class="title function_">emit</span>(<span class="string">&#x27;connection&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除监绑定的 listener1 函数</span></span><br><span class="line">eventEmitter.<span class="title function_">removeListener</span>(<span class="string">&#x27;connection&#x27;</span>, listener1);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;listener1 不再受监听。&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 触发连接事件</span></span><br><span class="line">eventEmitter.<span class="title function_">emit</span>(<span class="string">&#x27;connection&#x27;</span>);</span><br><span class="line"></span><br><span class="line">eventListeners = eventEmitter.<span class="title function_">listenerCount</span>(<span class="string">&#x27;connection&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(eventListeners + <span class="string">&quot; 个监听器监听连接事件。&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定 connection 事件，处理函数为 listener2</span></span><br><span class="line">eventEmitter.<span class="title function_">on</span>(<span class="string">&#x27;connection&#x27;</span>, listener2);</span><br><span class="line"></span><br><span class="line">eventEmitter.<span class="title function_">emit</span>(<span class="string">&#x27;connection&#x27;</span>);</span><br><span class="line"></span><br><span class="line">eventListeners = eventEmitter.<span class="title function_">listenerCount</span>(<span class="string">&#x27;connection&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(eventListeners + <span class="string">&quot; 个监听器监听连接事件。&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;程序执行完毕。&quot;</span>);</span><br></pre></td></tr></table></figure><p>  error 事件<br>  EventEmitter 定义了一个特殊的事件 error，它包含了错误的语义，我们在遇到 异常的时候通常会触发 error 事件。</p><p>  当 error 被触发时，EventEmitter 规定如果没有响 应的监听器，Node.js 会把它当作异常，退出程序并输出错误信息。</p><p>  我们一般要为会触发 error 事件的对象设置监听器，避免遇到错误后整个程序崩溃。例如：</p><p>  继承 EventEmitter<br>  大多数时候我们不会直接使用 EventEmitter，而是在对象中继承它。包括 fs、net、 http 在内的，只要是支持事件响应的核心模块都是 EventEmitter 的子类。</p><p>  为什么要这样做呢？原因有两点：</p><p>  首先，具有某个实体功能的对象实现事件符合语义， 事件的监听和发生应该是一个对象的方法。</p><p>  其次 JavaScript 的对象机制是基于原型的，支持 部分多重继承，继承 EventEmitter 不会打乱对象原有的继承关系。</p><h1 id="⛏-Node-js-Buffer"><a href="#⛏-Node-js-Buffer" class="headerlink" title="⛏ Node.js Buffer"></a>⛏ Node.js Buffer</h1>  <!-- STRINGBUFFER --><p>  JavaScript 语言自身只有字符串数据类型，没有二进制数据类型。</p><p>  但在处理像TCP流或文件流时，必须使用到二进制数据。因此在 Node.js中，定义了一个 Buffer 类，该类用来创建一个专门存放二进制数据的缓存区。</p><p>  在 Node.js 中，Buffer 类是随 Node 内核一起发布的核心库。Buffer 库为 Node.js 带来了一种存储原始数据的方法，可以让 Node.js 处理二进制数据，每当需要在 Node.js 中处理I&#x2F;O操作中移动的数据时，就有可能使用 Buffer 库。原始数据存储在 Buffer 类的实例中。一个 Buffer 类似于一个整数数组，但它对应于 V8 堆内存之外的一块原始内存。</p><p>  Buffer 与字符编码</p><p>  Buffer 实例一般用于表示编码字符的序列，比如 UTF-8 、 UCS2 、 Base64 、或十六进制编码的数据。 通过使用显式的字符编码，就可以在 Buffer 实例与普通的 JavaScript 字符串之间进行相互转换。</p><p>  Buffer.from() 创建对象</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> buf = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;ascii&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出 72756e6f6f62</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf.<span class="title function_">toString</span>(<span class="string">&#x27;hex&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出 cnVub29i</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf.<span class="title function_">toString</span>(<span class="string">&#x27;base64&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//UTF-8</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf.<span class="title function_">toString</span>(<span class="string">&#x27;UTF-8&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//ascii </span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(buf.<span class="title function_">toString</span>(<span class="string">&#x27;ascii&#x27;</span>));</span><br><span class="line">    <span class="comment">//utf16le</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(buf.<span class="title function_">toString</span>(<span class="string">&#x27;utf16le&#x27;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//latin1</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(buf.<span class="title function_">toString</span>(<span class="string">&#x27;latin1&#x27;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  Node.js 目前支持的字符编码包括：</p><p>  ascii - 仅支持 7 位 ASCII 数据。如果设置去掉高位的话，这种编码是非常快的。</p><p>  utf8 - 多字节编码的 Unicode 字符。许多网页和其他文档格式都使用 UTF-8 。</p><p>  utf16le - 2 或 4 个字节，小字节序编码的 Unicode 字符。支持代理对（U+10000 至 U+10FFFF）。</p><p>  ucs2 - utf16le 的别名。</p><p>  base64 - Base64 编码。</p><p>  latin1 - 一种把 Buffer 编码成一字节编码的字符串的方式。</p><p>  binary - latin1 的别名。</p><p>  hex - 将每个字节编码为两个十六进制字符。</p><h2 id="创建-Buffer-类"><a href="#创建-Buffer-类" class="headerlink" title="创建 Buffer 类"></a>创建 Buffer 类</h2><p>  Buffer 提供了以下 API 来创建 Buffer 类：</p><p>  Buffer.alloc(size[, fill[, encoding]])： 返回一个指定大小的 Buffer 实例，如果没有设置 fill，则默认填满 0<br>  Buffer.allocUnsafe(size)： 返回一个指定大小的 Buffer 实例，但是它不会被初始化，所以它可能包含敏感的数据<br>  Buffer.allocUnsafeSlow(size)<br>  Buffer.from(array)： 返回一个被 array 的值初始化的新的 Buffer 实例（传入的 array 的元素只能是数字，不然就会自动被 0 覆盖）<br>  Buffer.from(arrayBuffer[, byteOffset[, length]])： 返回一个新建的与给定的 ArrayBuffer 共享同一内存的 Buffer。<br>  Buffer.from(buffer)： 复制传入的 Buffer 实例的数据，并返回一个新的 Buffer 实例<br>  Buffer.from(string[, encoding])： 返回一个被 string 的值初始化的新的 Buffer 实例</p><h2 id="写入缓冲区"><a href="#写入缓冲区" class="headerlink" title="写入缓冲区"></a>写入缓冲区</h2><p>  语法<br>  写入 Node 缓冲区的语法如下所示：</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">buf.<span class="title function_">write</span>(string[, offset[, length]][, encoding])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  参数<br>  参数描述如下：</p><p>  string - 写入缓冲区的字符串。</p><p>  offset - 缓冲区开始写入的索引值，默认为 0 。</p><p>  length - 写入的字节数，默认为 buffer.length</p><p>  encoding - 使用的编码。默认为 ‘utf8’ 。</p><p>  根据 encoding 的字符编码写入 string 到 buf 中的 offset 位置。 length 参数是写入的字节数。 如果 buf 没有足够的空间保存整个字符串，则只会写入 string 的一部分。 只部分解码的字符不会被写入。</p><p>  返回值<br>  返回实际写入的大小。如果 buffer 空间不足， 则只会写入部分字符串。</p><p>  实例<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">buf = <span class="title class_">Buffer</span>.<span class="title function_">alloc</span>(<span class="number">256</span>);</span><br><span class="line">len = buf.<span class="title function_">write</span>(<span class="string">&quot;123123&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;写入字节数 : &quot;</span>+  len);</span><br></pre></td></tr></table></figure></p><h2 id="从缓冲区读取数据"><a href="#从缓冲区读取数据" class="headerlink" title="从缓冲区读取数据"></a>从缓冲区读取数据</h2><p>  语法<br>  读取 Node 缓冲区数据的语法如下所示：<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buf.<span class="title function_">toString</span>([encoding[, start[, end]]])</span><br></pre></td></tr></table></figure></p><p>  参数<br>  参数描述如下：</p><p>  encoding - 使用的编码。默认为 ‘utf8’ 。</p><p>  start - 指定开始读取的索引位置，默认为 0。</p><p>  end - 结束位置，默认为缓冲区的末尾。</p><p>  返回值<br>  解码缓冲区数据并使用指定的编码返回字符串。</p><p>  实例<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">buf = <span class="title class_">Buffer</span>.<span class="title function_">alloc</span>(<span class="number">26</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="number">26</span> ; i++) &#123;</span><br><span class="line">  buf[i] = i + <span class="number">97</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( buf.<span class="title function_">toString</span>(<span class="string">&#x27;ascii&#x27;</span>));       <span class="comment">// 输出: abcdefghijklmnopqrstuvwxyz</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( buf.<span class="title function_">toString</span>(<span class="string">&#x27;ascii&#x27;</span>,<span class="number">0</span>,<span class="number">5</span>));   <span class="comment">//使用 &#x27;ascii&#x27; 编码, 并输出: abcde</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( buf.<span class="title function_">toString</span>(<span class="string">&#x27;utf8&#x27;</span>,<span class="number">0</span>,<span class="number">5</span>));    <span class="comment">// 使用 &#x27;utf8&#x27; 编码, 并输出: abcde</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( buf.<span class="title function_">toString</span>(<span class="literal">undefined</span>,<span class="number">0</span>,<span class="number">5</span>)); <span class="comment">// 使用默认的 &#x27;utf8&#x27; 编码, 并输出: abcde</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>  将 Buffer 转换为 JSON 对象<br>  语法<br>  将 Node Buffer 转换为 JSON 对象的函数语法格式如下：</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buf.<span class="title function_">toJSON</span>()</span><br></pre></td></tr></table></figure>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> buf = <span class="title class_">Buffer</span>.<span class="title function_">from</span>([<span class="number">0x1</span>, <span class="number">0x2</span>, <span class="number">0x3</span>, <span class="number">0x4</span>, <span class="number">0x5</span>]);</span><br><span class="line"><span class="keyword">const</span> json = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(buf);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出: &#123;&quot;type&quot;:&quot;Buffer&quot;,&quot;data&quot;:[1,2,3,4,5]&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(json);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> copy = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(json, <span class="function">(<span class="params">key, value</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> value &amp;&amp; value.<span class="property">type</span> === <span class="string">&#x27;Buffer&#x27;</span> ?</span><br><span class="line">    <span class="title class_">Buffer</span>.<span class="title function_">from</span>(value.<span class="property">data</span>) :</span><br><span class="line">    value;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出: &lt;Buffer 01 02 03 04 05&gt;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copy);</span><br></pre></td></tr></table></figure><h2 id="缓冲区合并"><a href="#缓冲区合并" class="headerlink" title="缓冲区合并"></a>缓冲区合并</h2><p>  语法<br>  Node 缓冲区合并的语法如下所示：</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Buffer</span>.<span class="title function_">concat</span>(list[, totalLength])</span><br></pre></td></tr></table></figure>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> buffer1 = <span class="title class_">Buffer</span>.<span class="title function_">from</span>((<span class="string">&#x27;123&#x27;</span>));</span><br><span class="line"><span class="keyword">var</span> buffer2 = <span class="title class_">Buffer</span>.<span class="title function_">from</span>((<span class="string">&#x27;test&#x27;</span>));</span><br><span class="line"><span class="keyword">var</span> buffer3 = <span class="title class_">Buffer</span>.<span class="title function_">concat</span>([buffer1,buffer2]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;buffer3 内容: &quot;</span> + buffer3.<span class="title function_">toString</span>());</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="缓冲区比较"><a href="#缓冲区比较" class="headerlink" title="缓冲区比较"></a>缓冲区比较</h2><p>  语法<br>  Node Buffer 比较的函数语法如下所示, 该方法在 Node.js v0.12.2 版本引入：<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">buf.<span class="title function_">compare</span>(otherBuffer);</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> buffer1 = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;ABC&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> buffer2 = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;ABCD&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> result = buffer1.<span class="title function_">compare</span>(buffer2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(result &lt; <span class="number">0</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(buffer1 + <span class="string">&quot; 在 &quot;</span> + buffer2 + <span class="string">&quot;之前&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(result == <span class="number">0</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(buffer1 + <span class="string">&quot; 与 &quot;</span> + buffer2 + <span class="string">&quot;相同&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(buffer1 + <span class="string">&quot; 在 &quot;</span> + buffer2 + <span class="string">&quot;之后&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="拷贝缓冲区"><a href="#拷贝缓冲区" class="headerlink" title="拷贝缓冲区"></a>拷贝缓冲区</h2><p>  语法<br>  Node 缓冲区拷贝语法如下所示：<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buf.<span class="title function_">copy</span>(targetBuffer[, targetStart[, sourceStart[, sourceEnd]]])</span><br></pre></td></tr></table></figure></p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> buf1 = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;abcdefghijkl&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> buf2 = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;123&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将 buf2 插入到 buf1 指定位置上</span></span><br><span class="line">buf2.<span class="title function_">copy</span>(buf1, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(buf1.<span class="title function_">toString</span>());</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="缓冲区裁剪"><a href="#缓冲区裁剪" class="headerlink" title="缓冲区裁剪"></a>缓冲区裁剪</h2><p>  Node 缓冲区裁剪语法如下所示：<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">buf.<span class="title function_">slice</span>([start[, end]])</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> buffer1 = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;TEST123TEST&#x27;</span>);</span><br><span class="line"><span class="comment">// 剪切缓冲区</span></span><br><span class="line"><span class="keyword">var</span> buffer2 = buffer1.<span class="title function_">slice</span>(<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;buffer2 content: &quot;</span> + buffer2.<span class="title function_">toString</span>());</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="缓冲区长度"><a href="#缓冲区长度" class="headerlink" title="缓冲区长度"></a>缓冲区长度</h2><p>  语法<br>  Node 缓冲区长度计算语法如下所示：<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buf.<span class="property">length</span>;</span><br></pre></td></tr></table></figure></p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> buffer = <span class="title class_">Buffer</span>.<span class="title function_">from</span>(<span class="string">&#x27;123123123&#x27;</span>);</span><br><span class="line"><span class="comment">//  缓冲区长度</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;buffer length: &quot;</span> + buffer.<span class="property">length</span>);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="👨‍💻Node-js-Stream"><a href="#👨‍💻Node-js-Stream" class="headerlink" title="👨‍💻Node.js Stream"></a>👨‍💻Node.js Stream</h1><p>  Node.js Stream(流)</p><p>  Stream 是一个抽象接口，Node 中有很多对象实现了这个接口。例如，对http 服务器发起请求的request 对象就是一个 Stream，还有stdout（标准输出）。</p><p>  Node.js，Stream 有四种流类型：</p><p>  Readable - 可读操作。</p><p>  Writable - 可写操作。</p><p>  Duplex - 可读可写操作.</p><p>  Transform - 操作被写入数据，然后读出结果。</p><p>  所有的 Stream 对象都是 EventEmitter 的实例。常用的事件有：</p><p>  data - 当有数据可读时触发。</p><p>  end - 没有更多的数据可读时触发。</p><p>  error - 在接收和写入过程中发生错误时触发。</p><p>  finish - 所有数据已被写入到底层系统时触发。</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> data = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建可读流</span></span><br><span class="line"><span class="keyword">var</span> readerStream = fs.<span class="title function_">createReadStream</span>(<span class="string">&#x27;x.txt&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置编码为 utf8。</span></span><br><span class="line">readerStream.<span class="title function_">setEncoding</span>(<span class="string">&#x27;UTF8&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理流事件 --&gt; data, end, and error</span></span><br><span class="line">readerStream.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="keyword">function</span>(<span class="params">chunk</span>) &#123;</span><br><span class="line">  data += chunk;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">readerStream.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">readerStream.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">stack</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;程序执行完毕&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  写入流<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> data = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dataw = <span class="string">&#x27;w123w&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> ws = fs.<span class="title function_">createWriteStream</span>(<span class="string">&#x27;x.txt&#x27;</span>);</span><br><span class="line">ws.<span class="title function_">write</span>(dataw);    </span><br><span class="line">ws.<span class="title function_">end</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据写入成功！&quot;</span>);  </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>  管道流<br>  管道提供了一个输出流到输入流的机制。通常我们用于从一个流中获取数据并将数据传递到另外一个流中。</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个可读流</span></span><br><span class="line"><span class="keyword">var</span> readerStream = fs.<span class="title function_">createReadStream</span>(<span class="string">&#x27;x.txt&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个可写流</span></span><br><span class="line"><span class="keyword">var</span> writerStream = fs.<span class="title function_">createWriteStream</span>(<span class="string">&#x27;output.txt&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 管道读写操作</span></span><br><span class="line"><span class="comment">// 读取 input.txt 文件内容，并将内容写入到 output.txt 文件中</span></span><br><span class="line">readerStream.<span class="title function_">pipe</span>(writerStream);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;程序执行完毕&quot;</span>);</span><br></pre></td></tr></table></figure><p>  链式流<br>  链式是通过连接输出流到另外一个流并创建多个流操作链的机制。链式流一般用于管道操作。</p><p>  接下来我们就是用管道和链式来压缩和解压文件。<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> zlib = <span class="built_in">require</span>(<span class="string">&#x27;zlib&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 压缩 input.txt 文件为 input.txt.gz</span></span><br><span class="line">fs.<span class="title function_">createReadStream</span>(<span class="string">&#x27;x.txt&#x27;</span>)</span><br><span class="line">  .<span class="title function_">pipe</span>(zlib.<span class="title function_">createGzip</span>())</span><br><span class="line">.<span class="title function_">pipe</span>(fs.<span class="title function_">createWriteStream</span>(<span class="string">&#x27;input.txt.gz&#x27;</span>));</span><br><span class="line">  </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;文件压缩完成。&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> zlib = <span class="built_in">require</span>(<span class="string">&#x27;zlib&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解压 input.txt.gz 文件为 input.txt</span></span><br><span class="line">fs.<span class="title function_">createReadStream</span>(<span class="string">&#x27;input.txt.gz&#x27;</span>)</span><br><span class="line">  .<span class="title function_">pipe</span>(zlib.<span class="title function_">createGunzip</span>())</span><br><span class="line">  .<span class="title function_">pipe</span>(fs.<span class="title function_">createWriteStream</span>(<span class="string">&#x27;input2.txt&#x27;</span>));</span><br><span class="line">  </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;文件解压完成。&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="📝Node-js-模块系统"><a href="#📝Node-js-模块系统" class="headerlink" title="📝Node.js 模块系统"></a>📝Node.js 模块系统</h1><p>  ~~</p><p>  为了让Node.js的文件可以相互调用，Node.js提供了一个简单的模块系统。</p><p>  模块是Node.js 应用程序的基本组成部分，文件和模块是一一对应的。换言之，一个 Node.js 文件就是一个模块，这个文件可能是JavaScript 代码、JSON 或者编译过的C&#x2F;C++ 扩展。</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hello.js</span></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">world1</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello world node.js &quot;</span>) </span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//test.js</span></span><br><span class="line"><span class="keyword">var</span> hello = <span class="built_in">require</span>(<span class="string">&#x27;./hello&#x27;</span>);</span><br><span class="line">hello.<span class="title function_">world1</span>();</span><br></pre></td></tr></table></figure><p>  hello.js 通过 exports 对象把 world1 作为模块的访问接口，在 main.js 中通过 require(‘.&#x2F;hello’) 加载这个模块，然后就可以直接访 问 hello.js 中 exports 对象的成员函数了。</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//hello.js </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Hello</span>(<span class="params"></span>) &#123; </span><br><span class="line">    <span class="keyword">var</span> name; </span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">setName</span> = <span class="keyword">function</span>(<span class="params">thyName</span>) &#123; </span><br><span class="line">        name = thyName; </span><br><span class="line">    &#125;; </span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">sayHello</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123; </span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Hello &#x27;</span> + name); </span><br><span class="line">    &#125;; </span><br><span class="line">&#125;; </span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Hello</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//test.js </span></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Hello</span> = <span class="built_in">require</span>(<span class="string">&#x27;./hello&#x27;</span>); </span><br><span class="line">hello = <span class="keyword">new</span> <span class="title class_">Hello</span>(); </span><br><span class="line">hello.<span class="title function_">setName</span>(<span class="string">&#x27;vvv&#x27;</span>); </span><br><span class="line">hello.<span class="title function_">sayHello</span>(); </span><br></pre></td></tr></table></figure><p>  模块接口的唯一变化是使用 module.exports &#x3D; Hello 代替了exports.world &#x3D; function(){}。 在外部引用该模块时，其接口对象就是要输出的 Hello 对象本身，而不是原先的 exports。</p><p>  exports 和 module.exports 的使用</p><p>  如果要对外暴露属性或方法，就用 exports 就行，要暴露对象(类似class，包含了很多属性和方法)，就用 module.exports。</p><p>  PS 模块加载<br>  从文件模块缓存中加载<br>  尽管原生模块与文件模块的优先级不同，但是都会优先从文件模块的缓存中加载已经存在的模块。</p><p>  从原生模块加载<br>  原生模块的优先级仅次于文件模块缓存的优先级。require 方法在解析文件名之后，优先检查模块是否在原生模块列表中。以http模块为例，尽管在目录下存在一个 http&#x2F;http.js&#x2F;http.node&#x2F;http.json 文件，require(“http”) 都不会从这些文件中加载，而是从原生模块中加载。</p><p>  原生模块也有一个缓存区，同样也是优先从缓存区加载。如果缓存区没有被加载过，则调用原生模块的加载方式进行加载和执行。</p><p>  从文件加载<br>  当文件模块缓存中不存在，而且不是原生模块的时候，Node.js 会解析 require 方法传入的参数，并从文件系统中加载实际的文件，加载过程中的包装和编译细节在前一节中已经介绍过，这里我们将详细描述查找文件模块的过程，其中，也有一些细节值得知晓。</p><p>  require方法接受以下几种参数的传递：</p><p>  http、fs、path等，原生模块。<br>  .&#x2F;mod或..&#x2F;mod，相对路径的文件模块。<br>  &#x2F;pathtomodule&#x2F;mod，绝对路径的文件模块。<br>  mod，非原生模块的文件模块。</p><h1 id="🔄nodejs-加载c"><a href="#🔄nodejs-加载c" class="headerlink" title="🔄nodejs 加载c++"></a>🔄nodejs 加载c++</h1><p>  在Node.js中加载C++代码，通常是通过编写一个C++的扩展模块，然后通过Node.js的require方法加载这个模块。这可以通过Node.js的原生扩展模块API实现，也可以通过N-API实现，这是一个为构建可以在多个Node.js版本上工作的原生扩展模块而设计的API。</p><p>  以下是一个简单的例子，展示如何创建一个C++扩展模块并在Node.js中使用它。</p><p>  首先，你需要安装一个名为node-gyp的工具，这是一个用来编译C++扩展模块的工具：</p><p>  npm install -g node-gyp<br>  然后，创建一个名为binding.gyp的文件，它描述了如何构建扩展模块：</p>  <figure class="highlight gyp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;targets&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;target_name&quot;</span>: <span class="string">&quot;addon&quot;</span>,</span><br><span class="line">      <span class="string">&quot;sources&quot;</span>: [ <span class="string">&quot;addon.cc&quot;</span> ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  接下来，创建一个C++源文件，例如addon.cc，它包含了你的C++代码：</p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;node.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> demo &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> v8::FunctionCallbackInfo;</span><br><span class="line"><span class="keyword">using</span> v8::Isolate;</span><br><span class="line"><span class="keyword">using</span> v8::Local;</span><br><span class="line"><span class="keyword">using</span> v8::NewStringType;</span><br><span class="line"><span class="keyword">using</span> v8::Object;</span><br><span class="line"><span class="keyword">using</span> v8::String;</span><br><span class="line"><span class="keyword">using</span> v8::Value;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Method</span><span class="params">(<span class="type">const</span> FunctionCallbackInfo&lt;Value&gt;&amp; args)</span> </span>&#123;</span><br><span class="line">  Isolate* isolate = args.<span class="built_in">GetIsolate</span>();</span><br><span class="line">  args.<span class="built_in">GetReturnValue</span>().<span class="built_in">Set</span>(String::<span class="built_in">NewFromUtf8</span>(isolate, <span class="string">&quot;world&quot;</span>, NewStringType::kNormal).<span class="built_in">ToLocalChecked</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Initialize</span><span class="params">(Local&lt;Object&gt; exports)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">NODE_SET_METHOD</span>(exports, <span class="string">&quot;hello&quot;</span>, Method);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NODE_MODULE</span>(NODE_GYP_MODULE_NAME, Initialize)</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace demo</span></span><br></pre></td></tr></table></figure><p>  确保在binding.gyp文件的同一目录下，运行以下命令来构建扩展模块：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node-gyp configure build</span><br></pre></td></tr></table></figure><br>  这将生成一个编译好的扩展模块，你可以在Node.js中通过require来加载并使用它：</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> addon = <span class="built_in">require</span>(<span class="string">&#x27;./build/Release/addon.node&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(addon.<span class="title function_">hello</span>());  <span class="comment">// 输出: world</span></span><br></pre></td></tr></table></figure><p>  在这个例子中，C++模块导出了一个名为hello的方法，当在Node.js中调用这个方法时，它返回字符串”world”。</p><h1 id="🙋‍♀️Node-js-函数"><a href="#🙋‍♀️Node-js-函数" class="headerlink" title="🙋‍♀️Node.js 函数"></a>🙋‍♀️Node.js 函数</h1><p>  在 JavaScript中，一个函数可以作为另一个函数的参数。我们可以先定义一个函数，然后传递，也可以在传递参数的地方直接定义函数。</p><p>  Node.js 中函数的使用与 JavaScript 类似，举例来说，你可以这样做：<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">say</span>(<span class="params">word</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(word);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">execute</span>(<span class="params">someFunction, value</span>) &#123;</span><br><span class="line">  <span class="title function_">someFunction</span>(value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">execute</span>(say, <span class="string">&quot;Hello&quot;</span>);</span><br></pre></td></tr></table></figure><br>  以上代码中，我们把 say 函数作为 execute 函数的第一个变量进行了传递。这里传递的不是 say 的返回值，而是 say 本身！</p><p>  这样一来， say 就变成了execute 中的本地变量 someFunction ，execute 可以通过调用 someFunction() （带括号的形式）来使用 say 函数。</p><p>  当然，因为 say 有一个变量， execute 在调用 someFunction 时可以传递这样一个变量。</p><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">execute</span>(<span class="params">someFunction, value</span>) &#123;</span><br><span class="line">  <span class="title function_">someFunction</span>(value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">execute</span>(<span class="keyword">function</span>(<span class="params">word</span>)&#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(word) &#125;, <span class="string">&quot;Hello&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  传递<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">onRequest</span>(<span class="params">request, response</span>) &#123;</span><br><span class="line">  response.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/plain&quot;</span>&#125;);</span><br><span class="line">  response.<span class="title function_">write</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">  response.<span class="title function_">end</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http.<span class="title function_">createServer</span>(onRequest).<span class="title function_">listen</span>(<span class="number">8888</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>  &#x3D;&#x3D;&gt;<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"></span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="keyword">function</span>(<span class="params">request, response</span>) &#123;</span><br><span class="line">  response.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/plain&quot;</span>&#125;);</span><br><span class="line">  response.<span class="title function_">write</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">  response.<span class="title function_">end</span>();</span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">8888</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="🙋‍♂Node-js-箭头函数"><a href="#🙋‍♂Node-js-箭头函数" class="headerlink" title="🙋‍♂Node.js 箭头函数"></a>🙋‍♂Node.js 箭头函数</h1><p>  在Node.js中，箭头函数是一种简洁写法，用于声明匿名函数。它们最常用于回调函数和事件监听器等场景。箭头函数的语法很简单，它的基本格式如下：<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(param1, param2, ...) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 函数体</span></span><br><span class="line">  <span class="keyword">return</span> something;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">const</span> doubled = numbers.<span class="title function_">map</span>(<span class="function"><span class="params">number</span> =&gt;</span> number * <span class="number">2</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(doubled); <span class="comment">// 输出: [2, 4, 6, 8, 10]</span></span><br></pre></td></tr></table></figure><br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hihihi.&#x27;</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure><br>  以上决策图看起来有点复杂，我认为有三点比较重要：</p><p>  箭头函数适合于无复杂逻辑或者无副作用的纯函数场景下，例如用在 map 、 reduce 、 filter 的回调函数定义中；<br>  不要在最外层定义箭头函数，因为在函数内部操作 this 会很容易污染全局作用域。最起码在箭头函数外部包一层普通函数，将 this 控制在可见的范围内；<br>  如开头所述，箭头函数最吸引人的地方是简洁。在有多层函数嵌套的情况下，箭头函数的简洁性并没有很大的提升，反而影响了函数的作用范围的识别度，这种情况不建议使用箭头函数。</p><h1 id="🧪Node-js-路由"><a href="#🧪Node-js-路由" class="headerlink" title="🧪Node.js 路由"></a>🧪Node.js 路由</h1><p>  在 Node.js 中，路由（Routing）是指确定如何响应对特定端点（URL 路径）的 HTTP 请求的过程。</p><p>  我们要为路由提供请求的 URL 和其他需要的 GET 及 POST 参数，随后路由需要根据这些数据来执行相应的代码。</p><p>  因此，我们需要查看 HTTP 请求，从中提取出请求的 URL 以及 GET&#x2F;POST 参数。这一功能应当属于路由还是服务器（甚至作为一个模块自身的功能）确实值得探讨，但这里暂定其为我们的HTTP服务器的功能。</p><p>  我们需要的所有数据都会包含在 request 对象中，该对象作为 onRequest() 回调函数的第一个参数传递。但是为了解析这些数据，我们需要额外的 Node.JS 模块，它们分别是 url 和 querystring 模块。</p><pre><code>                url.parse(string).query                                        |        url.parse(string).pathname      |                    |                   |                    |                   |                  ------ -------------------</code></pre><p>  <a class="link"   href="http://localhost:8888/start?foo=bar&hello=world" >http://localhost:8888/start?foo=bar&amp;hello=world<i class="fas fa-external-link-alt"></i></a><br>                                  —       —–<br>                                  |          |<br>                                  |          |<br>                querystring.parse(queryString)[“foo”]    |<br>                                              |<br>                            querystring.parse(queryString)[“hello”]<br>  现在我们来给 onRequest() 函数加上一些逻辑，用来找出浏览器请求的 URL 路径：</p><p>  router.js<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">route</span>(<span class="params">pathname</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;About to route a request for &quot;</span> + pathname);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">route</span> = route;</span><br></pre></td></tr></table></figure><br>  server.js<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">&quot;url&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">start</span>(<span class="params">route</span>) &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">onRequest</span>(<span class="params">request, response</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> pathname = url.<span class="title function_">parse</span>(request.<span class="property">url</span>).<span class="property">pathname</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Request for &quot;</span> + pathname + <span class="string">&quot; received.&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">route</span>(pathname);</span><br><span class="line"></span><br><span class="line">    response.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/plain&quot;</span>&#125;);</span><br><span class="line">    response.<span class="title function_">write</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    response.<span class="title function_">end</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  http.<span class="title function_">createServer</span>(onRequest).<span class="title function_">listen</span>(<span class="number">8888</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Server has started.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">exports</span>.<span class="property">start</span> = start;</span><br></pre></td></tr></table></figure></p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//test.js</span></span><br><span class="line"><span class="keyword">var</span> server = <span class="built_in">require</span>(<span class="string">&quot;./server&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> router = <span class="built_in">require</span>(<span class="string">&quot;./router&quot;</span>);</span><br><span class="line"></span><br><span class="line">server.<span class="title function_">start</span>(router.<span class="property">route</span>);</span><br></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node  test.js </span><br></pre></td></tr></table></figure><h1 id="🙏Node-js-全局对象"><a href="#🙏Node-js-全局对象" class="headerlink" title="🙏Node.js 全局对象"></a>🙏Node.js 全局对象</h1><p>  javaScript 中有一个特殊的对象，称为全局对象（Global Object），它及其所有属性都可以在程序的任何地方访问，即全局变量。</p><p>  在浏览器 JavaScript 中，通常 window 是全局对象， 而 Node.js 中的全局对象是 global，所有全局变量（除了 global 本身以外）都是 global 对象的属性。</p><p>  在 Node.js 我们可以直接访问到 global 的属性，而不需要在应用中包含它。</p><p>  全局对象与全局变量<br>  global 最根本的作用是作为全局变量的宿主。按照 ECMAScript 的定义，满足以下条 件的变量是全局变量：</p><p>  在最外层定义的变量；<br>  全局对象的属性；<br>  隐式定义的变量（未定义直接赋值的变量）。<br>  当你定义一个全局变量时，这个变量同时也会成为全局对象的属性，反之亦然。需要注 意的是，在 Node.js 中你不可能在最外层定义变量，因为所有用户代码都是属于当前模块的， 而模块本身不是最外层上下文。</p><p>  注意： 最好不要使用 var 定义变量以避免引入全局变量，因为全局变量会污染命名空间，提高代码的耦合风险。</p><h2 id="filename"><a href="#filename" class="headerlink" title="__filename"></a>__filename</h2><p>  __filename 表示当前正在执行的脚本的文件名。它将输出文件所在位置的绝对路径，且和命令行参数所指定的文件名不一定相同。 如果在模块中，返回的值是模块文件的路径。</p><h2 id="dirname"><a href="#dirname" class="headerlink" title="__dirname"></a>__dirname</h2><p>  __dirname 表示当前执行脚本所在的目录。</p><h2 id="setTimeout-cb-ms"><a href="#setTimeout-cb-ms" class="headerlink" title="setTimeout(cb, ms)"></a>setTimeout(cb, ms)</h2><p>  setTimeout(cb, ms) 全局函数在指定的毫秒(ms)数后执行指定函数(cb)。：setTimeout() 只执行一次指定函数。</p><h2 id="clearTimeout-t"><a href="#clearTimeout-t" class="headerlink" title="clearTimeout(t)"></a>clearTimeout(t)</h2><p>  clearTimeout( t ) 全局函数用于停止一个之前通过 setTimeout() 创建的定时器。 参数 t 是通过 setTimeout() 函数创建的定时器。</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">printHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 两秒后执行以上函数</span></span><br><span class="line"><span class="keyword">var</span> t = <span class="built_in">setTimeout</span>(printHello, <span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清除定时器</span></span><br><span class="line"><span class="built_in">clearTimeout</span>(t);</span><br></pre></td></tr></table></figure><p>  执行 main.js 文件，代码如下所示:</p><h2 id="setInterval-cb-ms"><a href="#setInterval-cb-ms" class="headerlink" title="setInterval(cb, ms)"></a>setInterval(cb, ms)</h2><p>  setInterval(cb, ms) 全局函数在指定的毫秒(ms)数后执行指定函数(cb)。</p><p>  返回一个代表定时器的句柄值。可以使用 clearInterval(t) 函数来清除定时器。</p><p>  setInterval() 方法会不停地调用函数，直到 clearInterval() 被调用或窗口被关闭。</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">printHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">&quot;Hello, World!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 两秒后执行以上函数</span></span><br><span class="line"><span class="built_in">setInterval</span>(printHello, <span class="number">2000</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="console"><a href="#console" class="headerlink" title="console"></a>console</h2><p>  console 用于提供控制台标准输出，它是由 Internet Explorer 的 JScript 引擎提供的调试工具，后来逐渐成为浏览器的实施标准。</p><pre><code>console.logconsole.infoconsole.errorconsole.warn</code></pre><p>  console.time(label)<br>  输出时间，表示计时开始。<br>  console.timeEnd(label)<br>  结束时间，表示计时结束。<br>    console.trace</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;程序开始执行：&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> counter = <span class="number">10</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;计数: %d&quot;</span>, counter);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">&quot;获取数据&quot;</span>);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">100000</span>; i++  )</span><br><span class="line">&#123;&#125;</span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">&#x27;获取数据&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;程序执行完毕。&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="process"><a href="#process" class="headerlink" title="process"></a>process</h2><p>  process 是一个全局变量，即 global 对象的属性。<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">process.<span class="title function_">on</span>(<span class="string">&#x27;exit&#x27;</span>, <span class="keyword">function</span>(<span class="params">code</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 以下代码永远不会执行</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;该代码不会执行&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;退出码为:&#x27;</span>, code);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;程序执行结束&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h2 id="Process-属性"><a href="#Process-属性" class="headerlink" title="Process 属性"></a>Process 属性</h2><p>  Process 提供了很多有用的属性，便于我们更好的控制系统的交互</p><pre><code>stdout</code></pre><p>  标准输出流<br>    stderr<br>  标准错误流。<br>    stdin<br>  标准输入流。<br>    argv<br>  argv 属性返回一个数组，由命令行执行脚本时的各个参数组成。它的第一个成员总是node，第二个成员是脚本文件名，其余成员是脚本文件的参数。<br>    execPath<br>  返回执行当前脚本的 Node 二进制文件的绝对路径。<br>    execArgv<br>  返回一个数组，成员是命令行下执行脚本时，在Node可执行文件与脚本文件之间的命令行参数。<br>    env<br>  返回一个对象，成员为当前 shell 的环境变量<br>    exitCode<br>  进程退出时的代码，如果进程优通过 process.exit() 退出，不需要指定退出码。<br>    version<br>  Node 的版本，比如v0.10.18<br>    config<br>  一个包含用来编译当前 node 执行文件的 javascript 配置选项的对象。它与运行 .&#x2F;configure 脚本生成的 “config.gypi” 文件相同。<br>    pid<br>  当前进程的进程号。<br>    title<br>  进程名，默认值为”node”，可以自定义该值。<br>    platform<br>  运行程序所在的平台系统 ‘darwin’, ‘freebsd’, ‘linux’, ‘sunos’ 或 ‘win32’<br>    arch<br>  当前 CPU 的架构：’arm’、’ia32’ 或者 ‘x64’。<br>    mainModule<br>  require.main 的备选方法。不同点，如果主模块在运行时改变，require.main可能会继续返回老的模块。可以认为，这两者引用了同一个模块。</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 输出到终端</span></span><br><span class="line">process.<span class="property">stdout</span>.<span class="title function_">write</span>(<span class="string">&quot;Hello World!&quot;</span> + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="comment">// 通过参数读取</span></span><br><span class="line">process.<span class="property">argv</span>.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">val, index, array</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(index + <span class="string">&#x27;: &#x27;</span> + val);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 获取执行路径</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(process.<span class="property">execPath</span>);</span><br><span class="line"><span class="comment">// 平台信息</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(process.<span class="property">platform</span>);</span><br><span class="line"><span class="comment">// 输出当前目录</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;当前目录: &#x27;</span> + process.<span class="title function_">cwd</span>());</span><br><span class="line"><span class="comment">// 输出当前版本</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;当前版本: &#x27;</span> + process.<span class="property">version</span>);</span><br><span class="line"><span class="comment">// 输出内存使用情况</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(process.<span class="title function_">memoryUsage</span>());</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🔭Node-js-MySQL"><a href="#🔭Node-js-MySQL" class="headerlink" title="🔭Node.js MySQL"></a>🔭Node.js MySQL</h1>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mysql</span><br></pre></td></tr></table></figure><p>  select </p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> mysql  = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);  </span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> connection = mysql.<span class="title function_">createConnection</span>(&#123;     </span><br><span class="line">  host     : <span class="string">&#x27;localhost&#x27;</span>,       </span><br><span class="line">  user     : <span class="string">&#x27;root&#x27;</span>,              </span><br><span class="line">  password : <span class="string">&#x27;123456789&#x27;</span>,   <span class="comment">//pwd  </span></span><br><span class="line">  <span class="attr">port</span>: <span class="string">&#x27;30306&#x27;</span>,                   </span><br><span class="line">  <span class="attr">database</span>: <span class="string">&#x27;IMDB&#x27;</span> </span><br><span class="line">&#125;); </span><br><span class="line"></span><br><span class="line">connection.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span>  sql = <span class="string">&#x27;SELECT * FROM IMConfig;&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sql);</span><br><span class="line"><span class="comment">//查</span></span><br><span class="line">connection.<span class="title function_">query</span>(sql,<span class="keyword">function</span> (<span class="params">err, result</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[SELECT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------SELECT----------------------------&#x27;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;------------------------------------------------------------\n\n&#x27;</span>);  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">connection.<span class="title function_">end</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ERROR-1045-28000-Access-denied-for-user-‘root‘-‘localhost‘-using-password-YES"><a href="#ERROR-1045-28000-Access-denied-for-user-‘root‘-‘localhost‘-using-password-YES" class="headerlink" title="ERROR 1045 (28000): Access denied for user ‘root‘@‘localhost‘ (using password: YES)"></a>ERROR 1045 (28000): Access denied for user ‘root‘@‘localhost‘ (using password: YES)</h2><p>  这边是通过docker安装的mysql，登录报错<br>  root@f4a3881e5f06:&#x2F;# mysql -uroot  -p<br>  Enter password: 123456<br>  ERROR 1045 (28000): Access denied for user ‘root‘@’localhost’ (using password: YES)</p><p>  如果常规的命令 mysql -uroot -p无法登录，使用命令尝试：</p><p>  mysql -u root -h 127.0.0.1 -p</p><h2 id="Error-ER-NOT-SUPPORTED-AUTH-MODE-Client-does-not-support-authentication-protocol-requested"><a href="#Error-ER-NOT-SUPPORTED-AUTH-MODE-Client-does-not-support-authentication-protocol-requested" class="headerlink" title="Error: ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested"></a>Error: ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested</h2><p>  mysql -u root -p<br>  ALTER USER ‘root‘@’%’ IDENTIFIED WITH mysql_native_password BY ‘123456789’;<br>  flush privileges;</p><p>  insert<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">connection.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span>  addSql = <span class="string">&#x27;INSERT INTO IMConfig(ConfigID,UserID,ConfigName,ConfigCreateTime,ConfigType,ConfigSn) VALUES(0,?,?,?,?,?)&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span>  addSqlParams = [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;11&#x27;</span>,<span class="string">&#x27;2023-01-01&#x27;</span>, <span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1&#x27;</span>];</span><br><span class="line"><span class="comment">//增</span></span><br><span class="line">connection.<span class="title function_">query</span>(addSql,addSqlParams,<span class="keyword">function</span> (<span class="params">err, result</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[INSERT ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">        &#125;        </span><br><span class="line"></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------INSERT----------------------------&#x27;</span>);</span><br><span class="line">      <span class="comment">//console.log(&#x27;INSERT ID:&#x27;,result.insertId);        </span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;INSERT ID:&#x27;</span>,result);        </span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">connection.<span class="title function_">end</span>();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>  ER_NO_SUCH_TABLE: Table ‘IMDB.IMCONFIG’ doesn’t exist<br>  中英文错误<br>  ER_WRONG_VALUE_COUNT_ON_ROW: Column count doesn’t match value count at row 1<br>  字段错误<br>  ER_TRUNCATED_WRONG_VALUE: Incorrect datetime value: ‘2023-01-01T16:00:00.000Z’ for column ‘ConfigCreateTime’ at row 1<br>  字段类型</p><p>  update<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//update </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">connection.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> modSql = <span class="string">&#x27;UPDATE IMConfig SET ConfigName = ?,ConfigType = ?,ConfigSn = ? WHERE ConfigId = ?&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> modSqlParams = [<span class="string">&#x27;lang&#x27;</span>, <span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="number">5</span>];</span><br><span class="line"><span class="comment">//改</span></span><br><span class="line">connection.<span class="title function_">query</span>(modSql,modSqlParams,<span class="keyword">function</span> (<span class="params">err, result</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[UPDATE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">  &#125;        </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------UPDATE----------------------------&#x27;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;UPDATE affectedRows&#x27;</span>,result.<span class="property">affectedRows</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">connection.<span class="title function_">end</span>();</span><br></pre></td></tr></table></figure><br>  delete<br>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">connection.<span class="title function_">connect</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> delSql = <span class="string">&#x27;DELETE FROM IMConfig where ConfigID=5&#x27;</span>;</span><br><span class="line"><span class="comment">//删</span></span><br><span class="line">connection.<span class="title function_">query</span>(delSql,<span class="keyword">function</span> (<span class="params">err, result</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;[DELETE ERROR] - &#x27;</span>,err.<span class="property">message</span>);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;        </span><br><span class="line"></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;--------------------------DELETE----------------------------&#x27;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;DELETE affectedRows&#x27;</span>,result.<span class="property">affectedRows</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-----------------------------------------------------------------\n\n&#x27;</span>);  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">connection.<span class="title function_">end</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h1 id="🧵Node-js-Socket"><a href="#🧵Node-js-Socket" class="headerlink" title="🧵Node.js Socket"></a>🧵Node.js Socket</h1><p>  socket client </p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sk</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> net = <span class="built_in">require</span>(<span class="string">&#x27;net&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> client = net.<span class="title function_">connect</span>(<span class="string">&#x27;6001&#x27;</span>, <span class="string">&#x27;xxxx&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;已经与服务器连接&#x27;</span>);</span><br><span class="line">    client.<span class="title function_">write</span>(<span class="string">&#x27;Yes\r\n&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">client.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>());</span><br><span class="line">    client.<span class="title function_">end</span>();<span class="comment">//one msg end</span></span><br><span class="line">&#125;);</span><br><span class="line">client.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;客户端连接中断&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> socket </tag>
            
            <tag> Node.js </tag>
            
            <tag> helloworld </tag>
            
            <tag> event </tag>
            
            <tag> buffer </tag>
            
            <tag> stream </tag>
            
            <tag> c++ </tag>
            
            <tag> router </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HarmonyOS Photos Column Swiper Grid</title>
      <link href="/2024/05/16/HarmonyOS-Photos/"/>
      <url>/2024/05/16/HarmonyOS-Photos/</url>
      
        <content type="html"><![CDATA[<p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240516.jpg"  ></p><h1 id="✨️index"><a href="#✨️index" class="headerlink" title="✨️index"></a>✨️index</h1><p>title swiper list(grid) </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> coms <span class="keyword">from</span> <span class="string">&#x27;../pages/com&#x27;</span></span><br><span class="line">@<span class="title class_">Entry</span></span><br><span class="line">@<span class="title class_">Component</span></span><br><span class="line">struct <span class="title class_">Index</span> &#123;</span><br><span class="line">  @<span class="title class_">State</span> <span class="attr">message</span>: string = <span class="string">&#x27;Hello World1&#x27;</span></span><br><span class="line"><span class="comment">//private  list = new con</span></span><br><span class="line">  <span class="title function_">build</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title class_">Column</span>() &#123;</span><br><span class="line">      <span class="comment">//标题</span></span><br><span class="line">      <span class="title class_">Row</span>()&#123;</span><br><span class="line">        <span class="title class_">Text</span>(<span class="string">&#x27;photos&#x27;</span>)</span><br><span class="line">        .<span class="title function_">fontSize</span>(<span class="string">&#x27;30fp&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        .<span class="title function_">fontWeight</span>(<span class="title class_">FontWeight</span>.<span class="property">Bold</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      .<span class="title function_">justifyContent</span>(<span class="title class_">FlexAlign</span>.<span class="property">Start</span>)</span><br><span class="line">      .<span class="title function_">width</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">      .<span class="title function_">padding</span>(<span class="string">&#x27;12vp&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">//轮播</span></span><br><span class="line">        <span class="title class_">Swiper</span>() &#123;</span><br><span class="line">        <span class="title class_">ForEach</span>(coms.<span class="property">SWIPERLIST</span>,<span class="function">(<span class="params">item:Resource,index?:<span class="built_in">Number</span></span>)=&gt;</span>&#123;</span><br><span class="line">          <span class="title class_">Row</span>() &#123;</span><br><span class="line">            <span class="title class_">Image</span>(item)</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">          .<span class="title function_">width</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">          .<span class="title function_">aspectRatio</span>(<span class="number">1.6</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">        .<span class="title function_">autoPlay</span>(<span class="literal">true</span>)</span><br><span class="line">        .<span class="title function_">loop</span>(<span class="literal">true</span>)</span><br><span class="line">        .<span class="title function_">indicator</span>(<span class="literal">true</span>)</span><br><span class="line">        .<span class="title function_">duration</span>(<span class="number">1000</span>)</span><br><span class="line">        .<span class="title function_">itemSpace</span>(<span class="number">10</span>)</span><br><span class="line">        .<span class="title function_">borderRadius</span>(<span class="string">&#x27;12vp&#x27;</span>)</span><br><span class="line">        .<span class="title function_">margin</span>(<span class="string">&#x27;12vp&#x27;</span>)</span><br><span class="line">        .<span class="title function_">onChange</span>(<span class="function">(<span class="params">index: number</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">      <span class="comment">//列表</span></span><br><span class="line">      <span class="title class_">Grid</span>()&#123;</span><br><span class="line"></span><br><span class="line">        <span class="title class_">GridItem</span>()&#123;</span><br><span class="line">          <span class="title class_">Column</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="title class_">Image</span>($r(<span class="string">&#x27;app.media.icon&#x27;</span>))</span><br><span class="line">              .<span class="title function_">borderRadius</span>(<span class="number">2</span>)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title class_">GridItem</span>()&#123;</span><br><span class="line">          <span class="title class_">Column</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="title class_">Image</span>($r(<span class="string">&#x27;app.media.icon&#x27;</span>))</span><br><span class="line">              .<span class="title function_">borderRadius</span>(<span class="number">2</span>)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title class_">GridItem</span>()&#123;</span><br><span class="line">          <span class="title class_">Column</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="title class_">Image</span>($r(<span class="string">&#x27;app.media.icon&#x27;</span>))</span><br><span class="line">              .<span class="title function_">borderRadius</span>(<span class="number">2</span>)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title class_">GridItem</span>()&#123;</span><br><span class="line">          <span class="title class_">Column</span>()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="title class_">Image</span>($r(<span class="string">&#x27;app.media.44&#x27;</span>))</span><br><span class="line">              .<span class="title function_">borderRadius</span>(<span class="number">2</span>)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      .<span class="title function_">columnsTemplate</span>(<span class="string">&#x27;1fr 1fr&#x27;</span>)</span><br><span class="line">      .<span class="title function_">columnsGap</span>(<span class="string">&#x27;12vp&#x27;</span>)</span><br><span class="line">      .<span class="title function_">rowsGap</span>(<span class="string">&#x27;12vp&#x27;</span>)</span><br><span class="line"></span><br><span class="line">      <span class="comment">//.padding(&#x27;2vp&#x27;)</span></span><br><span class="line">    &#125;</span><br><span class="line">    .<span class="title function_">width</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line">    .<span class="title function_">height</span>(<span class="string">&#x27;100%&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>核心Grid的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.<span class="title function_">columnsTemplate</span>(<span class="string">&#x27;1fr 1fr  &#x27;</span>)    </span><br></pre></td></tr></table></figure><p>轮播数据 合并data<br>data</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">com</span>&#123;</span><br><span class="line">  <span class="keyword">static</span>  <span class="attr">SWIPERLIST</span>:<span class="title class_">Array</span>&lt;<span class="title class_">Resource</span>&gt;=[</span><br><span class="line">    $r(<span class="string">&#x27;app.media.11&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.22&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.33&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.44&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.11&#x27;</span>)</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>列表数据 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">static</span>  <span class="variable constant_">IMGLIST</span> :<span class="title class_">Resource</span>[][]=[</span><br><span class="line"> [</span><br><span class="line">    $r(<span class="string">&#x27;app.media.11&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.22&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.33&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.44&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.11&#x27;</span>)],</span><br><span class="line"></span><br><span class="line">    [</span><br><span class="line">    $r(<span class="string">&#x27;app.media.22&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.11&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.33&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.44&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.11&#x27;</span>)]</span><br><span class="line"></span><br><span class="line">    ,</span><br><span class="line">    [</span><br><span class="line">    $r(<span class="string">&#x27;app.media.44&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.11&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.33&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.44&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.11&#x27;</span>)]</span><br><span class="line">    ,</span><br><span class="line">    [</span><br><span class="line">    $r(<span class="string">&#x27;app.media.33&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.11&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.33&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.44&#x27;</span>),</span><br><span class="line">    $r(<span class="string">&#x27;app.media.11&#x27;</span>)]</span><br><span class="line"></span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">     <span class="title class_">ForEach</span>(coms.<span class="property">IMGLIST</span>,<span class="function">(<span class="params">item:<span class="built_in">Array</span>&lt; Resource&gt;,index?:<span class="built_in">Number</span></span>)=&gt;</span>&#123;</span><br><span class="line">          <span class="title class_">GridItem</span>()&#123;</span><br><span class="line">            <span class="title class_">Column</span>()&#123;</span><br><span class="line"></span><br><span class="line">              <span class="title class_">Image</span>(item[<span class="number">0</span>])</span><br><span class="line">                .<span class="title function_">borderRadius</span>(<span class="number">2</span>)</span><br><span class="line">                .<span class="title function_">aspectRatio</span>(<span class="number">1.6</span>)</span><br><span class="line">                .<span class="title function_">borderRadius</span>(<span class="string">&#x27;5vp&#x27;</span>)</span><br><span class="line">                .<span class="title function_">margin</span>(<span class="string">&#x27;5vp&#x27;</span>)</span><br><span class="line">             <span class="comment">//   .padding(&#x27;5vp&#x27;)</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure><h1 id="🎈pagelist-p2"><a href="#🎈pagelist-p2" class="headerlink" title="🎈pagelist p2"></a>🎈pagelist p2</h1><p>router<br>P2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.<span class="title function_">onClick</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">         router.<span class="title function_">pushUrl</span>(&#123;</span><br><span class="line">           <span class="attr">url</span>:<span class="string">&#x27;pages/ListPage&#x27;</span>,</span><br><span class="line">             <span class="attr">params</span>:&#123;<span class="attr">ptitem</span>:item&#125;</span><br><span class="line">         &#125;)</span><br><span class="line">       &#125;)</span><br></pre></td></tr></table></figure><p>main_pages.js配置路由 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//ts Record</span></span><br><span class="line">  <span class="attr">item</span>:<span class="title class_">Array</span>&lt;<span class="title class_">Resource</span>&gt; =    (router.<span class="title function_">getParams</span>() <span class="keyword">as</span> <span class="title class_">Record</span>&lt;string, <span class="title class_">Array</span>&lt;<span class="title class_">Resource</span>&gt;&gt;).<span class="property">item</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"></span><br><span class="line">    <span class="title class_">Navigation</span>()&#123;</span><br><span class="line"></span><br><span class="line">      <span class="title class_">Grid</span>()</span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line">        <span class="title class_">ForEach</span>(<span class="variable language_">this</span>.<span class="property">item</span>,<span class="function">(<span class="params">item2: Resource,index?:<span class="built_in">Number</span></span>)=&gt;</span> &#123;</span><br><span class="line">          <span class="title class_">GridItem</span>() &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="title class_">Image</span>(item2)</span><br><span class="line"></span><br><span class="line">              .<span class="title function_">borderRadius</span>(<span class="number">2</span>)</span><br><span class="line">              .<span class="title function_">aspectRatio</span>(<span class="number">1.6</span>)</span><br><span class="line">              .<span class="title function_">borderRadius</span>(<span class="string">&#x27;5vp&#x27;</span>)</span><br><span class="line">              .<span class="title function_">margin</span>(<span class="string">&#x27;5vp&#x27;</span>)</span><br><span class="line">            <span class="comment">//   .padding(&#x27;5vp&#x27;)</span></span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">      .<span class="title function_">columnsTemplate</span>(<span class="string">&#x27;1fr 1fr 1fr&#x27;</span>)</span><br><span class="line">      .<span class="title function_">columnsGap</span>(<span class="number">5</span>)</span><br><span class="line">      .<span class="title function_">rowsGap</span>(<span class="number">5</span>)</span><br><span class="line">      .<span class="title function_">margin</span>(<span class="string">&#x27;12vp&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    .<span class="title function_">title</span>(<span class="string">&#x27;p2&#x27;</span>)</span><br><span class="line">    .<span class="title function_">hideNavBar</span>(<span class="literal">false</span>)</span><br><span class="line">    .<span class="title function_">titleMode</span>(<span class="title class_">NavigationTitleMode</span>.<span class="property">Mini</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> hmos里面的console.log<br> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//log</span></span><br><span class="line">  hilog.<span class="title function_">info</span>(<span class="number">0x0000</span>,<span class="string">&#x27;image&#x27;</span>,<span class="string">&#x27;abc&#x27;</span>);</span><br></pre></td></tr></table></figure></p><h1 id="🪄page-p3"><a href="#🪄page-p3" class="headerlink" title="🪄page p3"></a>🪄page p3</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">item3</span>:<span class="title class_">Resource</span> =    (router.<span class="title function_">getParams</span>() <span class="keyword">as</span> <span class="title class_">Record</span>&lt;string, <span class="title class_">Resource</span>&gt;).<span class="property">item3</span>;<span class="comment">// []</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">build</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="title class_">Navigation</span>()&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="title class_">Image</span>(<span class="variable language_">this</span>.<span class="property">item3</span>)</span><br><span class="line"></span><br><span class="line">        .<span class="title function_">borderRadius</span>(<span class="number">2</span>)</span><br><span class="line">        .<span class="title function_">aspectRatio</span>(<span class="number">1.6</span>)</span><br><span class="line">        .<span class="title function_">borderRadius</span>(<span class="string">&#x27;5vp&#x27;</span>)</span><br><span class="line">        .<span class="title function_">margin</span>(<span class="string">&#x27;5vp&#x27;</span>)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  .<span class="title function_">title</span>(<span class="string">&#x27;p3&#x27;</span>)</span><br><span class="line">  .<span class="title function_">hideNavBar</span>(<span class="literal">false</span>)</span><br><span class="line">  .<span class="title function_">titleMode</span>(<span class="title class_">NavigationTitleMode</span>.<span class="property">Mini</span>)</span><br></pre></td></tr></table></figure><p>备注<br> Image组件共有以下三种声明方式：<br>（1）string格式，通常用来加载网络图片，若部署在真实设备上，需要申请网络访问权限<br>     Image（”URL”）<br>（2）PixelMap格式，可以加载像素图，常用在图片编辑中<br>     Image（pixelMapObject）<br>（3）Resource格式，加载本地图片（推荐）<br>     Image($r(‘app.media.xxx’))不需要带后缀名 地址：src&#x2F;main&#x2F;resources&#x2F;base&#x2F;media<br>     Image($rawfile(xxx.png))需要后缀，地址：src&#x2F;main&#x2F;resources&#x2F;rawfile</p><p>end</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>.NET AES DES</title>
      <link href="/2024/05/15/NET-ASE-DES/"/>
      <url>/2024/05/15/NET-ASE-DES/</url>
      
        <content type="html"><![CDATA[<p>.NET AES DES 对称加密</p><h1 id="ASE-加密解密"><a href="#ASE-加密解密" class="headerlink" title="ASE 加密解密"></a>ASE 加密解密</h1><p>加密方法 (Encrypt):</p><p>创建一个 Aes 实例。<br>设置密钥 (Key) 和初始化向量 (IV)。<br>使用 CreateEncryptor 创建加密器。<br>通过 CryptoStream 和 StreamWriter 将明文写入内存流，然后转换为 Base64 字符串。</p><p>解密方法 (Decrypt):</p><p>同样创建一个 Aes 实例。<br>设置相同的密钥和初始化向量。<br>使用 CreateDecryptor 创建解密器。<br>通过 CryptoStream 和 StreamReader 从内存流读取密文并解密为明文。</p><p>注意事项<br>密钥长度：AES 支持 128, 192, 和 256 位密钥。本例使用 256 位（32 字节）。<br>初始化向量 (IV)：应确保加密和解密时使用相同的 IV。本例中使用了全零的 IV，在实际应用中建议使用随机 IV，并将其与密文一起存储。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">SymmetricEncryption</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 加密方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Encrypt</span>(<span class="params"><span class="built_in">string</span> plainText, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (Aes aesAlg = Aes.Create())</span><br><span class="line">        &#123;</span><br><span class="line">            aesAlg.Key = Encoding.UTF8.GetBytes(key);</span><br><span class="line">            aesAlg.IV = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">16</span>]; <span class="comment">// 初始化向量 (IV) 可以设为全零，也可以使用随机值</span></span><br><span class="line">            </span><br><span class="line">            ICryptoTransform encryptor = aesAlg.CreateEncryptor(aesAlg.Key, aesAlg.IV);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">using</span> (MemoryStream msEncrypt = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">using</span> (CryptoStream csEncrypt = <span class="keyword">new</span> CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))</span><br><span class="line">                <span class="keyword">using</span> (StreamWriter swEncrypt = <span class="keyword">new</span> StreamWriter(csEncrypt))</span><br><span class="line">                &#123;</span><br><span class="line">                    swEncrypt.Write(plainText);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> Convert.ToBase64String(msEncrypt.ToArray());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解密方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Decrypt</span>(<span class="params"><span class="built_in">string</span> cipherText, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (Aes aesAlg = Aes.Create())</span><br><span class="line">        &#123;</span><br><span class="line">            aesAlg.Key = Encoding.UTF8.GetBytes(key);</span><br><span class="line">            aesAlg.IV = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">16</span>]; <span class="comment">// 与加密时使用相同的 IV</span></span><br><span class="line">            </span><br><span class="line">            ICryptoTransform decryptor = aesAlg.CreateDecryptor(aesAlg.Key, aesAlg.IV);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">using</span> (MemoryStream msDecrypt = <span class="keyword">new</span> MemoryStream(Convert.FromBase64String(cipherText)))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">using</span> (CryptoStream csDecrypt = <span class="keyword">new</span> CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))</span><br><span class="line">                <span class="keyword">using</span> (StreamReader srDecrypt = <span class="keyword">new</span> StreamReader(csDecrypt))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> srDecrypt.ReadToEnd();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 示例主方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> original = <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line">        <span class="built_in">string</span> key = <span class="string">&quot;thisisaverysecretkey1234&quot;</span>; <span class="comment">// 32 字节的密钥</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加密</span></span><br><span class="line">        <span class="built_in">string</span> encrypted = Encrypt(original, key);</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Encrypted: <span class="subst">&#123;encrypted&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解密</span></span><br><span class="line">        <span class="built_in">string</span> decrypted = Decrypt(encrypted, key);</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Decrypted: <span class="subst">&#123;decrypted&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><!-- 调用<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//test 加密 </span></span><br><span class="line">  <span class="built_in">string</span> original = <span class="string">&quot;115&quot;</span>;</span><br><span class="line">  <span class="built_in">string</span> key = <span class="string">&quot;thisisaverysecretkey1234&quot;</span>; <span class="comment">// 32 字节的密钥</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 加密</span></span><br><span class="line">  <span class="built_in">string</span> encrypted =Asev1.Encrypt(original, key);</span><br><span class="line">  Console.WriteLine(<span class="string">$&quot;Encrypted: <span class="subst">&#123;encrypted&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 解密</span></span><br><span class="line">  <span class="built_in">string</span> decrypted = Asev1.Decrypt(encrypted, key);</span><br><span class="line">  Console.WriteLine(<span class="string">$&quot;Decrypted: <span class="subst">&#123;decrypted&#125;</span>&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  ``` --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Encrypted: NEVECFUqMdlFuAPGXm30FQ==</span><br><span class="line">Decrypted: <span class="number">115</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="meta"># DES 加密解密</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> ``` c<span class="meta">#</span></span><br><span class="line"> <span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">SymmetricEncryption</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 加密方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Encrypt</span>(<span class="params"><span class="built_in">string</span> plainText, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (DES desAlg = DES.Create())</span><br><span class="line">        &#123;</span><br><span class="line">            desAlg.Key = Encoding.UTF8.GetBytes(key);</span><br><span class="line">            desAlg.IV = Encoding.UTF8.GetBytes(key); <span class="comment">// 使用相同的 key 作为 IV，这仅用于示例，实际应用中应使用随机 IV</span></span><br><span class="line">            </span><br><span class="line">            ICryptoTransform encryptor = desAlg.CreateEncryptor(desAlg.Key, desAlg.IV);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">using</span> (MemoryStream msEncrypt = <span class="keyword">new</span> MemoryStream())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">using</span> (CryptoStream csEncrypt = <span class="keyword">new</span> CryptoStream(msEncrypt, encryptor, CryptoStreamMode.Write))</span><br><span class="line">                <span class="keyword">using</span> (StreamWriter swEncrypt = <span class="keyword">new</span> StreamWriter(csEncrypt))</span><br><span class="line">                &#123;</span><br><span class="line">                    swEncrypt.Write(plainText);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> Convert.ToBase64String(msEncrypt.ToArray());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解密方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Decrypt</span>(<span class="params"><span class="built_in">string</span> cipherText, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (DES desAlg = DES.Create())</span><br><span class="line">        &#123;</span><br><span class="line">            desAlg.Key = Encoding.UTF8.GetBytes(key);</span><br><span class="line">            desAlg.IV = Encoding.UTF8.GetBytes(key); <span class="comment">// 使用相同的 key 作为 IV</span></span><br><span class="line">            </span><br><span class="line">            ICryptoTransform decryptor = desAlg.CreateDecryptor(desAlg.Key, desAlg.IV);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">using</span> (MemoryStream msDecrypt = <span class="keyword">new</span> MemoryStream(Convert.FromBase64String(cipherText)))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">using</span> (CryptoStream csDecrypt = <span class="keyword">new</span> CryptoStream(msDecrypt, decryptor, CryptoStreamMode.Read))</span><br><span class="line">                <span class="keyword">using</span> (StreamReader srDecrypt = <span class="keyword">new</span> StreamReader(csDecrypt))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> srDecrypt.ReadToEnd();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 示例主方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> original = <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line">        <span class="built_in">string</span> key = <span class="string">&quot;abcdefgh&quot;</span>; <span class="comment">// 8 字节的密钥</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加密</span></span><br><span class="line">        <span class="built_in">string</span> encrypted = Encrypt(original, key);</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Encrypted: <span class="subst">&#123;encrypted&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解密</span></span><br><span class="line">        <span class="built_in">string</span> decrypted = Decrypt(encrypted, key);</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Decrypted: <span class="subst">&#123;decrypted&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加密方法 (Encrypt):</p><p>创建一个 DES 实例。<br>设置密钥 (Key) 和初始化向量 (IV)。这里为了简化使用相同的 key 作为 IV，但实际应用中应使用不同且随机的 IV。<br>使用 CreateEncryptor 创建加密器。<br>通过 CryptoStream 和 StreamWriter 将明文写入内存流，然后转换为 Base64 字符串。<br>解密方法 (Decrypt):</p><p>同样创建一个 DES 实例。<br>设置相同的密钥和初始化向量。<br>使用 CreateDecryptor 创建解密器。<br>通过 CryptoStream 和 StreamReader 从内存流读取密文并解密为明文。</p><p>主方法 (Main):<br>定义一个示例明文和密钥。</p><p>调用加密和解密方法，输出结果。<br>注意事项<br>密钥长度：DES 使用 56 位密钥（即 8 字节）。本例使用了 8 字节的字符串密钥。<br>初始化向量 (IV)：应确保加密和解密时使用相同的 IV。本例中为了简化示例，使用了与密钥相同的 IV，实际应用中应使用随机 IV，并将其与密文一起存储。<br>DES 安全性：DES 已被认为不再安全，建议使用更安全的加密算法如 AES。在实际应用中尽量避免使用 DES。</p><p>扩展 NodeJS版本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encrypt</span>(<span class="params">plainText, key</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> iv = <span class="title class_">Buffer</span>.<span class="title function_">alloc</span>(<span class="number">16</span>, <span class="number">0</span>); <span class="comment">// 初始化向量 (IV) 可以设为全零，也可以使用随机值</span></span><br><span class="line">    <span class="keyword">const</span> cipher = crypto.<span class="title function_">createCipheriv</span>(<span class="string">&#x27;aes-256-cbc&#x27;</span>, key, iv);</span><br><span class="line">    <span class="keyword">let</span> encrypted = cipher.<span class="title function_">update</span>(plainText, <span class="string">&#x27;utf8&#x27;</span>, <span class="string">&#x27;base64&#x27;</span>);</span><br><span class="line">    encrypted += cipher.<span class="title function_">final</span>(<span class="string">&#x27;base64&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> encrypted;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解密函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">decrypt</span>(<span class="params">cipherText, key</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> iv = <span class="title class_">Buffer</span>.<span class="title function_">alloc</span>(<span class="number">16</span>, <span class="number">0</span>); <span class="comment">// 与加密时使用相同的 IV</span></span><br><span class="line">    <span class="keyword">const</span> decipher = crypto.<span class="title function_">createDecipheriv</span>(<span class="string">&#x27;aes-256-cbc&#x27;</span>, key, iv);</span><br><span class="line">    <span class="keyword">let</span> decrypted = decipher.<span class="title function_">update</span>(cipherText, <span class="string">&#x27;base64&#x27;</span>, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">    decrypted += decipher.<span class="title function_">final</span>(<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> decrypted;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 要加密的明文</span></span><br><span class="line"><span class="keyword">const</span> plainText = <span class="string">&quot;115&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用密钥加密消息</span></span><br><span class="line"><span class="keyword">const</span> key = crypto.<span class="title function_">createHash</span>(<span class="string">&#x27;sha256&#x27;</span>).<span class="title function_">update</span>(<span class="string">&quot;thisisaverysecretkey1234&quot;</span>).<span class="title function_">digest</span>();</span><br><span class="line"><span class="keyword">const</span> encryptedText = <span class="title function_">encrypt</span>(plainText, key);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Encrypted Text:&#x27;</span>, encryptedText);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用密钥解密消息</span></span><br><span class="line"><span class="keyword">const</span> decryptedText = <span class="title function_">decrypt</span>(encryptedText, key);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Decrypted Text:&#x27;</span>, decryptedText);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AES </tag>
            
            <tag> DES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IOS POD</title>
      <link href="/2024/05/14/IOS-POD/"/>
      <url>/2024/05/14/IOS-POD/</url>
      
        <content type="html"><![CDATA[<p>IOS POD </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install cocoapod</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem install cocoapod</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gem install cocoapod</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo brew update </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby update </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rvm install 2.7</span><br></pre></td></tr></table></figure><p>cd xx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pod install</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IOD </tag>
            
            <tag> POD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET webp</title>
      <link href="/2024/05/10/NET-Webp/"/>
      <url>/2024/05/10/NET-Webp/</url>
      
        <content type="html"><![CDATA[<p>在C#中，可以使用Image类和Bitmap类来处理图像，并且可以借助Magick.NET库来将JPG图片转换为WEBP格式。</p><p>安装Magick.NET-Q8-AnyCPU NuGet包。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> ImageMagick;</span><br></pre></td></tr></table></figure><p>转换方法</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConvertJpgToWebP2</span>(<span class="params"><span class="built_in">string</span> inputFilePath, <span class="built_in">string</span> outputFilePath</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> image = <span class="keyword">new</span> MagickImage(inputFilePath))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 设置WEBP压缩质量，范围从0（最好的质量）到100（最快速压缩）</span></span><br><span class="line">        image.Quality = <span class="number">80</span>;</span><br><span class="line">        image.Format = MagickFormat.WebP;</span><br><span class="line">        image.Write(outputFilePath);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> jpgPath = <span class="string">&quot;E:\\net8test\\ConsoleApp1Test\\ConsoleApp1Test\\bin\\Debug\\net8.0\\55.jpg&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> webpPath = <span class="string">&quot;E:\\net8test\\ConsoleApp1Test\\ConsoleApp1Test\\bin\\Debug\\net8.0\\55.webp&quot;</span>;</span><br><span class="line">Ig ig = <span class="keyword">new</span> Ig();</span><br><span class="line">ig.ConvertJpgToWebP2(jpgPath, webpPath);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> webp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Categories Tags</title>
      <link href="/2024/05/09/Hexo-Categories-Tag/"/>
      <url>/2024/05/09/Hexo-Categories-Tag/</url>
      
        <content type="html"><![CDATA[<h1 id="配置categories"><a href="#配置categories" class="headerlink" title="配置categories"></a>配置categories</h1><h2 id="新建页面categories"><a href="#新建页面categories" class="headerlink" title="新建页面categories:"></a>新建页面categories:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure><p>执行命令后将新生成文件夹categories，并在该文件夹下生成index.md文件。</p><h2 id="编辑categories-index-md文件"><a href="#编辑categories-index-md文件" class="headerlink" title="编辑categories&#x2F;index.md文件:"></a>编辑categories&#x2F;index.md文件:</h2><p>vi {path}&#x2F;source&#x2F;categories&#x2F;index.md<br>编辑内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line"><span class="built_in">date</span>: 2017-10-25 22:00:00</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;categories&quot;</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="编辑主题配置文件themes-xx-config-yml"><a href="#编辑主题配置文件themes-xx-config-yml" class="headerlink" title="编辑主题配置文件themes&#x2F;xx&#x2F;_config.yml:"></a>编辑主题配置文件themes&#x2F;xx&#x2F;_config.yml:</h2><p>vi {path}&#x2F;themes&#x2F;xx&#x2F;_config.yml<br>将menu中的categories的注释去掉：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">     home: / || home</span><br><span class="line">     <span class="comment">#tags: /tags/ || tags</span></span><br><span class="line">     categories: /categories/ || th</span><br><span class="line">     archives: /archives/ || archive</span><br><span class="line">     <span class="comment">#about: /about/ || user</span></span><br><span class="line">     <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">     <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">     <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure><h2 id="编辑文章在Front-matter区域（即—分隔的区域）指定categories即可："><a href="#编辑文章在Front-matter区域（即—分隔的区域）指定categories即可：" class="headerlink" title="编辑文章在Front-matter区域（即—分隔的区域）指定categories即可："></a>编辑文章在Front-matter区域（即—分隔的区域）指定categories即可：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: <span class="built_in">test</span></span><br><span class="line"><span class="built_in">date</span>: 2017-01-01 00:00:00</span><br><span class="line">categories:</span><br><span class="line"> - 类别名称</span><br><span class="line">tags:</span><br><span class="line"> - 标签</span><br><span class="line">--- </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">categories/index.md</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line"><span class="built_in">date</span>: 2024-05-08 22:00:00</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;categories&quot;</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- [分类](/categories/)</span><br><span class="line"></span><br><span class="line">- [分类-技术](/categories/技术/)</span><br><span class="line">- [分类-生活](/categories/生活/)  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分类具有顺序性和层次性，而标签没有顺序和层次。</p><h1 id="配置tags"><a href="#配置tags" class="headerlink" title="配置tags"></a>配置tags</h1><h2 id="新建页面tags"><a href="#新建页面tags" class="headerlink" title="新建页面tags:"></a>新建页面tags:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure><h2 id="编辑tags-index-md文件"><a href="#编辑tags-index-md文件" class="headerlink" title="编辑tags&#x2F;index.md文件:"></a>编辑tags&#x2F;index.md文件:</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;% if (site.tags.length)&#123; %&gt;</span><br><span class="line">  <span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;widget&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;widget-title&quot;</span>&gt;</span>标签云<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;widget-content&quot;</span>&gt;</span></span><br><span class="line">        &lt;% site.tags.forEach(function(tag)&#123; %&gt;</span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%= url_for(tag.path) %&gt;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;font-size: &lt;%= tag.length %&gt;px;&quot;</span>&gt;</span>&lt;%= tag.name %&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &lt;% &#125;) %&gt;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>vi {path}&#x2F;source&#x2F;tags&#x2F;index.md<br>编辑内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line"><span class="built_in">date</span>: 2017-10-25 22:05:00</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;tags&quot;</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="编辑主题配置文件themes-xx-config-yml-1"><a href="#编辑主题配置文件themes-xx-config-yml-1" class="headerlink" title="编辑主题配置文件themes&#x2F;xx&#x2F;_config.yml:"></a>编辑主题配置文件themes&#x2F;xx&#x2F;_config.yml:</h2><p>vi {path}&#x2F;themes&#x2F;next&#x2F;_config.yml<br>将menu中的tags的注释去掉：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">     home: / || home</span><br><span class="line">     tags: /tags/ || tags</span><br><span class="line">     categories: /categories/ || th</span><br><span class="line">     archives: /archives/ || archive</span><br><span class="line">     <span class="comment">#about: /about/ || user</span></span><br><span class="line">     <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">     <span class="comment">#sitemap: /sitemap.xml || sitemap  </span></span><br><span class="line">     <span class="comment">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure><p>文章指定tags的写法与categories一致，在Front-matter区域指定即可，写法可参考以上。</p><h1 id="配置about"><a href="#配置about" class="headerlink" title="配置about"></a>配置about</h1><h2 id="新建页面about"><a href="#新建页面about" class="headerlink" title="新建页面about:"></a>新建页面about:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;about&quot;</span></span><br></pre></td></tr></table></figure><h2 id="编辑about-index-md文件，内容可根据个人编写；"><a href="#编辑about-index-md文件，内容可根据个人编写；" class="headerlink" title="编辑about&#x2F;index.md文件，内容可根据个人编写；"></a>编辑about&#x2F;index.md文件，内容可根据个人编写；</h2><p>vi {path}&#x2F;source&#x2F;about&#x2F;index.md</p><h2 id="编辑主题配置文件themes-xx-config-yml-2"><a href="#编辑主题配置文件themes-xx-config-yml-2" class="headerlink" title="编辑主题配置文件themes&#x2F;xx&#x2F;_config.yml:"></a>编辑主题配置文件themes&#x2F;xx&#x2F;_config.yml:</h2><p>vi {path}&#x2F;themes&#x2F;xx&#x2F;_config.yml<br>将menu中的about的注释去掉：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">     home: / || home</span><br><span class="line">     tags: /tags/ || tags</span><br><span class="line">     categories: /categories/ || th</span><br><span class="line">     archives: /archives/ || archive</span><br><span class="line">     about: /about/ || user</span><br><span class="line">     <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">     <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">     <span class="comment">#commonweal: /404/ || heartbeat</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Web uvpv busuanzi</title>
      <link href="/2024/05/08/Web-busuanzi/"/>
      <url>/2024/05/08/Web-busuanzi/</url>
      
        <content type="html"><![CDATA[<h1 id="WEB-UVPV-busuanzi-不蒜子"><a href="#WEB-UVPV-busuanzi-不蒜子" class="headerlink" title="WEB UVPV busuanzi 不蒜子"></a>WEB UVPV busuanzi 不蒜子</h1><p>不蒜子是一款用于静态网站的访问计数工具，可以方便地在网页上显示访问次数。与其他统计工具如百度统计和谷歌分析不同的是，不蒜子直接将访问次数显示在网页上，而不需要用户跳转到外部平台查看。</p><h1 id="不蒜子的计数原理："><a href="#不蒜子的计数原理：" class="headerlink" title="不蒜子的计数原理："></a>不蒜子的计数原理：</h1><p>通过在网页中引入JavaScript脚本，将当前页面的URL或某种唯一标识注册到不蒜子的服务器上，服务器保存着URL与对应的访问计数值。当页面被访问时，通过JavaScript更新服务器上的计数值，并在页面初始化时加载并显示计数值。</p><h1 id="如何使用？"><a href="#如何使用？" class="headerlink" title="如何使用？"></a>如何使用？</h1><p>在网页需要引用计数功能的地方先引入不蒜子的js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 引入不蒜子计数 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>为了美观，我们再引入旋转花瓣加载特效”fa fa-spinner fa-spin”<br>总访问量计数算法：pv方式，单个用户连续点击n篇文章，记录n次访问量。<br>总访客数计数算法：uv方式，单个用户连续点击n篇文章，只记录1次访客数。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line">        浏览量：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-spinner fa-spin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>👀 | 访客数：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-spinner fa-spin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>👦</span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注：美化及其他嵌入的改动，其实只要内层的span就可以，然后用css美化或者做嵌入</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>npm audit</title>
      <link href="/2024/05/08/Nodejs-npm-audit/"/>
      <url>/2024/05/08/Nodejs-npm-audit/</url>
      
        <content type="html"><![CDATA[<p>11 packages are looking for funding<br>  run <code>npm fund</code> for details</p><p>6 vulnerabilities (4 high, 2 critical)</p><p>To address issues that do not require attention, run:<br>  npm audit fix</p><p>To address all issues, run:<br>  npm audit fix –force</p><p>Run <code>npm audit</code> for details.</p><p>————————————————</p><p>这个报错信息的意思是：</p><p>依赖包已经是最新的，npm检查了xx个包，花了x秒钟。<br>有x个包正在寻求资金支持，运行npm fund来查看详情，也可以选择捐赠一些钱给这些包的开发者。<br>有x个中等程度的安全漏洞，运行npm audit fix –force来修复所有的问题，包括一些可能导致破坏性变化的问题。<br>运行npm audit来查看更多的细节，包括每个漏洞的类型，来源，影响等。</p><p>解决方法</p><p>有时候并不想修复这些安全漏洞，因为它们可能会影响我们的项目的正常运行，或者我们只是想快速地初始化一个项目，不想被这些报错信息打扰,可以使用一个简单的命令来关闭npm的audit检查：<br>npm set audit false<br>这样就可以保证npm的audit不会影响初始化项目，但是这个解决办法并不建议使用在实际生产中，因为它会让我们忽略一些可能存在的安全风险。<br>同样的，可以将值设为true来打开npm audit检查，这样可以看到npm的报错信息，也可以选择修复它们：<br>npm set audit true<br>这个操作将对全局生效，也就是说，它会影响我们所有的项目，不管是新的还是旧的。</p><p>修复~但不是破坏性修复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm audit fix </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET native AOT</title>
      <link href="/2024/05/08/NET-AOT-native/"/>
      <url>/2024/05/08/NET-AOT-native/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>.NET8对于性能的优化是方方面面的，所以AOT预编译机器码也是不例外的。本篇来看下对于AOT的优化。</p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>首先要明确一个概念，.NET里面的AOT它是原生的。什么意思呢？也就是说通过ILC编译器(AOT编译器，编译出来的代码是各个平台上可以直接运行的二进制代码。比如MacOS的二进制，Linux二进制等等。所以称之为原生。</p><p>C#源码被ILC编译之后，生成了一个完全原生态代码的可执行文件。在执行的时候不需要JIT来编译任何东西，因为JIT已经在ILC里面被充分利用过了。实际上AOT里面也没有包含JIT。那么它如何优化呢？只能是在ILC里面调用JIT的时候了。所以它这个优化依然依靠JIT。.NET8里面优化AOT的一个典型的例子，就是ASP.NET应用程序在使用AOT的时候表现不错，同时也降低了总成本。</p><h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><p>启用AOT </p><h1 id="打包指令"><a href="#打包指令" class="headerlink" title="打包指令"></a>打包指令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet publish DemoAot.csproj -o pub\ -c Release -r win-x64</span><br></pre></td></tr></table></figure><h1 id="linux下"><a href="#linux下" class="headerlink" title="linux下"></a>linux下</h1><p>先安装SDK<br>安装后 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet --list-sdks</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet publish DemoAot.csproj -o <span class="variable">$PWD</span>/pub -c Release -r linux-x64</span><br></pre></td></tr></table></figure><h1 id="macos下"><a href="#macos下" class="headerlink" title="macos下"></a>macos下</h1><p>安装SDK后 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet --list-sdks</span><br></pre></td></tr></table></figure><pre><code class="bash">dotnet publish DemoAot.csproj -o $PWD/pub -c Release -r osx-x64</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> linux </tag>
            
            <tag> AOT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian nginx https</title>
      <link href="/2024/05/07/Debian-Nginx/"/>
      <url>/2024/05/07/Debian-Nginx/</url>
      
        <content type="html"><![CDATA[<p>debian安装 nginx<br>在Debian系统上安装Nginx，你可以按照以下步骤操作：</p><p>sudo: command not found</p><p>apt-get install sudo</p><p>首先，更新你的包索引：   </p><p>sudo apt update<br>接下来，安装Nginx：</p><p>sudo apt install nginx</p><p>安装完成后，启动Nginx服务：</p><p>sudo systemctl start nginx<br>（可选）设置Nginx开机自启动：</p><p>sudo systemctl enable nginx<br>你可以通过运行以下命令来检查Nginx的状态：</p><p>sudo systemctl status nginx<br>现在，你可以在Web浏览器中输入你服务器的IP地址或域名来访问默认的Nginx欢迎页面。如果你是在本地安装的Nginx，你可以通过访问 <a class="link"   href="http://localhost/" >http://localhost<i class="fas fa-external-link-alt"></i></a> 来查看这个页面。</p><p>如果你需要配置Nginx，你可以编辑 &#x2F;etc&#x2F;nginx&#x2F;nginx.conf 文件或者在 &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F; 目录下创建或编辑配置文件，并使用 sudo ln -s &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;your-config &#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F; 命令来启用它。</p><p>sudo whereis nginx<br>Nginx 默认安装位置<br>配置文件所在目录 &#x2F;etc&#x2F;</p><p>nginx配置<br> 检测Nginx配置文件是否正确<br> nginx -t</p><p>重载Nginx配置<br>nginx -s reload</p><p> 自定义Nginx站点配置文件存放目录<br>&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;</p><p>nginx网站目录<br>&#x2F;var&#x2F;www&#x2F;</p><p>域名证书</p><p>阿里云证书<br>免费证书<br><a class="link"   href="https://help.aliyun.com/zh/ssl-certificate/user-guide/overview-of-free-certificates-overview-of-free-certificates" >https://help.aliyun.com/zh/ssl-certificate/user-guide/overview-of-free-certificates-overview-of-free-certificates<i class="fas fa-external-link-alt"></i></a><br><a class="link"   href="https://yundun.console.aliyun.com/?p=cas#/certExtend/free/cn-hangzhou" >https://yundun.console.aliyun.com/?p=cas#/certExtend/free/cn-hangzhou<i class="fas fa-external-link-alt"></i></a></p><p>服务器类型<br>Nginx<br>Tomcat<br>Apache<br>ls<br>JKS<br>其他</p><p>根证书下载<br>证书格式<br>pem&#x2F;key<br>pfx<br>crt&#x2F;key<br>pfx<br>jks<br>pem&#x2F;key<br>crt&#x2F;cer</p><p>Nginx部署<br><a class="link"   href="https://help.aliyun.com/zh/ssl-certificate/user-guide/install-ssl-certificates-on-nginx-servers-or-tengine-servers" >https://help.aliyun.com/zh/ssl-certificate/user-guide/install-ssl-certificates-on-nginx-servers-or-tengine-servers<i class="fas fa-external-link-alt"></i></a>?</p><p> ls &#x2F;root&#x2F;cerf&#x2F;<a class="link"   href="http://www.dtso.net.pem/" >www.dtso.net.pem<i class="fas fa-external-link-alt"></i></a></p><p>nginx -s reload  #重新载入配置文件。<br>说明<br>报错the “ssl” parameter requires ngx_http_ssl_module：您需要重新编译Nginx并在编译安装的时候加上–with-http_ssl_module配置。</p><p>报错”&#x2F;cert&#x2F;3970497_demo.aliyundoc.com.pem”:BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen(‘&#x2F;cert&#x2F;3970497_demo.aliyundoc.com.pem’,’r’) error:2006D080:BIO routines:BIO_new_file:no such file)：您需要去掉证书相对路径最前面的&#x2F;。例如，您需要去掉&#x2F;cert&#x2F;cert-file-name.pem最前面的&#x2F;，使用正确的相对路径cert&#x2F;cert-file-name.pem。</p><p>nginx -s reload</p><p>域名443安全组 防火墙开启~ 443 443 443</p><p>.conf 示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">server &#123;  </span><br><span class="line">       listen       443 ssl http2;  </span><br><span class="line">       listen       [::]:443 ssl http2;  </span><br><span class="line">       server_name  www.x.com;  </span><br><span class="line"> </span><br><span class="line">       ssl_certificate      /root/cerf/www.x.com.pem;  </span><br><span class="line">       ssl_certificate_key  /root/cerf/www.x.com.key;  </span><br><span class="line"> </span><br><span class="line">       ssl_protocols TLSv1.2 TLSv1.3;  </span><br><span class="line">       ssl_ciphers HIGH:!aNULL:!MD5;  </span><br><span class="line"> </span><br><span class="line">       ssl_prefer_server_ciphers on;  </span><br><span class="line"> </span><br><span class="line">       <span class="comment"># HSTS (optional)  </span></span><br><span class="line">       add_header Strict-Transport-Security <span class="string">&quot;max-age=31536000; includeSubDomains; preload&quot;</span>;  </span><br><span class="line"> </span><br><span class="line">       <span class="comment"># SSL session cache (optional)  </span></span><br><span class="line">       ssl_session_cache    shared:SSL:10m;  </span><br><span class="line">       ssl_session_timeout  10m;  </span><br><span class="line"> </span><br><span class="line">       <span class="comment"># SSL stapling (optional, if you use OCSP)  </span></span><br><span class="line">       <span class="comment"># ssl_stapling on;  </span></span><br><span class="line">       <span class="comment"># ssl_stapling_verify on;  </span></span><br><span class="line"> </span><br><span class="line">       <span class="comment"># DH param is dependent on certificate size  </span></span><br><span class="line">       <span class="comment">#ssl_dhparam /path/to/dhparam.pem;  </span></span><br><span class="line"> </span><br><span class="line">       location / &#123;  </span><br><span class="line">           root   /usr/share/nginx/html;  </span><br><span class="line">           index  index.html index.htm;  </span><br><span class="line">       &#125;  </span><br><span class="line"> </span><br><span class="line">       <span class="comment"># other locations...  </span></span><br><span class="line"> </span><br><span class="line">       <span class="comment"># Redirect non-https to https  </span></span><br><span class="line">       <span class="comment"># server &#123;  </span></span><br><span class="line">       <span class="comment">#     listen 80;  </span></span><br><span class="line">       <span class="comment">#     server_name your.domain.com;  </span></span><br><span class="line">       <span class="comment">#     return 301 https://$host$request_uri;  </span></span><br><span class="line">       <span class="comment"># &#125;  </span></span><br><span class="line"> </span><br><span class="line">       <span class="comment"># Error handling  </span></span><br><span class="line">       error_page   500 502 503 504  /50x.html;  </span><br><span class="line">       location = /50x.html &#123;  </span><br><span class="line">           root   /usr/share/nginx/html;  </span><br><span class="line">       &#125;  </span><br><span class="line">   &#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><!--159-TCP: 443TCP: 80TCP:1234TCP:123TCP:8090TCP:50501TCP:6379TCP:8080TCP:8880TCP: 30306TCP: 27145TCP:3389TCP: 22TCP:4000117-1123123451234123600260011111188882280443--><p>网络测试</p><p><a class="link"   href="https://boce.aliyun.com/detect/dns" >https://boce.aliyun.com/detect/dns<i class="fas fa-external-link-alt"></i></a></p><ul><li></li></ul><h1 id="debian-卸载-nginx"><a href="#debian-卸载-nginx" class="headerlink" title="debian 卸载 nginx"></a>debian 卸载 nginx</h1><p>在Debian系统中，要卸载nginx，你可以使用apt-get命令。以下是具体步骤：</p><p>首先，你需要知道nginx是否是通过apt安装的。你可以使用以下命令查看已安装的nginx包：</p><p>dpkg -l | grep nginx<br>如果nginx是通过apt安装的，你可以使用apt-get命令来卸载它：</p><p>sudo apt-get remove nginx nginx-common<br>这将会卸载nginx及其配置文件。</p><p>为了清除所有nginx的配置文件和依赖，你可以执行：</p><p>sudo apt-get purge nginx nginx-common<br>最后，你可以运行以下命令来清除无用的包和依赖：</p><p>sudo apt-get autoremove<br>确保在执行这些步骤之前，你已经停止了nginx服务：</p><p>sudo systemctl stop nginx<br>如果nginx是通过其他方式安装的，比如编译安装，那么你需要手动删除nginx或者按照其安装方式来卸载。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>.NET获取内存</title>
      <link href="/2024/05/06/NET-Memory/"/>
      <url>/2024/05/06/NET-Memory/</url>
      
        <content type="html"><![CDATA[<p>在.NET 控制台应用程序中，你可以使用System.Diagnostics命名空间下的Process类来获取当前进程的内存使用情况。以下是一个简单的示例代码，展示如何获取并显示当前进程的内存使用量：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DisplayProcessMemory</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 获取当前进程</span></span><br><span class="line">            Process currentProcess = Process.GetCurrentProcess();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 使用需要的内存量</span></span><br><span class="line">            <span class="built_in">long</span> workingSet64 = currentProcess.WorkingSet64;</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 显示内存使用量</span></span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;当前进程占用内存: <span class="subst">&#123;workingSet64&#125;</span> 字节&quot;</span>);</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 单位转换为兆字节</span></span><br><span class="line">            <span class="built_in">double</span> memoryInMB = workingSet64 / <span class="number">1024.0</span> / <span class="number">1024.0</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;当前进程占用内存: <span class="subst">&#123;memoryInMB.ToString(<span class="string">&quot;F2&quot;</span>)&#125;</span> MB&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在.NET中，可以使用System.Diagnostics命名空间下的Process类来获取当前进程的信息，但是直接获取网络带宽使用情况不是Process类提供的功能。你可以使用System.Net.NetworkInformation命名空间下的IPGlobalProperties类来获取网络接口的信息，然后累计所有网络接口的传输数据量来估算带宽使用。</p><p>以下是一个简单的示例代码，用于显示当前进程的网络传输数据量（发送和接收）：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"><span class="keyword">using</span> System.Net.NetworkInformation;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Process currentProcess = Process.GetCurrentProcess();</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Process ID: <span class="subst">&#123;currentProcess.Id&#125;</span>&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        IPGlobalProperties ipProperties = IPGlobalProperties.GetIPGlobalProperties();</span><br><span class="line">        TcpStatistics tcpStats = ipProperties.GetTcpIPv4Statistics();</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Total bytes received: <span class="subst">&#123;tcpStats.BytesReceived&#125;</span>&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Total bytes sent: <span class="subst">&#123;tcpStats.BytesSent&#125;</span>&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 输出网络接口统计信息</span></span><br><span class="line">        NetworkInterface[] networkInterfaces = NetworkInterface.GetAllNetworkInterfaces();</span><br><span class="line">        <span class="keyword">foreach</span> (NetworkInterface networkInterface <span class="keyword">in</span> networkInterfaces)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Interface: <span class="subst">&#123;networkInterface.Name&#125;</span>&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Bytes received: <span class="subst">&#123;networkInterface.GetIPv4Statistics().BytesReceived&#125;</span>&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Bytes sent: <span class="subst">&#123;networkInterface.GetIPv4Statistics().BytesSent&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请注意，这个示例显示的是从系统启动以来累计的网络接口数据量。如果你需要监测特定时间段内的带宽使用情况，你需要定期获取数据并计算差值。另外，这个示例仅包括了IPv4的数据，如果需要IPv6或者更多细节，请相应地扩展代码。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian Nodejs HEXO</title>
      <link href="/2024/05/03/Debian-hexo/"/>
      <url>/2024/05/03/Debian-hexo/</url>
      
        <content type="html"><![CDATA[<p>Debian Nodejs HEXO </p><h1 id="安装Node-js环境"><a href="#安装Node-js环境" class="headerlink" title="安装Node.js环境"></a>安装Node.js环境</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>debian安装最新node v20.12.0<br>在Debian系统上安装特定版本的Node.js（例如v20.12.0），你可以使用NodeSource二进制分发。以下是安装v20.12.0的步骤：</p><p>首先，打开终端。</p><p>使用curl下载NodeSource的安装脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -</span><br></pre></td></tr></table></figure><p>安装Node.js：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure><p>验证Node.js是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node --version</span><br></pre></td></tr></table></figure><p>如果你想要确保安装了特定的v20.12.0版本，可以在安装完Node.js后运行以下命令来验证版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>如果显示的版本号是v20.12.0，则表示已经成功安装了该版本。</p><h1 id="安装HEXO"><a href="#安装HEXO" class="headerlink" title="安装HEXO"></a>安装HEXO</h1><p>使用npm包管理器，直接安装hexo </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><h1 id="hexo-修改端口号"><a href="#hexo-修改端口号" class="headerlink" title="hexo 修改端口号"></a>hexo 修改端口号</h1><p>_config.yml  # 或者使用 vim _config.yml</p><h2 id="Docs-https-hexo-io-docs-server-html"><a href="#Docs-https-hexo-io-docs-server-html" class="headerlink" title="Docs: https://hexo.io/docs/server.html"></a>Docs: <a class="link"   href="https://hexo.io/docs/server.html" >https://hexo.io/docs/server.html<i class="fas fa-external-link-alt"></i></a></h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">12311</span>  <span class="comment"># 修改这里为你想要的端口号</span></span><br><span class="line">  <span class="attr">compress:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">header:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>.NET netty proto</title>
      <link href="/2024/05/03/NET-netty-proto/"/>
      <url>/2024/05/03/NET-netty-proto/</url>
      
        <content type="html"><![CDATA[<p>DotNetty是微软的Azure团队，使用C#实现的Netty的版本发布。不但使用了C#和.Net平台的技术特点，并且保留了Netty原来绝大部分的编程接口。让我们在使用时，完全可以依照Netty官方的教程来学习和使用DotNetty应用程序。</p><p>Netty 是一个异步事件驱动的网络应用程序框架，用于快速开发可维护的高性能协议服务器和客户端。</p><p>优点<br>关注点分离——业务和网络逻辑解耦；<br>模块化和可复用性；<br>可测试性作为首要的要求<br>历史<br>阻塞Socket通信特点：</p><p>建立连接要阻塞线程，读取数据要阻塞线程<br>如果要管理多个客户端，就需要为每个客户端建立不同的线程<br>会有大量的线程在休眠状态，等待接收数据，资源浪费<br>每个线程都要占用系统资源<br>线程的切换很耗费系统资源<br>非阻塞Socket（NIO）特点：<br>每个Socket如果需要读写操作，都通过事件通知的方式通知选择器，这样就实现了一个线程管理多个Socket的目的。<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240504.jpg"  ></p><p>选择器甚至可以在所有的Socket空闲的时候允许线程先去干别的事情<br>减少了线程数量导致的资源占用，减少了线程切换导致的资源消耗</p><p>Protobuf<br>wakeng</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET 检测地址/主机/域名是否正常</title>
      <link href="/2024/04/28/NET-IP-Host/"/>
      <url>/2024/04/28/NET-IP-Host/</url>
      
        <content type="html"><![CDATA[<!----><p>🌱PING 地址&#x2F;主机名&#x2F;域名</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> PING</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;ip&quot;&gt;</span>ip<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">PingIp</span>(<span class="params"><span class="built_in">string</span> ip</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    System.Net.NetworkInformation.Ping p = <span class="keyword">new</span> System.Net.NetworkInformation.Ping();</span><br><span class="line">    System.Net.NetworkInformation.PingOptions options = <span class="keyword">new</span> System.Net.NetworkInformation.PingOptions();</span><br><span class="line">    options.DontFragment = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">string</span> data = <span class="string">&quot;Test Data!&quot;</span>;</span><br><span class="line">    <span class="built_in">byte</span>[] buffer = Encoding.ASCII.GetBytes(data);</span><br><span class="line">    <span class="built_in">int</span> timeout = <span class="number">2000</span>; <span class="comment">// Timeout</span></span><br><span class="line">    System.Net.NetworkInformation.PingReply reply = p.Send(ip, timeout, buffer, options);</span><br><span class="line">    <span class="keyword">if</span> (reply.Status == System.Net.NetworkInformation.IPStatus.Success)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//  AddToConvo(ip + reply.Status);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">       <span class="comment">// AddToConvo(ip + reply.Status);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>👀调用方法</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">List&lt;<span class="built_in">string</span>&gt; list = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">list.Add(<span class="string">&quot;192.168.1.1&quot;</span>);</span><br><span class="line">list.Add(<span class="string">&quot;192.168.3.1&quot;</span>);</span><br><span class="line">list.Add(<span class="string">&quot;192.168.4.1&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> s <span class="keyword">in</span> list)</span><br><span class="line">&#123;</span><br><span class="line">   Console.WriteLine(s+<span class="string">&quot; &quot;</span>+ ccPing.PingIp(s));</span><br><span class="line">      <span class="comment">//if(!xxx) </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Thread.Sleep(<span class="number">10000</span>);</span><br></pre></td></tr></table></figure>   <!-- <img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/res/v1/111.png"  > --><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v1/111.png"  ></p><p>隔10秒自动调用1次 </p><p> </p><p>📫检查URL</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">bool</span>&gt; <span class="title">IsServerRespondingAsync</span>(<span class="params"><span class="built_in">string</span> url, TimeSpan timeout</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> cancellationTokenSource = <span class="keyword">new</span> System.Threading.CancellationTokenSource())</span><br><span class="line">        &#123;</span><br><span class="line">            cancellationTokenSource.CancelAfter(timeout);</span><br><span class="line">            <span class="keyword">var</span> response = <span class="keyword">await</span> _httpClient.GetAsync(url, cancellationTokenSource.Token);</span><br><span class="line">            <span class="keyword">return</span> response.IsSuccessStatusCode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (TaskCanceledException)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 请求超时</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 发生其他错误</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>⚡异步调用</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> checker.IsServerRespondingAsync(url, TimeSpan.FromSeconds(<span class="number">2</span>));</span><br></pre></td></tr></table></figure><p>如果False可以调用报警代码</p><p>END</p><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> spider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET Avalonia Linux </title>
      <link href="/2024/04/27/NET-Avalonia/"/>
      <url>/2024/04/27/NET-Avalonia/</url>
      
        <content type="html"><![CDATA[<p>环境WIN10  VS2022  debian</p><h1 id="👻前言"><a href="#👻前言" class="headerlink" title="👻前言"></a>👻前言</h1><p>Avalonia 是一个用于创建跨平台用户界面 (UI) 的开源框架。它是一个基于 .NET 平台的框架，允许开发者使用 XAML 和 C#（F#）来构建跨平台的应用程序。Avalonia 的目标是提供与 Windows Presentation Foundation (WPF) 类似的开发体验，但能够在 Windows、macOS 和 Linux 等多个平台上运行。</p><p>使用 Avalonia，开发者可以创建各种类型的应用程序，包括桌面应用、移动应用和嵌入式应用。一些可以通过 Avalonia 实现的功能和应用包括：</p><p>桌面应用程序：如办公软件、IDE、游戏客户端等。</p><p>移动应用程序：通过 Avalonia 可以构建支持多个平台的移动应用，如 Windows、macOS 和 Linux 上的移动应用。</p><p>跨平台工具：Avalonia 可以用于构建跨平台的开发工具、实用工具等。</p><p>游戏开发：Avalonia 也可以用于构建游戏的用户界面，适合基于 .NET 平台的游戏开发。</p><p>Avalonia 提供了一个强大的工具集，使开发者能够创建具有各种功能和样式的跨平台应用程序。</p><p>💻安装Avalonia<br>选择管理拓展，点击下载，安装</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240427a.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240427b.jpg"  ></p><h1 id="📦创建项目"><a href="#📦创建项目" class="headerlink" title="📦创建项目"></a>📦创建项目</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240427c.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240427d.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240427e.jpg"  ></p><p>编码…</p><h1 id="📚在win下运行"><a href="#📚在win下运行" class="headerlink" title="📚在win下运行"></a>📚在win下运行</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240427f.jpg"  ></p><p>查看linux内核</p><p>uname -a</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240427g.jpg"  ></p><h1 id="🔑打包发布"><a href="#🔑打包发布" class="headerlink" title="🔑打包发布"></a>🔑打包发布</h1><p>复制到linux</p><p>授予权限</p><h1 id="📻在linux下运行"><a href="#📻在linux下运行" class="headerlink" title="📻在linux下运行"></a>📻在linux下运行</h1><p>迁移Socket发布到linux<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240427h.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240427i.jpg"  ></p><p>实现win linux web 基于socket实时聊天</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> Avalonia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian Gnome-Desktop GUI </title>
      <link href="/2024/04/26/Debian-Gnome-Desktop-GUI/"/>
      <url>/2024/04/26/Debian-Gnome-Desktop-GUI/</url>
      
        <content type="html"><![CDATA[<p>debian   gnome-desktop</p><h1 id="🌞更新"><a href="#🌞更新" class="headerlink" title="🌞更新"></a>🌞更新</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line">[2024042601]</span><br><span class="line">sudo apt -y upgrade</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024042602.jpg"  ></p><h1 id="🎨安装"><a href="#🎨安装" class="headerlink" title="🎨安装"></a>🎨安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install task-gnome-desktop</span><br></pre></td></tr></table></figure><p> 这个过程比较久</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024042603.jpg"  ></p><h1 id="🍎分配"><a href="#🍎分配" class="headerlink" title="🍎分配"></a>🍎分配</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl set-default graphical.target</span><br><span class="line">vi /etc/pam.d/gdm-password</span><br><span class="line">``` bash</span><br><span class="line">注释 auth required pam_succeed_if.so user != root quiet_success</span><br><span class="line">``` bash</span><br><span class="line"><span class="comment">#auth required pam_succeed_if.so user != root quiet_success</span></span><br></pre></td></tr></table></figure><h1 id="🛋️重启"><a href="#🛋️重启" class="headerlink" title="🛋️重启"></a>🛋️重启</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><h1 id="🔑通过VNC连接"><a href="#🔑通过VNC连接" class="headerlink" title="🔑通过VNC连接"></a>🔑通过VNC连接</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024042604.jpg"  ></p><p>配置后</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024042605.jpg"  ></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> debian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HarmonyOS开发环境搭建 移动开发 鸿蒙开发 ArkTS</title>
      <link href="/2024/04/21/HarmonyOS-Base/"/>
      <url>/2024/04/21/HarmonyOS-Base/</url>
      
        <content type="html"><![CDATA[<h1 id="💡-环境搭建"><a href="#💡-环境搭建" class="headerlink" title="💡 环境搭建"></a>💡 环境搭建</h1><p>HarmonyOS开发环境搭建</p><p> DevEco Studio安装<br><a class="link"   href="https://developer.huawei.com/consumer/cn/deveco-studio/" >https://developer.huawei.com/consumer/cn/deveco-studio/<i class="fas fa-external-link-alt"></i></a></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042110.jpg"  ></p><h1 id="🚀安装nodejs"><a href="#🚀安装nodejs" class="headerlink" title="🚀安装nodejs"></a>🚀安装nodejs</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042111.jpg"  ></p><h1 id="🤵安装ohpm"><a href="#🤵安装ohpm" class="headerlink" title="🤵安装ohpm"></a>🤵安装ohpm</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042112.jpg"  ></p><h1 id="🍔安装SDK"><a href="#🍔安装SDK" class="headerlink" title="🍔安装SDK"></a>🍔安装SDK</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042113.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042114.jpg"  ></p><h1 id="💥Emulator安装"><a href="#💥Emulator安装" class="headerlink" title="💥Emulator安装"></a>💥Emulator安装</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042115.jpg"  ></p><p>Q:The graphic card OpenGL version is too old for Previewer to work..</p><p>解决方法分两步：</p><p>1、下载enGL库：<a class="link"   href="https://github.com/pal1000/mesa-dist-win/releases/download/23.1.1/mesa3d-23.1.1-release-msvc.7z" >https://github.com/pal1000/mesa-dist-win/releases/download/23.1.1/mesa3d-23.1.1-release-msvc.7z<i class="fas fa-external-link-alt"></i></a></p><p>2、解压下载的zip文件,双击执行systemwidedeploy.cmd文件，然后按任意键，出现一个菜单，选择1，然后开始安装OpenGL驱动，出现complete 后关闭终端，重新运行程序即可生效。</p><h1 id="🌶️新建ArkTs项目"><a href="#🌶️新建ArkTs项目" class="headerlink" title="🌶️新建ArkTs项目"></a>🌶️新建ArkTs项目</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042116.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042117.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042118.jpg"  ></p><p>entry：HarmonyOS工程模块，编译构建生成一个HAP包。</p><p>src &gt; main &gt; ets：用于存放ets源码。<br>src &gt; main &gt; ets &gt; MainAbility：应用&#x2F;服务的入口。<br>src &gt; main &gt; ets &gt; MainAbility &gt; pages：MainAbility包含的页面。<br>src &gt; main &gt; ets &gt; MainAbility &gt; pages &gt; index.ets：pages列表中的第一个页面，即应用的首页入口。<br>src &gt; main &gt; ets &gt; MainAbility &gt; app.ets：承载Ability生命周期。<br>src &gt; main &gt; resources：用于存放应用&#x2F;服务所用到的资源文件，如图形、多媒体、字符串、布局文件等。<br>src &gt; main &gt; config.json：模块配置文件。主要包含HAP包的配置信息、应用&#x2F;服务在具体设备上的配置信息以及应用&#x2F;服务的全局配置信息。<br>build-profile.json5：当前的模块信息、编译信息配置项，包括buildOption、targets配置等。其中targets中可配置当前运行环境，默认为HarmonyOS。<br>hvigorfile.ts：模块级编译构建任务脚本，开发者可以自定义相关任务和代码实现。<br>build-profile.json5：应用级配置信息，包括签名、产品配置等。</p><p>hvigorfile.ts：应用级编译构建任务脚本。</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042119.jpg"  ></p><h1 id="🏆️ArkTS语言"><a href="#🏆️ArkTS语言" class="headerlink" title="🏆️ArkTS语言"></a>🏆️ArkTS语言</h1><p>ArkTS是HarmonyOS优选的主力应用开发语言。</p><p>ArkTS围绕应用开发在TypeScript（简称TS）生态基础上做了进一步扩展，继承了TS的所有特性，是TS的超集。因此，在学习ArkTS语言之前，建议开发者具备TS语言开发能力。</p><p>基本语法：ArkTS定义了声明式UI描述、自定义组件和动态扩展UI元素的能力，再配合ArkUI开发框架中的系统组件及其相关的事件方法、属性方法等共同构成了UI开发的主体。<br>状态管理：ArkTS提供了多维度的状态管理机制。在UI开发框架中，与UI相关联的数据可以在组件<br>内使用，也可以在不同组件层级间传递，比如父子组件之间、爷孙组件之间，还可以在应用全局范<br>围内传递或跨设备传递。另外，从数据的传递形式来看，可分为只读的单向传递和可变更的双向传<br>递。开发者可以灵活地利用这些能力来实现数据和UI的联动。<br>渲染控制：ArkTS提供了渲染控制的能力。条件渲染可根据应用的不同状态，渲染对应状态下的UI<br>内容。循环渲染可从数据源中迭代获取数据，并在每次迭代过程中创建相应的组件。数据懒加载从<br>数据源中按需迭代数据，并在每次迭代过程中创建相应的组件。<br>未来，ArkTS会结合应用开发&#x2F;运行的需求持续演进，逐步提供并行和并发能力增强、系统类型增强、分布式开发范式等更多特性。</p><h1 id="✨️基本语法"><a href="#✨️基本语法" class="headerlink" title="✨️基本语法"></a>✨️基本语法</h1><p>基本语法概述<br>在初步了解了ArkTS语言之后，我们以一个具体的示例来说明ArkTS的基本组成。<br>装饰器： 用于装饰类、结构、方法以及变量，并赋予其特殊的含义。如上述示例中@Entry、<br>@Component和@State都是装饰器，@Component表示自定义组件，@Entry表示该自定义组件<br>为入口组件，@State表示组件中的状态变量，状态变量变化会触发UI刷新。<br>UI描述：以声明式的方式来描述UI的结构，例如build()方法中的代码块。<br>自定义组件：可复用的UI单元，可组合其他组件，如上述被@Component装饰的struct Hello。<br>系统组件：ArkUI框架中默认内置的基础和容器组件，可直接被开发者调用，比如示例中的<br>Column、Text、Divider、Button。<br>属性方法：组件可以通过链式调用配置多项属性，如fontSize()、width()、height()、<br>backgroundColor()等。<br>事件方法：组件可以通过链式调用设置多个事件的响应逻辑，如跟随在Button后面的onClick()。<br>系统组件、属性方法、事件方法具体使用可参考基于ArkTS的声明式开发范式。<br>除此之外，ArkTS扩展了多种语法范式来使开发更加便捷：</p><p>@Builder&#x2F;@BuilderParam：特殊的封装UI描述的方法，细粒度的封装和复用UI描述。<br>@Extend&#x2F;@Styles：扩展内置组件和封装属性样式，更灵活地组合内置组件。<br>stateStyles：多态样式，可以依据组件的内部状态的不同，设置不同样式。</p><h1 id="🥇-声明式UI描述"><a href="#🥇-声明式UI描述" class="headerlink" title="🥇 声明式UI描述"></a>🥇 声明式UI描述</h1><p>ArkTS以声明方式组合和扩展组件来描述应用程序的UI，同时还提供了基本的属性、事件和子组件配置方法，帮助我们实现应用交互逻辑。<br>创建组件<br>根据组件构造方法的不同，创建组件包含有参数和无参数两种方式。<br>无参数<br>如果组件的接口定义没有包含必选构造参数，则组件后面的“()”不需要配置任何内容。例如，Divider组件不包含构造参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Column</span>() &#123;</span><br><span class="line">    <span class="title class_">Text</span>(<span class="string">&#x27;item 1&#x27;</span>)</span><br><span class="line">    <span class="title class_">Divider</span>()</span><br><span class="line">    <span class="title class_">Text</span>(<span class="string">&#x27;item 2&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有参数<br>如果组件的接口定义包含构造参数，则在组件后面的“()”配置相应参数。<br>Image组件的必选参数src。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Image</span>(<span class="string">&#x27;https://xyz/test.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure><p>Text组件的非必选参数content。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// string类型的参数</span></span><br><span class="line"><span class="title class_">Text</span>(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line"><span class="comment">// $r形式引入应用资源，可应用于多语言场景</span></span><br><span class="line"><span class="title class_">Text</span>($r(<span class="string">&#x27;app.string.title_value&#x27;</span>))</span><br><span class="line"><span class="comment">// 无参数形式</span></span><br><span class="line"><span class="title class_">Text</span>()</span><br></pre></td></tr></table></figure><p>变量或表达式也可以用于参数赋值，其中表达式返回的结果类型必须满足参数类型要求。<br>例如，设置变量或表达式来构造Image和Text组件的参数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Image</span>(<span class="variable language_">this</span>.<span class="property">imagePath</span>)</span><br><span class="line"><span class="title class_">Image</span>(<span class="string">&#x27;https://&#x27;</span> + <span class="variable language_">this</span>.<span class="property">imageUrl</span>)</span><br><span class="line"><span class="title class_">Text</span>(<span class="string">`count: <span class="subst">$&#123;<span class="variable language_">this</span>.count&#125;</span>`</span>)</span><br></pre></td></tr></table></figure><p>配置属性<br>属性方法以“.”链式调用的方式配置系统组件的样式和其他属性，建议每个属性方法单独写一行。<br>配置Text组件的字体大小。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Text</span>(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line">.<span class="title function_">fontSize</span>(<span class="number">12</span>)</span><br></pre></td></tr></table></figure><p>配置组件的多个属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Image</span>(<span class="string">&#x27;test.jpg&#x27;</span>)</span><br><span class="line">.<span class="title function_">alt</span>(<span class="string">&#x27;error.jpg&#x27;</span>)</span><br><span class="line">.<span class="title function_">width</span>(<span class="number">100</span>)</span><br><span class="line">.<span class="title function_">height</span>(<span class="number">100</span>)</span><br></pre></td></tr></table></figure><p>除了直接传递常量参数外，还可以传递变量或表达式。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Text</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">.<span class="title function_">fontSize</span>(<span class="variable language_">this</span>.<span class="property">size</span>)</span><br><span class="line"><span class="title class_">Image</span>(<span class="string">&#x27;test.jpg&#x27;</span>)</span><br><span class="line">.<span class="title function_">width</span>(<span class="variable language_">this</span>.<span class="property">count</span> % <span class="number">2</span> === <span class="number">0</span> ? <span class="number">100</span> : <span class="number">200</span>)</span><br><span class="line">.<span class="title function_">height</span>(<span class="variable language_">this</span>.<span class="property">offset</span> + <span class="number">100</span>)</span><br></pre></td></tr></table></figure><p>对于系统组件，ArkUI还为其属性预定义了一些枚举类型供开发者调用，枚举类型可以作为参数传<br>递，但必须满足参数类型要求。<br>例如，可以按以下方式配置Text组件的颜色和字体样式。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Text</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">.<span class="title function_">fontSize</span>(<span class="number">20</span>)</span><br><span class="line">.<span class="title function_">fontColor</span>(<span class="title class_">Color</span>.<span class="property">Red</span>)</span><br><span class="line">.<span class="title function_">fontWeight</span>(<span class="title class_">FontWeight</span>.<span class="property">Bold</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置事件<br>事件方法以“.”链式调用的方式配置系统组件支持的事件，建议每个事件方法单独写一行。<br>使用箭头函数配置组件的事件方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Button</span>(<span class="string">&#x27;Click me&#x27;</span>)</span><br><span class="line">.<span class="title function_">onClick</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">myText</span> = <span class="string">&#x27;ArkUI&#x27;</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用匿名函数表达式配置组件的事件方法，要求使用bind，以确保函数体中的this指向当前组件。<br>使用组件的成员函数配置组件的事件方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Button</span>(<span class="string">&#x27;add counter&#x27;</span>)</span><br><span class="line">.<span class="title function_">onClick</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">counter</span> += <span class="number">2</span>;</span><br><span class="line">&#125;.<span class="title function_">bind</span>(<span class="variable language_">this</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用声明的箭头函数，可以直接调用，不需要bind this。</p><p>配置子组件<br>如果组件支持子组件配置，则需在尾随闭包”{…}”中为组件添加子组件的UI描述。Column、Row、<br>Stack、Grid、List等组件都是容器组件。<br>以下是简单的Column组件配置子组件的示例。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Column</span>() &#123;</span><br><span class="line">    <span class="title class_">Text</span>(<span class="string">&#x27;Hello&#x27;</span>)</span><br><span class="line">    .<span class="title function_">fontSize</span>(<span class="number">100</span>)</span><br><span class="line"><span class="title class_">Divider</span>()</span><br><span class="line">    <span class="title class_">Text</span>(<span class="variable language_">this</span>.<span class="property">myText</span>)</span><br><span class="line">    .<span class="title function_">fontSize</span>(<span class="number">100</span>)</span><br><span class="line">    .<span class="title function_">fontColor</span>(<span class="title class_">Color</span>.<span class="property">Red</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>容器组件均支持子组件配置，可以实现相对复杂的多级嵌套。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">column</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title class_">Row</span>() &#123;</span><br><span class="line">        <span class="title class_">Image</span>(<span class="string">&#x27;test1.jpg&#x27;</span>)</span><br><span class="line">        .<span class="title function_">width</span>(<span class="number">100</span>)</span><br><span class="line">        .<span class="title function_">height</span>(<span class="number">100</span>)</span><br><span class="line">    <span class="title class_">Button</span>(<span class="string">&#x27;click +1&#x27;</span>)</span><br><span class="line">        .<span class="title function_">onClick</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&#x27;+1 clicked!&#x27;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🍱组件"><a href="#🍱组件" class="headerlink" title="🍱组件"></a>🍱组件</h1><h2 id="Row"><a href="#Row" class="headerlink" title="Row"></a>Row</h2><p>沿水平方向布局容器。可以包含子组件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Row</span>(value?:&#123;space?: string | number&#125;)</span><br></pre></td></tr></table></figure><p>参数：</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:64.6pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:122.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:51.75pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>必填</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:64.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>默认值</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:140.95pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:64.6pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">space</span></p> </td><td style="width:122.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">string | number</span></p> </td><td style="width:51.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:64.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">0</span></p> </td><td style="width:140.95pt;"> <p style="margin-left:0;"><span style="color:#333333;">横向布局元素间距。</span></p> </td></tr></tbody></table></div><!-- space  string | number 非必填 0 横向布局元素间距。属性：alignItems VerticalAlign VerticalAlign.Center 在垂直方向上子组件的对齐格式。justifyContent FlexAlign FlexAlign.Start 设置子组件在水平方向上的对齐格式。 -->属性：<div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:84.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:76.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:109.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>默认值</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:174pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:84.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">alignItems</span></p> </td><td style="width:76.55pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">VerticalAlign</span></p> </td><td style="width:109.55pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">VerticalAlign.Center</span></p> </td><td style="width:174pt;"> <p style="margin-left:0;"><span style="color:#333333;">在垂直方向上子组件的对齐格式。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:84.15pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">justifyContent</span></p> </td><td style="background-color:#f8f8f8;width:76.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">FlexAlign</span></p> </td><td style="background-color:#f8f8f8;width:109.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">FlexAlign.Start</span></p> </td><td style="background-color:#f8f8f8;width:174pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置子组件在水平方向上的对齐格式。</span></p> </td></tr></tbody></table></div><h2 id="Column"><a href="#Column" class="headerlink" title="Column"></a>Column</h2><p>沿垂直方向布局的容器。可以包含子组件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Column</span>(value?:&#123;space?: string | number&#125;)</span><br></pre></td></tr></table></figure><p>参数：</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:65.35pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:117.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:52.5pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>必填</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:65.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>默认值</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:143.95pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:65.35pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">space</span></p> </td><td style="width:117.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">string|number</span></p> </td><td style="width:52.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:65.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">0</span></p> </td><td style="width:143.95pt;"> <p style="margin-left:0;"><span style="color:#333333;">纵向布局元素间距。</span></p> </td></tr></tbody></table></div><p>属性：</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:95.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:90.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:123.8pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>默认值</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:134.95pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:95.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">alignItems</span></p> </td><td style="width:90.05pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">HorizontalAlign</span></p> </td><td style="width:123.8pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">HorizontalAlign.Center</span></p> </td><td style="width:134.95pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置子组件在水平方向上的对齐格式。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:95.4pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">justifyContent8+</span></p> </td><td style="background-color:#f8f8f8;width:90.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">FlexAlign</span></p> </td><td style="background-color:#f8f8f8;width:123.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">FlexAlign.Start</span></p> </td><td style="background-color:#f8f8f8;width:134.95pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置子组件在垂直方向上的对齐格式。</span></p> </td></tr></tbody></table></div><p>Flex以弹性方式布局子组件的容器组件。<br>子组件   可以包含子组件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title class_">Flex</span>(value?: &#123; direction?: <span class="title class_">FlexDirection</span>, wrap?: <span class="title class_">FlexWrap</span>, justifyContent?:</span><br><span class="line"> </span><br><span class="line"><span class="title class_">FlexAlign</span>, alignItems?: <span class="title class_">ItemAlign</span>, alignContent?: <span class="title class_">FlexAlign</span> &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参数：</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:84.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:80.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:30pt;"> <p style="margin-left:0;text-align:center;"><span style="color:#333333;"><strong>必填</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:103.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>默认值</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:146.2pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:84.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">direction</span></p> </td><td style="width:80.3pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">FlexDirection</span></p> </td><td style="width:30pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:103.55pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">FlexDirection.Row</span></p> </td><td style="width:146.2pt;"> <p style="margin-left:0;"><span style="color:#333333;">子组件在Flex容器上排列的方向，即主轴的方向。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:84.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">wrap</span></p> </td><td style="background-color:#f8f8f8;width:80.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">FlexWrap</span></p> </td><td style="background-color:#f8f8f8;width:30pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="background-color:#f8f8f8;width:103.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">FlexWrap.NoWrap</span></p> </td><td style="background-color:#f8f8f8;width:146.2pt;"> <p style="margin-left:0;"><span style="color:#333333;">Flex容器是单行/列还是多行/ 列排列。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:84.15pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">justifyContent</span></p> </td><td style="width:80.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">FlexAlign</span></p> </td><td style="width:30pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:103.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">FlexAlign.Start</span></p> </td><td style="width:146.2pt;"> <p style="margin-left:0;"><span style="color:#333333;">子组件在Flex容器主轴上的对齐格式。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:84.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">alignItems</span></p> </td><td style="background-color:#f8f8f8;width:80.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">ItemAlign</span></p> </td><td style="background-color:#f8f8f8;width:30pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="background-color:#f8f8f8;width:103.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">ItemAlign.Stretch</span></p> </td><td style="background-color:#f8f8f8;width:146.2pt;"> <p style="margin-left:0;"><span style="color:#333333;">子组件在Flex容器交叉轴上的对齐格式。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:84.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">alignContent</span></p> </td><td style="width:80.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">FlexAlign</span></p> </td><td style="width:30pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:103.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">FlexAlign.Start</span></p> </td><td style="width:146.2pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">交叉轴中有额外的空间时，多行内容的对齐方式。仅在 wrap为Wrap或</span></p> <p style="margin-left:0;"><span style="color:#333333;">WrapReverse下生效。</span></p> </td></tr></tbody></table></div><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><p>列表包含一系列相同宽度的列表项。适合连续、多行呈现同类数据，例如图片和文本。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">List</span>(value?:&#123;space?: number | string, initialIndex?: number, scroller?:</span><br><span class="line"> </span><br><span class="line"><span class="title class_">Scroller</span>&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参数：</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:70.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:57.05pt;"> <p style="margin-left:0cm;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:30pt;"> <p style="margin-left:0;text-align:center;"><span style="color:#333333;"><strong>必填</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:286.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:70.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">space</span></p> </td><td style="width:57.05pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">number</span></p> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">| string</span></p> </td><td style="width:30pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:286.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">列表项间距。默认值：0</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:70.65pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">initialIndex</span></p> </td><td style="background-color:#f8f8f8;width:57.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="background-color:#f8f8f8;width:30pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="background-color:#f8f8f8;width:286.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置当前List初次加载时视口起始位置显示的item的索引值。如果设置的值超过了当前List后一个item的索引值，则设置不生效。默认值：0</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:70.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">scroller</span></p> </td><td style="width:57.05pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">Scroller</span></p> </td><td style="width:30pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:286.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">可滚动组件的控制器。用于与可滚动组件进行绑定。</span></p> </td></tr></tbody></table></div><p>属性</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:101.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:149.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:193.5pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:101.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">listDirection</span></p> </td><td style="width:149.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">Axis</span></p> </td><td style="width:193.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置List组件排列方向参照Axis枚举说明。默认值：Vertical</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:101.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">divider</span></p> </td><td style="background-color:#f8f8f8;width:149.3pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">{strokeWidth: Length,color?:</span></p> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">ResourceColor,startMargin?:</span></p> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">Length,endMargin?: Length}</span></p> <p style="margin-left:0;"><span style="color:#333333;">| null</span></p> </td><td style="background-color:#f8f8f8;width:193.5pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">用于设置ListItem分割线样式，默认无分割线。strokeWidth: 分割线的线宽。</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">color: 分割线的颜色。startMargin： 分割线与列表侧边起始端的距离。</span></p> <p style="margin-left:0;"><span style="color:#333333;">endMargin: 分割线与列表侧边结束端的距离。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:101.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">scrollBar</span></p> </td><td style="width:149.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">BarState</span></p> </td><td style="width:193.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置滚动条状态。默认值：BarState.Off</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:101.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">cachedCount</span></p> </td><td style="background-color:#f8f8f8;width:149.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="background-color:#f8f8f8;width:193.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置预加载的ListItem的数量。具体使用可参考减少应用白块说明。默认值：1</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:101.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">editMode</span></p> </td><td style="width:149.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="width:193.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">声明当前List组件是否处于可编辑模式。</span></p> <p style="margin-left:0;"><span style="color:#333333;">默认值：false</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:101.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">edgeEffect</span></p> </td><td style="background-color:#f8f8f8;width:149.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">EdgeEffect</span></p> </td><td style="background-color:#f8f8f8;width:193.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">滑动效果，目前支持的滑动效果参见</span></p> <p style="margin-left:0;"><span style="color:#333333;">EdgeEffect的枚举说明。默认值：</span></p> <p style="margin-left:0;"><span style="color:#333333;">EdgeEffect.Spring</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:101.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">chainAnimation</span></p> </td><td style="width:149.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="width:193.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">用于设置当前list是否启用链式联动动效，开启后列表滑动以及顶部和底部拖拽时会有链式联动的效果。链式联动效果：list内的list-item间隔一定距离，在基本的滑动交互行为下，主动对象驱动从动对象进行联动，驱动效果遵循弹簧物理动效。- false：不启用链式联动。true：启用链式联动。默认值：false</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:101.4pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">multiSelectable 8+</span></p> </td><td style="background-color:#f8f8f8;width:149.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="background-color:#f8f8f8;width:193.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">是否开启鼠标框选。&gt;默认值：falsefalse：关闭框选。- true：开启框选。</span></p> </td></tr></tbody></table></div>事件<div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:242px;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:349px;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>功能描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:242px;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onItemDelete(event: (index:</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">number) =&gt; boolean)</span></p> </td><td style="width:349px;"> <p style="margin-left:0;"><span style="color:#333333;">列表项删除时触发。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:242px;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onScroll(event: (scrollOffset: number, scrollState: ScrollState) =&gt; void)</span></p> </td><td style="background-color:#f8f8f8;width:349px;"> <p style="margin-left:0;"><span style="color:#333333;">列表滑动时触发，返回值scrollOffset为滑动偏移量， scrollState为当前滑动状态。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:242px;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onScrollIndex(event: (start:</span></p> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">number, end: number) =&gt; void)</span></p> </td><td style="width:349px;"> <p style="margin-left:0;"><span style="color:#333333;">列表滑动时触发，返回值分别为滑动起始位置索引值与滑动结束位置索引值。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:242px;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onReachStart(event: () =&gt; void)</span></p> </td><td style="background-color:#f8f8f8;width:349px;"> <p style="margin-left:0;"><span style="color:#333333;">列表到达起始位置时触发。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:242px;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onReachEnd(event: () =&gt; void)</span></p> </td><td style="width:349px;"> <p style="margin-left:0;"><span style="color:#333333;">列表到底末尾位置时触发。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:242px;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onScrollStop(event: () =&gt; void)</span></p> </td><td style="background-color:#f8f8f8;width:349px;"> <p style="margin-left:0;"><span style="color:#333333;">列表滑动停止时触发。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:242px;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onItemMove(event: (from: number, to: number) =&gt; boolean)</span></p> </td><td style="width:349px;"> <p style="margin-left:0;"><span style="color:#333333;">列表元素发生移动时触发，返回值from、to分别为移动前索引值与移动后索引值。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:242px;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">onItemDragStart(event: (event:</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">ItemDragInfo, itemIndex:</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">number) =&gt; ((() =&gt; any) | void))</span></p> </td><td style="background-color:#f8f8f8;width:349px;"> <p style="margin-left:0;"><span style="color:#333333;">开始拖拽列表元素时触发，返回值event见ItemDragInfo对象说明，itemIndex为被拖拽列表元素索引值。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:242px;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onItemDragEnter(event:</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">(event: ItemDragInfo) =&gt; void)</span></p> </td><td style="width:349px;"> <p style="margin-left:0;"><span style="color:#333333;">拖拽进入列表元素范围内时触发，返回值event见</span></p> <p style="margin-left:0;"><span style="color:#333333;">ItemDragInfo对象说明。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:242px;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onItemDragMove(event: (event: ItemDragInfo, itemIndex: number, insertIndex: number) =&gt; void)</span></p> </td><td style="background-color:#f8f8f8;width:349px;"> <p style="margin-left:0;"><span style="color:#333333;">拖拽在列表元素范围内移动时触发，返回值event见</span></p> <p style="margin-left:0;"><span style="color:#333333;">ItemDragInfo对象说明，itemIndex为拖拽起始位置， insertIndex为拖拽插入位置。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:242px;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onItemDragLeave(event: (event: ItemDragInfo, itemIndex: number) =&gt; void)</span></p> </td><td style="width:349px;"> <p style="margin-left:0;"><span style="color:#333333;">拖拽离开列表元素时触发，返回值event见ItemDragInfo对象说明，itemIndex为拖拽离开的列表元素索引值。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:242px;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onItemDrop(event: (event:</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">ItemDragInfo, itemIndex: number, insertIndex: number, isSuccess: boolean) =&gt; void)</span></p> </td><td style="background-color:#f8f8f8;width:349px;"> <p style="margin-left:0;"><span style="color:#333333;">绑定该事件的列表元素可作为拖拽释放目标，当在列表元素</span></p> <p style="margin-left:0;"><span style="color:#333333;">内停止拖拽时触发，返回值event见ItemDragInfo对象说明， itemIndex为拖拽起始位置，insertIndex为拖拽插入位置， isSuccess为是否成功释放。</span></p> </td></tr></tbody></table></div>ScrollState枚举说明<div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:150.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:293.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:150.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Idle</span></p> </td><td style="width:293.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">未滑动状态。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:150.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Scroll</span></p> </td><td style="background-color:#f8f8f8;width:293.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">惯性滑动状态。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:150.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Fling</span></p> </td><td style="width:293.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">手指拖动状态。</span></p> </td></tr></tbody></table></div><h2 id="ListItem"><a href="#ListItem" class="headerlink" title="ListItem"></a>ListItem</h2><p>用来展示列表具体item，必须配合List来使用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">ListItem</span>(value?: string)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>属性</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:77.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:63.8pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:73.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>默认值</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:229.5pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:77.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">sticky</span></p> </td><td style="width:63.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">Sticky</span></p> </td><td style="width:73.55pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">Sticky.None</span></p> </td><td style="width:229.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置ListItem吸顶效果，参见Sticky枚举描述。默认值：Sticky.None</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:77.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">editable</span></p> </td><td style="background-color:#f8f8f8;width:63.8pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">boolean |</span></p> <p style="margin-left:0;"><span style="color:#333333;">EditMode</span></p> </td><td style="background-color:#f8f8f8;width:73.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">false</span></p> </td><td style="background-color:#f8f8f8;width:229.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">当前ListItem元素是否可编辑，进入编辑模式后可删除或移动。默认值：false</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:77.4pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">selectable 8+</span></p> </td><td style="width:63.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="width:73.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">true</span></p> </td><td style="width:229.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">当前ListItem元素是否可以被鼠标框选。默认值：true<strong>说明：</strong>外层List容器的鼠标框选开启时，ListItem的框选才生效。</span></p> </td></tr></tbody></table></div>Sticky枚举说明<div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:104.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:339.8pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:104.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">None</span></p> </td><td style="width:339.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">无吸顶效果。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:104.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Normal</span></p> </td><td style="background-color:#f8f8f8;width:339.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">当前item吸顶。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:104.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Opacity</span></p> </td><td style="width:339.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">当前item吸顶显示透明度变化效果。</span></p> </td></tr></tbody></table></div>EditMode枚举说明<div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:174.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:270.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:174.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">None</span></p> </td><td style="width:270.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">编辑操作不限制。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:174.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Deletable</span></p> </td><td style="background-color:#f8f8f8;width:270.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">可删除。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:174.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Movable</span></p> </td><td style="width:270.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">可移动。</span></p> </td></tr></tbody></table></div>事件<div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:120.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:324.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>功能描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:120.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onSelect(event:</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">(isSelected: boolean)</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">=&gt; void) 8+</span></p> </td><td style="width:324.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">ListItem元素被鼠标框选的状态改变时触发回调。isSelected：进入鼠标框选范围即被选中返回true， 移出鼠标框选范围即未被选中返回 false。</span></p> </td></tr></tbody></table></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">List</span>() &#123;</span><br><span class="line">     <span class="title class_">ListItem</span>() &#123;</span><br><span class="line">       <span class="title class_">Row</span>() &#123;</span><br><span class="line">         <span class="title class_">Image</span>($r(<span class="string">&#x27;app.media.icon&#x27;</span>)).<span class="title function_">width</span>(<span class="string">&#x27;80vp&#x27;</span>)</span><br><span class="line">         <span class="title class_">Column</span>() &#123;</span><br><span class="line">           <span class="title class_">Text</span>(<span class="string">&#x27;标題&#x27;</span>)</span><br><span class="line">           .<span class="title function_">fontColor</span>(<span class="title class_">Color</span>.<span class="property">Blue</span>)</span><br><span class="line">             .<span class="title function_">fontSize</span>(<span class="string">&#x27;22fp&#x27;</span>)</span><br><span class="line">           <span class="title class_">Text</span>(<span class="string">&#x27;描述&#x27;</span>)</span><br><span class="line">           .<span class="title function_">fontColor</span>(<span class="title class_">Color</span>.<span class="property">Gray</span>)</span><br><span class="line">             .<span class="title function_">fontSize</span>(<span class="string">&#x27;22fp&#x27;</span>)</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       .<span class="title function_">padding</span>(&#123;<span class="attr">left</span>:<span class="string">&#x27;10vp&#x27;</span>&#125;)</span><br><span class="line"> </span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> .<span class="title function_">backgroundColor</span>(<span class="title class_">Color</span>.<span class="property">White</span>)</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042120.jpg"  ></p><p>Tabs 通过页签进行内容视图切换的容器组件，每个页签对应一个内容视图。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Tabs</span>(value?: &#123;barPosition?: <span class="title class_">BarPosition</span>, index?: number, controller?:</span><br><span class="line"> </span><br><span class="line"><span class="title class_">TabsController</span>&#125;)</span><br></pre></td></tr></table></figure><p>参数</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:72.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:87.8pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:35.25pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>必填</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:97.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>默认值</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:150.75pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:72.9pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">barPosition</span></p> </td><td style="width:87.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">BarPosition</span></p> </td><td style="width:35.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:97.55pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">BarPosition.Start</span></p> </td><td style="width:150.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">指定页签位置来创建Tabs容器组件。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:72.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">index</span></p> </td><td style="background-color:#f8f8f8;width:87.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="background-color:#f8f8f8;width:35.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="background-color:#f8f8f8;width:97.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">0</span></p> </td><td style="background-color:#f8f8f8;width:150.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">指定初次初始页签索引。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:72.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">controller</span></p> </td><td style="width:87.8pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">TabsController</span></p> </td><td style="width:35.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:97.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">-</span></p> </td><td style="width:150.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置Tabs控制器。</span></p> </td></tr></tbody></table></div><p>BarPosition枚举说明</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:42.1pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:402.1pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:42.1pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">Start</span></p> </td><td style="width:402.1pt;"> <p style="margin-left:0;"><span style="color:#333333;">vertical属性方法设置为true时，页签位于容器左侧；vertical属性方法设置为false时，页签位于容器顶部。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:42.1pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">End</span></p> </td><td style="background-color:#f8f8f8;width:402.1pt;"> <p style="margin-left:0;"><span style="color:#333333;">vertical属性方法设置为true时，页签位于容器右侧；vertical属性方法设置为false时，页签位于容器底部。</span></p> </td></tr></tbody></table></div><p>属性不支持触摸热区设置。</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:107.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:62.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:89.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>默认值</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:185.25pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:107.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">vertical</span></p> </td><td style="width:62.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="width:89.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">false</span></p> </td><td style="width:185.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置为false是为横向Tabs，设置为 true时为纵向Tabs。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:107.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">scrollable</span></p> </td><td style="background-color:#f8f8f8;width:62.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="background-color:#f8f8f8;width:89.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">true</span></p> </td><td style="background-color:#f8f8f8;width:185.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置为true时可以通过滑动页面进行页面切换，为false时不可滑动切换页面。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:107.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">barMode</span></p> </td><td style="width:62.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">BarMode</span></p> </td><td style="width:89.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">BarMode.Fixed</span></p> </td><td style="width:185.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">TabBar布局模式，具体描述见</span></p> <p style="margin-left:0;"><span style="color:#333333;">BarMode枚举说明。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:107.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">barWidth</span></p> </td><td style="background-color:#f8f8f8;width:62.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">Length</span></p> </td><td style="background-color:#f8f8f8;width:89.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">-</span></p> </td><td style="background-color:#f8f8f8;width:185.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">TabBar的宽度值。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:107.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">barHeight</span></p> </td><td style="width:62.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">Length</span></p> </td><td style="width:89.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">-</span></p> </td><td style="width:185.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">TabBar的高度值。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:107.4pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">animationDuration</span></p> </td><td style="background-color:#f8f8f8;width:62.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="background-color:#f8f8f8;width:89.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">200</span></p> </td><td style="background-color:#f8f8f8;width:185.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">TabContent滑动动画时长。</span></p> </td></tr></tbody></table></div><p>BarMode枚举说明</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:96.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:348.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:96.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Scrollable</span></p> </td><td style="width:348.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">TabBar使用实际布局宽度, 超过总长度后可滑动。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:96.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Fixed</span></p> </td><td style="background-color:#f8f8f8;width:348.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">所有TabBar平均分配宽度。</span></p> </td></tr></tbody></table></div><p>事件</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:197.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:246.75pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>功能描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:197.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onChange(event: (index: number) =&gt; void)</span></p> </td><td style="width:246.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">Tab页签切换后触发的事件。- index: tab标签的索引值。</span></p> </td></tr></tbody></table></div><p>TabsController</p><p>Tabs组件的控制器，用于控制Tabs组件进行页签切换。导入对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">controller</span>: <span class="title class_">TabsController</span> = <span class="keyword">new</span> <span class="title class_">TabsController</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>changeIndex changeIndex(value: number): void</p><p>控制Tabs切换到指定页签。参数：</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:54.1pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:65.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:43.5pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>必填</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:54.8pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>默认值</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:226.5pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:54.1pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">value</span></p> </td><td style="width:65.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="width:43.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">是</span></p> </td><td style="width:54.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">-</span></p> </td><td style="width:226.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">页签在Tabs里的索引值，索引值从0开始。</span></p> </td></tr></tbody></table></div><h2 id="TabContent"><a href="#TabContent" class="headerlink" title="TabContent"></a>TabContent</h2><p>仅在Tabs中使用，对应一个切换页签的内容视图。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">TabContent</span>()</span><br></pre></td></tr></table></figure><p>属性</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:51.1pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:103.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:30pt;"> <p style="margin-left:0;text-align:center;"><span style="color:#333333;"><strong>默认值</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:259.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:51.1pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">tabBar</span></p> </td><td style="width:103.55pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">string |</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">Resource| {icon?:</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">string |</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">Resource,text?:</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">string |</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">Resource}|</span></p> <p style="margin-left:0;"><span style="color:#333333;">CustomBuilder8+</span></p> </td><td style="width:30pt;"> <p style="margin-left:0;"><span style="color:#333333;">-</span></p> </td><td style="width:259.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置TabBar上显示内容。CustomBuilder: 构造器，内部可以传入组件（API8版本以上适用）。<strong>说明：</strong>如果 icon采用svg格式图源，则要求svg图源删除其自有宽高属性值。如采用带有自有宽高属性的svg图源，icon大小则是svg本身内置的宽高属性值大小。</span></p> </td></tr></tbody></table></div><h2 id="Swiper"><a href="#Swiper" class="headerlink" title="Swiper"></a>Swiper</h2><p>滑块视图容器，提供子组件滑动轮播显示的能力。<br>参数</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:68.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:103.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:42pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>必填</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:230.25pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:68.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">controller</span></p> </td><td style="width:103.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">SwiperController</span></p> </td><td style="width:42pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:230.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">给组件绑定一个控制器，用来控制组件翻页。</span></p> </td></tr></tbody></table></div><p>属性</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">index</span></p> </td><td style="width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置当前在容器中显示的子组件的索引值。默认值：0</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">autoPlay</span></p> </td><td style="background-color:#f8f8f8;width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="background-color:#f8f8f8;width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">子组件是否自动播放，自动播放状态下，导航点不可操作。默认值：false</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">interval</span></p> </td><td style="width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">使用自动播放时播放的时间间隔，单位为毫秒。默认值：3000</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">indicator</span></p> </td><td style="background-color:#f8f8f8;width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="background-color:#f8f8f8;width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">是否启用导航点指示器。默认值：true</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">loop</span></p> </td><td style="width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">是否开启循环。设置为true时表示开启循环，在LazyForEach懒循环加载模式</span></p> <p style="margin-left:0;"><span style="color:#333333;">下，加载的组件数量建议大于5个。默认值：true</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">duration</span></p> </td><td style="background-color:#f8f8f8;width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="background-color:#f8f8f8;width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">子组件切换的动画时长，单位为毫秒。</span></p> <p style="margin-left:0;"><span style="color:#333333;">默认值：400</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">vertical</span></p> </td><td style="width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">是否为纵向滑动。默认值：false</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">itemSpace</span></p> </td><td style="background-color:#f8f8f8;width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">number | string</span></p> </td><td style="background-color:#f8f8f8;width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置子组件与子组件之间间隙。默认值：0</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">displayMode</span></p> </td><td style="width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">SwiperDisplayMode</span></p> </td><td style="width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置子组件显示模式。默认值：</span></p> <p style="margin-left:0;"><span style="color:#333333;">SwiperDisplayMode.Stretch</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">cachedCount 8+</span></p> </td><td style="background-color:#f8f8f8;width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="background-color:#f8f8f8;width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置预加载子组件个数。默认值：1</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">disableSwipe 8+</span></p> </td><td style="width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">禁用组件滑动切换功能。默认值：false</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">displayCount 8+</span></p> </td><td style="background-color:#f8f8f8;width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">number | string</span></p> </td><td style="background-color:#f8f8f8;width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置一页中显示子组件的个数，设置为</span></p> <p style="margin-left:0;"><span style="color:#333333;">“auto”时等同于</span></p> <p style="margin-left:0;"><span style="color:#333333;">SwiperDisplayMode.AutoLinear的显示</span></p> <p style="margin-left:0;"><span style="color:#333333;">效果。默认值：1</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">effectMode 8+</span></p> </td><td style="width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">EdgeEffect</span></p> </td><td style="width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置滑动到边缘时的显示效果。默认值：EdgeEffect.Spring</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">curve 8+</span></p> </td><td style="background-color:#f8f8f8;width:158.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">Curve | string</span></p> </td><td style="background-color:#f8f8f8;width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置Swiper的动画曲线，默认为淡入淡出曲线</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:93.9pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">indicatorStyle 8+</span></p> </td><td style="width:158.3pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">{left?: Length,top?:</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">Length,right?:</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">Length,bottom?: Length,size?:</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">Length,mask?: boolean,color?:</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">ResourceColor,selectedColor?:</span></p> <p style="margin-left:0;"><span style="color:#333333;">ResourceColor}</span></p> </td><td style="width:192pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置导航点样式：- left: 设置导航点距离</span></p> <p style="margin-left:0;"><span style="color:#333333;">Swiper组件左边的距离。- top: 设置导</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">航点距离Swiper组件顶部的距离。right: 设置导航点距离Swiper组件右边的距离。- bottom: 设置导航点距离</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">Swiper组件底部的距离。- size: 设置导航点的直径。- mask: 设置是否显示导航</span></p> <p style="margin-left:0;"><span style="color:#333333;">点蒙层样式。- color: 设置导航点的颜</span></p> <p style="margin-left:0;"><span style="color:#333333;">色。- selectedColor: 设置选中的导航点的颜色。</span></p> </td></tr></tbody></table></div><p>SwiperDisplayMode枚举说明</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:101.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:342.8pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:101.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Stretch</span></p> </td><td style="width:342.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">Swiper滑动一页的宽度为Swiper组件自身的宽度。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:101.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">AutoLinear</span></p> </td><td style="background-color:#f8f8f8;width:342.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">Swiper滑动一页的宽度为子组件宽度中的 大值。</span></p> </td></tr></tbody></table></div>EdgeEffect枚举说明<div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:51.85pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:392.35pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:51.85pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">Spring</span></p> </td><td style="width:392.35pt;"> <p style="margin-left:0;"><span style="color:#333333;">弹性物理动效，滑动到边缘后可以通过触摸事件继续滑动一段距离，松手后回弹。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:51.85pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Fade</span></p> </td><td style="background-color:#f8f8f8;width:392.35pt;"> <p style="margin-left:0;"><span style="color:#333333;">滑动到边缘后，可以通过触摸事件继续滑动一段阴影，松手后阴影回弹。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:51.85pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">None</span></p> </td><td style="width:392.35pt;"> <p style="margin-left:0;"><span style="color:#333333;">滑动到边缘后无效果。</span></p> </td></tr></tbody></table></div><p>SwiperController<br>Swiper容器组件的控制器，可以将此对象绑定至Swiper组件，然后通过它控制翻页。</p><p>showNext</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">showNext</span>(): <span class="keyword">void</span></span><br></pre></td></tr></table></figure><p>翻至下一页。<br>showPrevious</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">showPrevious</span>(): <span class="keyword">void</span></span><br></pre></td></tr></table></figure><p>翻至上一页。<br>finishAnimation</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">finishAnimation</span>(callback?: <span class="function">() =&gt;</span> <span class="keyword">void</span>): <span class="keyword">void</span></span><br></pre></td></tr></table></figure><p>停止播放动画。参数：</p><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:94.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:102.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:82.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>必填项</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:165pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:94.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">callback</span></p> </td><td style="width:102.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">() =&gt; void</span></p> </td><td style="width:82.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">是</span></p> </td><td style="width:165pt;"> <p style="margin-left:0;"><span style="color:#333333;">动画结束的回调。</span></p> </td></tr></tbody></table><p>事件<br>onChange</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">onChange</span>(<span class="attr">event</span>: <span class="function">(<span class="params">index: number</span>) =&gt;</span> <span class="keyword">void</span>)</span><br></pre></td></tr></table></figure><p>当前显示的组件索引变化时触发该事件，返回值为当前显示的子组件的索引值。</p><p>参数</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:79.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:95.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:79.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>必填项</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:189.75pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:79.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">index</span></p> </td><td style="width:95.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="width:79.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">是</span></p> </td><td style="width:189.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">当前显示元素的索引。</span></p> </td></tr></tbody></table></div><h2 id="Grid"><a href="#Grid" class="headerlink" title="Grid"></a>Grid</h2><p>网格容器，由“行”和“列”分割的单元格所组成，通过指定“项目”所在的单元格做出各种各样的布局。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Grid</span>(scroller?: <span class="title class_">Scroller</span>)</span><br></pre></td></tr></table></figure><p>参数</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:60.1pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:44.25pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>必填</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:273.8pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:60.1pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">scroller</span></p> </td><td style="width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">Scroller</span></p> </td><td style="width:44.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:273.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">可滚动组件的控制器。用于与可滚动组件进行绑定。</span></p> </td></tr></tbody></table></div><p>属性</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">columnsTemplate</span></p> </td><td style="width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">string</span></p> </td><td style="width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置当前网格布局列的数量，不设置时默认1列。例</span></p> <p style="margin-left:0;"><span style="color:#333333;">如, '1fr 1fr 2fr' 是将父组件分3列，将父组件允许的宽分为4等份，第一列占1份，第二列占1份，第三列占2 份。默认值：'1fr'</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">rowsTemplate</span></p> </td><td style="background-color:#f8f8f8;width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">string</span></p> </td><td style="background-color:#f8f8f8;width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置当前网格布局行的数量，不设置时默认1行。例如, '1fr 1fr 2fr'是将父组件分三行，将父组件允许的</span></p> <p style="margin-left:0;"><span style="color:#333333;">高分为4等份，第一行占1份，第二行占一份，第三行占2份。默认值：'1fr'</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">columnsGap</span></p> </td><td style="width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">Length</span></p> </td><td style="width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置列与列的间距。默认值：0</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">rowsGap</span></p> </td><td style="background-color:#f8f8f8;width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">Length</span></p> </td><td style="background-color:#f8f8f8;width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置行与行的间距。默认值：0</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">scrollBar</span></p> </td><td style="width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">BarState</span></p> </td><td style="width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置滚动条状态。默认值：BarState.Off</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">scrollBarColor</span></p> </td><td style="background-color:#f8f8f8;width:81.8pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">string |</span></p> <p style="margin-left:0cm;"><span style="color:#333333;">number |</span></p> <p style="margin-left:0;"><span style="color:#333333;">Color</span></p> </td><td style="background-color:#f8f8f8;width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置滚动条的颜色。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">scrollBarWidth</span></p> </td><td style="width:81.8pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">string |</span></p> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置滚动条的宽度。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">cachedCount</span></p> </td><td style="background-color:#f8f8f8;width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="background-color:#f8f8f8;width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置预加载的GridItem的数量。具体使用可参考减少应用白块说明。默认值：1</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">editMode 8+</span></p> </td><td style="width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">是否进入编辑模式，进入编辑模式可以拖拽Grid组件内部GridItem。默认值：false</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">layoutDirection 8+</span></p> </td><td style="background-color:#f8f8f8;width:81.8pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">GridDirection</span></p> </td><td style="background-color:#f8f8f8;width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置布局的主轴方向。默认值：GridDirection.Row</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">maxCount 8+</span></p> </td><td style="width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="width:247.5pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">当layoutDirection是Row/RowReverse时，表示可显示的 大行数当layoutDirection是</span></p> <p style="margin-left:0;"><span style="color:#333333;">Column/ColumnReverse时，表示可显示的 大列</span></p> <p style="margin-left:0;"><span style="color:#333333;">数。默认值：1</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">minCount 8+</span></p> </td><td style="background-color:#f8f8f8;width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="background-color:#f8f8f8;width:247.5pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">当layoutDirection是Row/RowReverse时，表示可显示的 小行数。当layoutDirection是</span></p> <p style="margin-left:0;"><span style="color:#333333;">Column/ColumnReverse时，表示可显示的 小列</span></p> <p style="margin-left:0;"><span style="color:#333333;">数。默认值：1</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">cellLength 8+</span></p> </td><td style="width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">当layoutDirection是Row/RowReverse时，表示一行的高度。当layoutDirection是</span></p> <p style="margin-left:0;"><span style="color:#333333;">Column/ColumnReverse时，表示一列的宽度。默</span></p> <p style="margin-left:0;"><span style="color:#333333;">认值：0</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">multiSelectable 8+</span></p> </td><td style="background-color:#f8f8f8;width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="background-color:#f8f8f8;width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">是否开启鼠标框选。- false：关闭框选。- true：开启框选。默认值：false</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:114.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">supportAnimation 8+</span></p> </td><td style="width:81.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="width:247.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">是否支持动画。默认值：false</span></p> </td></tr></tbody></table></div><p>GridDirection枚举说明8+</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:92.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:351.8pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:92.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Row</span></p> </td><td style="width:351.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">主轴布局方向沿水平方向布局，即自左往右先填满一行，再去填下一行。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:92.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Column</span></p> </td><td style="background-color:#f8f8f8;width:351.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">主轴布局方向沿垂直方向布局，即自上往下先填满一列，再去填下一列。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:92.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">RowReverse</span></p> </td><td style="width:351.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">主轴布局方向沿水平方向反向布局，即自右往左先填满一行，再去填下一行。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:92.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">ColumnReverse</span></p> </td><td style="background-color:#f8f8f8;width:351.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">主轴布局方向沿垂直方向反向布局，即自下往上先填满一列，再去填下一列。</span></p> </td></tr></tbody></table></div>事件<div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:248.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:195.75pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>功能描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:248.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onScrollIndex(event: (first: number) =&gt; void)</span></p> </td><td style="width:195.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">当前网格显示的起始位置item发生变化</span></p> <p style="margin-left:0;"><span style="color:#333333;">时触发。- first: 当前显示的网格起始位置的索引值。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:248.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onItemDragStart(event: (event: ItemDragInfo, itemIndex: number) =&gt; (() =&gt; any) | void)</span></p> </td><td style="background-color:#f8f8f8;width:195.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">开始拖拽网格元素时触发。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:248.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onItemDragEnter(event: (event: ItemDragInfo) =&gt; void)</span></p> </td><td style="width:195.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">拖拽进入网格元素范围内时触发。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:248.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onItemDragMove(event: (event: ItemDragInfo, itemIndex: number, insertIndex: number) =&gt; void)</span></p> </td><td style="background-color:#f8f8f8;width:195.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">拖拽在网格元素范围内移动时触发。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:248.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onItemDragLeave(event: (event: ItemDragInfo, itemIndex: number) =&gt; void)</span></p> </td><td style="width:195.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">拖拽离开网格元素时触发。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:248.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onItemDrop(event: (event: ItemDragInfo, itemIndex: number, insertIndex: number,</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">isSuccess: boolean) =&gt; void)</span></p> </td><td style="background-color:#f8f8f8;width:195.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">绑定该事件的网格元素可作为拖拽释放目标，当在网格元素内停止拖拽时触发。</span></p> </td></tr></tbody></table></div><p>ItemDragInfo对象说明</p><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:84.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:120.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:240pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:84.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">x</span></p> </td><td style="width:120.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="width:240pt;"> <p style="margin-left:0;"><span style="color:#333333;">当前拖拽点的x坐标。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:84.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">y</span></p> </td><td style="background-color:#f8f8f8;width:120.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="background-color:#f8f8f8;width:240pt;"> <p style="margin-left:0;"><span style="color:#333333;">当前拖拽点的y坐标。</span></p> </td></tr></tbody></table><h2 id="GridItem"><a href="#GridItem" class="headerlink" title="GridItem"></a>GridItem</h2><p>网格容器中单项内容容器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">GridItem</span>()</span><br></pre></td></tr></table></figure><p>属性</p><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:78.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:57.8pt;"> <p style="margin-left:0cm;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:308.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:78.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">rowStart</span></p> </td><td style="width:57.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="width:308.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">指定当前元素起始行号。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:78.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">rowEnd</span></p> </td><td style="background-color:#f8f8f8;width:57.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="background-color:#f8f8f8;width:308.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">指定当前元素终点行号。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:78.15pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">columnStart</span></p> </td><td style="width:57.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="width:308.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">指定当前元素起始列号。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:78.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">columnEnd</span></p> </td><td style="background-color:#f8f8f8;width:57.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="background-color:#f8f8f8;width:308.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">指定当前元素终点列号。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:78.15pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">forceRebuild</span></p> </td><td style="width:57.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="width:308.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置在触发组件build时是否重新创建此节点。默认值：false</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:78.15pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">selectable8+</span></p> </td><td style="background-color:#f8f8f8;width:57.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="background-color:#f8f8f8;width:308.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">当前GridItem元素是否可以被鼠标框选。默认值：true<strong>说明：</strong>外层</span></p> <p style="margin-left:0;"><span style="color:#333333;">Grid容器的鼠标框选开启时，GridItem的框选才生效。</span></p> </td></tr></tbody></table><p>事件</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:117.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:327.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>功能描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:117.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onSelect(event:</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">(isSelected: boolean)</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">=&gt; void)8+</span></p> </td><td style="width:327.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">GridItem元素被鼠标框选的状态改变时触发回调。isSelected：进入鼠标框选范围即被选中，返回true；移出鼠标框选范围即未被选中，返回 false。</span></p> </td></tr></tbody></table></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title class_">Grid</span>() &#123;</span><br><span class="line">       <span class="comment">// 第一行</span></span><br><span class="line">       <span class="title class_">GridItem</span>() &#123;</span><br><span class="line">         <span class="title class_">Text</span>(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">       &#125; .<span class="title function_">height</span>(<span class="string">&#x27;20%&#x27;</span>).<span class="title function_">width</span>(<span class="string">&#x27;20%&#x27;</span>)</span><br><span class="line">       <span class="title class_">GridItem</span>() &#123;</span><br><span class="line">         <span class="title class_">Text</span>(<span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">       &#125;.<span class="title function_">height</span>(<span class="string">&#x27;20%&#x27;</span>).<span class="title function_">width</span>(<span class="string">&#x27;20%&#x27;</span>)</span><br><span class="line">       <span class="title class_">GridItem</span>() &#123;</span><br><span class="line">         <span class="title class_">Text</span>(<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">       &#125;.<span class="title function_">height</span>(<span class="string">&#x27;20%&#x27;</span>).<span class="title function_">width</span>(<span class="string">&#x27;20%&#x27;</span>)</span><br><span class="line"></span><br><span class="line">       <span class="title class_">GridItem</span>() &#123;</span><br><span class="line">         <span class="title class_">Text</span>(<span class="string">&#x27;4&#x27;</span>)</span><br><span class="line">       &#125;.<span class="title function_">height</span>(<span class="string">&#x27;20%&#x27;</span>).<span class="title function_">width</span>(<span class="string">&#x27;20%&#x27;</span>)</span><br><span class="line">       <span class="title class_">GridItem</span>() &#123;</span><br><span class="line">         <span class="title class_">Text</span>(<span class="string">&#x27;5&#x27;</span>)</span><br><span class="line">       &#125;.<span class="title function_">height</span>(<span class="string">&#x27;20%&#x27;</span>).<span class="title function_">width</span>(<span class="string">&#x27;20%&#x27;</span>)</span><br><span class="line">       <span class="comment">// GridItem() &#123;</span></span><br><span class="line">       <span class="comment">//   Text(&#x27;6&#x27;)</span></span><br><span class="line">       <span class="comment">// &#125;.height(&#x27;20%&#x27;).width(&#x27;20%&#x27;)</span></span><br><span class="line">     &#125;.<span class="title function_">height</span>(<span class="string">&#x27;30%&#x27;</span>).<span class="title function_">width</span>(<span class="string">&#x27;30%&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042121.jpg"  ></p><p>基础组件</p><h2 id="Text"><a href="#Text" class="headerlink" title="Text"></a>Text</h2><p>显示一段文本的组件。可以包含Span子组件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title class_">Text</span>(content?: string | <span class="title class_">Resource</span>)</span><br><span class="line"></span><br><span class="line"><span class="title class_">Text</span>(<span class="variable language_">this</span>.<span class="property">message</span>)</span><br><span class="line">          .<span class="title function_">fontSize</span>(<span class="number">20</span>)</span><br><span class="line">          .<span class="title function_">fontWeight</span>(<span class="title class_">FontWeight</span>.<span class="property">Bold</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>属性</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:86.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:144.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:213.75pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:86.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">textAlign</span></p> </td><td style="width:144.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">TextAlign</span></p> </td><td style="width:213.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置多行文本的文本对齐方式。默认值：</span></p> <p style="margin-left:0;"><span style="color:#333333;">TextAlign.Start</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:86.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">textOverflow</span></p> </td><td style="background-color:#f8f8f8;width:144.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">{overflow: TextOverflow}</span></p> </td><td style="background-color:#f8f8f8;width:213.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置文本超长时的显示方式。默认值：</span></p> <p style="margin-left:0;text-align:justify;"><span style="color:#333333;">{overflow: TextOverflow.Clip}<strong>说明：</strong>文本截断是按字截断。例如，英文以单词为 小单</span></p> <p style="margin-left:0;"><span style="color:#333333;">位进行截断，若需要以字母为单位进行截断，可在字母间添加零宽空格：\u200B。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:86.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">maxLines</span></p> </td><td style="width:144.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="width:213.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置文本的 大行数。默认值：Infinity</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:86.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">lineHeight</span></p> </td><td style="background-color:#f8f8f8;width:144.05pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">string | number |</span></p> <p style="margin-left:0;"><span style="color:#333333;">Resource</span></p> </td><td style="background-color:#f8f8f8;width:213.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置文本的文本行高，设置值不大于0时，不限制文本行高，自适应字体大小，Length为 number类型时单位为fp。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:86.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">decoration</span></p> </td><td style="width:144.05pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">{type:</span></p> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">TextDecorationType,color?:</span></p> <p style="margin-left:0;"><span style="color:#333333;">ResourceColor}</span></p> </td><td style="width:213.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置文本装饰线样式及其颜色。默认值：</span></p> <p style="margin-left:0;"><span style="color:#333333;">{type: TextDecorationType.None,color：</span></p> <p style="margin-left:0;"><span style="color:#333333;">Color.Black}</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:86.4pt;"> <p style="margin-left:.05pt;text-align:center;"><span style="color:#333333;">baselineOffset</span></p> </td><td style="background-color:#f8f8f8;width:144.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">number | string</span></p> </td><td style="background-color:#f8f8f8;width:213.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置文本基线的偏移量。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:86.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">letterSpacing</span></p> </td><td style="width:144.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">number | string</span></p> </td><td style="width:213.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置文本字符间距。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:86.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">minFontSize</span></p> </td><td style="background-color:#f8f8f8;width:144.05pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">number | string |</span></p> <p style="margin-left:0;"><span style="color:#333333;">Resource</span></p> </td><td style="background-color:#f8f8f8;width:213.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置文本 小显示字号。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:86.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">maxFontSize</span></p> </td><td style="width:144.05pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">number | string |</span></p> <p style="margin-left:0;"><span style="color:#333333;">Resource</span></p> </td><td style="width:213.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置文本 大显示字号。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:86.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">textCase</span></p> </td><td style="background-color:#f8f8f8;width:144.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">TextCase</span></p> </td><td style="background-color:#f8f8f8;width:213.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置文本大小写。默认值：</span></p> <p style="margin-left:0;"><span style="color:#333333;">TextCase.Normal</span></p> </td></tr></tbody></table></div><p>TextInput<br>单行文本输入框组件。</p><p>子组件   无</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title class_">TextInput</span>(value?:&#123;placeholder?: <span class="title class_">ResourceStr</span>, text?: <span class="title class_">ResourceStr</span>, controller?:</span><br><span class="line"> </span><br><span class="line"><span class="title class_">TextInputController</span>&#125;)</span><br></pre></td></tr></table></figure><p>参数</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:90.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:130.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:47.25pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>必填</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:176.25pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:90.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">placeholder</span></p> </td><td style="width:130.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">ResourceStr</span></p> </td><td style="width:47.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:176.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">无输入时的提示文本。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:90.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">text</span></p> </td><td style="background-color:#f8f8f8;width:130.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">ResourceStr</span></p> </td><td style="background-color:#f8f8f8;width:47.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="background-color:#f8f8f8;width:176.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置输入框当前的文本内容。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:90.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">controller8+</span></p> </td><td style="width:130.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">TextInputController</span></p> </td><td style="width:47.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:176.25pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置TextInput控制器。</span></p> </td></tr></tbody></table></div>属性<div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:99.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:237pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:99.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">type</span></p> </td><td style="width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">InputType</span></p> </td><td style="width:237pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置输入框类型。默认值：InputType.Normal</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:99.15pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">placeholderColor</span></p> </td><td style="background-color:#f8f8f8;width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">ResourceColor</span></p> </td><td style="background-color:#f8f8f8;width:237pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置placeholder颜色。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:99.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">placeholderFont</span></p> </td><td style="width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">Font</span></p> </td><td style="width:237pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置placeholder文本样式：- size: 设置文本尺寸，Length为number类型时，使用fp单位。weight: 设置文本的字体粗细，number类型取值</span></p> <p style="margin-left:0;"><span style="color:#333333;">[100, 900]，取值间隔为100，默认为400，取值越大，字体越粗。- family: 设置文本的字体列表。使</span></p> <p style="margin-left:0;"><span style="color:#333333;">用多个字体，使用','进行分割，优先级按顺序生</span></p> <p style="margin-left:0;"><span style="color:#333333;">效。例如：'Arial, sans-serif'。- style: 设置文本的字体样式。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:99.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">enterKeyType</span></p> </td><td style="background-color:#f8f8f8;width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">EnterKeyType</span></p> </td><td style="background-color:#f8f8f8;width:237pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置输入法回车键类型。默认值：</span></p> <p style="margin-left:0;"><span style="color:#333333;">EnterKeyType.Done</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:99.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">caretColor</span></p> </td><td style="width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">ResourceColor</span></p> </td><td style="width:237pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置输入框光标颜色。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:99.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">maxLength</span></p> </td><td style="background-color:#f8f8f8;width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">number</span></p> </td><td style="background-color:#f8f8f8;width:237pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置文本的 大输入字符数。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:99.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">inputFilter8+</span></p> </td><td style="width:108.05pt;"> <p style="margin-left:0cm;"><span style="color:#333333;">{value:</span></p> <p style="margin-left:0;"><span style="color:#333333;">ResourceStr,error?: (value: string) =&gt; void}</span></p> </td><td style="width:237pt;"> <p style="margin-left:0;"><span style="color:#333333;">正则表达式，满足表达式的输入允许显示，不满足正则表达式的输入被忽略。仅支持单个字符匹配，不支持字符串匹配。例如：^(?=.<em>\d)(?=.</em>[a-z])(?=.* [A-Z]).{8,10}$，8到10位的强密码不支持过滤。value：设置正则表达式。- error：正则匹配失败时，返回被忽略的内容。</span></p> </td></tr></tbody></table></div><p>EnterKeyType枚举说明</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:143.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:300.8pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:143.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Go</span></p> </td><td style="width:300.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">显示Go文本。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:143.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Search</span></p> </td><td style="background-color:#f8f8f8;width:300.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">显示为搜索样式。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:143.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Send</span></p> </td><td style="width:300.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">显示为发送样式。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:143.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Next</span></p> </td><td style="background-color:#f8f8f8;width:300.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">显示为下一个样式。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:143.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Done</span></p> </td><td style="width:300.8pt;"> <p style="margin-left:0;"><span style="color:#333333;">标准样式。</span></p> </td></tr></tbody></table></div>InputType枚举说明<div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:157.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:286.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:157.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Normal</span></p> </td><td style="width:286.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">基本输入模式。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:157.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Password</span></p> </td><td style="background-color:#f8f8f8;width:286.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">密码输入模式。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:157.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Email</span></p> </td><td style="width:286.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">e-mail地址输入模式。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:157.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Number</span></p> </td><td style="background-color:#f8f8f8;width:286.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">纯数字输入模式。</span></p> </td></tr></tbody></table></div><p>事件</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:186.95pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:257.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>功能描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:186.95pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onChange(callback: (value: string) =&gt; void)</span></p> </td><td style="width:257.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">输入发生变化时，触发回调。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:186.95pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onSubmit(callback: (enterKey:</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">EnterKeyType) =&gt; void)</span></p> </td><td style="background-color:#f8f8f8;width:257.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">回车键或者软键盘回车键触发该回调，参数为当前软键盘回车键类型。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:186.95pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onEditChanged(callback: (isEditing:</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">boolean) =&gt; void)(deprecated)</span></p> </td><td style="width:257.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">输入状态变化时，触发回调。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:186.95pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onEditChange(callback: (isEditing:</span></p> <p style="margin-left:.1pt;"><span style="color:#333333;">boolean) =&gt; void) 8+</span></p> </td><td style="background-color:#f8f8f8;width:257.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">输入状态变化时，触发回调。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:186.95pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onCopy8+(callback:(value: string) =&gt; void)</span></p> </td><td style="width:257.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">长按输入框内部区域弹出剪贴板后，点击剪切板复制按钮，触发回调。value：复制的文本内容。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:186.95pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onCut8+(callback:(value: string) =&gt; void)</span></p> </td><td style="background-color:#f8f8f8;width:257.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">长按输入框内部区域弹出剪贴板后，点击剪切板剪切按钮，触发回调。value：剪切的文本内容。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:186.95pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onPaste8+(callback:(value: string) =&gt; void)</span></p> </td><td style="width:257.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">长按输入框内部区域弹出剪贴板后，点击剪切板粘贴按钮，触发回调。value：粘贴的文本内容。</span></p> </td></tr></tbody></table></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title class_">TextInput</span>()</span><br><span class="line"> .<span class="title function_">padding</span>(&#123;<span class="attr">top</span>:<span class="string">&#x27;5vp&#x27;</span>&#125;)</span><br><span class="line"> .<span class="title function_">margin</span>(&#123;<span class="attr">top</span>:<span class="string">&#x27;5vp&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042122.jpg"  ><br>TextInputController 8+                                                        </p><p>TextInput组件的控制器。</p><p>导入对象</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">controller</span>: <span class="title class_">TextInputController</span> = <span class="keyword">new</span> <span class="title class_">TextInputController</span>()</span><br><span class="line"> </span><br><span class="line">caretPosition</span><br><span class="line"> </span><br><span class="line"><span class="title function_">caretPosition</span>(<span class="attr">value</span>: number): <span class="keyword">void</span></span><br></pre></td></tr></table></figure><p>设置光标移动到指定位置。参数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;table-box&quot;</span>&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:.3pt;width:444.2pt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#f8f8f8;border-color:#dfe2e5;width:45.1pt;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:.1pt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:#333333;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>参数名<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#f8f8f8;border-color:#dfe2e5;width:57.05pt;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:0cm;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:#333333;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>参数类型<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#f8f8f8;border-color:#dfe2e5;width:36pt;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:0cm;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:#333333;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>必填<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;background-color:#f8f8f8;border-color:#dfe2e5;width:306.05pt;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:0;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:#333333;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>参数描述<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;border-color:#dfe2e5;width:45.1pt;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:0cm;text-align:center;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:#333333;&quot;</span>&gt;</span>value<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;width:57.05pt;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:0;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:#333333;&quot;</span>&gt;</span>number<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;width:36pt;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:0;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:#333333;&quot;</span>&gt;</span>是<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;width:306.05pt;&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:0;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color:#333333;&quot;</span>&gt;</span>设置输入光标的位置。value：从字符串开始到光标所在位置的字符长度。<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span>&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><p>按钮组件，可快速创建不同样式的按钮。</p><p>接口</p><p>方法1：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Button</span>(options?: &#123;type?: <span class="title class_">ButtonType</span>, stateEffect?: boolean&#125;)</span><br></pre></td></tr></table></figure><p>参数</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:69.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:73.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:30pt;"> <p style="margin-left:0;text-align:center;"><span style="color:#333333;"><strong>必填</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:271.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:69.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">type</span></p> </td><td style="width:73.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">ButtonType</span></p> </td><td style="width:30pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:271.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">描述按钮显示样式。默认值：ButtonType.Capsule</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:69.15pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">stateEffect</span></p> </td><td style="background-color:#f8f8f8;width:73.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="background-color:#f8f8f8;width:30pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="background-color:#f8f8f8;width:271.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">按钮按下时是否开启按压态显示效果，当设置为false时，按压效果关闭。。默认值：true</span></p> </td></tr></tbody></table></div>方法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Button</span>(label?: <span class="title class_">ResourceStr</span>, options?: &#123; type?: <span class="title class_">ButtonType</span>, stateEffect?: boolean &#125;)</span><br></pre></td></tr></table></figure><p>使用文本内容创建相应的按钮组件，此时Button无法包含子组件。参数：</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:59.35pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:226.6pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:43.5pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>必填</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:114.7pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:59.35pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">label</span></p> </td><td style="width:226.6pt;"> <p style="margin-left:0;"><span style="color:#333333;">ResourceStr</span></p> </td><td style="width:43.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="width:114.7pt;"> <p style="margin-left:0;"><span style="color:#333333;">按钮文本内容。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:59.35pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">options</span></p> </td><td style="background-color:#f8f8f8;width:226.6pt;"> <p style="margin-left:0;"><span style="color:#333333;">{type?: ButtonType,stateEffect?: boolean}</span></p> </td><td style="background-color:#f8f8f8;width:43.5pt;"> <p style="margin-left:0;"><span style="color:#333333;">否</span></p> </td><td style="background-color:#f8f8f8;width:114.7pt;"> <p style="margin-left:0;"><span style="color:#333333;">见方法1参数说明。</span></p> </td></tr></tbody></table></div><p>属性</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:69.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:73.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:301.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:69.15pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">type</span></p> </td><td style="width:73.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">ButtonType</span></p> </td><td style="width:301.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置Button样式。默认值：ButtonType.Capsule</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:69.15pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">stateEffect</span></p> </td><td style="background-color:#f8f8f8;width:73.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="background-color:#f8f8f8;width:301.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">按钮按下时是否开启按压态显示效果，当设置为false时，按压效果关闭。默认值：true</span></p> </td></tr></tbody></table></div>ButtonType枚举说明<div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:99.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:344.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:99.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Capsule</span></p> </td><td style="width:344.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">胶囊型按钮（圆角默认为高度的一半）。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:99.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Circle</span></p> </td><td style="background-color:#f8f8f8;width:344.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">圆形按钮。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:99.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Normal</span></p> </td><td style="width:344.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">普通按钮（默认不带圆角）。</span></p> </td></tr></tbody></table></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Button</span>() &#123;</span><br><span class="line">   <span class="title class_">Text</span>(<span class="string">&#x27;点击&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"> &#125;</span><br><span class="line"> .<span class="title function_">width</span>(<span class="string">&#x27;100fp&#x27;</span>)</span><br><span class="line"> .<span class="title function_">backgroundColor</span>(<span class="title class_">Color</span>.<span class="property">Gray</span>)</span><br><span class="line"> .<span class="title function_">padding</span>(&#123;<span class="attr">top</span>:<span class="string">&#x27;5vp&#x27;</span>&#125;)</span><br><span class="line"> .<span class="title function_">margin</span>(&#123;<span class="attr">top</span>:<span class="string">&#x27;5vp&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><h2 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h2><p>图片组件，支持本地图片和网络图片的渲染展示。</p><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Image</span>(<span class="attr">src</span>: string | <span class="title class_">PixelMap</span> | <span class="title class_">Resource</span>)</span><br></pre></td></tr></table></figure></code></pre><p>参数</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:85px;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>参数名</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:49px;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:55px;"> <p style="margin-left:0;text-align:center;"><span style="color:#333333;"><strong>必填</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:74px;"> <p style="margin-left:0;text-align:center;"><span style="color:#333333;"><strong>默认值</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:302px;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:85px;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">src</span></p> </td><td style="width:49px;"> <p style="margin-left:0;"><span style="color:#333333;">string| PixelMap|</span></p> <p style="margin-left:0;"><span style="color:#333333;">Resource</span></p> </td><td style="width:55px;"> <p style="margin-left:0;"><span style="color:#333333;">是</span></p> </td><td style="width:74px;"> <p style="margin-left:0;"><span style="color:#333333;">-</span></p> </td><td style="width:302px;"> <p style="margin-left:0;"><span style="color:#333333;">图片的数据源，支持本地图片和网络图片。当使用相对路径</span></p> <p style="margin-left:0;"><span style="color:#333333;">引用图片资源时，例如Image("common/test.jpg")，不支持该Image组件被跨包/跨模块调用，建议使用$r方式来管理需全局使用的图片资源。- 支持的图片格式包括png、jpg、 bmp、svg和gif。- 支持Base64字符串。格式</span></p> <p style="margin-left:0;"><span style="color:#333333;">data:image/[png|jpeg|bmp|webp];base64,[base64 data], 其中[base64 data]为Base64字符串数据。- 支持 dataability://路径前缀的字符串，用于访问通过data ability 提供的图片路径。</span></p> </td></tr></tbody></table></div><p>属性</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:110.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>参数类型</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>默认值</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:159.75pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:110.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">alt</span></p> </td><td style="width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">string | Resource</span></p> </td><td style="width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">-</span></p> </td><td style="width:159.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">加载时显示的占位图。仅支持本地图片。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:110.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">objectFit</span></p> </td><td style="background-color:#f8f8f8;width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">ImageFit</span></p> </td><td style="background-color:#f8f8f8;width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">Cover</span></p> </td><td style="background-color:#f8f8f8;width:159.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置图片的缩放类型。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:110.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">objectRepeat</span></p> </td><td style="width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">ImageRepeat</span></p> </td><td style="width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">NoRepeat</span></p> </td><td style="width:159.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置图片的重复样式。<strong>说明：</strong>svg类型图源不支持该属性。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:110.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">interpolation</span></p> </td><td style="background-color:#f8f8f8;width:108.05pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">ImageInterpolation</span></p> </td><td style="background-color:#f8f8f8;width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">None</span></p> </td><td style="background-color:#f8f8f8;width:159.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置图片的插值效果，即减轻低清晰度图片在放大显示的时候出现的锯齿问题，仅针对图片放大插值。<strong>说明：</strong>- svg类型图源不支持该属性。- PixelMap资源不支持该属性。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:110.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">renderMode</span></p> </td><td style="width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">ImageRenderMode</span></p> </td><td style="width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">Original</span></p> </td><td style="width:159.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置图片渲染的模式。<strong>说明：</strong>svg类型图源不支持该属性。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:110.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">sourceSize</span></p> </td><td style="background-color:#f8f8f8;width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">{width: number,height:</span></p> <p style="margin-left:0;"><span style="color:#333333;">number}</span></p> </td><td style="background-color:#f8f8f8;width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">-</span></p> </td><td style="background-color:#f8f8f8;width:159.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置图片解码尺寸，将原始图片</span></p> <p style="margin-left:0;"><span style="color:#333333;">解码成指定尺寸的图片，</span></p> <p style="margin-left:0;"><span style="color:#333333;">number类型单位为px。<strong>说明：</strong>PixelMap资源和SVG图片不支持该属性。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:110.4pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">matchTextDirection</span></p> </td><td style="width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">false</span></p> </td><td style="width:159.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置图片是否跟随系统语言方向，在RTL语言环境下显示镜像翻转显示效果。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:110.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">fitOriginalSize</span></p> </td><td style="background-color:#f8f8f8;width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="background-color:#f8f8f8;width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">true</span></p> </td><td style="background-color:#f8f8f8;width:159.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">图片组件尺寸未设置时，其显示尺寸是否跟随图源尺寸。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:110.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">fillColor</span></p> </td><td style="width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">ResourceColor</span></p> </td><td style="width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">-</span></p> </td><td style="width:159.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">仅对svg图源生效，设置后会替换svg图片的fill颜色。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:110.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">autoResize</span></p> </td><td style="background-color:#f8f8f8;width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="background-color:#f8f8f8;width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">true</span></p> </td><td style="background-color:#f8f8f8;width:159.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">是否需要在图片解码过程中对图源做resize操作，该操作会根据显示区域的尺寸决定用于绘制的图源尺寸，有利于减少内存占用。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:110.4pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">syncLoad8+</span></p> </td><td style="width:108.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">boolean</span></p> </td><td style="width:66.05pt;"> <p style="margin-left:0;"><span style="color:#333333;">false</span></p> </td><td style="width:159.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">设置是否同步加载图片，默认是异步加载。同步加载时阻塞UI线程，不会显示占位图。</span></p> </td></tr></tbody></table></div><p>ImageInterpolation枚举说明</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:82.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:361.55pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:82.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">None</span></p> </td><td style="width:361.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">不使用插值图片数据。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:82.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">High</span></p> </td><td style="background-color:#f8f8f8;width:361.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">高度使用插值图片数据，可能会影响图片渲染的速度。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:82.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Medium</span></p> </td><td style="width:361.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">中度使用插值图片数据。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:82.65pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Low</span></p> </td><td style="background-color:#f8f8f8;width:361.55pt;"> <p style="margin-left:0;"><span style="color:#333333;">低度使用插值图片数据。</span></p> </td></tr></tbody></table></div>ImageRenderMode枚举说明<div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:96.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:347.3pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:96.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Original</span></p> </td><td style="width:347.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">按照原图进行渲染，包括颜色。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:96.9pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">Template</span></p> </td><td style="background-color:#f8f8f8;width:347.3pt;"> <p style="margin-left:0;"><span style="color:#333333;">将图像渲染为模板图像，忽略图片的颜色信息。</span></p> </td></tr></tbody></table></div><p>事件</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:245.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:198.75pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>功能描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:245.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onComplete(callback: (event?: { width: number, height: number, componentWidth: number,componentHeight: number, loadingStatus: number }) =&gt; void)</span></p> </td><td style="width:198.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">图片成功加载时触发该回调，返回成功加载的图源尺寸。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:245.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onError(callback: (event?: { componentWidth: number, componentHeight: number }) =&gt; void)</span></p> </td><td style="background-color:#f8f8f8;width:198.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">图片加载出现异常时触发该回调。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:245.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">onFinish(event: () =&gt; void)</span></p> </td><td style="width:198.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">当加载的源文件为带动效的svg图片时，当svg动效播放完成时会触发这个回调，如果动效为无限循环动效，则不会触发这个回调。</span></p> </td></tr></tbody></table></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Image</span>($r(<span class="string">&#x27;app.media.icon&#x27;</span>)).<span class="title function_">width</span>(<span class="string">&#x27;80vp&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="😴像素单位"><a href="#😴像素单位" class="headerlink" title="😴像素单位"></a>😴像素单位</h1><p>像素单位 提供4种像素单位，框架采用vp为基准数据单位。</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:34.6pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>名称</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:409.6pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:34.6pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">px</span></p> </td><td style="width:409.6pt;"> <p style="margin-left:0;"><span style="color:#333333;">屏幕物理像素单位。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:34.6pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">vp</span></p> </td><td style="background-color:#f8f8f8;width:409.6pt;"> <p style="margin-left:0;"><span style="color:#333333;">屏幕密度相关像素，根据屏幕像素密度转换为屏幕物理像素，当数值不带单位时，默认单位vp。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:34.6pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">fp</span></p> </td><td style="width:409.6pt;"> <p style="margin-left:0;"><span style="color:#333333;">字体像素，与vp类似适用屏幕密度变化，随系统字体大小设置变化。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:34.6pt;"> <p style="margin-left:0cm;text-align:center;"><span style="color:#333333;">lpx</span></p> </td><td style="background-color:#f8f8f8;width:409.6pt;"> <p style="margin-left:0;"><span style="color:#333333;">视窗逻辑像素单位，lpx单位为实际屏幕宽度与逻辑宽度（通过designWidth配置）的比值。如配置designWidth为720时，在实际宽度为1440物理像素的屏幕上，1lpx为2px大小。</span></p> </td></tr></tbody></table></div><p>像素单位转换 提供其他单位与px单位互相转换的方法。</p><div class="table-box"><table border="1" cellspacing="0" style="margin-left:.3pt;width:444.2pt;"><tbody><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:197.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;"><strong>接口</strong></span></p> </td><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:246.75pt;"> <p style="margin-left:0;"><span style="color:#333333;"><strong>描述</strong></span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:197.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">vp2px(value : number) : number</span></p> </td><td style="width:246.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">将vp单位的数值转换为以px为单位的数值。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:197.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">px2vp(value : number) : number</span></p> </td><td style="background-color:#f8f8f8;width:246.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">将px单位的数值转换为以vp为单位的数值。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:197.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">fp2px(value : number) : number</span></p> </td><td style="width:246.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">将fp单位的数值转换为以px为单位的数值。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:197.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">px2fp(value : number) : number</span></p> </td><td style="background-color:#f8f8f8;width:246.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">将px单位的数值转换为以fp为单位的数值。</span></p> </td></tr><tr><td style="border-color:#dfe2e5;width:197.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">lpx2px(value : number) : number</span></p> </td><td style="width:246.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">将lpx单位的数值转换为以px为单位的数值。</span></p> </td></tr><tr><td style="background-color:#f8f8f8;border-color:#dfe2e5;width:197.45pt;"> <p style="margin-left:.1pt;"><span style="color:#333333;">px2lpx(value : number) : number</span></p> </td><td style="background-color:#f8f8f8;width:246.75pt;"> <p style="margin-left:0;"><span style="color:#333333;">将px单位的数值转换为以lpx为单位的数值。</span></p> </td></tr></tbody></table></div><h1 id="🛰️预览器"><a href="#🛰️预览器" class="headerlink" title="🛰️预览器"></a>🛰️预览器</h1><p>编辑器常用的 真机log 预览器log<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042123.jpg"  ><br>预览编辑器<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042124.jpg"  ><br> 组件预览<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042125.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042126.jpg"  ></p><h1 id="👉请求后端接口测试"><a href="#👉请求后端接口测试" class="headerlink" title="👉请求后端接口测试"></a>👉请求后端接口测试</h1><p>import ohos.net.http</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// test.ets</span></span><br><span class="line"><span class="keyword">import</span> http <span class="keyword">from</span> <span class="string">&#x27;@ohos.net.http&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span>  <span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 每一个httpRequest对应一个HTTP请求任务，不可复用</span></span><br><span class="line">  <span class="keyword">let</span> httpRequest = http.<span class="title function_">createHttp</span>();</span><br><span class="line">  <span class="comment">// 用于订阅HTTP响应头，此接口会比request请求先返回。可以根据业务需要订阅此消息</span></span><br><span class="line">  <span class="comment">// 从API 8开始，使用on(&#x27;headersReceive&#x27;, Callback)替代on(&#x27;headerReceive&#x27;, AsyncCallback)。 8+</span></span><br><span class="line">  httpRequest.<span class="title function_">on</span>(<span class="string">&#x27;headersReceive&#x27;</span>, <span class="function">(<span class="params">header</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&#x27;header: &#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(header));</span><br><span class="line">  &#125;);</span><br><span class="line">  httpRequest.<span class="title function_">request</span>(</span><br><span class="line">    <span class="comment">// 填写HTTP请求的URL地址，可以带参数也可以不带参数。URL地址需要开发者自定义。请求的参数可以在extraData中指定</span></span><br><span class="line">    <span class="string">&quot;/api/userApi/RegIMUser&quot;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">method</span>: http.<span class="property">RequestMethod</span>.<span class="property">POST</span>, <span class="comment">// 可选，默认为http.RequestMethod.GET</span></span><br><span class="line">      <span class="comment">// 开发者根据自身业务需要添加header字段</span></span><br><span class="line">      <span class="attr">header</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 当使用POST请求时此字段用于传递内容</span></span><br><span class="line">      <span class="attr">extraData</span>: &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="string">&quot;mobile&quot;</span>: <span class="string">&quot;20240419&quot;</span>,</span><br><span class="line">        <span class="string">&quot;password&quot;</span>: <span class="string">&quot;123123&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ucode&quot;</span>: <span class="string">&quot;666666&quot;</span></span><br><span class="line"> </span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">expectDataType</span>: http.<span class="property">HttpDataType</span>.<span class="property">STRING</span>, <span class="comment">// 可选，指定返回数据的类型</span></span><br><span class="line">      <span class="attr">usingCache</span>: <span class="literal">true</span>, <span class="comment">// 可选，默认为true</span></span><br><span class="line">      <span class="attr">priority</span>: <span class="number">1</span>, <span class="comment">// 可选，默认为1</span></span><br><span class="line">      <span class="attr">connectTimeout</span>: <span class="number">60000</span>, <span class="comment">// 可选，默认为60000ms</span></span><br><span class="line">      <span class="attr">readTimeout</span>: <span class="number">60000</span>, <span class="comment">// 可选，默认为60000ms</span></span><br><span class="line">      <span class="attr">usingProtocol</span>: http.<span class="property">HttpProtocol</span>.<span class="property">HTTP1_1</span>, <span class="comment">// 可选，协议类型默认值由系统自动指定</span></span><br><span class="line">    &#125;, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!err) &#123;</span><br><span class="line"> </span><br><span class="line">      <span class="comment">// data.result为HTTP响应内容，可根据业务需要进行解析</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&#x27;Result:&#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data.<span class="property">result</span>));</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&#x27;code:&#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data.<span class="property">responseCode</span>));</span><br><span class="line">      <span class="comment">// data.header为HTTP响应头，可根据业务需要进行解析</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&#x27;header:&#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data.<span class="property">header</span>));</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&#x27;cookies:&#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data.<span class="property">cookies</span>)); <span class="comment">// 8+</span></span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data.<span class="property">result</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&#x27;error:&#x27;</span> + <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err));</span><br><span class="line">      <span class="comment">// 取消订阅HTTP响应头事件</span></span><br><span class="line">      httpRequest.<span class="title function_">off</span>(<span class="string">&#x27;headersReceive&#x27;</span>);</span><br><span class="line">      <span class="comment">// 当该请求使用完毕时，调用destroy方法主动销毁</span></span><br><span class="line">      httpRequest.<span class="title function_">destroy</span>();</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>index.ets调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// index.ets</span></span><br><span class="line"><span class="keyword">import</span> &#123;test&#125; <span class="keyword">from</span> <span class="string">&#x27;../Common/Stest&#x27;</span></span><br><span class="line"> </span><br><span class="line">  <span class="title function_">onPageShow</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&#x27;Index onPageShow&#x27;</span>);</span><br><span class="line">     <span class="keyword">const</span>  tests = <span class="title function_">test</span>();</span><br><span class="line"> </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>请求结果</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042127.jpg"  ></p><p>sql查询</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@v5/v2/2024042128.jpg"  ></p><p>End 🦉</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HarmonyOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET 反编译</title>
      <link href="/2024/04/21/NET-Reflector/"/>
      <url>/2024/04/21/NET-Reflector/</url>
      
        <content type="html"><![CDATA[<p>反编译是对程序进行逆向分析、研究，以推导出软件产品所使用的思路、原理、结构、算法、处理过程、运行方法等设计要素。</p><p>反编译.NET程序需要使用专门的反编译工具</p><h1 id="🧿使用dotPeek进行反编译"><a href="#🧿使用dotPeek进行反编译" class="headerlink" title="🧿使用dotPeek进行反编译"></a>🧿使用dotPeek进行反编译</h1><p>1.下载dotPeek<br>dotPeek：JetBrains 出品的免费 .NET 反编译器与程序集浏览器</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240421aaa.jpg"  ></p><p>2.File &gt; Open</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240421aa2.jpg"  ></p><p>3.打开需要反编译的文件方法</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240421aa3.jpg"  ></p><h1 id="🧝‍♂️使用ILSpy进行反编译"><a href="#🧝‍♂️使用ILSpy进行反编译" class="headerlink" title="🧝‍♂️使用ILSpy进行反编译"></a>🧝‍♂️使用ILSpy进行反编译</h1><ol><li>下载并安装<br>ILSpy：<a class="link"   href="https://github.com/icsharpcode/ILSpy/releases" >https://github.com/icsharpcode/ILSpy/releases<i class="fas fa-external-link-alt"></i></a></li></ol><p>2.文件-打开-exe</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240421aa4.jpg"  ></p><p>3.查看反编译内容</p><p>找到Form1 可以看到里面反编译的内容</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240421aa5.jpg"  ></p><p>复制到vs里面 </p><p>替换代码添加相关引用即可</p><h1 id="🤖使用Reflector进行反编译"><a href="#🤖使用Reflector进行反编译" class="headerlink" title="🤖使用Reflector进行反编译"></a>🤖使用Reflector进行反编译</h1><p>1.File &gt; Open Assembly</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240421aa6.jpg"  ><br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240421aa7.jpg"  ></p><p>2.点开WinTime.exe内容</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240421aa8.jpg"  ></p><p>3.查看反编译内容</p><p>可以看到反编译出来的控件和方法<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240421aa9.jpg"  ></p><p>点开方法，可以看到方法内的内容</p><p>注意：</p><p>反编译的代码可能不完全等同于原始源代码，因为编译器可能会进行优化，并且某些信息可能因为混淆技术而无法恢复。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET SMTP</title>
      <link href="/2024/04/20/NET-Smtp/"/>
      <url>/2024/04/20/NET-Smtp/</url>
      
        <content type="html"><![CDATA[<p>SMTP（Simple Mail Transfer Protocol）是用于电子邮件传输的规则集，可以从邮件客户端向接收电子邮件服务器发送、中继或转发邮件。发件人可使用SMTP 服务器来执行发送电子邮件的过程。SMTP服务器则是按照这些规则中转电子邮件的服务器。</p><p>IMAP可以理解为收邮件。<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa01.jpg"  ></p><h1 id="🐧使用QQ邮箱发邮件"><a href="#🐧使用QQ邮箱发邮件" class="headerlink" title="🐧使用QQ邮箱发邮件"></a>🐧使用QQ邮箱发邮件</h1><p>首先需要设置开启邮箱的SMTP服务</p><p>登录(<a class="link"   href="https://mail.qq.com/)%E7%94%B5%E8%84%91%E7%BD%91%E9%A1%B5%E7%89%88%E9%82%AE%E7%AE%B1%E8%BF%9B%E5%85%A5%E3%80%90%E8%AE%BE%E7%BD%AE%E3%80%91-%3E%E3%80%90%E5%B8%90%E6%88%B7%E3%80%91-%3E%E3%80%90POP3/IMAP/SMTP%E6%9C%8D%E5%8A%A1%E3%80%91%EF%BC%8C" >https://mail.qq.com/)电脑网页版邮箱进入【设置】-&gt;【帐户】-&gt;【POP3/IMAP/SMTP服务】，<i class="fas fa-external-link-alt"></i></a> 开启或关闭相应服务最后保存更改即可。<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa02.jpg"  ></p><p>QQ邮箱 POP3 和 SMTP 服务器地址设置如下：</p><p>邮箱POP3服务器（端口995）SMTP服务器（端口465或587）<br>qq.compop.qq.comsmtp.qq.com<br>SMTP服务器需要身份验证。</p><p>以下是示例代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> ConsoleApp1Test;</span><br><span class="line"><span class="comment">//xxx</span></span><br><span class="line"><span class="built_in">string</span> server = <span class="string">&quot;smtp.qq.com&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> username = <span class="string">&quot;my test email&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> password = <span class="string">&quot;xxx;</span></span><br><span class="line"><span class="string">string from = &quot;</span><span class="keyword">from</span>@qq.com<span class="string">&quot;;</span></span><br><span class="line"><span class="string">string to =   &quot;</span>to@qq.com<span class="string">&quot;;</span></span><br><span class="line"><span class="string">string subject = &quot;</span>Test Email<span class="string">&quot;;</span></span><br><span class="line"><span class="string">string content = &quot;</span>This <span class="keyword">is</span> a test email sent asynchronously.<span class="string">&quot;;</span></span><br><span class="line"><span class="string">bool isHtml = false; // 是否为 HTML 格式</span></span><br><span class="line"><span class="string">try</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    bool success = await MailHelper. SendMailAsync(server, username, password, from, to, null, subject, content, isHtml);</span></span><br><span class="line"><span class="string">    if (success)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        Console.WriteLine(&quot;</span>邮件发送成功！<span class="string">&quot;);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        Console.WriteLine(&quot;</span>邮件发送失败！<span class="string">&quot;);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">catch (Exception ex)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    Console.WriteLine($&quot;</span>邮件发送出错：&#123;ex.Message&#125;<span class="string">&quot;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">using System;</span></span><br><span class="line"><span class="string">using System.Collections.Generic;</span></span><br><span class="line"><span class="string">using System.Linq;</span></span><br><span class="line"><span class="string">using System.Net.Mail;</span></span><br><span class="line"><span class="string">using System.Text;</span></span><br><span class="line"><span class="string">using System.Threading.Tasks;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">namespace ConsoleApp1Test</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    internal class MailHelper</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">      public static async Task&lt;bool&gt; SendMailAsync(string server, string username, string password, string from, string to, string cc, string subject, string content, bool isHtml)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        try</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            using (var smtp = new SmtpClient(server))</span></span><br><span class="line"><span class="string">            &#123;</span></span><br><span class="line"><span class="string">                smtp.UseDefaultCredentials = false;</span></span><br><span class="line"><span class="string">                smtp.Credentials = new System.Net.NetworkCredential(username, password);</span></span><br><span class="line"><span class="string">                smtp.EnableSsl = true; // 启用加密</span></span><br><span class="line"><span class="string">                smtp.DeliveryMethod = SmtpDeliveryMethod.Network;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                using (var mail = new MailMessage())</span></span><br><span class="line"><span class="string">                &#123;</span></span><br><span class="line"><span class="string">                    mail.From = new MailAddress(from);</span></span><br><span class="line"><span class="string">                    mail.To.Add(to);</span></span><br><span class="line"><span class="string">                    mail.SubjectEncoding = Encoding.UTF8;</span></span><br><span class="line"><span class="string">                    mail.Subject = subject;</span></span><br><span class="line"><span class="string">                    mail.IsBodyHtml = isHtml;</span></span><br><span class="line"><span class="string">                    mail.BodyEncoding = Encoding.UTF8;</span></span><br><span class="line"><span class="string">                    mail.Body = content;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                    await smtp.SendMailAsync(mail); // 异步发送邮件</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">                return true;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        catch (Exception err)</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            // 发送失败时的异常处理</span></span><br><span class="line"><span class="string">            // 可以在此处记录日志</span></span><br><span class="line"><span class="string">            return false;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa03.jpg"  ><br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa04.jpg"  ></p><h1 id="🐷使用网易邮箱发送邮件"><a href="#🐷使用网易邮箱发送邮件" class="headerlink" title="🐷使用网易邮箱发送邮件"></a>🐷使用网易邮箱发送邮件</h1><p>163网易免费邮</p><p>设置 &gt; POP3&#x2F;SMTP&#x2F;IMAP </p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa05.jpg"  ><br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa06.jpg"  ></p><p>使用网易邮箱发送邮件上述示例类似，只需替换相应的服务器地址、用户名、密码、发件人、收件人、主题、内容等信息即可。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> server = <span class="string">&quot;smtp.163.com&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> username = <span class="string">&quot;f@163.com&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> password = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> <span class="keyword">from</span> = <span class="string">&quot;f@163.com&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> to = <span class="string">&quot;t@qq.com&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> subject = <span class="string">&quot;Test163Email m&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> content = <span class="string">&quot;This is a test email &quot;</span>;</span><br><span class="line"><span class="built_in">bool</span> isHtml = <span class="literal">false</span>; <span class="comment">// 是否为 HTML 格式</span></span><br><span class="line">``` c<span class="meta">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">运行：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​&lt;img   onerror=<span class="string">&quot;notfound(this);&quot;</span>   src=<span class="string">&quot;https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa07.jpg&quot;</span> &gt;</span><br><span class="line">​&lt;img   onerror=<span class="string">&quot;notfound(this);&quot;</span>   src=<span class="string">&quot;https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa08.jpg&quot;</span> &gt;</span><br><span class="line">​&lt;img   onerror=<span class="string">&quot;notfound(this);&quot;</span>   src=<span class="string">&quot;https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa09.jpg&quot;</span> &gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"># 🐬使用谷歌邮箱发送邮件</span></span><br><span class="line"></span><br><span class="line">谷歌Gmail邮箱登陆地址：https:<span class="comment">//mail.google.com</span></span><br><span class="line"></span><br><span class="line">​&lt;img   onerror=<span class="string">&quot;notfound(this);&quot;</span>   src=<span class="string">&quot;https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa10.jpg&quot;</span> &gt;</span><br><span class="line">​&lt;img   onerror=<span class="string">&quot;notfound(this);&quot;</span>   src=<span class="string">&quot;https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa11.jpg&quot;</span> &gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">谷歌imap开通 smtp也自动开通 </span><br><span class="line"></span><br><span class="line">https:<span class="comment">//myaccount.google.com/</span></span><br><span class="line">​&lt;img   onerror=<span class="string">&quot;notfound(this);&quot;</span>   src=<span class="string">&quot;https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa12.jpg&quot;</span> &gt;</span><br><span class="line">​&lt;img   onerror=<span class="string">&quot;notfound(this);&quot;</span>   src=<span class="string">&quot;https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa13.jpg&quot;</span> &gt;</span><br><span class="line"></span><br><span class="line">接收邮件 (IMAP) 服务器imap.gmail.com要求 SSL：是端口：<span class="number">993</span></span><br><span class="line">发送邮件 (SMTP) 服务器smtp.gmail.com要求 SSL：是要求 TLS：是（如适用）使用身份验证：是SSL 端口：<span class="number">465</span>TLS/STARTTLS 端口：<span class="number">587</span></span><br><span class="line"></span><br><span class="line">使用谷歌邮箱修改对应的服务器地址、用户名、密码、发件人、收件人、主题、内容等信息即可。</span><br><span class="line">``` c<span class="meta">#</span></span><br><span class="line"><span class="built_in">string</span> server = <span class="string">&quot;smtp.gmail.com&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> username = <span class="string">&quot;f@gmail.com&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> password = <span class="string">&quot;xx&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> <span class="keyword">from</span> = <span class="string">&quot;f@gmail.com&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> to = <span class="string">&quot;t@qq.com&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> subject = <span class="string">&quot;TestSMTPEmail m&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> content = <span class="string">&quot;This is a test email sent using Gmail SMTP.m&quot;</span>;</span><br><span class="line"><span class="built_in">bool</span> isHtml = <span class="literal">false</span>; <span class="comment">// 是否为 HTML 格式</span></span><br></pre></td></tr></table></figure><p>运行：</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa14.jpg"  ><br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420aaa15.jpg"  ></p><p>📮有些免费邮箱对发信量有限制，可使用企业邮，多账号增加发信量。</p><p>END</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Socket to WebSocket</title>
      <link href="/2024/04/20/NET-Socket/"/>
      <url>/2024/04/20/NET-Socket/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>针对IOS App Proxy Server无法直连WebSocket，建立 Socket中转端。</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420311.jpg"  ></p><p>WebSocket 端：</p><p>WebSocket 端用于实现实时通信功能。</p><p>WebSocket 端通过 WebSocket 协议与中转端通信，中转端可以通过 WebSocket 或其他传输协议与 WebSocket 端建立连接，收发消息。</p><p>定义 SendMessageToChatRoomIP 和 JoinChatRoom，用于处理来自客户端的消息和连接事件。</p><p>中转端 C1 （Socket Server）：</p><p>中转端 C1 是一个独立的应用程序，用于连接WebSocket端，建立Socket服务。</p><p>中转端 C1 的主要功能是接收来自客户端 C2 的消息，并将其转发给 WebSocket 端，或者接收来自 WebSocket 端的消息，并转发给客户端 C2。</p><p>客户端 C2 x  N ：</p><p>客户端 C2 ，主要与中转端连接 发送数据，接收数据。</p><p>在客户端 C2 中，连接到中转端 C1、发送消息给中转端 C1、接收来自中转端 C1 的消息。</p><p>调用关系为：</p><p>客户端 C2 通过与中转端 C1 的通信，向 WebSocket 端发送消息或接收来自 WebSocket 端的消息。</p><p>中转端 C1 接收来自客户端 C2 的消息，并将其转发给 WebSocket 端，或者接收来自 WebSocket 端的消息，并转发给客户端 C2。</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420312.jpg"  ></p><h1 id="中转端实现"><a href="#中转端实现" class="headerlink" title="中转端实现"></a>中转端实现</h1><h2 id="1-连接WebSocket"><a href="#1-连接WebSocket" class="headerlink" title="1.连接WebSocket"></a>1.连接WebSocket</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">ConnectToServer</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        connection = <span class="keyword">new</span> HubConnectionBuilder()</span><br><span class="line">            .WithUrl(<span class="string">&quot;xxx/chathub&quot;</span>)<span class="comment">//</span></span><br><span class="line">            .Build();</span><br><span class="line"> </span><br><span class="line">        connection.On&lt;<span class="built_in">string</span>, <span class="built_in">string</span>, <span class="built_in">string</span>, <span class="built_in">string</span>&gt;(<span class="string">&quot;ReceiveMessage&quot;</span>, <span class="keyword">async</span> (user, message, clientIP, chatRoomId) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Received message from wsserver_sr : <span class="subst">&#123;user&#125;</span>: <span class="subst">&#123;message&#125;</span> |socketserver <span class="subst">&#123;clientIP&#125;</span>|<span class="subst">&#123;chatRoomId&#125;</span>&quot;</span>);</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 收到来自服务器的消息时，向客户端 C2 发送消息</span></span><br><span class="line">            <span class="keyword">await</span> SendMessageToClientC2(user, message, clientIP, chatRoomId);</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">await</span> connection.StartAsync();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Error connecting to SignalR server: <span class="subst">&#123;ex.Message&#125;</span>&quot;</span> + Environment.NewLine);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 收到消息时发送给对应客户端</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">SendMessageToClientC2</span>(<span class="params"><span class="built_in">string</span> user, <span class="built_in">string</span> message, <span class="built_in">string</span> clientIP, <span class="built_in">string</span> chatRoomId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 根据 chatRoomId 找到对应的客户端 C2，并发送消息</span></span><br><span class="line">    <span class="keyword">if</span> (chatRooms.ContainsKey(chatRoomId))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">byte</span>[] data = Encoding.ASCII.GetBytes(<span class="string">$&quot;<span class="subst">&#123;user&#125;</span>  <span class="subst">&#123;message&#125;</span>  |<span class="subst">&#123;clientIP&#125;</span>|<span class="subst">&#123;chatRoomId&#125;</span> &quot;</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> client <span class="keyword">in</span> chatRooms[chatRoomId])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">await</span> client.GetStream().WriteAsync(data, <span class="number">0</span>, data.Length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Chat room <span class="subst">&#123;chatRoomId&#125;</span> does not exist&quot;</span> + Environment.NewLine);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-建立中转端Socket端口"><a href="#2-建立中转端Socket端口" class="headerlink" title="2.建立中转端Socket端口"></a>2.建立中转端Socket端口</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StartListening</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!listening)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> port = <span class="number">10086</span>; <span class="comment">// 监听端口</span></span><br><span class="line">            server = <span class="keyword">new</span> TcpListener(IPAddress.Any, port);</span><br><span class="line">            server.Start();</span><br><span class="line">            listening = <span class="literal">true</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Server listening on port <span class="subst">&#123;port&#125;</span>&quot;</span> + Environment.NewLine);</span><br><span class="line"> </span><br><span class="line">            Task.Run(() =&gt; AcceptClients());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Error starting server: <span class="subst">&#123;ex.Message&#125;</span>&quot;</span> + Environment.NewLine);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-向客户端发消息"><a href="#3-向客户端发消息" class="headerlink" title="3.向客户端发消息"></a>3.向客户端发消息</h2> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">AcceptClients</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (listening)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            TcpClient client = <span class="keyword">await</span> server.AcceptTcpClientAsync();</span><br><span class="line">            Task.Run(() =&gt; HandleClient(client));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Error accepting client: <span class="subst">&#123;ex.Message&#125;</span>&quot;</span> + Environment.NewLine);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-监听客户端连接"><a href="#4-监听客户端连接" class="headerlink" title="4.监听客户端连接"></a>4.监听客户端连接</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">AcceptClients</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (listening)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            TcpClient client = <span class="keyword">await</span> server.AcceptTcpClientAsync();</span><br><span class="line">            Task.Run(() =&gt; HandleClient(client));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Error accepting client: <span class="subst">&#123;ex.Message&#125;</span>&quot;</span> + Environment.NewLine);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-处理客户端连接"><a href="#5-处理客户端连接" class="headerlink" title="5.处理客户端连接"></a>5.处理客户端连接</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">HandleClient</span>(<span class="params">TcpClient client</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    NetworkStream stream = client.GetStream();</span><br><span class="line">    <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];</span><br><span class="line">    <span class="built_in">int</span> bytesRead;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span> (client.Connected)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            bytesRead = <span class="keyword">await</span> stream.ReadAsync(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">            <span class="built_in">string</span> message = Encoding.ASCII.GetString(buffer, <span class="number">0</span>, bytesRead);</span><br><span class="line">            ProcessMessage(message, client);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Error receiving message: <span class="subst">&#123;ex.Message&#125;</span>&quot;</span> + Environment.NewLine);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 客户端断开连接时，从聊天室中移除</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> chatRoomId <span class="keyword">in</span> chatRooms.Keys)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (chatRooms[chatRoomId].Contains(client))</span><br><span class="line">        &#123;</span><br><span class="line">            chatRooms[chatRoomId].Remove(client);</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Client disconnected from chat room <span class="subst">&#123;chatRoomId&#125;</span>&quot;</span> + Environment.NewLine);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-处理连接"><a href="#6-处理连接" class="headerlink" title="6.处理连接"></a>6.处理连接</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">ProcessMessage</span>(<span class="params"><span class="built_in">string</span> message, TcpClient client</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span>[] parts = message.Split(<span class="string">&#x27;|&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (parts.Length &gt;= <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> command = parts[<span class="number">0</span>];</span><br><span class="line">        <span class="built_in">string</span> chatRoomId = parts[<span class="number">1</span>];</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">switch</span> (command)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;JoinChatRoom&quot;</span>:</span><br><span class="line">                <span class="keyword">await</span> JoinChatRoom(chatRoomId, client);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;SendMessageToChatRoomIP2&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span> (parts.Length &gt;= <span class="number">4</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">string</span> user = parts[<span class="number">2</span>];</span><br><span class="line">                    <span class="built_in">string</span> msg = parts[<span class="number">3</span>];</span><br><span class="line">                    <span class="comment">//  await SendMessageToChatRoom(chatRoomId, user, msg);</span></span><br><span class="line">                    <span class="keyword">await</span> SendMessageToChatRoomAddress(chatRoomId, user, msg, client);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="literal">default</span>:</span><br><span class="line">                Console.WriteLine(<span class="string">$&quot;Invalid command: <span class="subst">&#123;command&#125;</span>&quot;</span> + Environment.NewLine);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JoinChatRoom 异步调用服务端的JoinChatRoom </p><p>SendMessageToChatRoomIP2 异步调用SendMessage  </p><h2 id="7-运行"><a href="#7-运行" class="headerlink" title="7.运行"></a>7.运行</h2><p>本地运行<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420313.jpg"  ></p><p>发布到linux<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420314.jpg"  ></p><p>run  Server listening on port 10860</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tln查看端口 （tuln） </span><br></pre></td></tr></table></figure><p>也可以优化封装成WinForm程序，收发消息可视化。</p><p>点击启动socket端口调用 1.连接websocket 2.监听socket   </p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420315.jpg"  ></p><p>也可以封装成系统服务，与进程一样藏在后台运行。</p><h1 id="客户端实现"><a href="#客户端实现" class="headerlink" title="客户端实现"></a>客户端实现</h1><h2 id="1-连接Socket端"><a href="#1-连接Socket端" class="headerlink" title="1.连接Socket端"></a>1.连接Socket端</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">MainForm_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        client = <span class="keyword">new</span> TcpClient();</span><br><span class="line">        <span class="keyword">await</span> client.ConnectAsync(<span class="string">&quot;192.168.80.123&quot;</span>, <span class="number">10086</span>); </span><br><span class="line">        stream = client.GetStream();</span><br><span class="line">        connected = <span class="literal">true</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 连接成功后，调用 JoinChatRoom 方法加入聊天室</span></span><br><span class="line">        <span class="keyword">await</span> JoinChatRoom(<span class="string">&quot;room001&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        Task.Run(ReceiveMessages);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        textBoxReceivedMessages.AppendText(<span class="string">$&quot;Error connecting to server: <span class="subst">&#123;ex.Message&#125;</span>&quot;</span> + Environment.NewLine);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-加入ChatRoom"><a href="#2-加入ChatRoom" class="headerlink" title="2.加入ChatRoom"></a>2.加入ChatRoom</h1><p>JoinChatRoom中转到Server端再加入聊天室</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">JoinChatRoom</span>(<span class="params"><span class="built_in">string</span> chatRoomId</span>)</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="comment">// 发送消息给中转端 C1，请求加入聊天室</span></span><br><span class="line">         <span class="built_in">byte</span>[] data = Encoding.ASCII.GetBytes(<span class="string">$&quot;JoinChatRoom|<span class="subst">&#123;chatRoomId&#125;</span>|J&quot;</span>);</span><br><span class="line">         <span class="keyword">await</span> stream.WriteAsync(data, <span class="number">0</span>, data.Length);</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h1 id="3-发送消息"><a href="#3-发送消息" class="headerlink" title="3.发送消息"></a>3.发送消息</h1><p>发送到Socket中转端</p><pre><code> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">SendMessageToChatRoom</span>(<span class="params"><span class="built_in">string</span> chatRoomId, <span class="built_in">string</span> message</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 发送消息给中转端 C1，请求向指定聊天室发送消息</span></span><br><span class="line">    <span class="built_in">byte</span>[] data = Encoding.ASCII.GetBytes(<span class="string">$&quot;SendMessageToChatRoomIP2|<span class="subst">&#123;chatRoomId&#125;</span>|client2m|<span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">await</span> stream.WriteAsync(data, <span class="number">0</span>, data.Length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><h1 id="4-接收消息"><a href="#4-接收消息" class="headerlink" title="4.接收消息"></a>4.接收消息</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> Task <span class="title">ReceiveMessages</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="built_in">int</span> bytesRead;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">while</span> (connected)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    bytesRead = <span class="keyword">await</span> stream.ReadAsync(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">                    <span class="built_in">string</span> message = Encoding.ASCII.GetString(buffer, <span class="number">0</span>, bytesRead);</span><br><span class="line">                    DisplayMessage(message);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">                &#123;</span><br><span class="line">                    textBoxReceivedMessages.AppendText(<span class="string">$&quot;Error receiving message: <span class="subst">&#123;ex.Message&#125;</span>&quot;</span> + Environment.NewLine);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DisplayMessage</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (InvokeRequired)</span><br><span class="line">            &#123;</span><br><span class="line">                Invoke(<span class="keyword">new</span> Action&lt;<span class="built_in">string</span>&gt;(DisplayMessage), message);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            textBoxReceivedMessages.AppendText(message + Environment.NewLine);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="5-点击事件"><a href="#5-点击事件" class="headerlink" title="5.点击事件"></a>5.点击事件</h1><p>Send</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">buttonSend_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">if</span> (!connected)</span><br><span class="line">         &#123;</span><br><span class="line">             textBoxReceivedMessages.AppendText(<span class="string">&quot;Not connected to server.&quot;</span> + Environment.NewLine);</span><br><span class="line">             <span class="keyword">return</span>;</span><br><span class="line">         &#125;</span><br><span class="line"> </span><br><span class="line">         <span class="built_in">string</span> message = textBoxSendMessage.Text;</span><br><span class="line"> </span><br><span class="line">         <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(message))</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="comment">// 发送消息给中转端 C1，请求向聊天室发送消息</span></span><br><span class="line">             <span class="keyword">await</span> SendMessageToChatRoom(<span class="string">&quot;room001&quot;</span>, message);</span><br><span class="line">             textBoxSendMessage.Clear();</span><br><span class="line">             textBoxReceivedMessages.AppendText(<span class="string">&quot;Sent message to chat room: room001&quot;</span>  + Environment.NewLine);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">             textBoxReceivedMessages.AppendText(<span class="string">&quot;Please enter a message.&quot;</span> + Environment.NewLine);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h1 id="6-运行"><a href="#6-运行" class="headerlink" title="6.运行"></a>6.运行</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420316.jpg"  ></p><p>服务端启动</p><p>Server listening on port 10086</p><p>服务端发收发消息到中转端</p><p>Sent message to chat room: room001<br>client2m  hihihi|socketclient 192.168.80.123  |::ffff:183.7.113.105|room001 </p><p>中转端拿到客户端信息-&gt;WebSocket端-&gt;中转端接收-&gt;客户端接收</p><p>Client joined chat room room001<br>Received message from WSSserver_sr : client2m: hihihi|socketclient 192.168.80.123 |socketserver:::ffff:183.7.113.105|room001</p><p>客户端也可以用IOS SOCKET5发送消息</p><pre><code class="c#">//...          dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^&#123;                    NSData * sendData = [@&quot;JoinChatRoom|room001&quot; dataUsingEncoding:NSUTF8StringEncoding];                    [self.socket writeData:sendData withTimeout:-1 tag:1];                                        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^&#123;                        NSData * sendData = [@&quot;SendMessageToChatRoomIP2|room001|userid001|hello&quot; dataUsingEncoding:NSUTF8StringEncoding];                        [self.socket writeData:sendData withTimeout:-1 tag:2];                        [self.socket readDataWithTimeout:-1 tag:1];                    &#125;);                &#125;); //...</code></pre><p>Run</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240420317.jpg"  ></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>.NET JWT </title>
      <link href="/2024/04/19/NET-JWT/"/>
      <url>/2024/04/19/NET-JWT/</url>
      
        <content type="html"><![CDATA[<p>前言</p><p>JWT (JSON Web Token) 是一种安全传输信息的开放标准，由Header、Payload和Signature三部分组成。它主要用于身份验证、信息交换和授权。JWT可验证用户身份，确保访问权限，实现单点登录，并在客户端和服务器之间安全地交换信息。因其简单、安全和便捷，JWT在现代Web应用中广泛使用。</p><p>用JWT有多个原因：</p><p>无状态的身份验证：JWT允许服务器无需保存用户的会话信息，因为所有必要的信息都存储在令牌本身中。这降低了服务器的存储需求，并提高了系统的可扩展性。</p><p>跨域身份验证：由于JWT是自我包含的，并且可以被轻松传递，因此它非常适合跨域身份验证。用户可以在一个服务上验证身份，然后使用相同的令牌访问另一个服务，从而实现单点登录（SSO）。</p><p>安全性：JWT可以通过使用强大的加密算法（如HS256, RS256等）进行签名，以确保其完整性和真实性。服务器可以使用公钥验证令牌的签名，从而确保它没有被篡改，并且确实是由受信任的颁发者签发的。</p><p>减少数据库查询：由于用户的身份信息都存储在JWT中，服务器无需每次都去数据库中查询用户的身份信息，从而减少了数据库的压力和查询时间。</p><p>可定制性：JWT的Payload部分可以包含自定义的信息，如用户角色、权限等，这使得JWT非常灵活，并可以根据具体需求进行定制。</p><p>易于分发和共享：JWT可以轻松地通过网络传输，并且可以在多个服务和客户端之间共享，这使得它在微服务架构和分布式系统中非常有用。</p><p>标准化和互操作性：JWT是一个开放标准（RFC 7519），这意味着不同的系统和语言都可以使用相同的方式生成和验证JWT，从而提高了系统的互操作性。</p><p>环境 Win10  VS2022  .NET8 </p><h1 id="✨-建立项目jwttest"><a href="#✨-建立项目jwttest" class="headerlink" title="✨ 建立项目jwttest"></a>✨ 建立项目jwttest</h1><h2 id="1-创建TestJwtController"><a href="#1-创建TestJwtController" class="headerlink" title="1.创建TestJwtController"></a>1.创建TestJwtController</h2><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041501.jpg"  ></p><h2 id="2-下载JWT"><a href="#2-下载JWT" class="headerlink" title="2.下载JWT"></a>2.下载JWT</h2><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041502.jpg"  ></p><h2 id="3-建实体类"><a href="#3-建实体类" class="headerlink" title="3.建实体类"></a>3.建实体类</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 用户信息类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginRs</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 用户ID</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> UserId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> 用户密码</span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> PasswordMD5 &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 用户登录信息类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 用户信息</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> UserId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 检验时间</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> DateTime Expires &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> rsmodel</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RsModel</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 是否成功</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> isOk &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 返回值</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> code &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 返回消息</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> msg &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 返回数据  </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">object</span> rsData &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-添加post-login"><a href="#4-添加post-login" class="headerlink" title="4.添加post login"></a>4.添加post login</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// POST api/&lt;ValuesController&gt;</span></span><br><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Login</span>(<span class="params">[FromBody] LoginRs loginRequest</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (loginRequest == <span class="literal">null</span>) <span class="keyword">return</span> JsonConvert.SerializeObject(<span class="keyword">new</span> RsModel() &#123; code = <span class="number">0</span>, isOk = <span class="literal">false</span>, msg = <span class="string">&quot;登录信息为空！&quot;</span> &#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="meta">#<span class="keyword">region</span>  判断userid pwd</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (loginRequest.UserId != <span class="string">&quot;admin&quot;</span> || loginRequest.PasswordMD5 != <span class="string">&quot;admin&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> JsonConvert.SerializeObject(<span class="keyword">new</span> RsModel() &#123; code = <span class="number">0</span>, isOk = <span class="literal">false</span>, msg = <span class="string">&quot;用户名和密码不正确！&quot;</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line">    LoginInfo Info = <span class="keyword">new</span> LoginInfo()</span><br><span class="line">    &#123;</span><br><span class="line">        UserId = loginRequest.UserId,</span><br><span class="line">        Expires = DateTime.Now.AddDays(<span class="number">1</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> <span class="built_in">string</span> secretKey = <span class="string">&quot;myseckey&quot;</span>;<span class="comment">//口令加密秘钥</span></span><br><span class="line">    <span class="built_in">byte</span>[] key = Encoding.UTF8.GetBytes(secretKey);</span><br><span class="line">    IJwtAlgorithm algorithm = <span class="keyword">new</span> HMACSHA256Algorithm();<span class="comment">//加密方式</span></span><br><span class="line">    IJsonSerializer serializer = <span class="keyword">new</span> JsonNetSerializer();<span class="comment">//序列化Json</span></span><br><span class="line">    IBase64UrlEncoder urlEncoder = <span class="keyword">new</span> JwtBase64UrlEncoder();<span class="comment">//base64加解密</span></span><br><span class="line">    IJwtEncoder encoder = <span class="keyword">new</span> JwtEncoder(algorithm, serializer, urlEncoder);<span class="comment">//JWT编码</span></span><br><span class="line">    <span class="keyword">var</span> token = encoder.Encode(Info, key);<span class="comment">//生成令牌</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> JsonConvert.SerializeObject(<span class="keyword">new</span> RsModel() &#123; code = <span class="number">1</span>, isOk = <span class="literal">true</span>, rsData = token, msg = <span class="string">&quot;登录成功！&quot;</span> &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041503.jpg"  ></p><h2 id="5-登录验证"><a href="#5-登录验证" class="headerlink" title="5.登录验证"></a>5.登录验证</h2><p>这里使用swagger方便检验    👉    .NET MVC API Swagger入坑</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041504.jpg"  ></p><h2 id="6-测试没问题，写个JwtHelper"><a href="#6-测试没问题，写个JwtHelper" class="headerlink" title="6.测试没问题，写个JwtHelper"></a>6.测试没问题，写个JwtHelper</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">JwtHelper</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">string</span> JwtKey = <span class="string">&quot;mysecret&quot;</span>;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 获取加密解密</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> IJwtEncoder <span class="title">GetEncoder</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        IJwtAlgorithm algorithm = <span class="keyword">new</span> HMACSHA256Algorithm();<span class="comment">//加密方式</span></span><br><span class="line">        IJsonSerializer serializer = <span class="keyword">new</span> JsonNetSerializer();<span class="comment">//序列化Json</span></span><br><span class="line">        IBase64UrlEncoder urlEncoder = <span class="keyword">new</span> JwtBase64UrlEncoder();<span class="comment">//base64加解密</span></span><br><span class="line">        IJwtEncoder encoder = <span class="keyword">new</span> JwtEncoder(algorithm, serializer, urlEncoder);<span class="comment">//JWT编码</span></span><br><span class="line">        <span class="keyword">return</span> encoder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 获取解密密钥</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> IJwtDecoder <span class="title">GetDecoder</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        IJsonSerializer serializer = <span class="keyword">new</span> JsonNetSerializer();</span><br><span class="line">        IDateTimeProvider provider = <span class="keyword">new</span> UtcDateTimeProvider();</span><br><span class="line">        IJwtValidator validator = <span class="keyword">new</span> JwtValidator(serializer, provider);</span><br><span class="line">        IBase64UrlEncoder urlEncoder = <span class="keyword">new</span> JwtBase64UrlEncoder();</span><br><span class="line">        IJwtAlgorithm algorithm = <span class="keyword">new</span> HMACSHA256Algorithm();</span><br><span class="line">        IJwtDecoder decoder = <span class="keyword">new</span> JwtDecoder(serializer, validator, urlEncoder, algorithm);</span><br><span class="line">        <span class="keyword">return</span> decoder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 加密</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Encode</span>(<span class="params"><span class="built_in">object</span> payload</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> encoder = GetEncoder();</span><br><span class="line">        <span class="keyword">var</span> token = encoder.Encode(payload, JwtKey);</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 解密</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> T <span class="title">Decode</span>&lt;<span class="title">T</span>&gt;(<span class="params"><span class="built_in">string</span> token</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> decoder = GetDecoder();</span><br><span class="line">        <span class="keyword">var</span> data = decoder.Decode(token, JwtKey);</span><br><span class="line">        <span class="keyword">var</span> res = JsonConvert.DeserializeObject&lt;T&gt;(data);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 解密，只返回Json文本</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;token&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Decode</span>(<span class="params"><span class="built_in">string</span> token</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> decoder = GetDecoder();</span><br><span class="line">        <span class="keyword">var</span> data = decoder.Decode(token, JwtKey);</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041505.jpg"  ><br>把中间的加密算法替换成helper的Encode</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> token = JwtHelper.Encode(Info);</span><br></pre></td></tr></table></figure><h2 id="7-添加token加密类"><a href="#7-添加token加密类" class="headerlink" title="7.添加token加密类"></a>7.添加token加密类</h2><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041506.jpg"  ></p><p>调用Decode方法 解密token</p><h2 id="8-测试JWT"><a href="#8-测试JWT" class="headerlink" title="8.测试JWT"></a>8.测试JWT</h2><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041507.jpg"  ></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;isOk&quot;</span>:<span class="literal">true</span>,<span class="string">&quot;code&quot;</span>:<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>:<span class="string">&quot;登录成功！&quot;</span>,<span class="string">&quot;rsData&quot;</span>:<span class="string">&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJVc2VySWQiOiJhZG1pbiIsIkV4cGlyZXMiOiIyMDI0LTA0LTEwVDAxOjUxOjUwLjk5NDgxNzQrMDA6MDAifQ.eYJovquJFezVhfdLp-Hro2vnMoQsUwgXLkYcZSYEy7U&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>测试解密</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041508.jpg"  ></p><p>解密成功</p><h1 id="⭐️JwtBearer"><a href="#⭐️JwtBearer" class="headerlink" title="⭐️JwtBearer"></a>⭐️JwtBearer</h1><h2 id="9、添加NuGet包Microsoft-AspNetCore-Authentication-JwtBearer"><a href="#9、添加NuGet包Microsoft-AspNetCore-Authentication-JwtBearer" class="headerlink" title="9、添加NuGet包Microsoft.AspNetCore.Authentication.JwtBearer"></a>9、添加NuGet包Microsoft.AspNetCore.Authentication.JwtBearer</h2><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041509.jpg"  ></p><h2 id="10、在appsettings-json中添加JWT配置节点"><a href="#10、在appsettings-json中添加JWT配置节点" class="headerlink" title="10、在appsettings.json中添加JWT配置节点"></a>10、在appsettings.json中添加JWT配置节点</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;JWT&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;SecKey&quot;</span>: <span class="string">&quot;im6666666!#@$%@%^^&amp;*(~Czmjklneafguvioszb%yuv&amp;*6WVDf5dw#5dfw6f5w6faW%FW^f5wa65f^AWf56&quot;</span>, <span class="comment">//密钥</span></span><br><span class="line">  <span class="string">&quot;Issuer&quot;</span>: <span class="string">&quot;im666&quot;</span>, <span class="comment">//发行者</span></span><br><span class="line">  <span class="string">&quot;ExpireSeconds&quot;</span>: <span class="number">7200</span> <span class="comment">//过期时间 2h</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="11-添加jwt类"><a href="#11-添加jwt类" class="headerlink" title="11.添加jwt类"></a>11.添加jwt类</h2> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">using</span> Microsoft.IdentityModel.Tokens;</span><br><span class="line">    <span class="keyword">using</span> System.Diagnostics;</span><br><span class="line">    <span class="keyword">using</span> System.IdentityModel.Tokens.Jwt;</span><br><span class="line">    <span class="keyword">using</span> System.Security.Claims;</span><br><span class="line">    <span class="keyword">using</span> System.Text;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">webapijwttest.Models</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 授权JWT类</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JwtHelper2</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="keyword">readonly</span> IConfiguration _configuration;</span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> Token配置</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;configuration&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">JwtHelper2</span>(<span class="params">IConfiguration configuration</span>)</span></span><br><span class="line">            &#123;</span><br><span class="line">                _configuration = configuration;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> 创建Token 这里面可以保存自己想要的信息</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;username&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;mobile&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">CreateToken</span>(<span class="params"><span class="built_in">string</span> username, <span class="built_in">string</span> mobile</span>)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 1. 定义需要使用到的Claims</span></span><br><span class="line">                    <span class="keyword">var</span> claims = <span class="keyword">new</span>[]</span><br><span class="line">                    &#123;</span><br><span class="line">                    <span class="keyword">new</span> Claim(<span class="string">&quot;username&quot;</span>, username),</span><br><span class="line">                    <span class="keyword">new</span> Claim(<span class="string">&quot;mobile&quot;</span>, mobile),</span><br><span class="line">                    <span class="comment">/* 可以保存自己想要信息，传参进来即可</span></span><br><span class="line"><span class="comment">                    new Claim(&quot;sex&quot;, &quot;sex&quot;),</span></span><br><span class="line"><span class="comment">                    new Claim(&quot;limit&quot;, &quot;limit&quot;),</span></span><br><span class="line"><span class="comment">                    new Claim(&quot;head_url&quot;, &quot;xxxxx&quot;)</span></span><br><span class="line"><span class="comment">                    */</span></span><br><span class="line">                &#125;;</span><br><span class="line">                    <span class="comment">// 2. 从 appsettings.json 中读取SecretKey</span></span><br><span class="line">                    <span class="keyword">var</span> secretKey = <span class="keyword">new</span> SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration[<span class="string">&quot;Jwt:SecKey&quot;</span>]));</span><br><span class="line">                    <span class="comment">// 3. 选择加密算法</span></span><br><span class="line">                    <span class="keyword">var</span> algorithm = SecurityAlgorithms.HmacSha256;</span><br><span class="line">                    <span class="comment">// 4. 生成Credentials</span></span><br><span class="line">                    <span class="keyword">var</span> signingCredentials = <span class="keyword">new</span> SigningCredentials(secretKey, algorithm);</span><br><span class="line">                    <span class="comment">// 5. 根据以上，生成token</span></span><br><span class="line">                    <span class="keyword">var</span> jwtSecurityToken = <span class="keyword">new</span> JwtSecurityToken(</span><br><span class="line">                        _configuration[<span class="string">&quot;Jwt:Issuer&quot;</span>],    <span class="comment">//Issuer</span></span><br><span class="line">                        _configuration[<span class="string">&quot;Jwt:ExpireSeconds&quot;</span>],  <span class="comment">//ExpireSeconds</span></span><br><span class="line">                        claims,                          <span class="comment">//Claims,</span></span><br><span class="line">                        DateTime.Now,                    <span class="comment">//notBefore</span></span><br><span class="line">                        DateTime.Now.AddSeconds(<span class="number">30</span>),     <span class="comment">//expires</span></span><br><span class="line">                        signingCredentials               <span class="comment">//Credentials</span></span><br><span class="line">                    );</span><br><span class="line">                    <span class="comment">// 6. 将token变为string</span></span><br><span class="line">                    <span class="keyword">var</span> token = <span class="keyword">new</span> JwtSecurityTokenHandler().WriteToken(jwtSecurityToken);</span><br><span class="line">                    <span class="keyword">return</span> token;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">throw</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> 获取信息</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;jwt&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">ReaderToken</span>(<span class="params"><span class="built_in">string</span> jwt</span>)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> str = <span class="built_in">string</span>.Empty;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//获取Token的三种方式</span></span><br><span class="line">                    <span class="comment">//第一种直接用JwtSecurityTokenHandler提供的read方法</span></span><br><span class="line">                    <span class="keyword">var</span> jwtHander = <span class="keyword">new</span> JwtSecurityTokenHandler();</span><br><span class="line">                    JwtSecurityToken jwtSecurityToken = jwtHander.ReadJwtToken(jwt);</span><br><span class="line">                    str = jwtSecurityToken.ToString();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">                &#123;</span><br><span class="line">                    Debug.WriteLine(ex.Message);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> str;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> 解密jwt</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;jwt&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">JwtDecrypt</span>(<span class="params"><span class="built_in">string</span> jwt</span>)</span></span><br><span class="line">            &#123;</span><br><span class="line">                StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    JwtSecurityTokenHandler tokenHandler = <span class="keyword">new</span>();</span><br><span class="line">                    TokenValidationParameters valParam = <span class="keyword">new</span>();</span><br><span class="line">                    <span class="keyword">var</span> securityKey = <span class="keyword">new</span> SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration[<span class="string">&quot;Jwt:SecKey&quot;</span>]));</span><br><span class="line">                    valParam.IssuerSigningKey = securityKey;</span><br><span class="line">                    valParam.ValidateIssuer = <span class="literal">false</span>;</span><br><span class="line">                    valParam.ValidateAudience = <span class="literal">false</span>;</span><br><span class="line">                    <span class="comment">//解密</span></span><br><span class="line">                    ClaimsPrincipal claimsPrincipal = tokenHandler.ValidateToken(jwt,</span><br><span class="line">                            valParam, <span class="keyword">out</span> SecurityToken secToken);</span><br><span class="line">                    <span class="keyword">foreach</span> (<span class="keyword">var</span> claim <span class="keyword">in</span> claimsPrincipal.Claims)</span><br><span class="line">                    &#123;</span><br><span class="line">                        sb.Append(<span class="string">$&quot;<span class="subst">&#123;claim.Type&#125;</span>=<span class="subst">&#123;claim.Value&#125;</span>&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">                &#123;</span><br><span class="line">                    Debug.WriteLine(ex.Message);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> sb.ToString();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="12-Program-cs注册JWT服务"><a href="#12-Program-cs注册JWT服务" class="headerlink" title="12.Program.cs注册JWT服务"></a>12.Program.cs注册JWT服务</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">region</span> JWT服务</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册JWT服务</span></span><br><span class="line">builder.Services.AddSingleton(<span class="keyword">new</span> JwtHelper2(builder.Configuration));</span><br><span class="line">builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme).AddJwtBearer(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.TokenValidationParameters = <span class="keyword">new</span> TokenValidationParameters()</span><br><span class="line">    &#123;</span><br><span class="line">        ValidateIssuer = <span class="literal">true</span>, <span class="comment">//是否验证Issuer</span></span><br><span class="line">        ValidIssuer = builder.Configuration[<span class="string">&quot;Jwt:Issuer&quot;</span>], <span class="comment">//发行人Issuer</span></span><br><span class="line">        ValidateAudience = <span class="literal">false</span>, <span class="comment">//是否验证Audience      </span></span><br><span class="line">        ValidateIssuerSigningKey = <span class="literal">true</span>, <span class="comment">//是否验证SecurityKey</span></span><br><span class="line">        IssuerSigningKey = <span class="keyword">new</span> SymmetricSecurityKey(Encoding.UTF8.GetBytes(builder.Configuration[<span class="string">&quot;Jwt:SecKey&quot;</span>])), <span class="comment">//SecurityKey</span></span><br><span class="line">        ValidateLifetime = <span class="literal">true</span>, <span class="comment">//是否验证失效时间</span></span><br><span class="line">        ClockSkew = TimeSpan.FromSeconds(<span class="number">30</span>), <span class="comment">//过期时间容错值，解决服务器端时间不同步问题（秒）</span></span><br><span class="line">        RequireExpirationTime = <span class="literal">true</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br></pre></td></tr></table></figure><p>添加swagger authorization</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddSwaggerGen(c =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    c.SwaggerDoc(<span class="string">&quot;v1&quot;</span>, <span class="keyword">new</span> OpenApiInfo &#123; Title = <span class="string">&quot;Web API&quot;</span>, Version = <span class="string">&quot;v1&quot;</span> &#125;);</span><br><span class="line">    <span class="comment">//开启注释</span></span><br><span class="line">    <span class="keyword">var</span> xmlFile = <span class="string">$&quot;<span class="subst">&#123;Assembly.GetEntryAssembly().GetName().Name&#125;</span>.xml&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile);<span class="comment">//需要 生成 目录生成XML</span></span><br><span class="line">    c.IncludeXmlComments(xmlPath, <span class="literal">true</span>);</span><br><span class="line">    <span class="comment">// 配置 JWT Bearer 授权</span></span><br><span class="line">    c.AddSecurityDefinition(<span class="string">&quot;Bearer&quot;</span>, <span class="keyword">new</span> OpenApiSecurityScheme</span><br><span class="line">    &#123;</span><br><span class="line">        Description = <span class="string">&quot;JWT Authorization header using the Bearer scheme&quot;</span>,</span><br><span class="line">        Name = <span class="string">&quot;Authorization&quot;</span>,</span><br><span class="line">        In = ParameterLocation.Header,</span><br><span class="line">        Type = SecuritySchemeType.Http,</span><br><span class="line">        Scheme = <span class="string">&quot;bearer&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> securityScheme = <span class="keyword">new</span> OpenApiSecurityScheme</span><br><span class="line">    &#123;</span><br><span class="line">        Reference = <span class="keyword">new</span> OpenApiReference &#123; Type = ReferenceType.SecurityScheme, Id = <span class="string">&quot;Bearer&quot;</span> &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">var</span> securityRequirement = <span class="keyword">new</span> OpenApiSecurityRequirement &#123; &#123; securityScheme, <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; &#125; &#125; &#125;;</span><br><span class="line">    c.AddSecurityRequirement(securityRequirement);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> app = builder.Build();</span><br><span class="line"> </span><br><span class="line"><span class="comment">//启用验证中间件</span></span><br><span class="line">app.UseAuthentication();</span><br><span class="line">app.UseAuthorization();</span><br></pre></td></tr></table></figure><h2 id="13-添加jwt测试api"><a href="#13-添加jwt测试api" class="headerlink" title="13.添加jwt测试api"></a>13.添加jwt测试api</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Authorization;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Identity.Data;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> webapijwttest.Models;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">webapijwttest.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Route(<span class="string">&quot;api/[controller]/[action]&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">ApiController</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Jwt2Controller</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> JwtHelper2 _jwt;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 初始化</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;jwtHelper&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Jwt2Controller</span>(<span class="params">JwtHelper2 jwtHelper</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            _jwt = jwtHelper;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 获取Token</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        [<span class="meta">HttpPost</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">GetToken</span>(<span class="params">LoginRs user</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//参数验证等等....</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(user.UserId))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> Ok(<span class="string">&quot;参数异常！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//这里可以连接mysql数据库做账号密码验证</span></span><br><span class="line">            <span class="comment">//这里可以做Redis缓存验证等等</span></span><br><span class="line">            <span class="comment">//这里获取Token，当然，这里也可以选择传结构体过去</span></span><br><span class="line">            <span class="keyword">var</span> token = _jwt.CreateToken(user.UserId, user.PasswordMD5);</span><br><span class="line">            <span class="comment">//解密后的Token</span></span><br><span class="line">            <span class="keyword">var</span> PWToken = _jwt.JwtDecrypt(token);</span><br><span class="line">            <span class="keyword">return</span> Ok(token + <span class="string">&quot;解密后：&quot;</span> + PWToken);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 获取自己的详细信息，其中 [Authorize] 就表示要带Token才行</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        [<span class="meta">HttpPost</span>]</span><br><span class="line">        [<span class="meta">Authorize</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">GetSelfInfo</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//执行到这里，就表示已经验证授权通过了</span></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * 这里返回个人信息有两种方式</span></span><br><span class="line"><span class="comment">             * 第一种：从Header中的Token信息反向解析出用户账号，再从数据库中查找返回</span></span><br><span class="line"><span class="comment">             * 第二种：从Header中的Token信息反向解析出用户账号信息直接返回，当然，在前面创建        Token时，要保存进使用到的Claims中。</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="keyword">return</span> Ok(<span class="string">&quot;授权通过了！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041510.jpg"  ></p><p>检测控制器</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Authorization;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> webapijwttest.Models;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// For more information on enabling Web API for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">webapijwttest.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Route(<span class="string">&quot;api/[controller]&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">ApiController</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AuthController</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> ILogger&lt;AuthController&gt; _logger = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">private</span> JwtHelper2 _iJWTService = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> IConfiguration _configuration;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">AuthController</span>(<span class="params">ILogger&lt;AuthController&gt; logger, JwtHelper2 jWTService, IConfiguration configuration</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>._logger = logger;</span><br><span class="line">            _iJWTService = jWTService;</span><br><span class="line">            _configuration = configuration;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        [<span class="meta">Route(<span class="string">&quot;Get&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">IEnumerable</span>&lt;<span class="title">int</span>&gt; <span class="title">Get</span>()</span></span><br><span class="line">        &#123;<span class="comment">//未加授权认证</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span> &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        [<span class="meta">Route(<span class="string">&quot;GetData&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        [<span class="meta">Authorize</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">List</span>&lt;<span class="title">object</span>&gt; <span class="title">GetData</span>()</span></span><br><span class="line">        &#123;<span class="comment">//添加了授权认证，需要使用token</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> List&lt;<span class="built_in">object</span>&gt;() &#123; <span class="keyword">new</span> &#123; userName = <span class="string">&quot;123&quot;</span>, remark = <span class="string">&quot;1234&quot;</span> &#125; &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        [<span class="meta">Route(<span class="string">&quot;Login&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Login</span>(<span class="params"><span class="built_in">string</span> name, <span class="built_in">string</span> password</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(name) &amp;&amp; !<span class="built_in">string</span>.IsNullOrEmpty(password))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> token = <span class="keyword">this</span>._iJWTService.CreateToken(name,password);</span><br><span class="line">                <span class="keyword">return</span> JsonConvert.SerializeObject(<span class="keyword">new</span> &#123; result = <span class="literal">true</span>, token &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> JsonConvert.SerializeObject(<span class="keyword">new</span> &#123; result = <span class="literal">false</span>, token = <span class="string">&quot;&quot;</span> &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041511.jpg"  ></p><p>把token放进 </p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041513.jpg"  ></p><p>测试GetData<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041514.jpg"  ></p><p>当超过时间调用则GetData失败<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041515.jpg"  ></p><p>END🐟🐟🐟</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> JWT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET spider</title>
      <link href="/2024/04/18/NET-Spider/"/>
      <url>/2024/04/18/NET-Spider/</url>
      
        <content type="html"><![CDATA[<p>前言<br>爬虫可以用于外汇，期货，基金，货币，比分，电商，文章等信息的采集。通过数据分析，竞品分析，为商业决策提供数据支持。</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041710.jpg"  ><br>金价暴涨，抓取下今日的金价。</p><h1 id="💡使用HttpClient爬取数据"><a href="#💡使用HttpClient爬取数据" class="headerlink" title="💡使用HttpClient爬取数据"></a>💡使用HttpClient爬取数据</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 创建HttpClient实例</span></span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> httpClient = <span class="keyword">new</span> HttpClient())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//模拟User-Agent</span></span><br><span class="line">        httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;User-Agent&quot;</span>, GetUserAgent());</span><br><span class="line">        <span class="comment">// 发送GET请求并获取响应 xxx.com是某网站的页面~（保护）</span></span><br><span class="line">        <span class="keyword">var</span> response = <span class="keyword">await</span> httpClient.GetAsync(<span class="string">&quot;https://xxx.com&quot;</span>);</span><br><span class="line">        response.EnsureSuccessStatusCode();</span><br><span class="line">        <span class="keyword">var</span> htmlContent = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line"> </span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (HttpRequestException ex)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 处理请求异常</span></span><br><span class="line">    ViewBag.Error = <span class="string">&quot;Failed to retrieve price data: &quot;</span> + ex.Message;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="🚀模拟User-Agent"><a href="#🚀模拟User-Agent" class="headerlink" title="🚀模拟User-Agent"></a>🚀模拟User-Agent</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成随机 User-Agent</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetUserAgent</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span>[] userAgents = <span class="keyword">new</span> <span class="built_in">string</span>[]</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36&quot;</span>,</span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    Random random = <span class="keyword">new</span> Random();</span><br><span class="line">    <span class="built_in">int</span> index = random.Next(userAgents.Length);</span><br><span class="line">    <span class="keyword">return</span> userAgents[index];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="🤵使用HTML解析库"><a href="#🤵使用HTML解析库" class="headerlink" title="🤵使用HTML解析库"></a>🤵使用HTML解析库</h1><p>（HtmlAgilityPack）提取价格</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041711.jpg"  ></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 使用HtmlAgilityPack解析HTML</span></span><br><span class="line">      <span class="keyword">var</span> htmlDocument = <span class="keyword">new</span> HtmlDocument();</span><br><span class="line">      htmlDocument.LoadHtml(htmlContent);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">// 使用XPath表达式选择指定的&lt;tr&gt;元素</span></span><br><span class="line">      <span class="keyword">var</span> trElement = htmlDocument.DocumentNode.SelectSingleNode(<span class="string">&quot;//tr[contains(@class, &#x27;border_ea&#x27;) and contains(@class, &#x27;noTop_border&#x27;)]&quot;</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">if</span> (trElement != <span class="literal">null</span>)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="comment">// 获取包含价格的&lt;td&gt;元素</span></span><br><span class="line">          <span class="keyword">var</span> priceCell = trElement.SelectSingleNode(<span class="string">&quot;.//td[@align=&#x27;center&#x27;][2]&quot;</span>);</span><br><span class="line"> </span><br><span class="line">          <span class="keyword">if</span> (priceCell != <span class="literal">null</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="comment">// 提取价格</span></span><br><span class="line">              <span class="built_in">string</span> price = priceCell.InnerText.Trim();</span><br><span class="line"> </span><br><span class="line">              <span class="comment">// 将价格传递给视图</span></span><br><span class="line">              ViewBag.Price = price;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">              ViewBag.Error = <span class="string">&quot;Price cell not found in table row.&quot;</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">          ViewBag.Error = <span class="string">&quot;Table row not found.&quot;</span>;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>也可以用正则表达式提取</p><h1 id="👌前端Price显示"><a href="#👌前端Price显示" class="headerlink" title="👌前端Price显示"></a>👌前端Price显示</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Au99.99 Price: @ViewBag.Price<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>@ViewBag.Error<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="🌱运行实例-获取金价Au"><a href="#🌱运行实例-获取金价Au" class="headerlink" title="🌱运行实例 获取金价Au"></a>🌱运行实例 获取金价Au</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041712.jpg"  ><br>也可以通过修改规则取实时Pt的价格</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用XPath表达式选择指定的&lt;tr&gt;元素</span></span><br><span class="line"><span class="keyword">var</span> trElements = htmlDocument.DocumentNode.SelectNodes(<span class="string">&quot;//tr[contains(@class, &#x27;border_ea&#x27;) and contains(@class, &#x27;noTop_border &#x27;)]&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (trElements != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> trElement <span class="keyword">in</span> trElements)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 获取包含产品名称和价格的&lt;td&gt;元素</span></span><br><span class="line">        <span class="keyword">var</span> tdElements = trElement.SelectNodes(<span class="string">&quot;./td&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (tdElements != <span class="literal">null</span> &amp;&amp; tdElements.Count &gt;= <span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 获取产品名称、最新价、最高价、最低价和今开盘价格</span></span><br><span class="line">            <span class="built_in">string</span> productName = tdElements[<span class="number">0</span>].InnerText.Trim();</span><br><span class="line">            <span class="built_in">string</span> latestPrice = tdElements[<span class="number">1</span>].InnerText.Trim();</span><br><span class="line">            <span class="built_in">string</span> highestPrice = tdElements[<span class="number">2</span>].InnerText.Trim();</span><br><span class="line">            <span class="built_in">string</span> lowestPrice = tdElements[<span class="number">3</span>].InnerText.Trim();</span><br><span class="line">            <span class="built_in">string</span> openingPrice = tdElements[<span class="number">4</span>].InnerText.Trim();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 检查产品名称是否为Au99.99或Pt99.95</span></span><br><span class="line">            <span class="keyword">if</span> (productName == <span class="string">&quot;Au99.99&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 将Au99.99价格信息传递给视图</span></span><br><span class="line">                ViewBag.AuLatestPrice = latestPrice;</span><br><span class="line">                ViewBag.AuHighestPrice = highestPrice;</span><br><span class="line">                ViewBag.AuLowestPrice = lowestPrice;</span><br><span class="line">                ViewBag.AuOpeningPrice = openingPrice;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (productName == <span class="string">&quot;Pt99.95&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 将Pt99.95价格信息传递给视图</span></span><br><span class="line">                ViewBag.PtLatestPrice = latestPrice;</span><br><span class="line">                ViewBag.PtHighestPrice = highestPrice;</span><br><span class="line">                ViewBag.PtLowestPrice = lowestPrice;</span><br><span class="line">                ViewBag.PtOpeningPrice = openingPrice;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如下：</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041713.jpg"  ></p><h1 id="🧾使用正则表达式解析"><a href="#🧾使用正则表达式解析" class="headerlink" title="🧾使用正则表达式解析"></a>🧾使用正则表达式解析</h1><p>通过httpClient请求</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;ActionResult&gt; <span class="title">Index</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 获取当前时间的时间戳</span></span><br><span class="line">    <span class="built_in">long</span> timestamp = DateTimeOffset.Now.ToUnixTimeMilliseconds();</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 构建URL</span></span><br><span class="line">    <span class="built_in">string</span> url = <span class="string">$&quot;http://www.xxx.cn/xx.js?t=<span class="subst">&#123;timestamp&#125;</span>&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 创建HttpClient实例</span></span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> httpClient = <span class="keyword">new</span> HttpClient())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 设置 User-Agent</span></span><br><span class="line">        httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;User-Agent&quot;</span>, GetUserAgent());</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 发送GET请求</span></span><br><span class="line">            <span class="keyword">var</span> response = <span class="keyword">await</span> httpClient.GetAsync(url);</span><br><span class="line">            response.EnsureSuccessStatusCode();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 读取返回的数据</span></span><br><span class="line">            <span class="keyword">var</span> responseData = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 解析返回的数据</span></span><br><span class="line">            <span class="keyword">var</span> price = ParseGoldPrice(responseData);</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 将价格传递给视图</span></span><br><span class="line">            ViewBag.Price = price;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (HttpRequestException ex)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 处理请求异常</span></span><br><span class="line">            ViewBag.Error = <span class="string">&quot;Failed to retrieve gold price data.&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 返回视图</span></span><br><span class="line">    <span class="keyword">return</span> View();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>处理返回价格 </p><p>通过正则表达式匹配数据</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">decimal</span> <span class="title">ParseGoldPrice</span>(<span class="params"><span class="built_in">string</span> responseData</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="built_in">string</span> price = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">decimal</span> price2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span> data = responseData;<span class="comment">// </span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 匹配价格的正则表达式</span></span><br><span class="line">    <span class="built_in">string</span> pattern = <span class="string">@&quot;var hq_str_gds_AUTD=&quot;&quot;([^&quot;&quot;]+)&quot;&quot;;&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 使用正则表达式匹配数据</span></span><br><span class="line">    Match match = Regex.Match(data, pattern);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (match.Success)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 获取匹配到的价格数据</span></span><br><span class="line">        <span class="built_in">string</span> priceData = match.Groups[<span class="number">1</span>].Value;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 使用逗号分割数据，取第一个元素作为价格</span></span><br><span class="line">        <span class="built_in">string</span>[] priceParts = priceData.Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">        price = priceParts[<span class="number">0</span>];</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 将字符串价格转换为decimal类型</span></span><br><span class="line">        price2 = <span class="built_in">decimal</span>.Parse(price);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 输出提取到的价格</span></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Gold Price: &quot;</span> + price2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Price not found in data.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// decimal price = decimal.Parse(priceString);</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> price2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041714.jpg"  ></p><h1 id="💫获取BTC价格"><a href="#💫获取BTC价格" class="headerlink" title="💫获取BTC价格"></a>💫获取BTC价格</h1><p>Headers模拟cookie获取BTC价格</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;User-Agent&quot;</span>, GetUserAgent());</span><br><span class="line"> </span><br><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7&quot;</span>);</span><br><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Accept-Language&quot;</span>, <span class="string">&quot;zh-CN,zh;q=0.9&quot;</span>);</span><br><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;max-age=0&quot;</span>);</span><br><span class="line"><span class="comment">//cookie</span></span><br><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Cookie&quot;</span>, <span class="string">&quot;__51uvsct__3ExGyQaAoNSqsSUY=1; __51vcke__3ExGyQaAoNSqsSUY=c91184d5-8826-5ea8-8ddc-a0f3b85c9470; __51vuft__3ExGyQaAoNSqsSUY=1713248151570; PHPSESSI328&quot;</span>);</span><br><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Sec-Ch-Ua&quot;</span>, <span class="string">&quot;\&quot;Google Chrome\&quot;;v=\&quot;123\&quot;, \&quot;Not:A-Brand\&quot;;v=\&quot;8\&quot;, \&quot;Chromium\&quot;;v=\&quot;123\&quot;&quot;</span>);</span><br><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Sec-Ch-Ua-Mobile&quot;</span>, <span class="string">&quot;?0&quot;</span>);</span><br><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Sec-Ch-Ua-Platform&quot;</span>, <span class="string">&quot;\&quot;Windows\&quot;&quot;</span>);</span><br><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Sec-Fetch-Dest&quot;</span>, <span class="string">&quot;document&quot;</span>);</span><br><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Sec-Fetch-Mode&quot;</span>, <span class="string">&quot;navigate&quot;</span>);</span><br><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Sec-Fetch-Site&quot;</span>, <span class="string">&quot;none&quot;</span>);</span><br><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Sec-Fetch-User&quot;</span>, <span class="string">&quot;?1&quot;</span>);</span><br><span class="line"> httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>, <span class="string">&quot;1&quot;</span>);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> <span class="comment">//匹配</span></span><br><span class="line"> <span class="keyword">var</span> currencyElement = </span><br><span class="line"> htmlDocument.DocumentNode.SelectSingleNode(<span class="string">&quot;//div[@id=&#x27;hr_app_cid_1&#x27;]&quot;</span>);</span><br><span class="line"> <span class="keyword">if</span> (currencyElement != <span class="literal">null</span>)</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="comment">// 查找包含人民币价格的元素</span></span><br><span class="line">     <span class="keyword">var</span> priceElement = currencyElement.SelectSingleNode(<span class="string">&quot;.//div[@class=&#x27;virtual overflow&#x27;]&quot;</span>);</span><br><span class="line">     <span class="keyword">if</span> (priceElement != <span class="literal">null</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="comment">// 提取人民币价格</span></span><br><span class="line">      <span class="keyword">var</span> chinesePrice = priceElement.InnerText.Trim();</span><br><span class="line">     &#125;</span><br><span class="line"> </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>美元价格也是类似的规则，运行结果</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041715.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041716.jpg"  ></p><h1 id="✨获取CSDN热点"><a href="#✨获取CSDN热点" class="headerlink" title="✨获取CSDN热点"></a>✨获取CSDN热点</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041717.jpg"  ></p><p>模拟请求，修改规则</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> httpClient = <span class="keyword">new</span> HttpClient();</span><br><span class="line"><span class="keyword">var</span> referer = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;referer&quot;</span>, referer);</span><br><span class="line">httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;User-Agent&quot;</span>, GetUserAgent());</span><br><span class="line"><span class="keyword">var</span> response = <span class="keyword">await</span> httpClient.GetAsync(<span class="string">&quot;xxx/&quot;</span>);</span><br><span class="line">response.EnsureSuccessStatusCode();</span><br><span class="line"><span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> contentList = <span class="keyword">new</span> List&lt;Tuple&lt;<span class="built_in">string</span>, <span class="built_in">string</span>, <span class="built_in">string</span>&gt;&gt;();</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> htmlDocument = <span class="keyword">new</span> HtmlDocument();</span><br><span class="line">htmlDocument.LoadHtml(responseBody);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//  var itemNodes = htmlDocument.DocumentNode.SelectNodes(&quot;//div[contains(@class, &#x27;headswiper-item&#x27;)]&quot;);</span></span><br><span class="line"><span class="keyword">var</span> items = htmlDocument.DocumentNode.SelectNodes(<span class="string">&quot;//div[@class=&#x27;headswiper-item&#x27;]&quot;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (items != <span class="literal">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> items)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">var</span> titleNode = item.SelectSingleNode(<span class="string">&quot;.//a[@class=&#x27;title&#x27;]&quot;</span>);</span><br><span class="line">         <span class="keyword">var</span> nameNode = item.SelectSingleNode(<span class="string">&quot;.//p[@class=&#x27;name&#x27;]&quot;</span>);</span><br><span class="line">         <span class="keyword">var</span> linkNode = item.SelectSingleNode(<span class="string">&quot;.//a[@class=&#x27;title&#x27;]&quot;</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">         <span class="keyword">if</span> (titleNode != <span class="literal">null</span> &amp;&amp; nameNode != <span class="literal">null</span> &amp;&amp; linkNode != <span class="literal">null</span>)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">var</span> title = titleNode.InnerText.Trim();</span><br><span class="line">             <span class="keyword">var</span> name = nameNode.InnerText.Trim();</span><br><span class="line">             <span class="keyword">var</span> link = linkNode.GetAttributeValue(<span class="string">&quot;href&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">             contentList.Add(<span class="keyword">new</span> Tuple&lt;<span class="built_in">string</span>, <span class="built_in">string</span>, <span class="built_in">string</span>&gt;(title, name, link));</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> View(contentList);</span><br></pre></td></tr></table></figure><p>or 使用正则</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">// 使用正则表达式匹配所有符合条件的 div 元素内容</span></span><br><span class="line"><span class="keyword">var</span> regex = <span class="keyword">new</span> Regex(<span class="string">@&quot;&lt;div class=&quot;&quot;headswiper-item&quot;&quot;(.*?)&lt;/div&gt;&quot;</span>, RegexOptions.Singleline);</span><br><span class="line"><span class="keyword">var</span> matches = regex.Matches(responseBody);</span><br><span class="line"><span class="keyword">foreach</span> (Match match <span class="keyword">in</span> matches)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//去除Vuehtml</span></span><br><span class="line">    <span class="built_in">string</span> s1temp = match.Groups[<span class="number">1</span>].Value.Trim();</span><br><span class="line">    <span class="built_in">int</span> i1 = s1temp.IndexOf(<span class="string">&quot;&gt;&quot;</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">int</span> i2  = s1temp.Length - i1 - <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span>  hotstr = s1temp.Substring(i1, i2);</span><br><span class="line">    </span><br><span class="line">    contentList.Add(hotstr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041718.jpg"  ></p><h1 id="🎃-获取编程语言排行榜"><a href="#🎃-获取编程语言排行榜" class="headerlink" title="🎃 获取编程语言排行榜"></a>🎃 获取编程语言排行榜</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> response = <span class="keyword">await</span> httpClient.GetAsync(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line">response.EnsureSuccessStatusCode();</span><br><span class="line"><span class="keyword">var</span> htmlContent = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> htmlDocument = <span class="keyword">new</span> HtmlDocument();</span><br><span class="line">htmlDocument.LoadHtml(htmlContent);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 获取表格内容</span></span><br><span class="line"><span class="keyword">var</span> table = htmlDocument.DocumentNode.SelectSingleNode(<span class="string">&quot;//table[@class=&#x27;w-min min-w-full table-fixed divide-y-2 divide-gray-200 text-sm dark:divide-gray-700&#x27;]&quot;</span>);</span><br><span class="line"> </span><br><span class="line">ViewBag.TableContent = table?.OuterHtml; </span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041719.jpg"  ></p><h1 id="🖥️获取小破站热门"><a href="#🖥️获取小破站热门" class="headerlink" title="🖥️获取小破站热门"></a>🖥️获取小破站热门</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> httpClient = <span class="keyword">new</span> HttpClient();</span><br><span class="line"><span class="keyword">var</span> referer = <span class="string">&quot;https://xxx&quot;</span>;</span><br><span class="line">httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;Referer&quot;</span>, referer);</span><br><span class="line">httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;User-Agent&quot;</span>, GetUserAgent());</span><br><span class="line"><span class="keyword">var</span> response = <span class="keyword">await</span> httpClient.GetAsync(<span class="string">&quot;https://xxx&quot;</span>);</span><br><span class="line">response.EnsureSuccessStatusCode();</span><br><span class="line"><span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line"><span class="keyword">var</span> jsonRes = Newtonsoft.Json.JsonConvert.DeserializeObject&lt;<span class="built_in">dynamic</span>&gt;(responseBody);</span><br><span class="line"><span class="keyword">var</span> tempArr = <span class="keyword">new</span> List&lt;MItem&gt;();</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> itid = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> itemj <span class="keyword">in</span> jsonRes.data.list)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> tt = itemj.keyword.ToString();</span><br><span class="line">  <span class="comment">//  string hot = itemj.hot_value.ToString();</span></span><br><span class="line">    tempArr.Add(<span class="keyword">new</span> MItem</span><br><span class="line">    &#123;</span><br><span class="line">        Index = itid++,</span><br><span class="line">        Title = tt,</span><br><span class="line">        Hot = <span class="string">&quot;&quot;</span>,</span><br><span class="line">        Url = <span class="string">&quot;https://search.bilibili.com/all?keyword=&quot;</span> + tt+ <span class="string">&quot;&amp;order=click&quot;</span>,</span><br><span class="line">        MobileUrl = <span class="string">&quot;https://search.bilibili.com/all?keyword=&quot;</span> + tt+ <span class="string">&quot;&amp;order=click&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> md = <span class="keyword">new</span> MData</span><br><span class="line">&#123;</span><br><span class="line">    Success = <span class="literal">true</span>,</span><br><span class="line">    Title = <span class="string">&quot;小破站&quot;</span>,</span><br><span class="line">    Subtitle = <span class="string">&quot;热搜榜&quot;</span>,</span><br><span class="line">    UpdateTime = DateTime.Now.ToString(<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>),</span><br><span class="line">    Data = tempArr</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MData</span></span><br><span class="line"> &#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="built_in">bool</span> Success &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">     <span class="keyword">public</span> <span class="built_in">string</span> Title &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">     <span class="keyword">public</span> <span class="built_in">string</span> Subtitle &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">     <span class="keyword">public</span> <span class="built_in">string</span> UpdateTime &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">     <span class="keyword">public</span> List&lt;MItem&gt; Data &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MItem</span></span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">int</span> Index &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> Title &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> Hot &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> Url &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> MobileUrl &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041720.jpg"  ></p><h1 id="⭐获取某音热门"><a href="#⭐获取某音热门" class="headerlink" title="⭐获取某音热门"></a>⭐获取某音热门</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> httpClient = <span class="keyword">new</span> HttpClient();</span><br><span class="line"><span class="keyword">var</span> referer = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;referer&quot;</span>, referer);</span><br><span class="line">httpClient.DefaultRequestHeaders.Add(<span class="string">&quot;User-Agent&quot;</span>, GetUserAgent());</span><br><span class="line"><span class="keyword">var</span> response = <span class="keyword">await</span> httpClient.GetAsync(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line">response.EnsureSuccessStatusCode();</span><br><span class="line"><span class="keyword">var</span> responseBody = <span class="keyword">await</span> response.Content.ReadAsStringAsync();</span><br><span class="line"><span class="keyword">var</span> jsonRes = Newtonsoft.Json.JsonConvert.DeserializeObject&lt;<span class="built_in">dynamic</span>&gt;(responseBody);</span><br><span class="line"><span class="keyword">var</span> tempArr = <span class="keyword">new</span> List&lt;MItem&gt;();</span><br><span class="line"> </span><br><span class="line"><span class="built_in">int</span> itid = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> itemj <span class="keyword">in</span> jsonRes.word_list)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> tt = itemj.word.ToString();</span><br><span class="line">    <span class="built_in">string</span> hot  =itemj.hot_value.ToString();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    tempArr.Add(<span class="keyword">new</span> MItem</span><br><span class="line">    &#123;</span><br><span class="line">        Index = itid++,</span><br><span class="line">        Title = tt,</span><br><span class="line">        Hot = hot,</span><br><span class="line">        Url = <span class="string">&quot;https://www.douyin.com/search/&quot;</span> + tt,</span><br><span class="line">        MobileUrl = <span class="string">&quot;https://www.douyin.com/search/&quot;</span> + tt</span><br><span class="line">    &#125;); </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> douyinData = <span class="keyword">new</span> MData</span><br><span class="line">&#123;</span><br><span class="line">    Success = <span class="literal">true</span>,</span><br><span class="line">    Title = <span class="string">&quot;某音&quot;</span>,</span><br><span class="line">    Subtitle = <span class="string">&quot;热搜榜&quot;</span>,</span><br><span class="line">    UpdateTime = DateTime.Now.ToString(<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>),</span><br><span class="line">    Data = tempArr</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041721.jpg"  ></p><p>注意：如果目标有IP限制、Cookie、签名等，则需编写相应的对策 。</p><p>此外，还可以通过WinFrom WebBowser控件实现加载完DOM再匹配信息实现爬取效果。</p><p>这里只做抛砖引玉，请勿使用此技术做违法的事情！！！💀 </p><p>END</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue study</title>
      <link href="/2024/04/17/Vue-Base/"/>
      <url>/2024/04/17/Vue-Base/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Vue.js，这个轻量级且灵活的JavaScript框架，就像一位魔术师，用它的魔法棒将数据和视图巧妙地连接在一起。当数据发生变化时，Vue.js就像变魔术一样，让视图自动更新，为开发者带来了极大的便利。</p><p>Vue.js的诞生，源于一位名叫尤雨溪的开发者对前端开发的热爱与追求。在Google工作期间，他受到了Angular的启发，决定开发一款更加轻量、灵活的框架。于是，Vue.js应运而生，它的名字来源于“View”的缩写，寓意着它专注于视图层的开发。Vue.js不断地完善和发展。它引入了响应式数据绑定、组件化开发等核心概念，让前端开发变得更加高效和可维护。</p><h1 id="👋-Vue环境搭建"><a href="#👋-Vue环境搭建" class="headerlink" title="👋 Vue环境搭建"></a>👋 Vue环境搭建</h1><p>首先，搭一个打代码的环境</p><h2 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1.安装node.js"></a>1.安装node.js</h2><p>在使用VS Code之前，需要安装Vue的开发环境。</p><p>安装Vue的最简单方法是使用npm包管理器，先安装Node.js和npm。</p><p>node官网 &#x3D;&gt; <a class="link"   href="https://nodejs.org/en/download" >https://nodejs.org/en/download<i class="fas fa-external-link-alt"></i></a></p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041731.jpg"  ><h2 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.配置环境变量"></a>2.配置环境变量</h2><p>在nodejs安装目录下新建node_cache（nodejs缓存）、node_global（全局包存放）两个文件夹，如下图所示。</p><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041732.jpg"  ></p><p>打开cmd命令提示符，配置文件路径如下：</p><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041733.jpg"  ></p><p>配置环境变量</p><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041734.jpg"  ></p><p>系统属性-&gt;高级-&gt;环境变量-&gt;新增环境变量：<br>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041735.jpg"  ></p><p>系统变量<br>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041736.jpg"  ></p><p>​​</p><h2 id="3-VSCode配置"><a href="#3-VSCode配置" class="headerlink" title="3.VSCode配置"></a>3.VSCode配置</h2><p> Visual Studio Code</p><p>以管理员身份运行VSCode</p><p>VSCode安装插件ESLint</p><p>安装js打包工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm install -g webpack</span><br></pre></td></tr></table></figure><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041737.jpg"  ></p><p>​​</p><h2 id="4-安装Vue-CLI"><a href="#4-安装Vue-CLI" class="headerlink" title="4.安装Vue CLI"></a>4.安装Vue CLI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm install -g vue-cli</span><br><span class="line"></span><br><span class="line">(vue-cli npm install @vue/cli -g --unsafe-perm)</span><br></pre></td></tr></table></figure><h2 id="5-在VS-Code中打开Vue项目"><a href="#5-在VS-Code中打开Vue项目" class="headerlink" title="5.在VS Code中打开Vue项目"></a>5.在VS Code中打开Vue项目</h2><h3 id="5-1-在VS-Code中，File-Open-Folder…-选择“文件”-“打开文件夹”。"><a href="#5-1-在VS-Code中，File-Open-Folder…-选择“文件”-“打开文件夹”。" class="headerlink" title="5.1. 在VS Code中，File &gt; Open Folder… 选择“文件”&gt; “打开文件夹”。"></a>5.1. 在VS Code中，File &gt; Open Folder… 选择“文件”&gt; “打开文件夹”。</h3><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041738.jpg"  ></p><h3 id="5-2-找到Vue项目文件夹，选择“文件夹”并打开。"><a href="#5-2-找到Vue项目文件夹，选择“文件夹”并打开。" class="headerlink" title="5.2. 找到Vue项目文件夹，选择“文件夹”并打开。"></a>5.2. 找到Vue项目文件夹，选择“文件夹”并打开。</h3><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041739.jpg"  ></p><p>可以根据需要，在Extensions安装VSCode的中文扩展。</p><h3 id="5-3也可以通过Vue-UI-创建一个新的Vue项目然后打开"><a href="#5-3也可以通过Vue-UI-创建一个新的Vue项目然后打开" class="headerlink" title="5.3也可以通过Vue UI 创建一个新的Vue项目然后打开"></a>5.3也可以通过Vue UI 创建一个新的Vue项目然后打开</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vue ui</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041740.jpg"  ></p><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041741.jpg"  ></p><h2 id="6-运行Vue项目"><a href="#6-运行Vue项目" class="headerlink" title="6.运行Vue项目"></a>6.运行Vue项目</h2><p>在VS Code中打开 Terminal  终端，切换到Vue项目文件夹，然后运行以下命令：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041742.jpg"  ></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install --完会有node_modules</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041743.jpg"  ></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm run build  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041744.jpg"  ></p><p>生成打包完会有dist文件夹放着打包好的文件</p><p>可直接放到服务器上运行 </p><p> 另外，也可通过 HBuilder 来敲代码<br>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041745.jpg"  ></p><p>内置浏览器</p><h1 id="👀-Vue基础学习"><a href="#👀-Vue基础学习" class="headerlink" title="👀 Vue基础学习"></a>👀 Vue基础学习</h1><h2 id="1-引入vue-js"><a href="#1-引入vue-js" class="headerlink" title="1.引入vue.js"></a>1.引入vue.js</h2> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;vue.js&quot;</span> type=<span class="string">&quot;text/javascript&quot;</span> charset=<span class="string">&quot;utf-8&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  &#123;&#123; message &#125;&#125; &#123;&#123;name&#125;&#125; &#123;&#123;himan&#125;&#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">name : <span class="string">&quot;Vue&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">himan</span>:<span class="string">&quot;hhhhhhh&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">​<span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">​​&lt;img   onerror=&quot;notfound(this);&quot;   src=&quot;https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041746.jpg&quot; &gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 2.数据方法</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> `</span><span class="string">``</span> javascript</span><br><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">&#123;&#123;a&#125;&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> data = &#123; a : <span class="number">1</span> &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">el   : <span class="string">&quot;#app&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">data : data</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">//data.a = 121212</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">vm.$watch(<span class="string">&#x27;a&#x27;</span>, <span class="keyword">function</span>(<span class="params">newVal, oldVal</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">console</span>.<span class="title function_">log</span>(newVal, oldVal);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">vm.<span class="property">$data</span>.<span class="property">a</span> = <span class="string">&quot;123123.&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>​</p><h2 id="3-生命周期"><a href="#3-生命周期" class="headerlink" title="3.生命周期"></a>3.生命周期</h2><p>每个 Vue 组件实例在创建时都需要经历一系列的初始化步骤，比如设置好数据侦听，编译模板，挂载实例到 DOM，以及在数据改变时更新 DOM。在此过程中，它也会运行被称为生命周期钩子的函数，让开发者有机会在特定阶段运行自己的代码。</p><p>befroreCreate 在实例初始化之后</p><p>数据观测 (data observer) 和 event&#x2F;watcher 事件配置之前被调用。</p><p>created     在实例创建完成后被立即调用。</p><p>在这一步，实例已完成以下的配置：数据观测 (data observer)，属性和方法的运算，watch&#x2F;event 事件回调。</p><p> 然而，挂载阶段还没开始，$el 属性目前不可见。</p><p> beforeMount 在挂载开始之前被调用</p><p>相关的渲染函数首次被调用</p><p>mounted   在组件被挂载之后调用</p><p>beforeUpdate 数据更新时调用</p><p>updated  &#x2F;&#x2F;组件 DOM 已经更新, 组件更新完毕 </p><p> 注意：生命周期不能用箭头函数</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;msg&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">el : <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">data : &#123;</span></span><br><span class="line"><span class="language-javascript">msg : <span class="string">&quot;hi vue&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript"><span class="attr">beforeCreate</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;beforeCreate&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">created:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;created&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">beforeMount : <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;beforeMount&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">mounted : <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;mounted&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">beforeUpdate : <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;beforeUpdate&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">updated : <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;updated&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">vm.<span class="property">msg</span> = <span class="string">&quot;change msg&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;change msg&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;, <span class="number">10000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">​</span></span><br></pre></td></tr></table></figure><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041747.jpg"  ></p><p>生命周期选项Vue.js &#x3D;&gt; <a class="link"   href="https://cn.vuejs.org/api/options-lifecycle.html" >https://cn.vuejs.org/api/options-lifecycle.html<i class="fas fa-external-link-alt"></i></a></p><h2 id="4-模板语法"><a href="#4-模板语法" class="headerlink" title="4.模板语法"></a>4.模板语法</h2><p>v-bind v-html</p><p>js表达式 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; number + 1 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; 1 == 1 ? &#x27;YES&#x27; : &#x27;NO&#x27; &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">&#123;&#123;msg&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Using mustaches: &#123;&#123; rawHtml &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;rawHtml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;color&quot;</span>&gt;</span>test...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; number + 1 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; 1 == 1 ? &#x27;YES&#x27; : &#x27;NO&#x27; &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">el : <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">data : &#123;</span></span><br><span class="line"><span class="language-javascript">msg : <span class="string">&quot;hi vue&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">rawHtml : <span class="string">&#x27;&lt;span style=&quot;color:red&quot;&gt;this is should be red&lt;/span&gt;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">color</span>:<span class="string">&#x27;blue&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">number : <span class="number">10</span>,</span></span><br><span class="line"><span class="language-javascript">ok : <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">message : <span class="string">&quot;vue&quot;</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript">vm.<span class="property">msg</span> = <span class="string">&quot;hi....&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.red</span>&#123;<span class="attribute">color</span>:red;&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.blue</span>&#123;<span class="attribute">color</span>:blue; <span class="attribute">font-size</span>:<span class="number">14px</span>;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041748.jpg"  ></p><p>v-if @clikck @click.stop   stop修饰 表示只执行click2</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;seen&quot;</span>&gt;</span>HIHI<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;click1&quot;</span> &gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click.stop</span>=<span class="string">&quot;click2&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">click me </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">el : <span class="string">&quot;#app&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">data : &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">seen : <span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">url : <span class="string">&quot;HTTPS://WWW.BAIDU.COM&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">click1 : <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;click1......&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">click2 : <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;click2......&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">​<span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">​​&lt;img   onerror=&quot;notfound(this);&quot;   src=&quot;https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041749.jpg&quot; &gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 5.对象语法</span></span><br><span class="line"><span class="string">class style绑定</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span> html</span><br><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">class</span>=<span class="string">&quot;test&quot;</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">v-bind:class</span>=<span class="string">&quot;[ isActive ? &#x27;active&#x27; : &#x27;&#x27;, isGreen ? &#x27;green&#x27; : &#x27;&#x27;]&quot;</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">style</span>=<span class="string">&quot;width:200px; height:200px; text-align:center; line-height:200px;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">hahaha</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml"><span class="attr">:style</span>=<span class="string">&quot;&#123;color:color, fontSize:size, background: isBlue ? &#x27;blue&#x27; : &#x27;&#x27;&#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">hihihihi</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">el : <span class="string">&quot;#app&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">data : &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">isActive : <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">isGreen : <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">color : <span class="string">&quot;#111111&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">size : <span class="string">&#x27;50px&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">isRed : <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">isBlue</span>:<span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.test</span>&#123;<span class="attribute">font-size</span>:<span class="number">30px</span>;&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.green</span>&#123;<span class="attribute">color</span>:<span class="number">#00FF00</span>;&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="selector-class">.active</span>&#123;<span class="attribute">background</span>:gray;&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">​<span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">[2024041750]</span></span><br><span class="line"><span class="string">## 6.条件渲染</span></span><br><span class="line"><span class="string">v-if v-show </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> `</span><span class="string">``</span> javascript</span><br><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  A</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  B</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  C</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  Not A/B/C</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">&quot;ok&quot;</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">&quot;nok&quot;</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">el : <span class="string">&quot;#app&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">data : &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">type : <span class="string">&quot;D&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">ok : <span class="literal">true</span><span class="comment">//ok : false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">​<span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">​​&lt;img   onerror=&quot;notfound(this);&quot;   src=&quot;https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041751.jpg&quot; &gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">如果需要频繁切换 ，用v-show show有写入dom</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 7.列表渲染</span></span><br><span class="line"><span class="string">v-for </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> `</span><span class="string">``</span> javascript</span><br><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item,index in items&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">&#123;&#123;index + 1 &#125;&#125;  &#123;&#123; item.message &#125;&#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;value, key in object&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">&#123;&#123;key&#125;&#125; : &#123;&#123; value &#125;&#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">el : <span class="string">&quot;#app&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">data : &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">items : [</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#123; <span class="attr">message</span>: <span class="string">&#x27;zhangsan&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#123; <span class="attr">message</span>: <span class="string">&#x27;liwu&#x27;</span> &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">object</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">title</span>: <span class="string">&#x27;tt&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">author</span>: <span class="string">&#x27;zhangsan&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">createAt</span>: <span class="string">&#x27;2024-01-01&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">​<span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">​​&lt;img   onerror=&quot;notfound(this);&quot;   src=&quot;https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041752.jpg&quot; &gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 8.事件</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> `</span><span class="string">``</span> html</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example-1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;counter+=1&quot;</span>&gt;</span>数值: &#123;&#123; counter &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;greet(&#x27;abc&#x27;)&quot;</span>&gt;</span>Greet<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        el :<span class="string">&quot;#app&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        data :&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">counter</span>:<span class="number">0</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            name :<span class="string">&quot;vue&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            greet :<span class="keyword">function</span>(<span class="params">str,e</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">alert</span>(<span class="string">&#x27;hi&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">name</span>);&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041753.jpg"  ></p><h2 id="9-表单绑定"><a href="#9-表单绑定" class="headerlink" title="9.表单绑定"></a>9.表单绑定</h2> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example-1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;edit me&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Message is: &#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;message2&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;add multiple lines&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;white-space: pre-line;&quot;</span>&gt;</span>&#123;&#123; message2 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:20px;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;z&quot;</span> <span class="attr">value</span>=<span class="string">&quot;z&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;z&quot;</span>&gt;</span>z<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;x&quot;</span> <span class="attr">value</span>=<span class="string">&quot;x&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;x&quot;</span>&gt;</span>x<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span> <span class="attr">value</span>=<span class="string">&quot;a&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkedNames&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;a&quot;</span>&gt;</span>a<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Checked names: &#123;&#123; checkedNames &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:20px;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;one&quot;</span> <span class="attr">value</span>=<span class="string">&quot;One&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;picked&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;one&quot;</span>&gt;</span>One<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Two&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;picked&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;two&quot;</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>Picked: &#123;&#123; picked &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">el : <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">data : &#123;</span></span><br><span class="line"><span class="language-javascript">message : <span class="string">&quot;himsg&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">message2 :<span class="string">&quot;himsg2&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">checkedNames : [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;z&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">picked : <span class="string">&quot;Two&quot;</span></span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">submit : <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">message</span> + <span class="string">&quot; &quot;</span>+<span class="variable language_">this</span>.<span class="property">message2</span>  );</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​```</span><br><span class="line">​​<span class="tag">&lt;<span class="name">img</span>   <span class="attr">onerror</span>=<span class="string">&quot;notfound(this);&quot;</span>   <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041754.jpg&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">## 10.组件基础</span><br><span class="line"></span><br><span class="line"> ``` javascript</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button-counter</span> <span class="attr">title</span>=<span class="string">&quot;123&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button-counter</span> <span class="attr">title</span>=<span class="string">&quot;title1 &quot;</span> @<span class="attr">clicknow</span>=<span class="string">&quot;clicknow&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>hi...h3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button-counter</span> <span class="attr">title</span>=<span class="string">&quot;title2 : &quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button-counter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;button-counter&#x27;</span>, &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">props</span>: [<span class="string">&#x27;title&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript"><span class="attr">data</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">count</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;&lt;h1&gt;hi...&lt;/h1&gt;&lt;button v-on:click=&quot;clickfun&quot;&gt;&#123;&#123;title&#125;&#125; You clicked me &#123;&#123; count &#125;&#125; times.&lt;/button&gt;&lt;slot&gt;&lt;/slot&gt; &lt;/div&gt;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">clickfun</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">this</span>.<span class="property">count</span>++;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">this</span>.$emit(<span class="string">&#x27;clicknow&#x27;</span>, <span class="variable language_">this</span>.<span class="property">count</span>);<span class="comment">//传出去</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"><span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="attr">clicknow</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span></span><br><span class="line"><span class="language-javascript">&#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>component(‘xxx’,{})  xxx组件名称  {}对象内容</p><p>props:[“title”]定义属性</p><p><slot></slot> 插槽 可插入html标签</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;button-counter&#x27;</span>, &#123;</span><br><span class="line"><span class="attr">props</span>: [<span class="string">&#x27;title&#x27;</span>],</span><br><span class="line"><span class="attr">data</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">return</span> &#123;&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;&lt;h1&gt;hi...&lt;/h1&gt;&lt;/div&gt;&#x27;</span>,</span><br><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">el : <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">data : &#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">methods</span>:&#123;</span><br><span class="line">clicknow : <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">components</span>:&#123;</span><br><span class="line">test : &#123;</span><br><span class="line"><span class="attr">template</span>:<span class="string">&quot;&lt;h2&gt;h2...&lt;/h2&gt;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>Vue.component(‘button-counter’…是全局注册</p><p>components:{…  } 局部注册</p><h2 id="11-单文件组件"><a href="#11-单文件组件" class="headerlink" title="11.单文件组件"></a>11.单文件组件</h2><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041755.jpg"  ></p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello, Vue!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">HelloWorld</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// 引入 HelloWorld 组件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> <span class="title class_">HelloWorld</span> <span class="keyword">from</span> <span class="string">&#x27;./HelloWorld.vue&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 注册引入的组件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title class_">HelloWorld</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="comment">/* 样式 */</span></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="🌱Vue组件学习"><a href="#🌱Vue组件学习" class="headerlink" title="🌱Vue组件学习"></a>🌱Vue组件学习</h1><p>Vue Router<br>Vue Router 是 Vue.js 官方的路由管理器。它允许构建单页应用（SPA），在不同的 URL 之间进行导航，同时还可以实现诸如路由参数、嵌套路由、路由导航守卫等功能。</p><h2 id="1-安装-Vue-Router"><a href="#1-安装-Vue-Router" class="headerlink" title="1.安装 Vue Router"></a>1.安装 Vue Router</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router</span><br></pre></td></tr></table></figure><h2 id="2-router-js"><a href="#2-router-js" class="headerlink" title="2.router.js"></a>2.router.js</h2><p>Vue 项目中，需要创建一个路由实例并将其挂载到 Vue 实例上。通常情况下，名为 router.js 或者类似的文件中定义路由，然后在主 Vue 实例中引入它。</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&#x27;../components/Login.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Setting</span> <span class="keyword">from</span> <span class="string">&#x27;../components/Setting.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UserManagement</span> <span class="keyword">from</span> <span class="string">&#x27;../components/UserManagement.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> imtest <span class="keyword">from</span> <span class="string">&#x27;../components/WebIMTest.vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;/Login&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Login</span> &#125;,    <span class="comment">// _ // 设置空默认路由为Login.vue</span></span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;/Setting&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Setting</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;/UserManagement&#x27;</span>, <span class="attr">component</span>: <span class="title class_">UserManagement</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;/imtest&#x27;</span>, <span class="attr">component</span>: imtest &#125;</span><br><span class="line">]</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(),</span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p>createRouter 函数用于创建路由实例，而 createWebHistory 函数则用于创建基于 HTML5 History API 的路由模式，也就是使用浏览器的 History API 来处理 URL 的变化</p><h2 id="3-引入路由实例"><a href="#3-引入路由实例" class="headerlink" title="3.引入路由实例"></a>3.引入路由实例</h2><p>Vue 实例中，需要引入这个路由实例，并将其应用到 Vue 实例中。</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  <span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"> </span><br><span class="line">  app.<span class="title function_">use</span>(router) <span class="comment">// 使用路由</span></span><br><span class="line">  app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-路由导航"><a href="#4-路由导航" class="headerlink" title="4.路由导航"></a>4.路由导航</h2><p>可以使用 <router-link> 来实现路由导航，使用 <router-view> 来渲染当前路由匹配到的组件。</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="title class_">App</span>.<span class="property">vue</span> --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/setting&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span>&gt;</span>Setting<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="5-运行实例"><a href="#5-运行实例" class="headerlink" title="5.运行实例"></a>5.运行实例</h2><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041756.jpg"  ></p><p>点击Setting  则来到&#x2F;setting  ， <router-view></router-view> 展示的是Setting的内容</p><h1 id="Axios"><a href="#Axios" class="headerlink" title="Axios"></a>Axios</h1><p>Axios 是一个流行的基于 Promise 的 HTTP 客户端，用于浏览器和 Node.js 环境。它允许你以简单、直观的方式发送异步HTTP请求，并处理响应。Axios 具有许多功能，包括：</p><p>支持 Promise API：Axios使用Promise对象进行异步操作的处理，使得代码更加清晰和易于理解。</p><p>支持浏览器和Node.js：Axios可以在浏览器和Node.js环境中使用，这使得它成为跨平台开发的理想选择。</p><p>拦截请求和响应：你可以在发送请求或接收响应时，使用拦截器对请求或响应进行全局处理。</p><p>自动转换JSON数据：Axios会自动将接收到的JSON数据转换为JavaScript对象，方便在代码中进行处理。</p><p>取消请求：Axios允许你取消未完成的HTTP请求，防止不必要的网络请求。</p><p>客户端端口支持防止CSRF：Axios可以自动识别和处理CSRF保护。</p><p>错误处理：Axios提供了丰富的错误处理机制，方便你处理各种网络请求可能出现的错误。</p><p>适用于前端和后端开发，使得发送和处理HTTP请求变得更加简单和高效。</p><h2 id="1-安装Axios"><a href="#1-安装Axios" class="headerlink" title="1.安装Axios"></a>1.安装Axios</h2><p>可以通过npm或者yarn进行安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios</span><br></pre></td></tr></table></figure><h2 id="2-引入axios"><a href="#2-引入axios" class="headerlink" title="2.引入axios"></a>2.引入axios</h2> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="3-axios请求方法"><a href="#3-axios请求方法" class="headerlink" title="3.axios请求方法"></a>3.axios请求方法</h2> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line"> </span><br><span class="line"><span class="title class_">AxiosTest</span>() &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">const</span> url = <span class="string">&#x27;/api/getLogByID&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">const</span> id = <span class="string">&#x27;3&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 使用Axios发送GET请求</span></span><br><span class="line">  axios.<span class="title function_">get</span>(url, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">id</span>: id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 请求成功时的处理逻辑</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">data</span>); <span class="comment">// 输出获取到的日志数据</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 请求失败时的处理逻辑</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;There was an error!&#x27;</span>, error);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="4-调用方法"><a href="#4-调用方法" class="headerlink" title="4.调用方法"></a>4.调用方法</h2><p>在Vue模板中调用方法：通过事件绑定或其他方式来调用上面定义的方法。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;AxiosTest&quot;</span>&gt;</span>获取 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-运行实例-1"><a href="#5-运行实例-1" class="headerlink" title="5.运行实例"></a>5.运行实例</h2><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041757.jpg"  ></p><p>户点击按钮时，AxiosTest方法被调用，它会使用Axios发送GET请求来调用GetLogByID方法，并处理返回的数据或错误。 console.log 输出 返回的数据</p><h1 id="Vue-i18n-国际化"><a href="#Vue-i18n-国际化" class="headerlink" title="Vue-i18n 国际化"></a>Vue-i18n 国际化</h1><p>在Vue应用中使用Vue I18n时，可以按照以下步骤操作：</p><h2 id="1-安装Vue-I18n"><a href="#1-安装Vue-I18n" class="headerlink" title="1.安装Vue I18n"></a>1.安装Vue I18n</h2><p>首先，需要安装Vue I18n。可以通过npm或者yarn来安装Vue I18n</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-i18n</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add vue-i18n</span><br></pre></td></tr></table></figure><h2 id="2-创建语言文件"><a href="#2-创建语言文件" class="headerlink" title="2.创建语言文件"></a>2.创建语言文件</h2><p>接下来，创建语言文件。这些文件可以是JSON格式的，用来存储不同语言的翻译信息。例如en.json、zh.json和fr.json等文件，分别存储英语、中文和法语的信息。</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// en.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;Welcome&quot;</span>: <span class="string">&quot;Welcome&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Login&quot;</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Setting&quot;</span>: <span class="string">&quot;Setting&quot;</span>,</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// en.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;Welcome&quot;</span>: <span class="string">&quot;Welcome&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Login&quot;</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Setting&quot;</span>: <span class="string">&quot;Setting&quot;</span>,</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// zh.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;Welcome&quot;</span>: <span class="string">&quot;欢迎&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Login&quot;</span>: <span class="string">&quot;登录&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Setting&quot;</span>: <span class="string">&quot;设置&quot;</span>,</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-在Vue组件中使用Vue-I18n"><a href="#3-在Vue组件中使用Vue-I18n" class="headerlink" title="3.在Vue组件中使用Vue I18n"></a>3.在Vue组件中使用Vue I18n</h2><p> 在Vue组件中引入Vue I18n，并创建一个实例。</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createI18n &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-i18n&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 引入语言文件</span></span><br><span class="line"><span class="keyword">import</span> en <span class="keyword">from</span> <span class="string">&#x27;./locales/en.json&#x27;</span></span><br><span class="line"><span class="keyword">import</span> zh <span class="keyword">from</span> <span class="string">&#x27;./locales/zh.json&#x27;</span></span><br><span class="line"><span class="keyword">import</span> fr <span class="keyword">from</span> <span class="string">&#x27;./locales/fr.json&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 创建 Vue I18n 实例</span></span><br><span class="line"><span class="keyword">const</span> i18n = <span class="title function_">createI18n</span>(&#123;</span><br><span class="line">    <span class="attr">locale</span>: <span class="string">&#x27;en&#x27;</span>, <span class="comment">// 默认语言</span></span><br><span class="line">    <span class="attr">messages</span>: &#123;</span><br><span class="line">        en,</span><br><span class="line">        zh,</span><br><span class="line">        fr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 创建 Vue 应用实例</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 使用 Vue I18n 和路由</span></span><br><span class="line">app.<span class="title function_">use</span>(i18n)</span><br><span class="line">app.<span class="title function_">use</span>(router)</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 挂载应用</span></span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="4-在组件中使用翻译"><a href="#4-在组件中使用翻译" class="headerlink" title="4.在组件中使用翻译"></a>4.在组件中使用翻译</h2><p>使用 $t 方法来进行翻译。</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- <span class="title class_">HelloWorld</span>.<span class="property">vue</span> --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; $t(&#x27;Welcome&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; $t(&#x27;Login&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; $t(&#x27;Setting&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="5-切换语言：-最后，通过修改Vue-I18n实例的locale属性来切换语言。"><a href="#5-切换语言：-最后，通过修改Vue-I18n实例的locale属性来切换语言。" class="headerlink" title="5.切换语言： 最后，通过修改Vue I18n实例的locale属性来切换语言。"></a>5.切换语言： 最后，通过修改Vue I18n实例的locale属性来切换语言。</h2> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 切换到中文</span></span><br><span class="line">i18n.<span class="property">global</span>.<span class="property">locale</span> = <span class="string">&#x27;zh&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 切换到法语</span></span><br><span class="line">i18n.<span class="property">global</span>.<span class="property">locale</span> = <span class="string">&#x27;fr&#x27;</span>;</span><br><span class="line">在<span class="number">2.</span>创建语言文件时也可以只创建一个json，减少后续维护成本如：</span><br><span class="line"></span><br><span class="line"><span class="comment">// lan.json</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;en&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;Welcome&quot;</span>: <span class="string">&quot;Welcome&quot;</span>,</span><br><span class="line"><span class="string">&quot;Login&quot;</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line"><span class="string">&quot;Setting&quot;</span>: <span class="string">&quot;Setting&quot;</span>,</span><br><span class="line"> </span><br><span class="line"><span class="string">&quot;UserManagement&quot;</span>: <span class="string">&quot;User Management&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;zh&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;Welcome&quot;</span>: <span class="string">&quot;欢迎&quot;</span>,</span><br><span class="line"><span class="string">&quot;Login&quot;</span>: <span class="string">&quot;登录&quot;</span>,</span><br><span class="line"><span class="string">&quot;Setting&quot;</span>: <span class="string">&quot;设置&quot;</span>,</span><br><span class="line"><span class="string">&quot;UserManagement&quot;</span>: <span class="string">&quot;用户管理&quot;</span></span><br><span class="line"> </span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;fr&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;Welcome&quot;</span>: <span class="string">&quot;Bienvenue&quot;</span>,</span><br><span class="line"><span class="string">&quot;Login&quot;</span>: <span class="string">&quot;Connexion&quot;</span>,</span><br><span class="line"><span class="string">&quot;Setting&quot;</span>: <span class="string">&quot;Réglage&quot;</span>,</span><br><span class="line"><span class="string">&quot;UserManagement&quot;</span>: <span class="string">&quot;Gestion des utilisateurs&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;ru&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;Welcome&quot;</span>: <span class="string">&quot;Добро пожаловать&quot;</span>,</span><br><span class="line"><span class="string">&quot;Login&quot;</span>: <span class="string">&quot;Войти&quot;</span>,</span><br><span class="line"><span class="string">&quot;Setting&quot;</span>: <span class="string">&quot;Настройки&quot;</span>,</span><br><span class="line"><span class="string">&quot;UserManagement&quot;</span>: <span class="string">&quot;Управление пользователями&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&quot;hk&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;Welcome&quot;</span>: <span class="string">&quot;歡迎&quot;</span>,</span><br><span class="line"><span class="string">&quot;Login&quot;</span>: <span class="string">&quot;登錄&quot;</span>,</span><br><span class="line"><span class="string">&quot;Setting&quot;</span>: <span class="string">&quot;設置&quot;</span>,</span><br><span class="line"><span class="string">&quot;UserManagement&quot;</span>: <span class="string">&quot;用戶管理&quot;</span>,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> translations <span class="keyword">from</span> <span class="string">&#x27;./lan.json&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 创建 Vue I18n 实例</span></span><br><span class="line"><span class="keyword">const</span> i18n = <span class="title function_">createI18n</span>(&#123;</span><br><span class="line">    <span class="attr">locale</span>: <span class="string">&#x27;en&#x27;</span>, <span class="comment">// 默认语言</span></span><br><span class="line">    <span class="attr">messages</span>: translations</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-运行实例-2"><a href="#5-运行实例-2" class="headerlink" title="5.运行实例"></a>5.运行实例</h2><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041758.jpg"  ></p><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041759.jpg"  ></p><h1 id="Vue-SignalR-实时通讯"><a href="#Vue-SignalR-实时通讯" class="headerlink" title="Vue-SignalR 实时通讯"></a>Vue-SignalR 实时通讯</h1><p>在Vue应用中使用SignalR，可以按照以下步骤进行</p><h2 id="1-安装SignalR客户端库"><a href="#1-安装SignalR客户端库" class="headerlink" title="1.安装SignalR客户端库"></a>1.安装SignalR客户端库</h2><p> 首先，需要安装SignalR的JavaScript客户端库。可以通过npm或者yarn来安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @microsoft/signalr</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add @microsoft/signalr</span><br></pre></td></tr></table></figure><h2 id="2-在Vue组件中使用SignalR"><a href="#2-在Vue组件中使用SignalR" class="headerlink" title="2.在Vue组件中使用SignalR"></a>2.在Vue组件中使用SignalR</h2><p>在Vue组件中引入SignalR库，并创建一个SignalR连接，然后订阅服务器发送的消息。</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">HubConnectionBuilder</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@microsoft/signalr&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          <span class="attr">messageText</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="attr">hubConnection</span>: <span class="literal">null</span>,</span><br><span class="line">            <span class="attr">messages</span>: []</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">sendMessage</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">messageText</span>) <span class="keyword">return</span>;</span><br><span class="line"> </span><br><span class="line">      <span class="comment">// 发送消息给SignalR Hub</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">hubConnection</span>.<span class="title function_">invoke</span>(<span class="string">&#x27;SendMessage2&#x27;</span>,<span class="string">&#x27;user1&#x27;</span>, <span class="variable language_">this</span>.<span class="property">messageText</span>)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Message sent: &#x27;</span>, <span class="variable language_">this</span>.<span class="property">messageText</span>);</span><br><span class="line">          <span class="comment">// 清空输入框</span></span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">messageText</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error sending message: &#x27;</span>, error);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">    <span class="title function_">created</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">hubConnection</span> = <span class="keyword">new</span> <span class="title class_">HubConnectionBuilder</span>()</span><br><span class="line">            .<span class="title function_">withUrl</span>(<span class="string">&quot;/chatHub&quot;</span>) <span class="comment">// SignalR Hub的URL</span></span><br><span class="line">            .<span class="title function_">build</span>();</span><br><span class="line"> </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">hubConnection</span>.<span class="title function_">start</span>()</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;SignalR connection established.&quot;</span>))</span><br><span class="line">            .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;SignalR connection failed: &quot;</span>, err));</span><br><span class="line"> </span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">hubConnection</span>.<span class="title function_">on</span>(<span class="string">&quot;ReceiveMessage&quot;</span>, <span class="function">(<span class="params">user, message</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">messages</span>.<span class="title function_">push</span>(&#123; user, message &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>&#x2F;chatHub 是服务端通讯地址</p><p>SignalR服务端   👉  .NET SignalR Redis</p><h2 id="3-在模板中显示消息"><a href="#3-在模板中显示消息" class="headerlink" title="3.在模板中显示消息"></a>3.在模板中显示消息</h2><p> 最后，在你的Vue模板中显示从SignalR收到的消息。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;messageText&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendMessage&quot;</span>&gt;</span>Send<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(message, index) in messages&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message.user &#125;&#125;: &#123;&#123; message.message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里创建了一个messageTex 获取用户输入的文本点击按钮Send时，会调用sendMessage 方法来发送消息给SignalR Hub。并将输入框中的消息作为参数传递给它。</p><h2 id="4-运行实例"><a href="#4-运行实例" class="headerlink" title="4.运行实例"></a>4.运行实例</h2><p>可以看到消息实时传递到另一个客户端<br>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041760.jpg"  ></p><h1 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h1><p>Vuex 是 Vue.js 的状态管理库，用于集中管理应用的状态</p><p>用于全局状态管理 数据共享 </p><h2 id="1-安装Vuex"><a href="#1-安装Vuex" class="headerlink" title="1.安装Vuex"></a>1.安装Vuex</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vuex</span><br></pre></td></tr></table></figure><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041761.jpg"  ></p><h2 id="2-导入依赖"><a href="#2-导入依赖" class="headerlink" title="2.导入依赖"></a>2.导入依赖</h2> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span>;</span><br></pre></td></tr></table></figure><p>这里做个简单的登录Vuex store例子 </p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> api <span class="keyword">from</span> <span class="string">&#x27;../services/api&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="attr">state</span>: &#123;</span><br><span class="line">    <span class="attr">isLoggedIn</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">user</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="title function_">login</span>(<span class="params">state, user</span>) &#123;</span><br><span class="line">      state.<span class="property">isLoggedIn</span> = <span class="literal">true</span>;</span><br><span class="line">      state.<span class="property">user</span> = user;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">logout</span>(<span class="params">state</span>) &#123;</span><br><span class="line">      state.<span class="property">isLoggedIn</span> = <span class="literal">false</span>;</span><br><span class="line">      state.<span class="property">user</span> = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">&#123; commit &#125;, loginForm</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> api.<span class="title function_">post</span>(<span class="string">&#x27;/api/userApi/GetUserByMobilePwd&#x27;</span>, loginForm);</span><br><span class="line">        <span class="comment">// 登录成功，更新用户信息并设置登录状态</span></span><br><span class="line">        <span class="title function_">commit</span>(<span class="string">&#x27;login&#x27;</span>, response.<span class="property">data</span>.<span class="property">rsData</span>); <span class="comment">//rsData</span></span><br><span class="line">        <span class="keyword">return</span> response.<span class="property">data</span>;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="comment">// 登录失败，抛出错误</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(error.<span class="property">response</span>.<span class="property">data</span>.<span class="property">message</span> || <span class="string">&#x27;Login failed&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">logout</span>(<span class="params">&#123; commit &#125;</span>) &#123;</span><br><span class="line">      <span class="comment">// 清除用户信息并设置登录状态为未登录</span></span><br><span class="line">      <span class="title function_">commit</span>(<span class="string">&#x27;logout&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>state 对象包含应用的全局状态，其中 isLoggedIn 是否已经登录，user 存储用户信息。</p><p>mutations </p><p>login 方法用于将用户登录状态设置为已登录，并存储用户信息，</p><p>logout 方法用于将用户登录状态设置为未登录，并清空用户信息。</p><p>actions </p><p>login 方法用于发起登录请求，并根据响应结果提交 login mutation 来更新用户登录状态和用户信息，</p><p>logout 方法用于处理用户登出逻辑。</p><p>getters 包含一些计算属性，用于从 state 中派生出一些衍生状态。</p><p>这里的 isLoggedIn getter 返回 state.isLoggedIn，以确保状态的响应性。</p><h2 id="3-在Vue组件中使用"><a href="#3-在Vue组件中使用" class="headerlink" title="3.在Vue组件中使用"></a>3.在Vue组件中使用</h2> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./services/store.js&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">...</span><br><span class="line">  app.<span class="title function_">provide</span>(<span class="string">&#x27;store&#x27;</span>, store) <span class="comment">// 注入 Vuex store</span></span><br></pre></td></tr></table></figure><h2 id="4-编写组件"><a href="#4-编写组件" class="headerlink" title="4.编写组件"></a>4.编写组件</h2><p>login logout </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login-container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;login-card&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;login-title&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: ;&quot;</span>&gt;</span>&#123;&#123; $t(&#x27;Login&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>=<span class="string">&quot;login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;login-form&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;mobile&quot;</span>&gt;</span>&#123;&#123; $t(&#x27;username&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mobile&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;loginForm.mobile&quot;</span>  &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span>&#123;&#123; $t(&#x27;password&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;loginForm.pwd&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-if</span>=<span class="string">&quot;!isLoggedIn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>&#123;&#123; $t(&#x27;Login&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;isLoggedIn&quot;</span> <span class="attr">class</span>=<span class="string">&quot;user-info&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Welcome, &#123;&#123; user &amp;&amp; user.UserName &#125;&#125;!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;logout&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span>&gt;</span>&#123;&#123; $t(&#x27;Logout&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">      <span class="comment">&lt;!-- 添加按钮用于测试</span></span><br><span class="line"><span class="comment">      &lt;button @click=&quot;checkIsLoggedIn&quot; class=&quot;btn btn-primary&quot;&gt;Check isLoggedIn&lt;/button&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-编写脚本"><a href="#5-编写脚本" class="headerlink" title="5.编写脚本"></a>5.编写脚本</h2><p>Vue3  setup() 函数设置组件逻辑</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> store = <span class="title function_">useStore</span>();</span><br><span class="line">    <span class="keyword">const</span> loginForm = <span class="title function_">ref</span>(&#123;</span><br><span class="line">      <span class="attr">mobile</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">pwd</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">const</span> isLoggedIn = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> store.<span class="property">state</span>.<span class="property">isLoggedIn</span>); <span class="comment">// 使用 computed 获取响应式的 isLoggedIn</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">const</span> user = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> store.<span class="property">state</span>.<span class="property">user</span>); <span class="comment">// 使用 computed 获取响应式的 user</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">login</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isLoggedIn before login:&#x27;</span>, isLoggedIn.<span class="property">value</span>); <span class="comment">// 在调用接口前输出 isLoggedIn</span></span><br><span class="line">        <span class="keyword">const</span> result = <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;login&#x27;</span>, loginForm.<span class="property">value</span>);</span><br><span class="line">        <span class="keyword">if</span> (result) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Login successful&#x27;</span>);</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isLoggedIn after login:&#x27;</span>, isLoggedIn.<span class="property">value</span>); <span class="comment">// 在调用接口后输出 isLoggedIn</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Login failed: Login unsuccessful&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Login failed:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">logout</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&#x27;logout&#x27;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Logout successful&#x27;</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Logout failed:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 新增方法用于测试</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">checkIsLoggedIn</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isLoggedIn:&#x27;</span>, isLoggedIn.<span class="property">value</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> &#123; loginForm, login, logout, isLoggedIn, user, checkIsLoggedIn &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>当 isLoggedIn 在 mutations 中被修改时，组件中使用该属性的地方会立即更新。</p><h2 id="6-运行实例"><a href="#6-运行实例" class="headerlink" title="6.运行实例"></a>6.运行实例</h2><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041762.jpg"  ></p><p>当然，还有很多组件值得学习。</p><p>愿在前端的旅程，不断进步！🐶</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET i18n </title>
      <link href="/2024/04/16/NET-i18n/"/>
      <url>/2024/04/16/NET-i18n/</url>
      
        <content type="html"><![CDATA[<p>环境 WIN10 VS2022 .NET8  </p><h1 id="👋创建项目"><a href="#👋创建项目" class="headerlink" title="👋创建项目"></a>👋创建项目</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041301.jpg"  ></p><h1 id="👀创建Resources-Controllers"><a href="#👀创建Resources-Controllers" class="headerlink" title="👀创建Resources Controllers"></a>👀创建Resources Controllers</h1><p>HomeController.en.resx</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041302.jpg"  ><br>HomeController.fr.resx</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041303.jpg"  ><br>HomeController.zh.resx</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041304.jpg"  ></p><h1 id="🌱Program-cs添加国际化支持"><a href="#🌱Program-cs添加国际化支持" class="headerlink" title="🌱Program.cs添加国际化支持"></a>🌱Program.cs添加国际化支持</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加国际化支持</span></span><br><span class="line">builder.Services.AddLocalization(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.ResourcesPath = <span class="string">&quot;Resources&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> app = builder.Build();</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 多语言</span></span><br><span class="line"><span class="keyword">var</span> supportedCultures = <span class="keyword">new</span> List&lt;CultureInfo&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">new</span> CultureInfo(<span class="string">&quot;en&quot;</span>),</span><br><span class="line">                <span class="keyword">new</span> CultureInfo(<span class="string">&quot;zh&quot;</span>),</span><br><span class="line">                 <span class="keyword">new</span> CultureInfo(<span class="string">&quot;fr&quot;</span>),</span><br><span class="line">            &#125;;</span><br><span class="line"> </span><br><span class="line">app.UseRequestLocalization(<span class="keyword">new</span> RequestLocalizationOptions</span><br><span class="line">&#123;</span><br><span class="line">    DefaultRequestCulture = <span class="keyword">new</span> RequestCulture(<span class="string">&quot;zh&quot;</span>),</span><br><span class="line">    SupportedCultures = supportedCultures,</span><br><span class="line">    SupportedUICultures = supportedCultures</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="⚡注入localizer"><a href="#⚡注入localizer" class="headerlink" title="⚡注入localizer"></a>⚡注入localizer</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">private</span> <span class="keyword">readonly</span> IStringLocalizer&lt;HomeController&gt; localizer;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HomeController</span>(<span class="params">ILogger&lt;HomeController&gt; logger,     </span></span></span><br><span class="line"><span class="params"><span class="function">IStringLocalizer&lt;HomeController&gt; localizer</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    _logger = logger;</span><br><span class="line">    <span class="keyword">this</span>.localizer = localizer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="📫编写调用方法"><a href="#📫编写调用方法" class="headerlink" title="📫编写调用方法"></a>📫编写调用方法</h1><pre><code>    [HttpGet]    public ActionResult&lt;string&gt; Get()    &#123;        string rsstr= localizer.GetString(&quot;String1&quot;).Value;//?ui-culture=zh        return rsstr;    &#125;</code></pre><p>默认是中文</p><p>?ui-culture&#x3D;en 则取对应HomeController.en.resx 里面的String1</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041306.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041307.jpg"  ></p><p>🐟</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> i18n </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL Incorrect string value </title>
      <link href="/2024/04/13/MySQL-Incorrect/"/>
      <url>/2024/04/13/MySQL-Incorrect/</url>
      
        <content type="html"><![CDATA[<p>MySQL存储IOS传过来emoji错误处理 Incorrect string value: ‘‘ for column ‘xxx‘ at row<br>MySQL Incorrect string value: ‘\xF0\x9F\x8D\xBA‘ for column ‘xxx‘ at row</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/202404132a.jpg"  ></p><p>调用接口提示</p><p>Incorrect string value: ‘\xF0\x9F\x8D\xBA’ for column ‘xxx’ at row </p><p>😵‍💫</p><p>需要把mysql字段排序规则</p><p>utf8mb4_0900_ai_ci</p><p>改成</p><p>utf8mb4_unicode_ci</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/202404132b.jpg"  ></p><h1 id="💤SQL调整"><a href="#💤SQL调整" class="headerlink" title="💤SQL调整"></a>💤SQL调整</h1><p>ALTER TABLE <code>MUser</code> CHANGE <code>Signature</code> <code>Signature</code> VARCHAR(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL;</p><ul><li>设置该列的字符集为<code>utf8mb4</code>。<code>utf8mb4</code>是MySQL中的一个字符集，它可以存储四字节的UTF-8字符，因此可以支持更多的Unicode字符，如某些表情符号。  </li><li>设置该列的校对规则为<code>utf8mb4_unicode_ci</code>。校对规则决定了字符如何比较和排序。<code>utf8mb4_unicode_ci</code>是一个不区分大小写的校对规则，它基于Unicode标准。</li></ul><p>ALTER DATABASE IDB CHARACTER SET &#x3D; utf8mb4 COLLATE &#x3D; utf8mb4_unicode_ci;</p><ul><li><p>设置该数据库的字符集为<code>utf8mb4</code>。</p></li><li><p>设置该数据库的校对规则为<code>utf8mb4_unicode_ci</code>。</p></li></ul><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/202404132c.jpg"  ></p><h1 id="💤服务端连接调整"><a href="#💤服务端连接调整" class="headerlink" title="💤服务端连接调整"></a>💤服务端连接调整</h1><p>  ChatSet utf8mb4</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/202404132d.jpg"  ></p><h1 id="💤Runing"><a href="#💤Runing" class="headerlink" title="💤Runing"></a>💤Runing</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/202404132e.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/202404132f.jpg"  ></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debian Docker Redis </title>
      <link href="/2024/04/12/debian-docker-reids/"/>
      <url>/2024/04/12/debian-docker-reids/</url>
      
        <content type="html"><![CDATA[<p>Debian安装docker</p><h1 id="1-使用官方脚本自动安装docker"><a href="#1-使用官方脚本自动安装docker" class="headerlink" title="1.使用官方脚本自动安装docker"></a>1.使用官方脚本自动安装docker</h1><p>安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sudo sh get-docker.sh</span><br></pre></td></tr></table></figure><p>如果安装提示</p><p>-bash sudo command not found</p><p>则需要</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#update</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install sudo</span><br></pre></td></tr></table></figure><p>再执行安装脚本1</p><p>安装成功后可以输入 docker命令查看docker版本 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#version</span></span><br><span class="line">docker --version</span><br></pre></td></tr></table></figure><p>能查到表明安装成功</p><h1 id="2-pull-redis"><a href="#2-pull-redis" class="headerlink" title="2.pull redis"></a>2.pull redis</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pull redis</span></span><br><span class="line">docker pull redis:latest</span><br><span class="line">pull redis镜像</span><br></pre></td></tr></table></figure><h1 id="3-创建reids容器"><a href="#3-创建reids容器" class="headerlink" title="3.创建reids容器"></a>3.创建reids容器</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name redis-test -p 6379:6379 redis</span><br></pre></td></tr></table></figure><h1 id="4-测试redis"><a href="#4-测试redis" class="headerlink" title="4.测试redis"></a>4.测试redis</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it redis-test /bin/bash </span><br><span class="line">redis-cli</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">test</span> 1 </span><br><span class="line">get <span class="built_in">test</span> </span><br><span class="line"><span class="built_in">set</span> <span class="built_in">test</span> 1</span><br></pre></td></tr></table></figure><p>提示ok</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get <span class="built_in">test</span> </span><br></pre></td></tr></table></figure><p>一些命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#images</span></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line"><span class="comment">#redis</span></span><br><span class="line">docker pull redis:latest</span><br><span class="line">docker run -itd --name redis-test -p 6379:6379 redis</span><br><span class="line"><span class="comment">#test redis</span></span><br><span class="line">docker <span class="built_in">exec</span> -it redis-test /bin/bash - </span><br><span class="line">redis-cli</span><br><span class="line"><span class="built_in">set</span> <span class="built_in">test</span> 1 </span><br><span class="line">get <span class="built_in">test</span> </span><br></pre></td></tr></table></figure><p>docker desktop也可以通过命令安装</p><p>安装完后可以在容器列表查看</p><!--redis可以实现轻量消息队列计数器 全局自增 分布式ID分布式锁 GEO-->]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Debian </tag>
            
            <tag> Reids </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET SignalR Redis </title>
      <link href="/2024/04/12/NET-SignalR-Redis/"/>
      <url>/2024/04/12/NET-SignalR-Redis/</url>
      
        <content type="html"><![CDATA[<p>环境 Win10 VS2022 .NET8 Docker  Redis</p><p>前言</p><p>什么是 SignalR？<br>ASP.NET Core SignalR 是一个开放源代码库，可用于简化向应用添加实时 Web 功能。 实时 Web 功能使服务器端代码能够将内容推送到客户端。</p><p>适合 SignalR 的候选项：</p><p>需要从服务器进行高频率更新的应用。 （游戏、社交网络、投票、拍卖、地图和 GPS 应用）<br>仪表板和监视应用。 （公司仪表板、即时销售更新或出行警报）<br>协作应用。 （包括白板应用和团队会议软件）<br>需要通知的应用。（ 社交网络、电子邮件、聊天、游戏等）<br>SignalR 提供用于创建服务器到客户端的远程过程调用 (RPC) API。 RPC 从服务器端 .NET Core 代码调用客户端上的函数。支持JavaScript ，.NET ，JAVA，Swift （官方没有明确支持，这是第三方库）其中每个平台都有各自的客户端 SDK。 因此，RPC 调用所调用的编程语言有所不同。</p><p>ASP.NET Core SignalR 的一些功能：</p><p>自动处理连接管理。<br>同时向所有连接的客户端发送消息。 例如聊天室。<br>向特定客户端或客户端组发送消息。<br>对其进行缩放，以处理不断增加的流量。<br>SignalR 中心协议<br>1.👋nuget引入SignalR<br>​​<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041210.jpg"  ></p><p>2.👀创建SignalR Hub</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.SignalR;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WebSignalR</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ChatHub</span> : <span class="title">Hub</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">SendMessage</span>(<span class="params"><span class="built_in">string</span> user, <span class="built_in">string</span> message</span>)</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">await</span> Clients.All.SendAsync(<span class="string">&quot;ReceiveMessage&quot;</span>, user, message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">   </span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.🌱 Program.cs添加SignalR服务<br> (Startup.cs)</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加SignalR服务 </span></span><br><span class="line">builder.Services.AddSignalR();</span><br><span class="line">builder.Services.AddControllersWithViews();</span><br><span class="line">app.UseEndpoints(endpoints =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    endpoints.MapHub&lt;ChatHub&gt;(<span class="string">&quot;/chathub&quot;</span>);</span><br><span class="line">    endpoints.MapControllerRoute(</span><br><span class="line">        name: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">        pattern: <span class="string">&quot;&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>4.📫 添加前端代码</p> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span><br><span class="line"> </span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;chat-container&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userInput&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Your name&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;messageInput&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Type a message...&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;sendButton&quot;</span>&gt;</span>Send<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;messagesList&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"> </span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.12/signalr.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> connection = <span class="keyword">new</span> signalR.<span class="title class_">HubConnectionBuilder</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            .<span class="title function_">withUrl</span>(<span class="string">&quot;/chathub&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            .<span class="title function_">build</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"> </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        connection.<span class="title function_">on</span>(<span class="string">&quot;ReceiveMessage&quot;</span>, <span class="keyword">function</span> (<span class="params">user, message</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">const</span> encodedUser = user.<span class="title function_">replace</span>(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;amp;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&amp;lt;&quot;</span>).<span class="title function_">replace</span>(/&gt;</span></span>/g, <span class="string">&quot;&amp;gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">const</span> encodedMessage = message.<span class="title function_">replace</span>(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;amp;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&amp;lt;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&amp;gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">const</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">            li.<span class="property">textContent</span> = <span class="string">`<span class="subst">$&#123;encodedUser&#125;</span>: <span class="subst">$&#123;encodedMessage&#125;</span>`</span>;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;messagesList&quot;</span>).<span class="title function_">appendChild</span>(li);</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">        connection.<span class="title function_">start</span>().<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err.<span class="title function_">toString</span>());</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sendButton&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> user = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;userInput&quot;</span>).<span class="property">value</span>;</span><br><span class="line">            <span class="keyword">const</span> message = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;messageInput&quot;</span>).<span class="property">value</span>;</span><br><span class="line">            connection.<span class="title function_">invoke</span>(<span class="string">&quot;SendMessage&quot;</span>, user, message).<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err.<span class="title function_">toString</span>());</span><br><span class="line">            &#125;);</span><br><span class="line">            event.<span class="title function_">preventDefault</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>5.⚡F5运行<br>​<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041211.jpg"  ><br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041212.jpg"  ></p><p>升级优化</p><p>封装Msg</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Msg</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span>? user &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span>? message &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//sendMessage</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">SendMessage</span>(<span class="params">Msg entity</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">if</span> (Clients != <span class="literal">null</span>)</span><br><span class="line">          <span class="keyword">await</span> Clients.All.SendAsync(<span class="string">&quot;ReceiveMessage&quot;</span>, entity.user, entity.message);<span class="comment">// $&quot;&#123;entity.user&#125; 发送消息：&#123;entity.message&#125;&quot;);</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>前端   connection.invoke(“SendMessage” …   传递msg对象进来即可</p><p>6.💪跨域问题</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddCors(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.AddPolicy(<span class="string">&quot;CorsPolicy&quot;</span>,</span><br><span class="line">        builder =&gt; builder</span><br><span class="line">            .AllowAnyMethod()</span><br><span class="line">            .AllowAnyHeader()</span><br><span class="line">            .WithOrigins(<span class="string">&quot;http://localhost:5173&quot;</span>) <span class="comment">// 替换为你允许的来源</span></span><br><span class="line">            .AllowCredentials());</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//通过添加app.UseCors(&quot;CorsPolicy&quot;)中间件来启用跨域支持</span></span><br><span class="line">app.UseCors(<span class="string">&quot;CorsPolicy&quot;</span>); </span><br></pre></td></tr></table></figure><p>上面代码中的WithOrigins方法指定了允许访问SignalR端点的来源。将​”<a class="link"   href="http://localhost:5173" 替换为你允许的实际来源。如果要允许任何来源访问，可以使用通配符"*"。​">http://localhost:5173&quot;替换为你允许的实际来源。如果要允许任何来源访问，可以使用通配符&quot;*&quot;。​<i class="fas fa-external-link-alt"></i></a></p><p>这样就可以跨域访问 👇Vue跨域</p><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041213.jpg"  ></p><p>7.🧙‍♂️聊天池的实现<br>实际生产可能需要1对1或者多对多，可在后端建立一个字典，将聊天池的标识映射到该聊天池的连接ID列表。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Dictionary&lt;<span class="built_in">string</span>, List&lt;<span class="built_in">string</span>&gt;&gt; _chatRooms = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, List&lt;<span class="built_in">string</span>&gt;&gt;();</span><br><span class="line">     </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">JoinChatRoom</span>(<span class="params"><span class="built_in">string</span> chatRoomId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 将用户连接添加到特定的聊天池</span></span><br><span class="line">    <span class="keyword">if</span> (!MsgSt._chatRooms2.ContainsKey(chatRoomId))</span><br><span class="line">    &#123;</span><br><span class="line">        MsgSt._chatRooms2[chatRoomId] = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    MsgSt._chatRooms2[chatRoomId].Add(Context.ConnectionId);</span><br><span class="line">   <span class="comment">// int i = _chatRooms.Count;</span></span><br><span class="line">    Console.WriteLine(<span class="string">&quot;chatRoomId-Cid&quot;</span> + chatRoomId + <span class="string">&quot; &quot;</span> + Context.ConnectionId);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">SendMessageToChatRoom</span>(<span class="params"><span class="built_in">string</span> chatRoomId, <span class="built_in">string</span> user, <span class="built_in">string</span> message</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Console.WriteLine(connectionIds);</span></span><br><span class="line">    <span class="comment">// 向特定的聊天池发送消息</span></span><br><span class="line">    <span class="keyword">if</span> (MsgSt._chatRooms2.TryGetValue(chatRoomId, <span class="keyword">out</span> <span class="keyword">var</span> connectionIds))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> connectionId <span class="keyword">in</span> connectionIds)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">await</span> Clients.Client(connectionId).SendAsync(<span class="string">&quot;ReceiveMessage&quot;</span>,user, message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//  await Clients.Client(connectionId).SendAsync(&quot;ReceiveMessage&quot;, message);</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MsgSt</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Dictionary&lt;<span class="built_in">string</span>, List&lt;<span class="built_in">string</span>&gt;&gt; _chatRooms2= <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, List&lt;<span class="built_in">string</span>&gt;&gt;();</span><br><span class="line">    <span class="comment">//public static int temp2 = 0;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在前端发送消息时，除了发送消息内容外，还要发送消息到的聊天池的标识。</p><p>JoinChatRoom   SendMessageToChatRoom</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="keyword">const</span> connection = <span class="keyword">new</span> signalR.<span class="title class_">HubConnectionBuilder</span>()</span><br><span class="line">            .<span class="title function_">withUrl</span>(<span class="string">&quot;/chathub&quot;</span>)</span><br><span class="line">            .<span class="title function_">build</span>();</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">const</span> userId = <span class="string">&quot;userid001&quot;</span>;</span><br><span class="line">        <span class="keyword">const</span> chatRoomId = <span class="string">&quot;room001&quot;</span>; <span class="comment">// 聊天池标识</span></span><br><span class="line"> </span><br><span class="line">        connection.<span class="title function_">on</span>(<span class="string">&quot;ReceiveMessage&quot;</span>, <span class="keyword">function</span> (<span class="params">user, message</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> encodedUser = user.<span class="title function_">replace</span>(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;amp;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&amp;lt;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&amp;gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">const</span> encodedMessage = message.<span class="title function_">replace</span>(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;amp;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&amp;lt;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&amp;gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">const</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;li&quot;</span>);</span><br><span class="line">            li.<span class="property">textContent</span> = <span class="string">`<span class="subst">$&#123;encodedUser&#125;</span>: <span class="subst">$&#123;encodedMessage&#125;</span>`</span>;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;messagesList&quot;</span>).<span class="title function_">appendChild</span>(li);</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">        connection.<span class="title function_">start</span>().<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Connection started&quot;</span> +chatRoomId);</span><br><span class="line">            connection.<span class="title function_">invoke</span>(<span class="string">&quot;JoinChatRoom&quot;</span>, chatRoomId); <span class="comment">// 加入特定的聊天池</span></span><br><span class="line">        &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err));</span><br><span class="line"> </span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;sendButton&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> message = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;messageInput&quot;</span>).<span class="property">value</span>;</span><br><span class="line">            <span class="keyword">const</span> user = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;userInput&quot;</span>).<span class="property">value</span>;</span><br><span class="line">            connection.<span class="title function_">invoke</span>(<span class="string">&quot;SendMessageToChatRoom&quot;</span>, chatRoomId, user, message).<span class="title function_">catch</span>(<span class="keyword">function</span> (<span class="params">err</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err.<span class="title function_">toString</span>());</span><br><span class="line">            &#125;);</span><br><span class="line">            event.<span class="title function_">preventDefault</span>();</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>chatroom1 </p><p>​<br> ​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041214.jpg"  ><br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041215.jpg"  ></p><p>8.☔断线重连<br>确保客户端在与 SignalR Hub 的连接断开后能够重新连接并恢复之前的状态</p><p>可以在客户端代码中实现重连逻辑</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> isConnected = <span class="literal">false</span>; <span class="comment">// 用于标识是否已连接</span></span><br><span class="line"><span class="comment">// 连接成功时将 isConnected 设置为 true</span></span><br><span class="line">connection.onclose(() =&gt; &#123;</span><br><span class="line">    isConnected = <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="function"><span class="keyword">async</span> function <span class="title">startConnection</span>()</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">await</span> connection.start();</span><br><span class="line">        console.log(<span class="string">&quot;Connection started&quot;</span>);</span><br><span class="line">        isConnected = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        console.error(err);</span><br><span class="line">        isConnected = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// 连接失败时尝试重新连接</span></span><br><span class="line">        setTimeout(startConnection, <span class="number">5000</span>); <span class="comment">// 5秒后重试</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">startConnection(); <span class="comment">// 初始连接</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>9.🌠配置Redis分布式缓存<br>Docker Redis 👈 Redis部署</p><p>用 Microsoft.Extensions.Caching.StackExchangeRedis 包连接到 Redis 并使用分布式缓存。这样可以确保即使服务重启，也能够保留聊天室的状态。</p><p>安装 Microsoft.Extensions.Caching.StackExchangeRedis   </p><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041216.jpg"  ></p><p>or StackExchange.Redis </p><p>​​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041217.jpg"  ></p><p>Program.cs</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加Redis缓存</span></span><br><span class="line">builder.Services.AddStackExchangeRedisCache(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.Configuration = <span class="string">&quot;127.0.0.1:6379&quot;</span>; <span class="comment">// Redis服务器地址</span></span><br><span class="line">    options.InstanceName = <span class="string">&quot;ChatRooms&quot;</span>; <span class="comment">// 实例名称</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>options.Configuration 设置为 Redis 服务器的地址，如果 Redis 运行在本地，则可以设置为 “localhost”。options.InstanceName 是 Redis 实例名称。</p><p>启动Redis服务  </p><p>在 ChatHub 中注入 IDistributedCache，连接到 Redis</p><p>_cache相当于 _chatRooms2存放连接ID的列表</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> IDistributedCache _cache;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ChatHub</span>(<span class="params">IDistributedCache cache</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    _cache = cache;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">JoinChatRoom</span>(<span class="params"><span class="built_in">string</span> chatRoomId</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 使用Redis的SET操作来添加连接ID到聊天室  </span></span><br><span class="line">    <span class="keyword">var</span> connectionId = Context.ConnectionId;</span><br><span class="line">    <span class="keyword">var</span> key = <span class="string">$&quot;chatrooms:<span class="subst">&#123;chatRoomId&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> connectionIds = <span class="keyword">await</span> _cache.GetStringAsync(key);</span><br><span class="line">    <span class="keyword">var</span> connectionsList = <span class="built_in">string</span>.IsNullOrEmpty(connectionIds)</span><br><span class="line">        ? <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;()</span><br><span class="line">        : connectionIds.Split(<span class="keyword">new</span>[] &#123; <span class="string">&#x27;,&#x27;</span> &#125;, StringSplitOptions.RemoveEmptyEntries).ToList();</span><br><span class="line"> </span><br><span class="line">    connectionsList.Add(connectionId);</span><br><span class="line">    <span class="keyword">await</span> _cache.SetStringAsync(key, <span class="built_in">string</span>.Join(<span class="string">&quot;,&quot;</span>, connectionsList));</span><br><span class="line"> </span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;chatRoomId-Cid <span class="subst">&#123;chatRoomId&#125;</span> <span class="subst">&#123;connectionId&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">SendMessageToChatRoom</span>(<span class="params"><span class="built_in">string</span> chatRoomId, <span class="built_in">string</span> user, <span class="built_in">string</span> message</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> key = <span class="string">$&quot;chatrooms:<span class="subst">&#123;chatRoomId&#125;</span>&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> connectionIds = <span class="keyword">await</span> _cache.GetStringAsync(key);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(connectionIds))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> connectionsList = connectionIds.Split(<span class="keyword">new</span>[] &#123; <span class="string">&#x27;,&#x27;</span> &#125;, StringSplitOptions.RemoveEmptyEntries);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> connectionId <span class="keyword">in</span> connectionsList)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">await</span> Clients.Client(connectionId).SendAsync(<span class="string">&quot;ReceiveMessage&quot;</span>, user, message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样前端传过来的 room001 room002 便会存入到Redis里面</p><p>运行调试的时候可以看到有用户JionChatRoom的chatRoomId connectionId</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041218.jpg"  ></p><p>也可通过Redis命令 KEY * 查看</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/2024041219.jpg"  ></p><p>PS：这里用简单的字符串来存储连接ID的列表，连接ID之间用逗号分隔，实际生产可使用Redis的集合（Set）数据类型来存储连接ID，还需处理Redis连接失败、缓存过期等异常情况。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> Redis </tag>
            
            <tag> SignalR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>.NET Swagger </title>
      <link href="/2024/04/11/NET-Swagger/"/>
      <url>/2024/04/11/NET-Swagger/</url>
      
        <content type="html"><![CDATA[<p>开发环境 Win10 VS2022 .NET8.0</p><h1 id="1-从NuGet添加Swagger"><a href="#1-从NuGet添加Swagger" class="headerlink" title="1.从NuGet添加Swagger"></a>1.从NuGet添加Swagger</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411a1.jpg"  ></p><p>在解决方案资源管理器中右键单击项目&gt;管理 NuGet 包<br>将包源设置为“nuget.org”<br>确保启用“包括预发行”选项<br>在搜索框中输入“Swashbuckle.AspNetCore”<br>从“浏览”选项卡中选择最新的“Swashbuckle.AspNetCore”包，然后单击“安装”</p><h1 id="2-将-Swagger-生成器添加到以下位置的服务集合中Program-cs："><a href="#2-将-Swagger-生成器添加到以下位置的服务集合中Program-cs：" class="headerlink" title="2.将 Swagger 生成器添加到以下位置的服务集合中Program.cs："></a>2.将 Swagger 生成器添加到以下位置的服务集合中Program.cs：</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddControllers();</span><br><span class="line"> </span><br><span class="line">builder.Services.AddEndpointsApiExplorer();</span><br><span class="line">builder.Services.AddSwaggerGen();</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411a2.jpg"  ></p><p>启用中间件 生成</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">app.UseSwagger();</span><br><span class="line">app.UseSwaggerUI();</span><br><span class="line"> </span><br><span class="line">app.UseSwaggerUI(options =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.SwaggerEndpoint(<span class="string">&quot;/swagger/v1/swagger.json&quot;</span>, <span class="string">&quot;v1&quot;</span>);</span><br><span class="line">    options.RoutePrefix = <span class="built_in">string</span>.Empty;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411a3.jpg"  ></p><h1 id="3-添加API控制器"><a href="#3-添加API控制器" class="headerlink" title="3.添加API控制器"></a>3.添加API控制器</h1><p>创建api</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// GET api/&lt;myapi&gt;/5</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> getid</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;id&quot;&gt;</span>id参数<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>valuestr<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">[<span class="meta">HttpGet(<span class="string">&quot;&#123;id&#125;&quot;</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Get</span>(<span class="params"><span class="built_in">int</span> id</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;value&quot;</span> + id;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// POST api/&lt;myapi&gt;</span></span><br><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Post</span>(<span class="params">[FromBody] <span class="built_in">string</span> <span class="keyword">value</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//post逻辑代码</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;myPost&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// PUT api/&lt;myapi&gt;/5</span></span><br><span class="line">[<span class="meta">HttpPut(<span class="string">&quot;&#123;id&#125;&quot;</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Put</span>(<span class="params"><span class="built_in">int</span> id, [FromBody] <span class="built_in">string</span> <span class="keyword">value</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//put逻辑代码</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;myPut&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// DELETE api/&lt;myapi&gt;/5</span></span><br><span class="line">[<span class="meta">HttpDelete(<span class="string">&quot;&#123;id&#125;&quot;</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Delete</span>(<span class="params"><span class="built_in">int</span> id</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//delete逻辑代码</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;myDelete&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411a4.jpg"  ></p><h1 id="4-F5运行-访问-swagger-index-html"><a href="#4-F5运行-访问-swagger-index-html" class="headerlink" title="4.F5运行 访问&#x2F;swagger&#x2F;index.html"></a>4.F5运行 访问&#x2F;swagger&#x2F;index.html</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411a5.jpg"  ></p><h1 id="5-try-it-out测试API"><a href="#5-try-it-out测试API" class="headerlink" title="5.try it out测试API"></a>5.try it out测试API</h1><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411a6.jpg"  ></p><p>看到返回了 value111  即接口没问题</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
            <tag> Swagger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker MySQL </title>
      <link href="/2024/04/11/Docker-MySQL/"/>
      <url>/2024/04/11/Docker-MySQL/</url>
      
        <content type="html"><![CDATA[<p>1.下载docker desktop<br><a class="link"   href="https://www.docker.com/products/docker-desktop/" >https://www.docker.com/products/docker-desktop/<i class="fas fa-external-link-alt"></i></a></p><ol start="2"><li>创建容器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run </span><br></pre></td></tr></table></figure>创建并启动mysql容器</li></ol><p>–name 容器名字 </p><p>-d 后台运行容器</p><p>-p 映射端口</p><p>-e 参数</p><p>截至目前最新的mysql是mysql8.0.36 那就整这个试下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name mysql-container -e TZ=UTC -p 30306:3306 -e MYSQL_ROOT_PASSWORD=你的密码 mysql:8.0.36-debian</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411a.jpg"  ></p><p>等待一会，看到mysql已经pull下来。</p><p>回到docker看到容器已经创建。</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411b.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411c.jpg"  ></p><p>可以输入docker images查看</p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411d.jpg"  ></p><p>3.创建mysql数据库管理软件容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name myadmin -d --<span class="built_in">link</span> mysql-container:db -p 8880:80 phpmyadmin/phpmyadmin</span><br></pre></td></tr></table></figure><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411e.jpg"  ></p><p>回到docker查看下容器是否创建成功。<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411f.jpg"  ></p><p>复制地址到浏览器访问。<br>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411g.jpg"  ></p><p>​<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources@1.3/v2/20240411h.jpg"  ></p><p>okok</p><p>唉哟不错哦~</p><p>扩展：ubuntu版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name mysql-container -e TZ=UTC -p 30306:3306 -e MYSQL_ROOT_PASSWORD=xxxxxx ubuntu/mysql:8.0-22.04_beta</span><br></pre></td></tr></table></figure><p> <a class="link"   href="https://hub.docker.com/r/ubuntu/mysql?uuid=D64B1F2A-A81A-4D2C-B66B-FCFAECE77EFE" >https://hub.docker.com/r/ubuntu/mysql?uuid=D64B1F2A-A81A-4D2C-B66B-FCFAECE77EFE<i class="fas fa-external-link-alt"></i></a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/03/20/hello-world/"/>
      <url>/2024/03/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo<i class="fas fa-external-link-alt"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting<i class="fas fa-external-link-alt"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> .NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cloud act</title>
      <link href="/2023/08/03/Cloud/"/>
      <url>/2023/08/03/Cloud/</url>
      
        <content type="html"><![CDATA[<p><a class="link"   href="https://cloud.tencent.com/" >https://cloud.tencent.com/<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://www.aliyun.com/" >https://www.aliyun.com/<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://activity.huaweicloud.com/ecs.html" >https://activity.huaweicloud.com/ecs.html<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://www.jdcloud.com/cn/activity/promotions" >https://www.jdcloud.com/cn/activity/promotions<i class="fas fa-external-link-alt"></i></a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>100件小事</title>
      <link href="/2023/02/20/T100/"/>
      <url>/2023/02/20/T100/</url>
      
        <content type="html"><![CDATA[<br><div class="container grid-sm s-content posts">    <div class="column col-12">        <ol>                        <li class="done"><del>手牵手逛街</del></li>                        <li class="done"><del>一起看海</del></li>                        <li class="">一起看雪</li>                        <li class="done"><del>喂我吃东西</del></li>                        <li class="">一起堆雪人</li>                        <li class="done"><del>一起坐摩天轮</del></li>                        <li class="">一起恶作剧</li>                        <li class="done"><del>一起坐海盗船</del></li>                        <li class="done"><del>吃同一杯冰淇淋</del></li>                        <li class="done"><del>一起搬东西</del></li>                        <li class="done"><del>一起布置我们的小窝</del></li>                        <li class="done">一起看日出</li>                        <li class="">一起看恐怖片</li>                        <li class="done"><del>送惊喜小礼物</del></li>                        <li class="done"><del>为我做顿饭</del></li>                        <li class="done"><del>一起看爱情片</del></li>                        <li class="done">一起看日落</li>                        <li class="done">一起数星星</li>                        <li class="done"><del>一起洗衣服</del></li>                        <li class="done"><del>一起听同一首曲子</del></li>                        <li class="done"><del>在朋友面前介绍我</del></li>                        <li class="done"><del>把肩膀借给我靠</del></li>                        <li class="done"><del>为我擦眼泪</del></li>                        <li class="done"><del>唱歌给我听</del></li>                        <li class="">为我写篇日记</li>                        <li class="done"><del>在大街上背我</del></li>                        <li class="done"><del>随叫随到</del></li>                        <li class="">一起看球赛</li>                        <li class="">比赛啃西瓜</li>                        <li class="done">在沙滩上画心</li>                        <li class="">一起没形象的大叫</li>                        <li class="done">一起熬夜玩游戏</li>                        <li class="done"><del>为我系鞋带</del></li>                        <li class="done"><del>一起拉粑</del></li>                        <li class="done"><del>一起发呆</del></li>                        <li class="done"><del>一起过我们的纪念日</del></li>                        <li class="">一起做陶瓷</li>                        <li class="done">一起许愿</li>                        <li class="done"><del>一起做蛋糕</del></li>                        <li class="done"><del>学对方说话</del></li>                        <li class=""><del>一起模仿搞笑的事情</del></li>                        <li class="done"><del>为我剪指甲</del></li>                        <li class="done"><del>吃我剩下的饭饭</del></li>                        <li class="">把你欺负的对我没辙</li>                        <li class="">一起打水仗</li>                        <li class="done"><del>一起拍照片</del></li>                        <li class="">一起骑脚踏车</li>                        <li class=""><del>戴同一条围巾</del></li>                        <li class="">戴同一双手套</li>                        <li class=""><del>讲故事哄我睡觉</del></li>                        <li class="done"><del>一起吃棉花糖</del></li>                        <li class="done">一起唱歌</li>                        <li class="done"><del>一起淋雨</del></li>                        <li class="">一起面对所有难堪</li>                        <li class=""><del>一起爬山</del></li>                        <li class="">一起露营</li>                        <li class="done">一起跑步 </li>                        <li class="done"><del>一起傻笑</del></li>                        <li class="done"><del>一起吃路边摊</del></li>                        <li class="done"><del>一起去猫咖</del></li>                        <li class="done"><del>穿情侣装显摆</del></li>                        <li class="done"><del>一起打羽毛球 </del></li>                        <li class="done"><del>一起吃爱吃的东西到吐</del></li>                        <li class="done"><del>一起踩马路到脚软</del></li>                        <li class="done">一起去旅行 </li>                        <li class="">一起去动物园 </li>                        <li class="done"><del>咬一下你的脸颊</del></li>                        <li class="done"><del>对我说晚安</del></li>                        <li class="done"><del>一起看电影</del></li>                        <li class="done"><del>一起买菜</del></li>                        <li class="done"><del>比赛石头剪刀布</del></li>                        <li class="done"><del>一起见对方的朋友</del></li>                        <li class="done"><del>一起做鬼脸</del></li>                        <li class="">一起走遍世界各地</li>                        <li class="done"><del>一起吃大餐，牵手进去，扶墙出来</del></li>                        <li class="">一起扎气球赢奖品</li>                        <li class="">站在马路的两侧大喊</li>                        <li class="">看你打场比赛</li>                        <li class=""><del>一起看演唱会</del></li>                        <li class="">一起沿铁轨</li>                        <li class="done"><del>一起坐地铁</del></li>                        <li class="done"><del>一起放风筝</del></li>                        <li class="">一起看花田</li>                        <li class="done"><del>趁你睡觉偷亲你一下</del></li>                        <li class="">一起放孔明灯</li>                        <li class="">一起钓鱼</li>                        <li class=""><del>一起下棋</del></li>                        <li class="done"><del>一起在烈日下暴晒</del></li>                        <li class="done"><del>手机屏保设置对方的照片</del></li>                        <li class="done"><del>一起敷面膜 </del></li>                        <li class="done"><del>一起捏对方的脸</del></li>                        <li class="done"><del>打赌各种各样的事</del></li>                        <li class="done"><del>一起看烟火</del></li>                        <li class="">在树下埋下我们的约定</li>                        <li class="">去海边放漂流瓶</li>                        <li class="done"><del>拍一次婚纱照</del></li>                        <li class="done"><del>求婚</del></li>                        <li class="">结婚</li>                        <li class="">完成人生各项大事</li>                        <li class="">白头偕老</li>                    </ol>    </div></div><style>    @charset "UTF-8";a,abbr,address,article,aside,audio,b,blockquote,body,canvas,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,kbd,label,li,mark,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,u,ul,var,video {    margin: 0;    padding: 0;    border: 0;    vertical-align: baseline;    font: inherit;    font-size: 100%}.float_btns {display:none}.sidebar {display:none}body {    line-height: 1;    -webkit-text-size-adjust: none;    -ms-overflow-style: scrollbar}article,aside,details,figcaption,figure,footer,header,hgroup,nav,section {    display: block}button,input,select,textarea {    resize: none}ol,ul {    list-style: none}blockquote,q {    quotes: none}blockquote:after,blockquote:before,q:after,q:before {    content: '';    content: none}table {    border-collapse: collapse;    border-spacing: 0}*,:after,:before {    -webkit-box-sizing: border-box;    -moz-box-sizing: border-box;    box-sizing: border-box}body {    background: #FFF}html {    overflow-x: hidden;    -ms-text-size-adjust: 100%;    -webkit-text-size-adjust: 100%}::-moz-selection {    background-color: #EEE;    color: #000}::selection {    background-color: #EEE;    color: #000}body,input,select,textarea {    color: #444;    font-weight: 400;    font-size: .875rem;    font-family: -apple-system,BlinkMacSystemFont,Avenir,"Avenir Next","Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;    line-height: 1.65;    text-rendering: geometricPrecision;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale}a {    color: #f15bb5;    text-decoration: none}a:hover {    color: #f15bb5}blockquote,dl,ol,p,pre,table,ul {    margin: 10px 0}blockquote,dl,form,ol,p,pre,ul {    letter-spacing: 1px}b,strong {    color: #555;    font-weight: 700}em,i {    font-style: italic}h1,h2,h3,h4,h5,h6 {    margin-top: 0;    margin-bottom: .25em;    color: inherit;    font-weight: 500}h1 {    font-size: 2rem}h2 {    font-size: 1.6rem}h3 {    font-size: 1.4rem}h4 {    font-size: 1.2rem}h5 {    font-size: 1rem}h6 {    font-size: .8rem}sub {    position: relative;    top: .5em;    font-size: .8em}sup {    position: relative;    top: -.5em;    font-size: .8em}blockquote {    padding: 0 15px;    border-left: solid 4px #ddd}code {    margin: .5em .5em;    padding: .25em .65em;    border: solid 1px rgba(144,144,144,.25);    border-radius: 4px;    background: rgba(144,144,144,.075);    font-size: .9em}pre {    font-size: .9em;    -webkit-overflow-scrolling: touch}pre code {    display: block;    overflow-x: auto;    padding: 1em 1.5em;    line-height: 1.75}ol {    padding-left: 1.25em;    list-style: decimal}ol li {    padding-left: .25em}ul {    padding-left: 1em;    list-style: disc}ul li {    padding-left: .5em}dl dt {    display: block;    margin: 0 0 1em 0;    font-weight: 700}dl dd {    margin-left: 2em}hr {    margin: 1em 0;    border: 0;    border-bottom: solid 1px rgba(144,144,144,.25)}hr.major {    margin: 3em 0}label {    display: block;    margin: 0 0 1em 0;    color: #555;    font-weight: 700;    font-size: .9em}table {    overflow: auto;    width: 100%;    border-collapse: collapse;    word-wrap: normal;    font-size: 12px;    border-spacing: 0;    word-break: normal}table tbody,table thead {    background: #f8f8f8}table td,table th {    padding: 6px 13px;    border: 1px solid #ddd}table th {    font-weight: 700}table tbody tr:hover {    background: #efefef}mark {    padding: .05rem;    border-radius: .1rem;    background: #b9e5ff;    color: #555}::-webkit-input-placeholder {    color: #bbb!important;    opacity: 1}:-moz-placeholder {    color: #bbb!important;    opacity: 1}::-moz-placeholder {    color: #bbb!important;    opacity: 1}:-ms-input-placeholder {    color: #bbb!important;    opacity: 1}.button,button,input[type=button],input[type=email],input[type=password],input[type=reset],input[type=submit],input[type=tel],input[type=text],select,textarea {    outline: 0;    border: 0;    border-radius: 4px;    text-decoration: none;    -moz-appearance: none;    -webkit-appearance: none;    -ms-appearance: none;    appearance: none}input[type=email],input[type=password],input[type=tel],input[type=text],select,textarea {    display: block;    padding: 0 1em;    width: 100%;    border: solid 1px rgba(144,144,144,.25);    background: rgba(144,144,144,.075);    color: inherit}input[type=email],input[type=password],input[type=text],select {    height: 2.75em}textarea {    padding: .75em 1em}.select-wrapper {    position: relative;    display: block;    text-decoration: none}.select-wrapper:before {    content: "\e815";    text-transform: none!important;    font-weight: 400;    font-style: normal;    font-family: fontello;    -moz-osx-font-smoothing: grayscale;    -webkit-font-smoothing: antialiased}.select-wrapper:before {    position: absolute;    top: 0;    right: 0;    display: block;    width: 2.75em;    height: 2.75em;    color: rgba(144,144,144,.25);    text-align: center;    line-height: 2.75em;    pointer-events: none}.select-wrapper select::-ms-expand {    display: none}input[type=checkbox],input[type=radio] {    z-index: -1;    float: left;    display: block;    margin-right: -2em;    width: 1em;    opacity: 0;    -moz-appearance: none;    -webkit-appearance: none;    -ms-appearance: none;    appearance: none}input[type=checkbox]+label,input[type=radio]+label {    position: relative;    display: inline-block;    padding-right: .75em;    padding-left: 2.4em;    color: #444;    text-decoration: none;    font-weight: 400;    font-size: 1em;    cursor: pointer}input[type=checkbox]+label:before,input[type=radio]+label:before {    text-transform: none!important;    font-weight: 400;    font-style: normal;    font-family: fontello;    -moz-osx-font-smoothing: grayscale;    -webkit-font-smoothing: antialiased}input[type=checkbox]+label:before,input[type=radio]+label:before {    position: absolute;    top: 0;    left: 0;    display: inline-block;    width: 1.65em;    height: 1.65em;    border: solid 1px rgba(144,144,144,.25);    border-radius: 4px;    background: rgba(144,144,144,.075);    content: '';    text-align: center;    line-height: 1.58125em}input[type=checkbox]:checked+label:before,input[type=radio]:checked+label:before {    border-color: #5a5a5a;    background: #5a5a5a;    color: #fff;    content: '\2713'}input[type=checkbox]+label:before {    border-radius: 4px}input[type=radio]+label:before {    border-radius: 100%}select {    padding-right: 1.1rem;    background: rgba(144,144,144,.075) url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23667189' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E") no-repeat right .35rem center/.4rem .5rem}select::-ms-expand {    display: none}select[multiple] {    height: auto}.button,button,input[type=button],input[type=reset],input[type=submit] {    display: inline-block;    padding: 0 1.5em;    height: 2.85em;    background-color: #5a5a5a;    color: #fff!important;    text-align: center;    white-space: nowrap;    letter-spacing: 2px;    line-height: 2.95em;    cursor: pointer;    -webkit-transition: background-color .2s ease-in-out,color .2s ease-in-out;    -moz-transition: background-color .2s ease-in-out,color .2s ease-in-out;    transition: background-color .2s ease-in-out,color .2s ease-in-out;    -ms-transition: background-color .2s ease-in-out,color .2s ease-in-out}.button,button:hover,input[type=button]:hover,input[type=reset]:hover,input[type=submit]:hover {    background-color: #676767}.button,button:active,input[type=button]:active,input[type=reset]:active,input[type=submit]:active {    background-color: #4d4d4d}.button.alt,button.alt,input[type=button].alt,input[type=reset].alt,input[type=submit].alt {    background-color: transparent;    box-shadow: inset 0 0 0 2px rgba(144,144,144,.25);    color: #555!important}.button.alt:hover,button.alt:hover,input[type=button].alt:hover,input[type=reset].alt:hover,input[type=submit].alt:hover {    background-color: rgba(144,144,144,.075)}.button.alt:active,button.alt:active,input[type=button].alt:active,input[type=reset].alt:active,input[type=submit].alt:active {    background-color: rgba(144,144,144,.2)}.button.disabled,.button:disabled,button.disabled,button:disabled,input[type=button].disabled,input[type=button]:disabled,input[type=reset].disabled,input[type=reset]:disabled,input[type=submit].disabled,input[type=submit]:disabled {    background-color: #444!important;    box-shadow: inset 0 -.15em 0 0 rgba(0,0,0,.15);    color: #fff!important;    opacity: .25;    cursor: not-allowed}.container {    margin-right: auto;    margin-left: auto;    padding-right: .4rem;    padding-left: .4rem;    width: 100%}.container.grid-xl {    max-width: 1296px}.container.grid-lg {    max-width: 976px}.container.grid-md {    max-width: 856px}.container.grid-sm {    max-width: 680px}.container.grid-xs {    max-width: 496px}.show-lg,.show-md,.show-sm,.show-xl,.show-xs {    display: none!important}.columns {    display: flex;    display: -ms-flexbox;    margin-right: -.4rem;    margin-left: -.4rem;    -ms-flex-wrap: wrap;    flex-wrap: wrap}.columns.col-gapless {    margin-right: 0;    margin-left: 0}.columns.col-gapless>.column {    padding-right: 0;    padding-left: 0}.columns.col-oneline {    overflow-x: auto;    -ms-flex-wrap: nowrap;    flex-wrap: nowrap}.column {    padding-right: .4rem;    padding-left: .4rem;    max-width: 100%;    -ms-flex: 1;    flex: 1}.column.col-1,.column.col-10,.column.col-11,.column.col-12,.column.col-2,.column.col-3,.column.col-4,.column.col-5,.column.col-6,.column.col-7,.column.col-8,.column.col-9 {    -ms-flex: none;    flex: none}.s-content .column {    padding: .5rem}.col-12 {    width: 100%}.col-11 {    width: 91.66666667%}.col-10 {    width: 83.33333333%}.col-9 {    width: 75%}.col-8 {    width: 66.66666667%}.col-7 {    width: 58.33333333%}.col-6 {    width: 50%}.col-5 {    width: 41.66666667%}.col-4 {    width: 33.33333333%}.col-3 {    width: 25%}.col-2 {    width: 16.66666667%}.col-1 {    width: 8.33333333%}.col-auto {    width: auto;    max-width: none;    -ms-flex: 0 0 auto;    flex: 0 0 auto}.col-mx-auto {    margin-right: auto;    margin-left: auto}.col-ml-auto {    margin-left: auto}.col-mr-auto {    margin-right: auto}@media (max-width: 1280px) {    .col-xl-1,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9 {        -ms-flex:none;        flex: none    }    .col-xl-12 {        width: 100%    }    .col-xl-11 {        width: 91.66666667%    }    .col-xl-10 {        width: 83.33333333%    }    .col-xl-9 {        width: 75%    }    .col-xl-8 {        width: 66.66666667%    }    .col-xl-7 {        width: 58.33333333%    }    .col-xl-6 {        width: 50%    }    .col-xl-5 {        width: 41.66666667%    }    .col-xl-4 {        width: 33.33333333%    }    .col-xl-3 {        width: 25%    }    .col-xl-2 {        width: 16.66666667%    }    .col-xl-1 {        width: 8.33333333%    }    .hide-xl {        display: none!important    }    .show-xl {        display: block!important    }}@media (max-width: 960px) {    .col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9 {        -ms-flex:none;        flex: none    }    .col-lg-12 {        width: 100%    }    .col-lg-11 {        width: 91.66666667%    }    .col-lg-10 {        width: 83.33333333%    }    .col-lg-9 {        width: 75%    }    .col-lg-8 {        width: 66.66666667%    }    .col-lg-7 {        width: 58.33333333%    }    .col-lg-6 {        width: 50%    }    .col-lg-5 {        width: 41.66666667%    }    .col-lg-4 {        width: 33.33333333%    }    .col-lg-3 {        width: 25%    }    .col-lg-2 {        width: 16.66666667%    }    .col-lg-1 {        width: 8.33333333%    }    .hide-lg {        display: none!important    }    .show-lg {        display: block!important    }}@media (max-width: 840px) {    .col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9 {        -ms-flex:none;        flex: none    }    .col-md-12 {        width: 100%    }    .col-md-11 {        width: 91.66666667%    }    .col-md-10 {        width: 83.33333333%    }    .col-md-9 {        width: 75%    }    .col-md-8 {        width: 66.66666667%    }    .col-md-7 {        width: 58.33333333%    }    .col-md-6 {        width: 50%    }    .col-md-5 {        width: 41.66666667%    }    .col-md-4 {        width: 33.33333333%    }    .col-md-3 {        width: 25%    }    .col-md-2 {        width: 16.66666667%    }    .col-md-1 {        width: 8.33333333%    }    .hide-md {        display: none!important    }    .show-md {        display: block!important    }}@media (max-width: 600px) {    .col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9 {        -ms-flex:none;        flex: none    }    .col-sm-12 {        width: 100%    }    .col-sm-11 {        width: 91.66666667%    }    .col-sm-10 {        width: 83.33333333%    }    .col-sm-9 {        width: 75%    }    .col-sm-8 {        width: 66.66666667%    }    .col-sm-7 {        width: 58.33333333%    }    .col-sm-6 {        width: 50%    }    .col-sm-5 {        width: 41.66666667%    }    .col-sm-4 {        width: 33.33333333%    }    .col-sm-3 {        width: 25%    }    .col-sm-2 {        width: 16.66666667%    }    .col-sm-1 {        width: 8.33333333%    }    .hide-sm {        display: none!important    }    .show-sm {        display: block!important    }}@media (max-width: 480px) {    .col-xs-1,.col-xs-10,.col-xs-11,.col-xs-12,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9 {        -ms-flex:none;        flex: none    }    .col-xs-12 {        width: 100%    }    .col-xs-11 {        width: 91.66666667%    }    .col-xs-10 {        width: 83.33333333%    }    .col-xs-9 {        width: 75%    }    .col-xs-8 {        width: 66.66666667%    }    .col-xs-7 {        width: 58.33333333%    }    .col-xs-6 {        width: 50%    }    .col-xs-5 {        width: 41.66666667%    }    .col-xs-4 {        width: 33.33333333%    }    .col-xs-3 {        width: 25%    }    .col-xs-2 {        width: 16.66666667%    }    .col-xs-1 {        width: 8.33333333%    }    .hide-xs {        display: none!important    }    .show-xs {        display: block!important    }}.horizontal-align {    display: flex;    justify-content: center}.header {    padding: 50px 0 0}.header .column {    padding: 0}.logo {    display: inline-block;    margin: 0 20px 0 10px;    vertical-align: middle;    font-size: 72px}.logo .i-love {    position: relative;    top: -6px;    width: 69px;    height: 69px;    background: url(img/love.png) no-repeat 0 0;    vertical-align: middle}.ico {    display: inline-block;    width: 16px;    height: 16px;    vertical-align: middle}.logo a {    color: #383838;    font-weight: 700}.description {    display: inline-block;    vertical-align: middle;    letter-spacing: normal;    font-size: 14px}.description a {    border-bottom: 1px solid #f15bb5}.posts {    padding: 0}.posts ol {    margin-left: -30px;    padding-left: 30px}.posts li {    padding: 10px;    border-top: 1px solid #e5e5e5}.posts li p {    margin: 0}.posts li:hover {    background: #f4f4f4}.footer {    color: #999;    font-size: 12px}.footer p:first-child {    margin-top: 0;    padding-top: 1rem;    border-top: 1px solid #e6e6e6}.footer .column {    padding-right: 0;    padding-left: 0}.comments .column {    padding: 0}.comment-form input {    padding: 0 40px 0 18px;    width: 100%;    height: 2.75em;    outline: 0;    border: 1px solid rgba(184,197,214,.2);    background-color: #fff;    -webkit-box-shadow: 0 1px 4px rgba(0,0,0,.1);    box-shadow: 0 1px 4px rgba(0,0,0,.1);    -webkit-appearance: none}.comment-form textarea {    outline: 0;    border: 1px solid rgba(184,197,214,.2);    background-color: #fff;    -webkit-box-shadow: 0 1px 4px rgba(0,0,0,.1);    box-shadow: 0 1px 4px rgba(0,0,0,.1);    -webkit-appearance: none}.comment-form button {    margin-top: 16px;    background-color: #f36;    color: #fff!important}.comment-hr {    margin: 20px 0;    border-top: 2px solid #f15bb5}.comment-list {    margin: 0;    padding: 0;    list-style-type: none}.comment-header {    font-size: 12px}.comment-author {    color: #f15bb5}.comment-content {    margin-left: 60px;    border-radius: 5px;    color: #999;    font-size: 12px}.comment-content p {    margin: 0}.arrow {    position: absolute;    top: 4px;    left: -5px;    display: inline-block;    overflow: hidden;    width: 0;    height: 0;    border-width: 4px 4px 4px 0;    font: 0/0 arial;    border-right-color: #dcdcdc}.larr-in {    left: -4px;    border-right-color: #f8faff}.larr,.larr-in {    border-right-style: solid!important}.larr,.larr-in {    border-top-color: transparent!important;    border-bottom-color: transparent!important;    border-top-style: dashed!important;    border-bottom-style: dashed!important}.comment-header .avatar {    float: left;    display: inline-block;    width: 50px;    height: 50px;    border: 1px solid #eaeaea;    border-radius: 50%}.comment-reply {    float: right}#cancel-comment-reply-link {    margin-left: 16px}.comment-view {    padding: 4px 0;    min-height: 60px;    border-bottom: 1px dotted #e5e5e5}.comment-child {    padding-left: 60px}.lists-navigator {    margin: 20px 0}.lists-navigator ol {    padding: 0 10px;    list-style: none;    text-align: center}.lists-navigator ol li {    display: inline-block;    color: #999}.lists-navigator ol li a {    padding: 0 5px;    color: #999}.lists-navigator ol li.current a {    color: #f15bb5}.done {    color: #999;    font-style: italic}.comment-author-approve {    padding: .1rem .25rem;    border-radius: .25rem;    background-color: #f36;    color: #FFF}.top {    float: right}.comment-author-at {    float: left;    margin-right: 5px}.links {    border-top: 1px solid #e6e6e6}.links ul {    overflow: hidden;    margin: 0;    padding: 0;    margin-top: 16px;    list-style: none}.links ul li {    position: relative;    float: left;    width: 50%;    border-radius: 5px;    list-style: none}.links ul li:hover {    background: rgba(155,155,155,.1)}.links ul li a {    display: block;    padding: 0 10px 0 90px;    height: 90px;    color: #444}.links ul li a img {    position: absolute;    top: 15px;    left: 15px;    margin: 0;    width: 60px;    height: 60px;    border-radius: 50%;    cursor: pointer}.links ul li a h4 {    padding-top: 20px;    font-size: 13px}.links ul li a p {    font-size: 12px}.links ul li a h4,.links ul li a p {    overflow: hidden;    text-overflow: ellipsis;    white-space: nowrap}@media (max-width: 720px) {    .header .column {        padding:.5rem    }    .posts ol {        margin-left: 0;        padding: 0 40px    }    .comments .column {        padding: 0 15px    }    .footer .column {        padding: .5rem 15px    }    .links ul li {        width: 100%    }}@media (max-width: 636px) {    .header {        padding:0    }    .header .column {        text-align: center    }}</style><!-- nofound 落石自我怀疑0511  0803爷爷奶奶没有输给战火，爸爸妈妈没有输给贫穷，而我却输给和平年代的生活。。。 -->]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
