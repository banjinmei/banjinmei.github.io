<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M Study Log</title>
  
  
  <link href="https://qfsysw.github.io/atom.xml" rel="self"/>
  
  <link href="https://qfsysw.github.io/"/>
  <updated>2024-08-04T17:52:34.647Z</updated>
  <id>https://qfsysw.github.io/</id>
  
  <author>
    <name>m</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux CPU now</title>
    <link href="https://qfsysw.github.io/2024/08/05/Linux-CPU-now/"/>
    <id>https://qfsysw.github.io/2024/08/05/Linux-CPU-now/</id>
    <published>2024-08-04T17:51:08.000Z</published>
    <updated>2024-08-04T17:52:34.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux-查看正在-cpu占用"><a href="#linux-查看正在-cpu占用" class="headerlink" title="linux 查看正在 cpu占用"></a>linux 查看正在 cpu占用</h1><p>在Linux中，可以使用多种命令来查看哪个进程正在使用CPU资源。以下是几个常用的命令：</p><p>top - 实时显示系统中各个进程的资源占用情况，包括CPU使用率。</p><p>top<br>htop - top的增强版，提供更直观的界面，需要单独安装。</p><p>htop<br>ps - 显示当前运行的进程信息，结合aux选项可以查看CPU占用率。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux --<span class="built_in">sort</span>=-%cpu | <span class="built_in">head</span></span><br></pre></td></tr></table></figure><p>pidstat - 用于监视个别任务的CPU和内存使用情况，通常与时间结合使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pidstat 1</span><br></pre></td></tr></table></figure><p>这些命令会以实时或者定时的方式输出CPU占用前几的进程，帮助识别和解决CPU占用高的问题。</p><h1 id="查看docker"><a href="#查看docker" class="headerlink" title="查看docker"></a>查看docker</h1><pre><code class="bash">docker ps docker ps -adocker start cont``` bash </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;linux-查看正在-cpu占用&quot;&gt;&lt;a href=&quot;#linux-查看正在-cpu占用&quot; class=&quot;headerlink&quot; title=&quot;linux 查看正在 cpu占用&quot;&gt;&lt;/a&gt;linux 查看正在 cpu占用&lt;/h1&gt;&lt;p&gt;在Linux中，可以使用多种</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="linux" scheme="https://qfsysw.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Go Background</title>
    <link href="https://qfsysw.github.io/2024/08/05/Go-Background/"/>
    <id>https://qfsysw.github.io/2024/08/05/Go-Background/</id>
    <published>2024-08-04T17:44:01.000Z</published>
    <updated>2024-08-04T17:52:56.325Z</updated>
    
    <content type="html"><![CDATA[<h1 id="debian-go程序-后台运行"><a href="#debian-go程序-后台运行" class="headerlink" title="debian go程序 后台运行"></a>debian go程序 后台运行</h1><p>要在Debian系统上将Go程序设置为后台运行，使用nohup命令和&amp;符号。</p><p>编译Go程序，生成可执行文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -o myapp main.go</span><br></pre></td></tr></table></figure><p>使用nohup将程序放到后台运行，并将输出重定向到nohup.out文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./myapp &amp;</span><br></pre></td></tr></table></figure><p>如果您想要程序在系统启动时自动运行，可以创建一个systemd服务文件。</p><p>创建一个名为myapp.service的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/systemd/system/myapp.service</span><br></pre></td></tr></table></figure><p>在编辑器中添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=My Go Application</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/path/to/your/myapp</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>保存并退出编辑器。</p><p>启用并启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> myapp.service</span><br><span class="line">sudo systemctl start myapp.service</span><br></pre></td></tr></table></figure><p>Go程序就会在Debian系统上作为服务后台运行。</p><h1 id="c-run"><a href="#c-run" class="headerlink" title="c# run~"></a>c# run~</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">nohup</span> dotnet run /root/socketa/TcpSk &gt; output20240805.log 2&gt;&amp;1 &amp;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">nohup</span> dotnet run /root/netser/xx &gt; output1.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">ps -ef | grep <span class="built_in">nohup</span> </span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;debian-go程序-后台运行&quot;&gt;&lt;a href=&quot;#debian-go程序-后台运行&quot; class=&quot;headerlink&quot; title=&quot;debian go程序 后台运行&quot;&gt;&lt;/a&gt;debian go程序 后台运行&lt;/h1&gt;&lt;p&gt;要在Debian系统上将Go</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="go" scheme="https://qfsysw.github.io/tags/go/"/>
    
    <category term="nohup" scheme="https://qfsysw.github.io/tags/nohup/"/>
    
  </entry>
  
  <entry>
    <title>C# keep alive</title>
    <link href="https://qfsysw.github.io/2024/08/05/C-keep-alive/"/>
    <id>https://qfsysw.github.io/2024/08/05/C-keep-alive/</id>
    <published>2024-08-04T16:38:00.000Z</published>
    <updated>2024-08-04T17:49:38.595Z</updated>
    
    <content type="html"><![CDATA[<p>在C#中，想让一个控制台应用程序保持运行而不依赖 Cnsole.ReadKey()，可以通过多种方式实现。</p><h1 id="1-使用事件循环"><a href="#1-使用事件循环" class="headerlink" title="1. 使用事件循环"></a>1. 使用事件循环</h1><p>可以使用 EventWaitHandle 或者其他类似的同步原语来创建一个事件循环，让程序保持在等待状态。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建一个自动重置的事件对象</span></span><br><span class="line">        EventWaitHandle waitHandle = <span class="keyword">new</span> EventWaitHandle(<span class="literal">false</span>, EventResetMode.AutoReset);</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Press any key to exit...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待事件被设置，如果没有接收到信号，则保持等待状态</span></span><br><span class="line">        waitHandle.WaitOne();</span><br><span class="line"></span><br><span class="line">        Console.Clear();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用无限循环</li></ol><p>你可以创建一个无限循环，直到你手动终止程序。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//cpu占用高~</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 程序在这里保持运行状态，等待事件或其他中断。</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;The program is running. Press CTRL+C to exit.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-使用定时器"><a href="#3-使用定时器" class="headerlink" title="3. 使用定时器"></a>3. 使用定时器</h1><p>创建一个定时器，定期执行某些任务，或者用于控制程序行为。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;The program is running. Press CTRL+C to exit.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个新的计时器并设定间隔时间（毫秒）</span></span><br><span class="line">        Timer timer = <span class="keyword">new</span> Timer(TimerCallback, <span class="literal">null</span>, <span class="number">0</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 防止主线程退出</span></span><br><span class="line">        Console.ReadKey();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 停止定时器</span></span><br><span class="line">        timer.Dispose();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">TimerCallback</span>(<span class="params">Object state</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;The program is still running...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-使用异步等待"><a href="#4-使用异步等待" class="headerlink" title="4. 使用异步等待"></a>4. 使用异步等待</h1><p>如果你使用的是 .NET Core 或 .NET 5 及更高版本，可以利用 Task.Run 来创建一个持续运行的任务。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;The program is running. Press CTRL+C to exit.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> Task.Run(<span class="keyword">async</span> () =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 模拟一些工作</span></span><br><span class="line">                <span class="keyword">await</span> Task.Delay(<span class="number">1000</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Doing work...&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待按键，确保主线程不会立即退出</span></span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在C#中，想让一个控制台应用程序保持运行而不依赖 Cnsole.ReadKey()，可以通过多种方式实现。&lt;/p&gt;
&lt;h1 id=&quot;1-使用事件循环&quot;&gt;&lt;a href=&quot;#1-使用事件循环&quot; class=&quot;headerlink&quot; title=&quot;1. 使用事件循环&quot;&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="c#" scheme="https://qfsysw.github.io/tags/c/"/>
    
    <category term="console" scheme="https://qfsysw.github.io/tags/console/"/>
    
  </entry>
  
  <entry>
    <title>Electron App</title>
    <link href="https://qfsysw.github.io/2024/08/04/Electron-App/"/>
    <id>https://qfsysw.github.io/2024/08/04/Electron-App/</id>
    <published>2024-08-04T13:28:01.000Z</published>
    <updated>2024-08-04T17:49:56.345Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Electron-fetch-API发送HTTP请求"><a href="#Electron-fetch-API发送HTTP请求" class="headerlink" title="Electron fetch API发送HTTP请求"></a>Electron fetch API发送HTTP请求</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install electron --save-dev</span><br></pre></td></tr></table></figure><h2 id="创建："><a href="#创建：" class="headerlink" title="创建："></a>创建：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">your-electron-app/</span><br></pre></td></tr></table></figure><p>├── main.js<br>├── renderer.js<br>└── index.html</p><p>main.js - Electron</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">const &#123; app, BrowserWindow &#125; = require(<span class="string">&#x27;electron&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">createWindow</span></span> () &#123;</span><br><span class="line">  // 创建浏览器窗口</span><br><span class="line">  <span class="built_in">let</span> win = new BrowserWindow(&#123;</span><br><span class="line">    width: 800,</span><br><span class="line">    height: 600,</span><br><span class="line">    webPreferences: &#123;</span><br><span class="line">      nodeIntegration: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  // 加载index.html文件</span><br><span class="line">  win.loadFile(<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.whenReady().<span class="keyword">then</span>(createWindow);</span><br><span class="line">renderer.js - Electron的渲染器进程文件，使用fetch发送请求：</span><br><span class="line">document.addEventListener(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, () =&gt; &#123;</span><br><span class="line">  fetch(<span class="string">&#x27;https://jsonplaceholder.typicode.com/posts/1&#x27;</span>)</span><br><span class="line">    .<span class="keyword">then</span>(response =&gt; response.json())</span><br><span class="line">    .<span class="keyword">then</span>(data =&gt; &#123;</span><br><span class="line">      document.getElementById(<span class="string">&#x27;result&#x27;</span>).textContent = JSON.stringify(data, null, 2);</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(error =&gt; &#123;</span><br><span class="line">      console.error(<span class="string">&#x27;请求失败:&#x27;</span>, error);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>index.html - 应用的HTML文件，包含一个用于显示结果的元素：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;<span class="built_in">head</span>&gt;</span><br><span class="line">  &lt;title&gt;Electron Fetch Example&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h1&gt;Electron Fetch Example&lt;/h1&gt;</span><br><span class="line">  &lt;pre <span class="built_in">id</span>=<span class="string">&quot;result&quot;</span>&gt;&lt;/pre&gt;</span><br><span class="line">  &lt;script src=<span class="string">&quot;renderer.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">要运行这个Electron应用程序，请在your-electron-app目录下创建一个package.json文件，如果还没有的话：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;your-electron-app&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;description&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;main&quot;</span>: <span class="string">&quot;main.js&quot;</span>,</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;start&quot;</span>: <span class="string">&quot;electron .&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;keywords&quot;</span>: [],</span><br><span class="line">  <span class="string">&quot;author&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;license&quot;</span>: <span class="string">&quot;ISC&quot;</span>,</span><br><span class="line">  <span class="string">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;electron&quot;</span>: <span class="string">&quot;^your-electron-version&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>确保将”electron”: “^your-electron-version”替换为实际的Electron版本号。<br>然后，在终端中运行以下命令来启动Electron应用程序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure><h2 id="解析JSON"><a href="#解析JSON" class="headerlink" title="解析JSON"></a>解析JSON</h2><p>修改renderer.js文件来实现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">fetch</span>(<span class="string">&#x27;https://jsonplaceholder.typicode.com/posts/1&#x27;</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 检查响应状态</span></span><br><span class="line">      <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;网络响应错误&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 解析数据并展示</span></span><br><span class="line">      <span class="keyword">const</span> &#123; title, body &#125; = data;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;title&#x27;</span>).<span class="property">textContent</span> = title;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;body&#x27;</span>).<span class="property">textContent</span> = body;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;请求失败:&#x27;</span>, error);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>index.html文件中添加两个元素，用于显示title和body：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Electron JSON Parsing Example<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>文章标题：<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>文章正文：<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span> <span class="attr">id</span>=<span class="string">&quot;body&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;renderer.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>现在，当Electron应用程序运行时，它会从指定的URL请求数据，解析JSON响应，然后提取并显示title和body字段。<br>请确保你的Electron应用程序的main.js文件正确地加载了index.html文件，并且renderer.js文件被包含在页面中。这样，当页面加载完成时，renderer.js中的代码将执行，从服务器获取数据并更新DOM元素。</p><h1 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h1><p>Electron 应用可以同时使用 Node.js 和 Chromium 的 API，这使得它既可以在主进程中使用 Node.js 的 net 模块来创建 TCP 连接，也可以在渲染进程中使用 WebSocket 来与服务器进行实时通信。<br>以下是在 Electron 的主进程中使用 net 模块创建 TCP 连接的示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">const &#123; app, BrowserWindow &#125; = require(<span class="string">&#x27;electron&#x27;</span>);</span><br><span class="line">const net = require(<span class="string">&#x27;net&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">createWindow</span></span> () &#123;  </span><br><span class="line">  const win = new BrowserWindow(&#123;  </span><br><span class="line">    width: 800,  </span><br><span class="line">    height: 600,  </span><br><span class="line">    webPreferences: &#123;  </span><br><span class="line">      nodeIntegration: <span class="literal">true</span>,  </span><br><span class="line">      contextIsolation: <span class="literal">false</span> </span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;);  </span><br><span class="line">  </span><br><span class="line">  // 并加载应用的 index.html  </span><br><span class="line">  win.loadFile(<span class="string">&#x27;index.html&#x27;</span>);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.whenReady().<span class="keyword">then</span>(() =&gt; &#123;</span><br><span class="line">  setTimeout(() =&gt; &#123;</span><br><span class="line">    </span><br><span class="line">    var client = net.connect(&#x27;<span class="number">16551</span>&#x27;, &#x27;<span class="number">1</span>xxx&#x27;, function()&#123;</span><br><span class="line">        console.log(&#x27;已经与服务器连接&#x27;);</span><br><span class="line">        client.write(&#x27;Yes\r\n&#x27;);</span><br><span class="line">    &#125;);</span><br><span class="line">    client.on(&#x27;data&#x27;, function(data)&#123;</span><br><span class="line">        console.log(data.toString());</span><br><span class="line">        client.end();//one msg end</span><br><span class="line">    &#125;);</span><br><span class="line">    client.on(<span class="string">&#x27;end&#x27;</span>, <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">        console.log(<span class="string">&#x27;客户端连接中断&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;, 2000); // </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.whenReady().<span class="keyword">then</span>(createWindow);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h1><p>Electron 应用的打包和运行过程可以分为几个步骤，包括开发、打包、分发和安装。以下是这个过程的概述：</p><h2 id="1-开发阶段"><a href="#1-开发阶段" class="headerlink" title="1. 开发阶段"></a>1. 开发阶段</h2><p>在开发阶段，你将使用 Web 技术（HTML、CSS、JavaScript）和 Node.js API 来构建你的 Electron 应用。<br>初始化项目：创建一个新的项目目录，初始化 package.json 文件。<br>安装依赖：使用 npm 安装 Electron (electron) 和其他所需的依赖。<br>编写代码：编写主进程 (main.js) 和渲染进程的代码（通常是 HTML、CSS 和 JavaScript 文件）。</p><h2 id="2-本地运行"><a href="#2-本地运行" class="headerlink" title="2. 本地运行"></a>2. 本地运行</h2><p>在开发过程中，你将经常运行你的应用以测试功能。<br>使用 electron . 或 npm start 命令来启动你的 Electron 应用。</p><h2 id="3-打包应用"><a href="#3-打包应用" class="headerlink" title="3. 打包应用"></a>3. 打包应用</h2><p>打包应用是将你的应用的所有文件和依赖项打包成一个可执行的程序或安装包。<br>选择打包工具：Electron 社区提供了多种打包工具，如 electron-packager、electron-builder 和 electron-forge。<br>配置打包工具：根据你选择的打包工具，配置打包选项，如平台（Windows、macOS、Linux）、架构（x64、ia32、armv7l）等。</p><h2 id="4-使用-electron-builder-打包示例"><a href="#4-使用-electron-builder-打包示例" class="headerlink" title="4. 使用 electron-builder 打包示例"></a>4. 使用 electron-builder 打包示例</h2><p>electron-builder 是一个流行的打包工具，它提供了丰富的配置选项和跨平台支持。<br>安装 electron-builder：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install electron-builder --save-dev</span><br></pre></td></tr></table></figure><p>在 package.json 中配置 build 字段：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;build&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;appId&quot;</span>: <span class="string">&quot;your.app.id&quot;</span>,</span><br><span class="line">    <span class="string">&quot;mac&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;category&quot;</span>: <span class="string">&quot;your.app.category&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;win&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;target&quot;</span>: <span class="string">&quot;nsis&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;linux&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;target&quot;</span>: <span class="string">&quot;deb&quot;</span>,</span><br><span class="line">      <span class="string">&quot;category&quot;</span>: <span class="string">&quot;your.app.category&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行打包命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><h2 id="5-分发和安装"><a href="#5-分发和安装" class="headerlink" title="5. 分发和安装"></a>5. 分发和安装</h2><p>打包完成后，你可以将生成的可执行文件或安装包分发给用户。<br>Windows：用户可以下载 .exe 安装程序并运行。<br>macOS：用户可以下载 .dmg 或 .pkg 安装包并安装。<br>Linux：用户可以下载 .deb 或 .AppImage 文件并安装。</p><h2 id="6-签名应用"><a href="#6-签名应用" class="headerlink" title="6. 签名应用"></a>6. 签名应用</h2><p>在某些平台上，你可能需要对应用进行代码签名以确保安全性和通过应用商店的审核。<br>macOS：使用 Xcode 或其他工具进行签名。<br>Windows：使用 Windows SDK 的 signtool 进行签名。<br>注意事项<br>在打包前，请确保在 package.json 中设置了 build.appId 和其他相关配置。<br>不同的打包工具可能有不同的配置选项，具体请参考相应工具的文档。<br>在发布应用之前，确保在目标平台上进行了充分的测试。<br>打包和发布 Electron 应用是一个复杂的过程，涉及到多个步骤和工具。Electron 官方文档和社区提供了大量资源来帮助开发者完成这个过程。</p><p>or</p><p>electron-builder，你可能还想添加一些 npm 脚本命令来简化构建过程：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;start&quot;</span>: <span class="string">&quot;electron .&quot;</span>,</span><br><span class="line">  <span class="string">&quot;build&quot;</span>: <span class="string">&quot;electron-builder -w&quot;</span>,</span><br><span class="line">  <span class="string">&quot;build:mac&quot;</span>: <span class="string">&quot;electron-builder -m&quot;</span>,</span><br><span class="line">  <span class="string">&quot;build:linux&quot;</span>: <span class="string">&quot;electron-builder -l&quot;</span>,</span><br><span class="line">  <span class="string">&quot;test&quot;</span>: <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里，build 命令会为 Windows 构建应用程序，build:mac 会为 macOS 构建，build:linux 会为 Linux 构建。使用这些命令可以快速构建特定平台的应用程序。</p><p><a class="link"   href="https://www.electronjs.org/docs/latest" >https://www.electronjs.org/docs/latest<i class="fas fa-external-link-alt"></i></a><br>API DOC</p><!--## Linux<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install bash</span><br><span class="line">sudo apt install curl</span><br></pre></td></tr></table></figure><p>debian 安装node</p><p>1.首先，打开终端。<br>2.导入NodeSource的GPG密钥：<br>curl -fsSL <a class="link"   href="https://deb.nodesource.com/gpgkey/nodesource.gpg.key" >https://deb.nodesource.com/gpgkey/nodesource.gpg.key<i class="fas fa-external-link-alt"></i></a> | sudo apt-key add -<br>3.然后，添加NodeSource的Debian仓库：<br>DISTRO&#x3D;”$(lsb_release -s)”<br>echo “deb <a class="link"   href="https://deb.nodesource.com/node_20.x" >https://deb.nodesource.com/node_20.x<i class="fas fa-external-link-alt"></i></a> $DISTRO main” | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;nodesource.list<br>4.更新本地包索引：<br>sudo apt-get update<br>5.最后，安装Node.js：<br>sudo apt-get install -y nodejs<br>6.验证Node.js和npm的安装：<br>node -v<br>npm -v<br>–&gt;</p><h1 id="Webview"><a href="#Webview" class="headerlink" title="Webview"></a>Webview</h1><ol><li>main.js<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; app, <span class="title class_">BrowserWindow</span>, ipcMain &#125; = <span class="built_in">require</span>(<span class="string">&#x27;electron&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> win;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createWindow</span> () &#123;</span><br><span class="line">  win = <span class="keyword">new</span> <span class="title class_">BrowserWindow</span>(&#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">800</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">600</span>,</span><br><span class="line">    <span class="attr">webPreferences</span>: &#123;</span><br><span class="line">      <span class="attr">preload</span>: path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;preload.js&#x27;</span>),</span><br><span class="line">      <span class="attr">contextIsolation</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">webviewTag</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  win.<span class="title function_">loadFile</span>(<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">whenReady</span>().<span class="title function_">then</span>(createWindow);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">on</span>(<span class="string">&#x27;window-all-closed&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (process.<span class="property">platform</span> !== <span class="string">&#x27;darwin&#x27;</span>) &#123;</span><br><span class="line">    app.<span class="title function_">quit</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">on</span>(<span class="string">&#x27;activate&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="title class_">BrowserWindow</span>.<span class="title function_">getAllWindows</span>().<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="title function_">createWindow</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Listen for navigation commands</span></span><br><span class="line">ipcMain.<span class="title function_">on</span>(<span class="string">&#x27;navigate&#x27;</span>, <span class="function">(<span class="params">event, url</span>) =&gt;</span> &#123;</span><br><span class="line">  win.<span class="property">webContents</span>.<span class="title function_">send</span>(<span class="string">&#x27;navigate&#x27;</span>, url);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">ipcMain.<span class="title function_">on</span>(<span class="string">&#x27;back&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  win.<span class="property">webContents</span>.<span class="title function_">send</span>(<span class="string">&#x27;back&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">ipcMain.<span class="title function_">on</span>(<span class="string">&#x27;reload&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  win.<span class="property">webContents</span>.<span class="title function_">send</span>(<span class="string">&#x27;reload&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>preload.js</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; contextBridge, ipcRenderer &#125; = <span class="built_in">require</span>(<span class="string">&#x27;electron&#x27;</span>);</span><br><span class="line"></span><br><span class="line">contextBridge.<span class="title function_">exposeInMainWorld</span>(<span class="string">&#x27;electron&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">navigate</span>: <span class="function">(<span class="params">url</span>) =&gt;</span> ipcRenderer.<span class="title function_">send</span>(<span class="string">&#x27;navigate&#x27;</span>, url),</span><br><span class="line">  <span class="attr">back</span>: <span class="function">() =&gt;</span> ipcRenderer.<span class="title function_">send</span>(<span class="string">&#x27;back&#x27;</span>),</span><br><span class="line">  <span class="attr">reload</span>: <span class="function">() =&gt;</span> ipcRenderer.<span class="title function_">send</span>(<span class="string">&#x27;reload&#x27;</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="3"><li>index.html<br>更新为使用 webview 元素，并确保导航按钮始终可见：</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Simple Browser<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Simple Browser<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;url&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter URL&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;go&quot;</span>&gt;</span>Go<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;back&quot;</span>&gt;</span>Back<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;reload&quot;</span>&gt;</span>Reload<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">webview</span> <span class="attr">id</span>=<span class="string">&quot;webview&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%; height:90%;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.example.com&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">webview</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> goButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;go&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> backButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;back&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> reloadButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;reload&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> urlInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;url&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> webview = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;webview&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    goButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> url = urlInput.<span class="property">value</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (url) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        webview.<span class="property">src</span> = url;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    backButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      webview.<span class="title function_">goBack</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    reloadButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      webview.<span class="title function_">reload</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// Handle navigation events from main process</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">window</span>.<span class="property">electron</span>.<span class="title function_">on</span>(<span class="string">&#x27;navigate&#x27;</span>, <span class="function">(<span class="params">event, url</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      webview.<span class="property">src</span> = url;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">window</span>.<span class="property">electron</span>.<span class="title function_">on</span>(<span class="string">&#x27;back&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      webview.<span class="title function_">goBack</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">window</span>.<span class="property">electron</span>.<span class="title function_">on</span>(<span class="string">&#x27;reload&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      webview.<span class="title function_">reload</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>这个更新后的代码使用 webview 元素来加载和显示网页，并确保导航按钮始终可见。用户可以输入 URL 并点击“Go”按钮进行导航；点击“Back”按钮返回上一个页面；点击“Reload”按钮重新加载当前页面。</p><h1 id="mp3"><a href="#mp3" class="headerlink" title="mp3"></a>mp3</h1><p>开发一个简易音乐播放器涉及到 HTML、CSS 和 JavaScript 的使用，以及 Electron API 的集成。以下是创建这样一个应用的基本步骤和代码示例：</p><h2 id="1-初始化-Electron-项目"><a href="#1-初始化-Electron-项目" class="headerlink" title="1. 初始化 Electron 项目"></a>1. 初始化 Electron 项目</h2><p>如果你还没有创建 Electron 项目，可以通过以下命令来初始化：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> electron-music-player</span><br><span class="line"><span class="built_in">cd</span> electron-music-player</span><br><span class="line">npm init -y</span><br><span class="line">npm install electron --save-dev</span><br></pre></td></tr></table></figure><h2 id="2-创建主进程文件-main-js"><a href="#2-创建主进程文件-main-js" class="headerlink" title="2. 创建主进程文件 main.js"></a>2. 创建主进程文件 main.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; app, <span class="title class_">BrowserWindow</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;electron&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createWindow</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 创建窗口</span></span><br><span class="line">  <span class="keyword">let</span> win = <span class="keyword">new</span> <span class="title class_">BrowserWindow</span>(&#123;</span><br><span class="line">    <span class="attr">width</span>: <span class="number">800</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">600</span>,</span><br><span class="line">    <span class="attr">webPreferences</span>: &#123;</span><br><span class="line">      <span class="attr">nodeIntegration</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">contextIsolation</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 加载index.html文件</span></span><br><span class="line">  win.<span class="title function_">loadFile</span>(<span class="string">&#x27;index.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">whenReady</span>().<span class="title function_">then</span>(createWindow);</span><br></pre></td></tr></table></figure><ol start="3"><li>创建 HTML 文件 index.html<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>简易音乐播放器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>简易音乐播放器<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;musicFile&quot;</span> <span class="attr">multiple</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">audio</span> <span class="attr">id</span>=<span class="string">&quot;audioPlayer&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;play&quot;</span>&gt;</span>播放<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;pause&quot;</span>&gt;</span>暂停<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;prev&quot;</span>&gt;</span>上一首<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;next&quot;</span>&gt;</span>下一首<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;renderer.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="4-创建渲染进程脚本-renderer-js"><a href="#4-创建渲染进程脚本-renderer-js" class="headerlink" title="4. 创建渲染进程脚本 renderer.js"></a>4. 创建渲染进程脚本 renderer.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> playButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;play&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> pauseButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;pause&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> prevButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;prev&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> nextButton = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;next&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> musicFileInput = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;musicFile&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> audioPlayer = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;audioPlayer&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> songIndex = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> songs = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 监听文件选择</span></span><br><span class="line">  musicFileInput.<span class="title function_">addEventListener</span>(<span class="string">&#x27;change&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    songs.<span class="title function_">push</span>(...<span class="title class_">Array</span>.<span class="title function_">from</span>(e.<span class="property">target</span>.<span class="property">files</span>).<span class="title function_">map</span>(<span class="function"><span class="params">file</span> =&gt;</span> <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(file)));</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 播放音乐</span></span><br><span class="line">  playButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (songs[songIndex]) &#123;</span><br><span class="line">      audioPlayer.<span class="property">src</span> = songs[songIndex];</span><br><span class="line">      audioPlayer.<span class="title function_">play</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 暂停音乐</span></span><br><span class="line">  pauseButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    audioPlayer.<span class="title function_">pause</span>();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 上一首</span></span><br><span class="line">  prevButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (songIndex &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      songIndex--;</span><br><span class="line">      playButton.<span class="title function_">click</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 下一首</span></span><br><span class="line">  nextButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (songIndex &lt; songs.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">      songIndex++;</span><br><span class="line">      playButton.<span class="title function_">click</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 可以添加歌曲列表循环播放的逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="5-添加启动脚本"><a href="#5-添加启动脚本" class="headerlink" title="5. 添加启动脚本"></a>5. 添加启动脚本</h2><p>在 package.json 中添加 “start” 脚本来运行 Electron 应用：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;start&quot;</span>: <span class="string">&quot;electron .&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-运行应用"><a href="#6-运行应用" class="headerlink" title="6. 运行应用"></a>6. 运行应用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure><p>这个简易音乐播放器允许用户选择音乐文件，然后通过按钮控制播放、暂停以及上一首和下一首的切换。</p><!--electron doc https://www.electronjs.org/zh/docs/latest/tutorial/quick-start win.webContents.openDevTools();  1.音乐播放器：创建一个具有图形界面的音乐播放器，支持播放本地音乐文件或在线音乐。2.视频编辑器：开发一个简单的视频编辑器，允许用户剪辑、合并视频，添加特效和文字。3.桌面游戏：开发休闲或策略桌面游戏，利用 Electron 的多线程能力提升性能。4.屏幕录制工具：创建一个可以录制屏幕活动、声音和网络摄像头的应用。5.虚拟桌面助手：开发一个虚拟助手，可以显示通知、提醒和管理日程。6.电子书阅读器：构建一个支持多种格式（如 ePub、PDF）的电子书阅读器。7.个人财务管理器：创建一个帮助用户跟踪收入、支出和预算的应用程序。8.科学计算器或统计分析工具：开发一个具有复杂数学和统计功能的应用程序。9.自定义画图板：创建一个绘图应用，支持不同的画笔工具、颜色和图层。10.实时协作工具：开发一个支持多人在线协作的文档编辑器或白板应用。11.桌面RSS阅读器：构建一个聚合多个RSS源并显示更新内容的应用程序。12.加密货币钱包：开发一个安全的加密货币钱包，支持交易和资产管理。13.机器学习实验台：创建一个允许用户运行和测试机器学习模型的桌面应用。14.虚拟桌面环境：开发一个可以模拟操作系统界面的虚拟桌面环境。15.自定义开发工具：为特定领域或技术栈开发定制的集成开发环境（IDE）。16.数据可视化工具：创建一个帮助用户将复杂数据转换为图表和图形的应用。17.网络监测工具：开发一个监控网络流量、端口和连接状态的应用程序。18.远程桌面软件：构建一个允许远程访问和控制其他计算机桌面的应用。19.社交媒体管理器：开发一个集成多个社交媒体平台的管理工具。20.自定义操作系统启动器：创建一个启动器，允许用户快速启动常用应用程序和脚本。-->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Electron-fetch-API发送HTTP请求&quot;&gt;&lt;a href=&quot;#Electron-fetch-API发送HTTP请求&quot; class=&quot;headerlink&quot; title=&quot;Electron fetch API发送HTTP请求&quot;&gt;&lt;/a&gt;Electron</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="electron" scheme="https://qfsysw.github.io/tags/electron/"/>
    
    <category term="socket" scheme="https://qfsysw.github.io/tags/socket/"/>
    
  </entry>
  
  <entry>
    <title>Axios Cors  &amp;&amp; Timestamp</title>
    <link href="https://qfsysw.github.io/2024/08/04/Axios-Cors-Timestamp/"/>
    <id>https://qfsysw.github.io/2024/08/04/Axios-Cors-Timestamp/</id>
    <published>2024-08-04T04:16:25.000Z</published>
    <updated>2024-08-04T17:50:14.234Z</updated>
    
    <content type="html"><![CDATA[<h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><p>安装 Axios: 使用 Axios 进行 HTTP 请求。</p><p>封装 Axios: 将 Axios 封装成一个模块以便在项目中复用。</p><p>解决跨域问题: 在 vite.config.ts 文件中配置代理以解决跨域问题。</p><p>调用 API: 在 Vue 组件中使用封装的 Axios 进行数据请求和显示。</p><h2 id="安装-Axios"><a href="#安装-Axios" class="headerlink" title="安装 Axios"></a>安装 Axios</h2><p>首先，确保你已经安装了 Axios：</p><p>bash<br>Copy Code<br>npm install axios</p><h2 id="封装-Axios"><a href="#封装-Axios" class="headerlink" title="封装 Axios"></a>封装 Axios</h2><p>创建一个 http 文件夹并在其中创建一个 request.ts 文件：</p><p><strong>src&#x2F;http&#x2F;request.ts:</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;http://localhost:16552/api/zblack&#x27;</span>, <span class="comment">// 根据你的后端API地址调整</span></span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span>, <span class="comment">// 请求超时时间</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;请求错误:&#x27;</span>, error);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = response.<span class="property">data</span>;</span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">isOk</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="property">rsData</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;请求错误:&#x27;</span>, res.<span class="property">msg</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(res.<span class="property">msg</span> || <span class="string">&#x27;Error&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;响应错误:&#x27;</span>, error);</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service;</span><br></pre></td></tr></table></figure><h2 id="3-解决跨域问题"><a href="#3-解决跨域问题" class="headerlink" title="3. 解决跨域问题"></a>3. 解决跨域问题</h2><p>在 vite.config.ts 文件中添加代理配置：</p><p>vite.config.ts:</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:16552&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="4-在-Vue-组件中调用-API"><a href="#4-在-Vue-组件中调用-API" class="headerlink" title="4. 在 Vue 组件中调用 API"></a>4. 在 Vue 组件中调用 API</h2><p>使用封装的 Axios：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">fixed</span> <span class="attr">prop</span>=<span class="string">&quot;UserBlackID&quot;</span> <span class="attr">label</span>=<span class="string">&quot;UserBlackID&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;UserBlockerID&quot;</span> <span class="attr">label</span>=<span class="string">&quot;UserBlockerID&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;UserBlockedID&quot;</span> <span class="attr">label</span>=<span class="string">&quot;UserBlockedID&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;CreatedAt&quot;</span> <span class="attr">label</span>=<span class="string">&quot;CreatedAt&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;UserBlackReason&quot;</span> <span class="attr">label</span>=<span class="string">&quot;Reason&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;UserBlackIP&quot;</span> <span class="attr">label</span>=<span class="string">&quot;IP&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;UserBlackStatus&quot;</span> <span class="attr">label</span>=<span class="string">&quot;Status&quot;</span> <span class="attr">width</span>=<span class="string">&quot;120&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref, onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/http/request&#x27;</span>; <span class="comment">// 根据你的路径调整</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> tableData = <span class="title function_">ref</span>([]);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">onMounted</span>(<span class="keyword">async</span> () =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">request</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;/api/zblack/FindUserBlackLLL&#x27;</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">    tableData.<span class="property">value</span> = response;</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;获取数据失败:&#x27;</span>, error);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="keyword">@import</span> <span class="string">&#x27;./index.scss&#x27;</span>;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>调用成功则跨域问题 解决~</p><!--https://github.com/zanjiahao/Vue-ElPlus-Admin adm--><h1 id="什么是Unix时间戳-Unix-timestamp-："><a href="#什么是Unix时间戳-Unix-timestamp-：" class="headerlink" title="什么是Unix时间戳(Unix timestamp)："></a>什么是Unix时间戳(Unix timestamp)：</h1><p>Unix时间戳(Unix timestamp)，或称Unix时间(Unix time)、POSIX时间(POSIX time)，是一种时间表示方式，定义为从格林威治时间1970年01月01日08时00分00秒起至现在的总秒数。Unix时间戳不仅被使用在Unix 系统、类Unix系统中，也在许多其他操作系统中被广泛采用。<br>时间戳(timestamp)，通常是一个字符序列，唯一地标识某一刻的时间。数字时间戳技术是数字签名技术一种变种的应用。</p><h2 id="时间戳转化："><a href="#时间戳转化：" class="headerlink" title="时间戳转化："></a>时间戳转化：</h2><p>第一步：把时间戳转成Date对象(为什么乘以1000，因为1000毫秒换算成秒等于1秒)<br>const date &#x3D; new Date(1722408384*1000)</p><h2 id="将date进行格式化，转成对应的字符串"><a href="#将date进行格式化，转成对应的字符串" class="headerlink" title="将date进行格式化，转成对应的字符串"></a>将date进行格式化，转成对应的字符串</h2><p>（因为时间戳格式化太常见，可以封装，formatData）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">formatDate</span> = (<span class="params">timestamp: number</span>) =&gt; &#123;</span><br><span class="line">  timestamp = timestamp * <span class="number">1000</span></span><br><span class="line">  <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>(timestamp)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(timestamp + <span class="string">&#x27;&#x27;</span> + date)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;date.getFullYear()&#125;</span>-<span class="subst">$&#123;<span class="built_in">String</span>(date.getMonth() + <span class="number">1</span>).padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)&#125;</span>-<span class="subst">$&#123;<span class="built_in">String</span>(date.getDate()).padStart(</span></span></span><br><span class="line"><span class="subst"><span class="string">    <span class="number">2</span>,<span class="string">&#x27;0&#x27;</span>)&#125;</span> <span class="subst">$&#123;<span class="built_in">String</span>(date.getHours()).padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)&#125;</span>:<span class="subst">$&#123;<span class="built_in">String</span>(date.getMinutes()).padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)&#125;</span>:<span class="subst">$&#123;<span class="built_in">String</span>(</span></span></span><br><span class="line"><span class="subst"><span class="string">    date.getSeconds()</span></span></span><br><span class="line"><span class="subst"><span class="string">  ).padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>)&#125;</span>`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;具体步骤&quot;&gt;&lt;a href=&quot;#具体步骤&quot; class=&quot;headerlink&quot; title=&quot;具体步骤&quot;&gt;&lt;/a&gt;具体步骤&lt;/h1&gt;&lt;p&gt;安装 Axios: 使用 Axios 进行 HTTP 请求。&lt;/p&gt;
&lt;p&gt;封装 Axios: 将 Axios 封装成一个模</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="aaxios" scheme="https://qfsysw.github.io/tags/aaxios/"/>
    
    <category term="cors" scheme="https://qfsysw.github.io/tags/cors/"/>
    
    <category term="timestamp" scheme="https://qfsysw.github.io/tags/timestamp/"/>
    
  </entry>
  
  <entry>
    <title>yolov10</title>
    <link href="https://qfsysw.github.io/2024/07/29/yolov10/"/>
    <id>https://qfsysw.github.io/2024/07/29/yolov10/</id>
    <published>2024-07-29T15:49:16.000Z</published>
    <updated>2024-07-29T16:00:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="YOLOv3、YOLov3-Ultralytics和YOLOv3u"><a href="#YOLOv3、YOLov3-Ultralytics和YOLOv3u" class="headerlink" title="YOLOv3、YOLov3-Ultralytics和YOLOv3u"></a>YOLOv3、YOLov3-Ultralytics和YOLOv3u</h1><p>概述<br>本文件概述了三种密切相关的物体检测模型，即YOLOv3、YOLOv3-Ultralytics 和YOLOv3u。<br>1.YOLOv3:这是”You Only Look Once”(YOLO)物体检测算法的第三个版本。YOLOv3最初由约瑟夫-雷德蒙(Joseph Redmon)开发，通过引入多尺度预测和三种不同大小的检测内核等功能，YOLOv3 对其前身进行了改进。<br>YOLOv3-Ultralvtics: 这是Ultralvtics’ YOLov3 模型的实现。它再现了原始的 YOLOv3 架构，并提供了更多的功2.<br>能，如支持更多的预训练模型和更简单的定制选项。<br>YOLOv3u:这是 yOLOv3-ultralvtics 的更新版本，它采用了YOLOv8 模型中使用的无锚、无对象性分割头,3.<br>YOLOv3u 保留了与 YOLOv3 相同的骨干和颈部结构，但使用了YOLOv8 更新的检测头。</p><h1 id="YOLov4-高速、精确的物体探测"><a href="#YOLov4-高速、精确的物体探测" class="headerlink" title="YOLov4:高速、精确的物体探测"></a>YOLov4:高速、精确的物体探测</h1><p>欢迎访问Ultralytics YoLov4 文档页面，YOLOv4 是由 Alexey Bochkovskiy于 2020,年在<a class="link"   href="https://github.com/AlexeyAB/darknet" >https://github.com/AlexeyAB/darknet<i class="fas fa-external-link-alt"></i></a> 推出的最先进的实时物体检测器。 YOLOv4 的设计在速度和精确度之间实现了最佳平衡，是许多应用的理想选择。</p><p>YOLOv5u 代表着物体检测方法的进步。YOLOv5u 源自 开发的 YOLOv5 Ultralvtics 开发的模型的基础结构，YOLOv5u整合了无锚点、无对象性的分割头，这是以前的 YOLov8模型中引入的功能。这一调整完善了模型的架构，从而提高了物体检测任务中的精度·速度权衡。鉴于经验结果及其衍生特征，YOLov5u 为那些在研究和实际应用中寻求稳健解决方案的人提供了一个高效的替代方案。</p><p>美团YOLOv6 是一款先进的物体检测器，在速度和准确性之间取得了出色的平衡，是实时应用的热门选择。该模型在架构和训练方案上引入了几项显著的改进，包括双向串联(Bic)模块、锚点辅助训练(AAT)策略以及改进的骨干和颈部设计，从而在 COCo 数据集上实现了最先进的精度。    Bic AAT</p><h1 id="YOLOv7"><a href="#YOLOv7" class="headerlink" title="YOLOv7:"></a>YOLOv7:</h1><p>可训练的免费书包<br>YOLOv7 是最先进的实时物体检测器，在5FPS 到 160 FPS 的范围内，其速度和准确性都超过了所有已知的物体检测器。在GPU V100 上，YOLOv7 的准确率(56.8% AP)在 30 FPS 或更高的所有已知实时物体检测器中是最高的。此外，YOLOv7 在速度和准确性上都优于 YOLOR、YOLOX、Scaled-YOLOv4、YOLOv5 等其他物体检测器。该模型是在 MS COC0 数据集上从头开始训练的，没有使用任何其他数据集或预先训练的权重。YoLov7 的源代码可在GitHub 上获取。</p><h1 id="YOLOv8"><a href="#YOLOv8" class="headerlink" title="YOLOv8"></a>YOLOv8</h1><p>YOLOv8 是YOL0 系列实时物体检测器的最新迭代产品，在精度和速度方面都具有尖端性能。在之前YOL0 版本的基础上，YOLov8 引入了新的功能和优化，使其成为广泛应用中各种物体检测任务的理想选择。</p><h1 id="YOLov9-物体检测技术的飞跃发展"><a href="#YOLov9-物体检测技术的飞跃发展" class="headerlink" title="YOLov9:物体检测技术的飞跃发展"></a>YOLov9:物体检测技术的飞跃发展</h1><p>YOLov9 引入了可编程梯度信息IPGI) 和广义高效层聚合网络(GELAN) 等开创性技术，标志着实时目标检测领域的重大进步。该模型在效率、准确性和适应性方面都有显著提高，在 MS COC0 数据集上树立了新的标杆。YOLOv9 项目虽然是由一个独立的开源团队开发的，但它建立在以下机构提供的强大代码库基础之上 ultralytics YoLov5提供的强大代码库，展示了人工智能研究界的协作精神。</p><p>YOLO强在目标检测</p><h1 id="YOLOv10-实时端到端物体检测"><a href="#YOLOv10-实时端到端物体检测" class="headerlink" title="YOLOv10:实时端到端物体检测"></a>YOLOv10:实时端到端物体检测</h1><p>YOLOv10 是清华大学研究人员在 Ultralvtics Python,清华大学的研究人员在 YOLOv10软件包的基础上，引入了一种新的实时目标检测方法，解决了YOL0 以前版本在后处理和模型架构方面的不足。通过消除非最大抑制(NMS)和优化各种模型组件，YOLOv10 在显著降低计算开销的同时实现了最先进的性能。大量实验证明，YOLOv10 在多个模型尺度上实现了卓越的精度-延迟权衡。<br>实时物体检测旨在以较低的延迟准确预测图像中的物体类别和位置。YOL0 系列在性能和效率之间取得了平衡，因此一直处于这项研究的前沿。然而，对 NMS的依赖和架构上的低效阻碍了最佳性能的实现。YOLOv10 通过为无NMS 训练引入一致的双重分配和以效率-准确性为导向的整体模型设计策略，解决了这些问题。</p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><p>1.无 NMS训练   利用一致的双重分配来消除对 NMS 的需求，从而减少推理延迟。<br>2.整体模型设计:从效率和准确性的角度全面优化各种组件，包括轻量级分类头、空间通道去耦向下采样和等级引导块设计。<br>3.增强的模型功能:纳入大核卷积和部分自注意模块，在不增加大量计算成本的情况下提高性能。</p><p>无NMS训练 最核心特点</p><h2 id="YOLov10-有多种型号，可满足不同的应用需求"><a href="#YOLov10-有多种型号，可满足不同的应用需求" class="headerlink" title="YOLov10 有多种型号，可满足不同的应用需求:"></a>YOLov10 有多种型号，可满足不同的应用需求:</h2><p><strong>YOLOv10-N</strong>:用于资源极其有限环境的纳米版本。<br><strong>YOLOv10-S</strong>:兼顾速度和精度的小型版本。<br><strong>YOLOv10-M</strong>:通用中型版本。<br><strong>YOLOv10-B</strong>:平衡型，宽度增加，精度更高，<br><strong>YOLOv10-L</strong>:大型版本，精度更高，但计算资源增加。<br><strong>YOLOv10-X</strong>:超大型版本可实现最高精度和性能。</p><h1 id="通俗易懂的YOLOv10环境构建过程"><a href="#通俗易懂的YOLOv10环境构建过程" class="headerlink" title="通俗易懂的YOLOv10环境构建过程"></a>通俗易懂的YOLOv10环境构建过程</h1><p>使用的前提<br>。NVIDIA GPU:推荐至少是GTX 1060&#x2F;RTX2060级别或更高:<br>。CUDA Toolkit版本:建议使用CUDA 10.1或更新版本。<br>。cuDNN版本:与CUDA版本对应的cuDNN版本，<br>。NVIDIA驱动程序:推荐使用最新版本的NVIDIA驱动程序，以确保最佳性能和功能支持。</p><p>如果不行就只能CPU训练~</p><h1 id="安装conda环境"><a href="#安装conda环境" class="headerlink" title="安装conda环境"></a>安装conda环境</h1><h2 id="1、显卡信息查看"><a href="#1、显卡信息查看" class="headerlink" title="1、显卡信息查看"></a>1、显卡信息查看</h2><p>nvidia-smi nv控制版面</p><h2 id="2、下载anaconda3"><a href="#2、下载anaconda3" class="headerlink" title="2、下载anaconda3"></a>2、下载anaconda3</h2><p><a class="link"   href="https://repo.anaconda.com/archive/Anaconda3-2024.06-1-Windows-x86" >https://repo.anaconda.com/archive/Anaconda3-2024.06-1-Windows-x86<i class="fas fa-external-link-alt"></i></a> 64.exe<br><a class="link"   href="https://www.anaconda.com/" >https://www.anaconda.com/<i class="fas fa-external-link-alt"></i></a></p><h2 id="3、配置环境变量"><a href="#3、配置环境变量" class="headerlink" title="3、配置环境变量"></a>3、配置环境变量</h2><p>E:\Application\anaconda3<br>E:\Applicationanaconda3\Scripts<br>E:\Application\anaconda3\Library\bin</p><p>系统变量<br>path</p><h2 id="验证环境是否OK，出现base代表OK，没有出现卸载在安装一次"><a href="#验证环境是否OK，出现base代表OK，没有出现卸载在安装一次" class="headerlink" title="验证环境是否OK，出现base代表OK，没有出现卸载在安装一次"></a>验证环境是否OK，出现base代表OK，没有出现卸载在安装一次</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> list</span><br></pre></td></tr></table></figure><p>验证简单conda命令<br>创建python环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n yolov10 python==3.9</span><br></pre></td></tr></table></figure><h2 id="2、查看现有环境"><a href="#2、查看现有环境" class="headerlink" title="2、查看现有环境"></a>2、查看现有环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda <span class="built_in">env</span> list</span><br></pre></td></tr></table></figure><h2 id="3、激活环境-conda-init"><a href="#3、激活环境-conda-init" class="headerlink" title="3、激活环境  conda init"></a>3、激活环境  conda init</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate yolo</span><br></pre></td></tr></table></figure><h2 id="4、激活失败"><a href="#4、激活失败" class="headerlink" title="4、激活失败"></a>4、激活失败</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda init cmd.exe</span><br></pre></td></tr></table></figure><h2 id="5、删除环境"><a href="#5、删除环境" class="headerlink" title="5、删除环境"></a>5、删除环境</h2><p>conda env remove -n yolo10</p><h1 id="配置YOLOv10环境"><a href="#配置YOLOv10环境" class="headerlink" title="配置YOLOv10环境"></a>配置YOLOv10环境</h1><p>提示:千万别开加速器，强调N遍，开完加速器可能版本不兼容，环境折腾死人</p><h2 id="下载YOLov10源码"><a href="#下载YOLov10源码" class="headerlink" title="下载YOLov10源码"></a>下载YOLov10源码</h2><p><a class="link"   href="https://github.com/THU-MIG/yolov10" >https://github.com/THU-MIG/yolov10<i class="fas fa-external-link-alt"></i></a></p><h2 id="创建YOLOv10环境"><a href="#创建YOLOv10环境" class="headerlink" title="创建YOLOv10环境"></a>创建YOLOv10环境</h2><p>conda create -n yolov10 python&#x3D;&#x3D;3.9</p><h2 id="激活yolov10环境"><a href="#激活yolov10环境" class="headerlink" title="激活yolov10环境"></a>激活yolov10环境</h2><p>conda activate yolov10 </p><h2 id="找到源码下的的requirement-txt文档"><a href="#找到源码下的的requirement-txt文档" class="headerlink" title="找到源码下的的requirement.txt文档"></a>找到源码下的的requirement.txt文档</h2><p>把torch和torchvision两个注释掉</p><h2 id="手动安装pytorch和tourchvision。"><a href="#手动安装pytorch和tourchvision。" class="headerlink" title="手动安装pytorch和tourchvision。"></a>手动安装pytorch和tourchvision。</h2><p>进入pythorch官网找到2.0.1的版本，复制链接后手动安装<br>pip install torch&#x3D;&#x3D;2.0.1 torchvision&#x3D;&#x3D;0.15.2 torchaudio&#x3D;&#x3D;2.0.2 –index-url <a class="link"   href="https://download.pytorch.org/whl/cu118" >https://download.pytorch.org/whl/cu118<i class="fas fa-external-link-alt"></i></a><br>验证是否OK,显示结果为True代表就OK<br>import torch<br>torch.cuda.is available()&#x3D;&#x3D;&#x3D; true</p><h2 id="安装成功后，执行"><a href="#安装成功后，执行" class="headerlink" title="安装成功后，执行"></a>安装成功后，执行</h2><p>python<br>pip install -r requirements.txt</p><h2 id="编译源码"><a href="#编译源码" class="headerlink" title="编译源码"></a>编译源码</h2><p>pip install -e .</p><h2 id="下载预训练权重模型"><a href="#下载预训练权重模型" class="headerlink" title="下载预训练权重模型"></a>下载预训练权重模型</h2><p><a class="link"   href="https://github.com/THU-MIG/yolov10" >https://github.com/THU-MIG/yolov10<i class="fas fa-external-link-alt"></i></a> </p><p><a class="link"   href="https://github.com/THU-MIG/yolov10/releases/tag/v1.1" >https://github.com/THU-MIG/yolov10/releases/tag/v1.1<i class="fas fa-external-link-alt"></i></a></p><p>.pt</p><p>yolov10-main&gt;yolo predict model&#x3D;yolov10n.pt source&#x3D;cat.jpg</p><h2 id="标注工具"><a href="#标注工具" class="headerlink" title="标注工具"></a>标注工具</h2><p>lablemechinese<br>lableImg </p><p>PS</p><h1 id="PyTorch"><a href="#PyTorch" class="headerlink" title="PyTorch"></a>PyTorch</h1><p>PyTorch 是一种开源深度学习框架，以出色的灵活性和易用性著称。这在一定程度上是因为与机器学习开发者和数据科学家所青睐的热门 Python 高级编程语言兼容。</p><h2 id="什么是-PyTorch"><a href="#什么是-PyTorch" class="headerlink" title="什么是 PyTorch?"></a>什么是 PyTorch?</h2><p>PvTorch 是一种用于构建深度学习模型的功能完备框架，是一种通常用于图像识别和语言处理等应用程序的机器学习。使用 Python 编写，因此对于大多数机器学习开发者而言，学习和使用起来相对简单。PyTorch 的独特之处在于，它完全支持 GPU，并且使用反向模式自动微分技术，因此可以动态修改计算图形。这使其成为快速实验和原型设计的常用选择。</p><h2 id="为何选择-PyTorch"><a href="#为何选择-PyTorch" class="headerlink" title="为何选择 PyTorch?"></a>为何选择 PyTorch?</h2><p>PyTorch 是 Facebook Al Research 和其他几个实验室的开发者的工作成果。该框架将 Torch 中高效而灵活的 GPU 加谏后端库与直观的 Pvthon 前端相结合，后者专注于快速原型设计、可读代码，并支持尽可能广泛的深度学习模型。Pytorch 支持开发者使用熟悉的命令式编程方法，但仍可以输出到图形。它于 2017 年以开源形式发布，其Python 根源使其深受机器学习开发者的喜爱。<br><strong>和TensorFlow区别 是  可以动态修改计算图形。灵活性，易用性，深度学习框架。</strong></p><h1 id="TensorFlow"><a href="#TensorFlow" class="headerlink" title="TensorFlow"></a>TensorFlow</h1><p>TensorFlow 是一款先进的开源库，旨在开发和部署先进的机器学习应用程序。</p><h2 id="什么是-Tensorflow"><a href="#什么是-Tensorflow" class="headerlink" title="什么是 Tensorflow"></a>什么是 Tensorflow</h2><p>TensorFlow 是数据科学家、软件开发者和教育工作者主要使用的开源平台，用于使用数据流图形进行机器学习。图像中的节点代表数学运算，而图像边缘则代表节点间流动的多维数据阵列(张量)。这种灵活的架构允许将机器学习算法描述为相关运算的图形。可以在便携式设备、台式电脑和高端服务器等众多不同平台的 GPU、CPU 和TPU 上训练和执行这些代码，而无需重写代码。这意味着各种背景的编程人员均可以使用相同的工具集进行协作从而显著提高效率，该系统最初由 Google Brain 团队开发，用于研究机器学习和深度神经网络(DNN)，其通用性同样适用于其他各种领域。<br>TensorFlow的工作原理<br>TensorFlow 工作流程由三个不同的部分定义，即数据预处理、构建模型和训练模型，从而进行预测。该框架将数据输入称为张量的多维数组，并以两种不同的方式执行。主要方法是构建一个计算图形来定义用于训练模型的数据流。第二种常用的更直观的方法是使用 Eager Execution，该方法遵循命令编程原则并立即评估操作。<br>使用 TensorFlow 架构，通常在台式电,脑或数据中心完成训练。这两种情况下，均通过在 GPU 上放置张量来加快处理速度。然后，经过训练的模型可以在一系列平台上运行，从台式电脑到移动设备，然后一直到云端。<br>TensorFlow 还包含很多支持功能。例如，TensorBoard 允许用户以直观方式监控训练过程、底层计算图形和指标以便调试运行以及评估模型性能。TensorBoard 是 Tensorflow 和 Keras 的统一可视化框架,<br>Keras 是在 TensorFlow 上运行的高级 API。Keras 通过提供用于构建常见用例模型的简化 API，进一步深化TensorFlow 的抽象概念。API 背后的驱动理念是能够在更短的时间内将想法落实为结果。</p><h2 id="TensorFlow-的优势"><a href="#TensorFlow-的优势" class="headerlink" title="TensorFlow 的优势"></a>TensorFlow 的优势</h2><p>TensorFlow 可用于开发自然语言处理、图像识别、手写识别以及基于计算的不同模拟(例如偏微分方程)等各种<br>任务模型。Tensorflow 的主要优势在于其能够跨多个加速平台执行低级运算、自动计算梯度、生产级可扩展性和可互操作的图形导出。通过为 Keras 提供高级 AP!和 Eager Execution，替代 Tensorflow 上的数据流范式，始终可以轻松便捷地编写代码。<br>作为 Tensorflow 的原始开发者，Google 仍然大力支持该库，并加快其发展速度。例如，Google 创建了一个在线中心，用于共享用户创建的许多不同模型。</p><h2 id="TensorFlow和NVIDIA"><a href="#TensorFlow和NVIDIA" class="headerlink" title="TensorFlow和NVIDIA"></a>TensorFlow和NVIDIA</h2><p>图形处理器或 GPU 配备由数千个小型高效核心组成的大规模并行架构，可以同时启动数千个并行线程，能够强力支持计算密集型任务。<br>CPU MULTIPLE CORES GPU THOUSANDS OF CORES<br>十年前，研究人员发现 GPU 非常擅长矩阵运算和代数计算，而深度学习就十分依赖于这两种运算。TensorFlow 在新款 NVIDIA Pascal GPU 上的运行速度可提升高达 50%，并且能够顺利跨 GPU 进行扩展。 如今，您训练模型的时间可以从几天缩短到几小时。<br>TensorFlow 使用优化的 C++ 和 NVIDIA’CUDA·工具包编写，使模型能够在训练和推理时在 GPU 上运行，从而大幅提速。<br>TensorFlow GPU 支持需要多个驱动和库。为简化安装并避免库冲突，建议利用 GPU 支持的 TensorFlow Docker 镜像。此设置仅需要 NVIDIA GPU 驱动并且安装 NVIDIA Docker。用户可以从预配置了预训练模型和 Tensorflow 库支持的 NGC(NVIDIA GPU Cloud)中提取容器。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;YOLOv3、YOLov3-Ultralytics和YOLOv3u&quot;&gt;&lt;a href=&quot;#YOLOv3、YOLov3-Ultralytics和YOLOv3u&quot; class=&quot;headerlink&quot; title=&quot;YOLOv3、YOLov3-Ultralytics和</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="yolo" scheme="https://qfsysw.github.io/tags/yolo/"/>
    
  </entry>
  
  <entry>
    <title>VUE npm yarn</title>
    <link href="https://qfsysw.github.io/2024/07/27/VUE-npm-yarn/"/>
    <id>https://qfsysw.github.io/2024/07/27/VUE-npm-yarn/</id>
    <published>2024-07-27T15:53:03.000Z</published>
    <updated>2024-07-27T15:55:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vite-cretae-vue-npm-yarn"><a href="#vite-cretae-vue-npm-yarn" class="headerlink" title="vite cretae vue npm yarn"></a>vite cretae vue npm yarn</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init vite</span><br></pre></td></tr></table></figure><p>PN<br>vue3<br>ts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> PN</span><br><span class="line">npm install </span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn</span><br><span class="line">yarn </span><br><span class="line">yarn dev   </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">NPM</span><br><span class="line">npm init 初始化某个项目</span><br><span class="line">npm install/link 默认的安装依赖操作</span><br><span class="line">npm install taco --save 安装某个依赖，并且默认保存到package.</span><br><span class="line">npm uninstall taco  --save 安装某个开发时依赖项目</span><br><span class="line">npm install taco --save-dev 更新某个依赖项目</span><br><span class="line">npm update taco --save安装某个全局依赖项目</span><br><span class="line">npm install taco --global 安装某个全局依赖项目</span><br><span class="line">npm publish/login/1ogout 发布/登录/登出，一系列NPM Registry操作</span><br><span class="line">npm rutest 运行某个命令</span><br><span class="line"></span><br><span class="line">YARN</span><br><span class="line">yarn init 初始化某个项目</span><br><span class="line">yarn install/link 默认的安装依赖操作</span><br><span class="line">yarn add taco 安装某个依赖，并且默认保存到package.</span><br><span class="line">yarn remove taco 安装某个开发时依赖项目</span><br><span class="line">yarn add taco --dev 安装某个开发时依赖项目</span><br><span class="line">yarn upgrade taco 更新某个依赖项目</span><br><span class="line">yarn global add taco 安装某个全局依赖项目</span><br><span class="line">yarn publish/login/1ogout 发布/登录/登出，一系列NPM Registry操作</span><br><span class="line">yarn rutest 运行某个命令</span><br></pre></td></tr></table></figure><p>-S等同于–save，将依赖安装至运行依赖<br>-D等同于–save-dev，将依赖安装至开发依赖<br>-g全局</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add vue-router -S</span><br><span class="line"></span><br><span class="line">yarn add element-plus -S</span><br></pre></td></tr></table></figure><p>按需加载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add unplugin-vue-components -D</span><br></pre></td></tr></table></figure><p>package.json 查看 依赖</p><p> main.ts -&gt; app.vue   <script setup lang="ts"></p><p>elementplup doc<br><a class="link"   href="http://element-plus.org/zh-CN/component/overview.html" >http://element-plus.org/zh-CN/component/overview.html<i class="fas fa-external-link-alt"></i></a><br><a class="link"   href="https://element-plus.org/zh-CN/guide/quickstart.html" >https://element-plus.org/zh-CN/guide/quickstart.html<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vite-cretae-vue-npm-yarn&quot;&gt;&lt;a href=&quot;#vite-cretae-vue-npm-yarn&quot; class=&quot;headerlink&quot; title=&quot;vite cretae vue npm yarn&quot;&gt;&lt;/a&gt;vite cretae vu</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="npm" scheme="https://qfsysw.github.io/tags/npm/"/>
    
    <category term="VUE" scheme="https://qfsysw.github.io/tags/VUE/"/>
    
    <category term="yarn" scheme="https://qfsysw.github.io/tags/yarn/"/>
    
  </entry>
  
  <entry>
    <title>.NET MSTest Xunit</title>
    <link href="https://qfsysw.github.io/2024/07/26/NET-MSTest-Xunit/"/>
    <id>https://qfsysw.github.io/2024/07/26/NET-MSTest-Xunit/</id>
    <published>2024-07-26T15:37:05.000Z</published>
    <updated>2024-07-26T15:41:27.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="node-api"><a href="#node-api" class="headerlink" title="node api"></a>node api</h1><p>下面是一个使用 Node.js 和 Express.js 编写的简单 RESTful API 示例。</p><h2 id="1-初始化项目"><a href="#1-初始化项目" class="headerlink" title="1. 初始化项目"></a>1. 初始化项目</h2><p>首先，创建一个新的项目目录并进入该目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> myapi</span><br><span class="line"><span class="built_in">cd</span> myapi</span><br></pre></td></tr></table></figure><p>然后初始化一个新的 Node.js 项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><h2 id="2-安装依赖"><a href="#2-安装依赖" class="headerlink" title="2. 安装依赖"></a>2. 安装依赖</h2><p>安装 Express.js 作为我们的 Web 框架：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express</span><br></pre></td></tr></table></figure><h2 id="3-创建主文件"><a href="#3-创建主文件" class="headerlink" title="3. 创建主文件"></a>3. 创建主文件</h2><p>在项目根目录下创建一个名为 index.js 的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> index.js</span><br></pre></td></tr></table></figure><h2 id="4-编写-RESTful-API-代码"><a href="#4-编写-RESTful-API-代码" class="headerlink" title="4. 编写 RESTful API 代码"></a>4. 编写 RESTful API 代码</h2><p>在 index.js 中编写以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> items = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;Item 1&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;Item 2&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;Item 3&#x27;</span> &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取所有项目</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/items&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">json</span>(items);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取单个项目</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/items/:id&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> id = <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>);</span><br><span class="line">  <span class="keyword">const</span> item = items.<span class="title function_">find</span>(<span class="function"><span class="params">i</span> =&gt;</span> i.<span class="property">id</span> === id);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (item) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(item);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&#x27;Item not found&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建新项目</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/items&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> newItem = &#123;</span><br><span class="line">    <span class="attr">id</span>: items.<span class="property">length</span> + <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: req.<span class="property">body</span>.<span class="property">name</span></span><br><span class="line">  &#125;;</span><br><span class="line">  items.<span class="title function_">push</span>(newItem);</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">201</span>).<span class="title function_">json</span>(newItem);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新项目</span></span><br><span class="line">app.<span class="title function_">put</span>(<span class="string">&#x27;/items/:id&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> id = <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>);</span><br><span class="line">  <span class="keyword">const</span> item = items.<span class="title function_">find</span>(<span class="function"><span class="params">i</span> =&gt;</span> i.<span class="property">id</span> === id);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (item) &#123;</span><br><span class="line">    item.<span class="property">name</span> = req.<span class="property">body</span>.<span class="property">name</span>;</span><br><span class="line">    res.<span class="title function_">json</span>(item);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&#x27;Item not found&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除项目</span></span><br><span class="line">app.<span class="title function_">delete</span>(<span class="string">&#x27;/items/:id&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> id = <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>);</span><br><span class="line">  <span class="keyword">const</span> itemIndex = items.<span class="title function_">findIndex</span>(<span class="function"><span class="params">i</span> =&gt;</span> i.<span class="property">id</span> === id);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (itemIndex !== -<span class="number">1</span>) &#123;</span><br><span class="line">    items.<span class="title function_">splice</span>(itemIndex, <span class="number">1</span>);</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">204</span>).<span class="title function_">send</span>();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&#x27;Item not found&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server is running on http://localhost:<span class="subst">$&#123;port&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="5"><li>运行服务器<br>在终端中运行以下命令来启动服务器：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">node index.js</span><br></pre></td></tr></table></figure>现在，服务器应该在 <a class="link"   href="http://localhost:3000/" >http://localhost:3000<i class="fas fa-external-link-alt"></i></a> 上运行</li></ol><p>以下是 API 端点的简要说明：<br>GET &#x2F;items - 获取所有项目<br>GET &#x2F;items&#x2F;:id - 获取单个项目<br>POST &#x2F;items - 创建新项目<br>PUT &#x2F;items&#x2F;:id - 更新项目<br>DELETE &#x2F;items&#x2F;:id - 删除项目</p><h1 id="单元测试。"><a href="#单元测试。" class="headerlink" title="单元测试。"></a>单元测试。</h1><h2 id="1-创建-C-项目"><a href="#1-创建-C-项目" class="headerlink" title="1. 创建 C# 项目"></a>1. 创建 C# 项目</h2><p>首先，创建一个新的 xUnit 测试项目：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dotnet new xunit -n MyApiTests</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> MyApiTests</span><br></pre></td></tr></table></figure><h2 id="2-安装-RestSharp"><a href="#2-安装-RestSharp" class="headerlink" title="2. 安装 RestSharp"></a>2. 安装 RestSharp</h2><p>安装 RestSharp 库，它将用于发送 HTTP 请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package RestSharp</span><br></pre></td></tr></table></figure><h2 id="3-编写单元测试"><a href="#3-编写单元测试" class="headerlink" title="3. 编写单元测试"></a>3. 编写单元测试</h2><p>在 MyApiTests 项目中，创建一个名为 ApiTests.cs 的文件，并编写以下代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> RestSharp;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> Xunit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ApiTests</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">string</span> BaseUrl = <span class="string">&quot;http://localhost:3000&quot;</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Fact</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">Test_GetAllItems</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> client = <span class="keyword">new</span> RestClient(BaseUrl);</span><br><span class="line">        <span class="keyword">var</span> request = <span class="keyword">new</span> RestRequest(<span class="string">&quot;items&quot;</span>, Method.Get);</span><br><span class="line">        <span class="keyword">var</span> response = <span class="keyword">await</span> client.ExecuteAsync(request);</span><br><span class="line"></span><br><span class="line">        Assert.True(response.IsSuccessful);</span><br><span class="line">        Assert.Contains(<span class="string">&quot;Item 1&quot;</span>, response.Content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Fact</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">Test_GetSingleItem</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> client = <span class="keyword">new</span> RestClient(BaseUrl);</span><br><span class="line">        <span class="keyword">var</span> request = <span class="keyword">new</span> RestRequest(<span class="string">&quot;items/1&quot;</span>, Method.Get);</span><br><span class="line">        <span class="keyword">var</span> response = <span class="keyword">await</span> client.ExecuteAsync(request);</span><br><span class="line"></span><br><span class="line">        Assert.True(response.IsSuccessful);</span><br><span class="line">        Assert.Contains(<span class="string">&quot;Item 1&quot;</span>, response.Content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Fact</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">Test_CreateNewItem</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> client = <span class="keyword">new</span> RestClient(BaseUrl);</span><br><span class="line">        <span class="keyword">var</span> request = <span class="keyword">new</span> RestRequest(<span class="string">&quot;items&quot;</span>, Method.Post);</span><br><span class="line">        request.AddJsonBody(<span class="keyword">new</span> &#123; name = <span class="string">&quot;New Item&quot;</span> &#125;);</span><br><span class="line">        <span class="keyword">var</span> response = <span class="keyword">await</span> client.ExecuteAsync(request);</span><br><span class="line"></span><br><span class="line">        Assert.True(response.IsSuccessful);</span><br><span class="line">        Assert.Contains(<span class="string">&quot;New Item&quot;</span>, response.Content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Fact</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">Test_UpdateItem</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> client = <span class="keyword">new</span> RestClient(BaseUrl);</span><br><span class="line">        <span class="keyword">var</span> request = <span class="keyword">new</span> RestRequest(<span class="string">&quot;items/1&quot;</span>, Method.Put);</span><br><span class="line">        request.AddJsonBody(<span class="keyword">new</span> &#123; name = <span class="string">&quot;Updated Item&quot;</span> &#125;);</span><br><span class="line">        <span class="keyword">var</span> response = <span class="keyword">await</span> client.ExecuteAsync(request);</span><br><span class="line"></span><br><span class="line">        Assert.True(response.IsSuccessful);</span><br><span class="line">        Assert.Contains(<span class="string">&quot;Updated Item&quot;</span>, response.Content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Fact</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">Test_DeleteItem</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> client = <span class="keyword">new</span> RestClient(BaseUrl);</span><br><span class="line">        <span class="keyword">var</span> request = <span class="keyword">new</span> RestRequest(<span class="string">&quot;items/1&quot;</span>, Method.Delete);</span><br><span class="line">        <span class="keyword">var</span> response = <span class="keyword">await</span> client.ExecuteAsync(request);</span><br><span class="line"></span><br><span class="line">        Assert.True(response.IsSuccessful);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>运行测试<br>在终端中运行以下命令来执行测试：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet <span class="built_in">test</span></span><br></pre></td></tr></table></figure>执行所有测试，并显示测试结果。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;node-api&quot;&gt;&lt;a href=&quot;#node-api&quot; class=&quot;headerlink&quot; title=&quot;node api&quot;&gt;&lt;/a&gt;node api&lt;/h1&gt;&lt;p&gt;下面是一个使用 Node.js 和 Express.js 编写的简单 RESTful API</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>ollama gpt qwen gemma2 deepseek loacl AI</title>
    <link href="https://qfsysw.github.io/2024/07/26/ollama-gpt-qwen-gemma2-deepseek-loacl-AI/"/>
    <id>https://qfsysw.github.io/2024/07/26/ollama-gpt-qwen-gemma2-deepseek-loacl-AI/</id>
    <published>2024-07-26T15:33:08.000Z</published>
    <updated>2024-07-26T15:34:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><a class="link"   href="https://ollama.com/" >https://ollama.com/<i class="fas fa-external-link-alt"></i></a><br>ollama</p><p><a class="link"   href="https://ollama.com/library" >https://ollama.com/library<i class="fas fa-external-link-alt"></i></a><br>models</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ollama run qwen2 </span><br><span class="line">send a message</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ollama run gemma2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a class="link"   href="https://github.com/open-webui/open-webui" >https://github.com/open-webui/open-webui<i class="fas fa-external-link-alt"></i></a><br>webui </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main</span><br></pre></td></tr></table></figure><p>N卡 gpu</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda</span><br></pre></td></tr></table></figure><p><a class="link"   href="http://localhost:3000/" >http://localhost:3000/<i class="fas fa-external-link-alt"></i></a>   </p><p><a class="link"   href="https://ollama.com/library/deepseek-coder-v2" >https://ollama.com/library/deepseek-coder-v2<i class="fas fa-external-link-alt"></i></a><br>deepseek-coder-v2 ~~<br>codeqwen<br>sqlcoder</p><p>curl -X POST <a class="link"   href="http://localhost:11434/api/generate" >http://localhost:11434/api/generate<i class="fas fa-external-link-alt"></i></a> -d ‘{<br>  “model”: “llama2-chinese:7b-chat-q4_0”,<br>  “prompt”:”为什么天空是蓝色的”<br> }’</p><p><a class="link"   href="https://docs.openwebui.com/" >https://docs.openwebui.com/<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a class=&quot;link&quot;   href=&quot;https://ollama.com/&quot; &gt;https://ollama.com/&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;ollama&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="ollama" scheme="https://qfsysw.github.io/tags/ollama/"/>
    
    <category term="AI" scheme="https://qfsysw.github.io/tags/AI/"/>
    
  </entry>
  
  <entry>
    <title>Gofastdfs whitelist</title>
    <link href="https://qfsysw.github.io/2024/07/25/Gofastdfs-whitelist/"/>
    <id>https://qfsysw.github.io/2024/07/25/Gofastdfs-whitelist/</id>
    <published>2024-07-25T15:46:59.000Z</published>
    <updated>2024-07-27T16:00:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>在go-fastdfs项目中，要实现IP白名单限制上传功能，你需要在处理上传请求的地方进行检查。根据你提供的代码，上传逻辑主要在server.go文件中的HttpHandler的ServeHTTP方法里通过调用mux.ServeHTTP(res, req)来分发请求到不同的处理函数。</p><h1 id="IP白名单限制"><a href="#IP白名单限制" class="headerlink" title="IP白名单限制"></a>IP白名单限制</h1><p>定义白名单：首先需要定义一个变量来存储允许的IP地址。可以在server.go的Server结构体中添加一个字段来存储这个白名单。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Server <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="comment">// ... 其他字段 ...</span></span><br><span class="line">    allowedIPs <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewServer</span><span class="params">()</span></span> *Server &#123;</span><br><span class="line">    server := &amp;Server&#123;</span><br><span class="line">        <span class="comment">// ... 初始化其他字段 ...</span></span><br><span class="line">        allowedIPs: <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">struct</span>&#123;&#125;),</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 假设允许的IP是 &quot;192.168.1.1&quot; 和 &quot;10.12.188.85&quot;</span></span><br><span class="line">    server.allowedIPs[<span class="string">&quot;192.168.1.1&quot;</span>] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">    server.allowedIPs[<span class="string">&quot;10.12.188.85&quot;</span>] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">    <span class="keyword">return</span> server</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改HttpHandler：在HttpHandler的ServeHTTP方法中添加一个检查逻辑，以确定请求的IP是否在白名单中。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(httpHandler *HttpHandler)</span></span> ServeHTTP(res http.ResponseWriter, req *http.Request) &#123;</span><br><span class="line">    <span class="keyword">if</span> !server.isIPAllowed(req) &#123;</span><br><span class="line">        http.Error(res, <span class="string">&quot;Access denied&quot;</span>, http.StatusForbidden)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 原有的处理逻辑</span></span><br><span class="line">    mux.ServeHTTP(res, req)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *Server)</span></span> isIPAllowed(req *http.Request) <span class="type">bool</span> &#123;</span><br><span class="line">    clientIP := req.RemoteAddr</span><br><span class="line">    <span class="comment">// 检查IP是否在白名单中</span></span><br><span class="line">    _, allowed := server.allowedIPs[clientIP]</span><br><span class="line">    <span class="keyword">return</span> allowed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用修改后的NewServer：确保在初始化服务器时使用修改后的NewServer函数来创建Server实例，并设置白名单。</p><p>更新InitServer函数：在InitServer函数中，确保使用修改后的NewServer函数。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitServer</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// ... 省略其他代码 ...</span></span><br><span class="line"></span><br><span class="line">    server = NewServer() <span class="comment">// 使用修改后的构造函数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// ... 省略其他代码 ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重新编译和部署：对项目进行重新编译，并部署修改后的代码。<br>这样，任何不符合白名单中的IP地址的上传请求都将被拒绝，返回HTTP状态403 Forbidden。请根据你的项目结构和配置适当调整上述代码。</p><h1 id="只限制upload"><a href="#只限制upload" class="headerlink" title="只限制upload"></a>只限制upload</h1><p>如果你想只对特定的接口（如 &#x2F;group1&#x2F;upload）实施IP白名单限制，而不影响其他页面或图片的访问，你可以在处理上传请求的特定路由中添加IP检查逻辑。以下是如何实现这个目的的步骤：</p><p>定义白名单：首先，定义一个变量来存储允许上传的IP地址。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> allowedUploadIPs = <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">struct</span>&#123;&#125;&#123;</span><br><span class="line">    <span class="string">&quot;192.168.1.1&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="string">&quot;10.12.188.85&quot;</span>: &#123;&#125;,</span><br><span class="line">    <span class="comment">// 可以继续添加更多的允许上传的IP地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改上传处理函数：找到处理 &#x2F;group1&#x2F;upload 路由的函数，这可能是 Server 结构体的一个方法，比如 Upload 方法。在这个函数的开始处添加IP检查逻辑。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Server)</span></span> Upload(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class="line">    <span class="keyword">if</span> !isIPAllowed(r) &#123;</span><br><span class="line">        http.Error(w, <span class="string">&quot;Access denied&quot;</span>, http.StatusForbidden)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 原有的上传处理逻辑</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isIPAllowed</span><span class="params">(r *http.Request)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">    clientIP := c.GetRealIp(r) <span class="comment">// 确保这个方法返回的是请求的IP地址</span></span><br><span class="line">    _, allowed := allowedUploadIPs[clientIP]</span><br><span class="line">    <span class="keyword">return</span> allowed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更新路由：确保你的路由设置正确地将 &#x2F;group1&#x2F;upload 请求映射到 Upload 方法。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Server)</span></span> initRouter() &#123;</span><br><span class="line">    <span class="comment">// 其他路由设置...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 映射/group1/upload到Upload方法</span></span><br><span class="line">    <span class="comment">// 注意这里的具体实现可能依赖于你使用的HTTP多路复用器或框架</span></span><br><span class="line">    mux.HandleFunc(<span class="string">&quot;/group1/upload&quot;</span>, c.Upload)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不要在其他路由中添加IP检查：确保只有 &#x2F;group1&#x2F;upload 路由的处理函数中添加了IP检查逻辑。其他路由的处理函数保持不变，这样就不会对其他页面或图片的访问造成影响。</p><p>重新编译和部署：对项目进行重新编译，并部署修改后的代码。</p><p>通过这种方式，只有当用户尝试访问 &#x2F;group1&#x2F;upload 接口时，才会检查IP白名单；其他所有路由和资源的访问都不会受到IP白名单的限制。请根据你的实际代码结构和路由设置适当调整上述示例代码。</p><h1 id="忽略端口"><a href="#忽略端口" class="headerlink" title="忽略端口"></a>忽略端口</h1><p>HTTP请求的远程地址（r.RemoteAddr）通常包含IP地址和端口号，格式如IP:PORT。如果你希望在检查IP白名单时忽略端口号，只根据IP地址来判断，你需要从r.RemoteAddr中提取出IP地址部分。</p><p>在Go语言中，你可以使用strings.Split函数来分割字符串，获取IP地址。以下是调整后的isIPAllowed函数：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *Server)</span></span> isIPAllowed(r *http.Request) <span class="type">bool</span> &#123;</span><br><span class="line">    clientIPPort := r.RemoteAddr <span class="comment">// 包含IP和端口号，例如 &quot;192.168.80.123:56533&quot;</span></span><br><span class="line">    clientIPParts := strings.Split(clientIPPort, <span class="string">&quot;:&quot;</span>) <span class="comment">// 分割为 [&quot;192.168.80.123&quot;, &quot;56533&quot;]</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(clientIPParts) &lt; <span class="number">2</span> &#123;</span><br><span class="line">        <span class="comment">// 如果分割后的结果不足2部分，说明没有端口号，直接返回不允许</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    clientIP := clientIPParts[<span class="number">0</span>] <span class="comment">// 提取IP地址</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查IP是否在白名单中</span></span><br><span class="line">    _, allowed := server.allowedIPs[clientIP]</span><br><span class="line">    <span class="keyword">return</span> allowed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码首先将r.RemoteAddr按照”:”分割成两部分，第一部分是IP地址，第二部分是端口号。然后，它检查分割后的数组长度是否至少为2，以确保端口号存在。如果长度小于2，则可能表示远程地址格式不正确，此时函数返回false，表示不允许访问。如果长度足够，它将取出IP地址部分，并检查该IP是否在白名单中。</p><p>请确保server.allowedIPs已经被正确初始化并包含了所有允许的IP地址。例如：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server.allowedIPs = <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">struct</span>&#123;&#125;&#123;</span><br><span class="line">    <span class="string">&quot;192.168.80.123&quot;</span>: &#123;&#125;, <span class="comment">// 允许的IP地址</span></span><br><span class="line">    <span class="comment">// 可以继续添加更多的IP地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，isIPAllowed函数就可以根据IP地址而不是IP和端口的组合来判断请求是否被允许。</p><h1 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//http.DefaultServeMux.ServeHTTP(res, req)</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> !server.isIPAllowed(req) &#123;</span><br><span class="line">         http.Error(res, <span class="string">&quot;Access denied&quot;</span>, http.StatusForbidden)</span><br><span class="line">       <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">mux.ServeHTTP(res,req)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(server *Server)</span></span> isIPAllowed(req *http.Request) <span class="type">bool</span> &#123;</span><br><span class="line">    clientIP := req.RemoteAddr</span><br><span class="line">    fmt.Println(<span class="string">&quot;ip &quot;</span> + clientIP)</span><br><span class="line">    <span class="comment">// 检查IP是否在白名单中</span></span><br><span class="line">    _, allowed := server.allowedIPs[clientIP]</span><br><span class="line">    <span class="keyword">return</span> allowed</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>http_upload.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Server)</span></span> Upload(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !server.isIPAllowed(r) &#123;</span><br><span class="line">        http.Error(w, <span class="string">&quot;Access denied&quot;</span>, http.StatusForbidden)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在go-fastdfs项目中，要实现IP白名单限制上传功能，你需要在处理上传请求的地方进行检查。根据你提供的代码，上传逻辑主要在server.go文件中的HttpHandler的ServeHTTP方法里通过调用mux.ServeHTTP(res, req)来分发请求到不同的</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="go" scheme="https://qfsysw.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Nginx whitelist</title>
    <link href="https://qfsysw.github.io/2024/07/23/Nginx-whitelist/"/>
    <id>https://qfsysw.github.io/2024/07/23/Nginx-whitelist/</id>
    <published>2024-07-23T15:56:32.000Z</published>
    <updated>2024-07-23T15:59:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 Debian 系统上安装 Nginx </p><p>更新包列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>安装 Nginx：<br>使用 apt 包管理器来安装 Nginx。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><p>启动 Nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start nginx</span><br></pre></td></tr></table></figure><p>启用开机自启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><p>检查 Nginx 状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status nginx</span><br></pre></td></tr></table></figure><p>配置防火墙（可选）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow <span class="string">&#x27;Nginx Full&#x27;</span></span><br></pre></td></tr></table></figure><p>访问你的服务器：<br>安装完成后，你可以通过浏览器访问你的服务器 IP 地址来验证 Nginx 是否安装成功。你应该会看到默认的 Nginx 欢迎页面。</p><p>配置 HTTPS（可选）</p><p>如果你希望使用 HTTPS，可以按照以下步骤操作：</p><p>获取 SSL 证书：<br>可以使用 Let’s Encrypt 免费获取一个 SSL 证书。运行以下命令来安装 Certbot 和 Nginx 插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install certbot python3-certbot-nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>获取并安装证书：<br>运行以下命令来获取并安装证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot --nginx -d yourdomain.com</span><br></pre></td></tr></table></figure><p>请将 yourdomain.com 替换为你的实际域名。</p><p>配置自动更新证书：<br>你可以设置一个 cron 任务来自动更新证书，运行以下命令来设置定时任务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> certbot-renewal</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo nano /etc/nginx/sites-available/fastdfs</span><br></pre></td></tr></table></figure><p>在文件中添加以下内容：</p><p>nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name yourdomain.com;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 允许的IP地址列表</span></span><br><span class="line">    allow 192.168.1.0/24;</span><br><span class="line">    allow 10.0.0.0/8;</span><br><span class="line">    deny all;</span><br><span class="line"></span><br><span class="line">    location /group1/M00 &#123;</span><br><span class="line">        proxy_pass http://localhost:8080;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请将 yourdomain.com 替换为你的实际域名，并确保 IP 地址列表与你的需求匹配。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop nginx</span><br><span class="line">sudo systemctl start nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在 Debian 系统上安装 Nginx &lt;/p&gt;
&lt;p&gt;更新包列表：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Nginx" scheme="https://qfsysw.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>.NET Web Port</title>
    <link href="https://qfsysw.github.io/2024/06/27/NET-Web-Port/"/>
    <id>https://qfsysw.github.io/2024/06/27/NET-Web-Port/</id>
    <published>2024-06-26T17:02:56.000Z</published>
    <updated>2024-06-26T17:06:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 .NET8 中，在 Program 类中配置服务和请求管道</p><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Builder;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Hosting;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.DependencyInjection;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.Hosting;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WServer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> builder = WebApplication.CreateBuilder(args);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Add services to the container.</span></span><br><span class="line">            builder.Services.AddControllersWithViews();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> app = builder.Build();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Configure the HTTP request pipeline.</span></span><br><span class="line">            <span class="keyword">if</span> (!app.Environment.IsDevelopment())</span><br><span class="line">            &#123;</span><br><span class="line">                app.UseExceptionHandler(<span class="string">&quot;/Home/Error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            app.UseStaticFiles();</span><br><span class="line">            app.UseRouting();</span><br><span class="line">            app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">            app.MapControllerRoute(</span><br><span class="line">                name: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">                pattern: <span class="string">&quot;&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置默认启动端口</span></span><br><span class="line">            app.Urls.Add(<span class="string">&quot;http://localhost:5000&quot;</span>); <span class="comment">// 这里设置为 5000</span></span><br><span class="line"></span><br><span class="line">            app.Run();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动时自动从环境变量或配置文件中读取端口号</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> port = Environment.GetEnvironmentVariable(<span class="string">&quot;ASPNETCORE_PORT&quot;</span>) ?? <span class="string">&quot;5000&quot;</span>;</span><br><span class="line">app.Urls.Add(<span class="string">$&quot;http://localhost:<span class="subst">&#123;port&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><p>也可以从配置文件中读取端口号，例如 appsettings.json：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> port = builder.Configuration.GetValue&lt;<span class="built_in">int</span>&gt;(<span class="string">&quot;Port&quot;</span>).ToString();</span><br><span class="line">app.Urls.Add(<span class="string">$&quot;http://localhost:<span class="subst">&#123;port&#125;</span>&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="多端口号"><a href="#多端口号" class="headerlink" title="多端口号"></a>多端口号</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置 IConfiguration</span></span><br><span class="line">         <span class="keyword">var</span> configuration = builder.Configuration;</span><br><span class="line">         <span class="comment">// 读取端口配置列表</span></span><br><span class="line">         <span class="keyword">var</span> ports = configuration.GetSection(<span class="string">&quot;Ports&quot;</span>).Get&lt;List&lt;<span class="built_in">int</span>&gt;&gt;() ?? <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">         <span class="keyword">foreach</span> (<span class="keyword">var</span> port <span class="keyword">in</span> ports)</span><br><span class="line">         &#123;</span><br><span class="line">             app.Urls.Add(<span class="string">$&quot;http://localhost:<span class="subst">&#123;port&#125;</span>&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>appsettings.json 文件包含了一个端口列表：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;Ports&quot;</span>: [<span class="number">5000</span>, <span class="number">5001</span>] <span class="comment">// 配置多个端口</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="debian"><a href="#debian" class="headerlink" title="debian"></a>debian</h1><p>当你在 Debian 系统上运行 dotnet run 并能够通过 <a class="link"   href="http://localhost:5000/" >http://localhost:5000<i class="fas fa-external-link-alt"></i></a> 访问应用程序，但无法通过 IP:5000 访问时，这通常意味着你的应用程序只绑定到了本地回环接口（即 localhost），而没有绑定到所有可用的网络接口。以下是一些可能的解决方案：</p><p>确保应用程序绑定到所有接口：默认情况下，ASP.NET Core 应用程序应该监听所有可用的网络接口。如果你的应用程序只绑定到 localhost，你需要确保它绑定到 0.0.0.0，这代表所有网络接口。在 Program 类中设置 app.Urls 时，不要使用 localhost，而是使用 0.0.0.0：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.Urls.Add(<span class="string">&quot;http://0.0.0.0:5000&quot;</span>);</span><br></pre></td></tr></table></figure><p>检查防火墙设置：确保你的 Debian 系统上的防火墙没有阻止外部访问端口 5000。你可以使用 ufw 命令行工具来管理防火墙规则。例如，允许端口 5000 可以通过以下命令：</p><p>sudo ufw allow 5000&#x2F;tcp<br>检查网络配置：确保你的网络配置允许外部访问。这可能涉及到虚拟网络、容器网络或其他网络隔离技术。</p><p>使用环境变量：ASP.NET Core 应用程序也可以通过环境变量来设置 URL。你可以设置 ASPNETCORE_URLS 环境变量，然后在运行应用程序之前不指定具体的 app.Urls.Add：</p><p>export ASPNETCORE_URLS&#x3D;<a class="link"   href="http://0.0.0.0:5000/" >http://0.0.0.0:5000<i class="fas fa-external-link-alt"></i></a><br>dotnet run<br>检查 Kestrel 服务器配置：Kestrel 是 ASP.NET Core 的默认 HTTP 服务器，它可能有自己的配置。确保 Kestrel 配置为监听所有接口。这可以在 Program 类中设置：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">builder.WebHost.ConfigureKestrel(serverOptions =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    serverOptions.ListenAnyIP(<span class="number">5000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>检查端口是否被占用：确保端口 5000 没有被其他服务占用。你可以使用 netstat -tuln | grep 5000 来检查端口的使用情况。</p><p>使用 dotnet 命令的额外参数：当你使用 dotnet run 命令时，可以通过 -urls 参数来指定 URL，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet run --urls <span class="string">&quot;http://0.0.0.0:5000&quot;</span></span><br></pre></td></tr></table></figure><h1 id="dibian-NET8环境"><a href="#dibian-NET8环境" class="headerlink" title="dibian .NET8环境"></a>dibian .NET8环境</h1><p>注册微软密钥和软件仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb</span><br><span class="line">sudo dpkg -i packages-microsoft-prod.deb</span><br></pre></td></tr></table></figure><p>安装.NET SDK。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update; \</span><br><span class="line">sudo apt-get install -y apt-transport-https &amp;&amp; \</span><br><span class="line">sudo apt-get update &amp;&amp; \</span><br><span class="line">sudo apt-get install -y dotnet-sdk-8.0</span><br></pre></td></tr></table></figure><p>验证安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet --version</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在 .NET8 中，在 Program 类中配置服务和请求管道&lt;/p&gt;
&lt;h1 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h1&gt;&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".NET" scheme="https://qfsysw.github.io/tags/NET/"/>
    
  </entry>
  
  <entry>
    <title>VM Linux win</title>
    <link href="https://qfsysw.github.io/2024/06/24/VM-Linux-win/"/>
    <id>https://qfsysw.github.io/2024/06/24/VM-Linux-win/</id>
    <published>2024-06-24T15:38:07.000Z</published>
    <updated>2024-06-26T17:02:40.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="debian12-5-0服务器安装"><a href="#debian12-5-0服务器安装" class="headerlink" title="debian12.5.0服务器安装"></a>debian12.5.0服务器安装</h1><p>参考<a class="link"   href="https://blog.csdn.net/Go_ahead_forever/article/details/132679793" >https://blog.csdn.net/Go_ahead_forever/article/details/132679793<i class="fas fa-external-link-alt"></i></a></p><h1 id="相关命令问题"><a href="#相关命令问题" class="headerlink" title="相关命令问题"></a>相关命令问题</h1><pre><code>新用户使用sudo报错</code></pre><p> xx is not the sudoers file.<br>原因：book用户没有sudo的权限<br>解决：<a class="link"   href="https://blog.csdn.net/weixin_37787043/article/details/123045557" >https://blog.csdn.net/weixin_37787043/article/details/123045557<i class="fas fa-external-link-alt"></i></a></p><h1 id="更新-清华-镜像源-会快一些-："><a href="#更新-清华-镜像源-会快一些-：" class="headerlink" title="更新 清华-镜像源 (会快一些)："></a>更新 清华-镜像源 (会快一些)：</h1><p>参考文档： <a class="link"   href="https://blog.csdn.net/sinat_15028281/article/details/135638596" >https://blog.csdn.net/sinat_15028281/article/details/135638596<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line"><span class="built_in">cp</span> etc/apt/sources.list etc/apt/sources.list.backup  // 备份</span><br><span class="line">vi etc/apt/sources.list// 修改镜像源</span><br></pre></td></tr></table></figure><p>将etc&#x2F;apt&#x2F;sources.list文件内的内容清空，写入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware</span></span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware</span></span><br><span class="line"></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span><br><span class="line"><span class="comment"># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware</span></span><br><span class="line"></span><br><span class="line">deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware</span><br><span class="line"><span class="comment"># deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware</span></span><br></pre></td></tr></table></figure><h1 id="安装SSH"><a href="#安装SSH" class="headerlink" title="安装SSH"></a>安装SSH</h1><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ssh</span><br></pre></td></tr></table></figure><p>启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start ssh  </span><br></pre></td></tr></table></figure><p>启动则可ssh<br>查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status ssh</span><br></pre></td></tr></table></figure><h1 id="安装vscode"><a href="#安装vscode" class="headerlink" title="安装vscode"></a>安装vscode</h1><p>进入页面：<a class="link"   href="https://code.visualstudio.com/docs/?dv=linux64_deb" >https://code.visualstudio.com/docs/?dv=linux64_deb<i class="fas fa-external-link-alt"></i></a> 自动下载安装包</p><p>cd downloads<br>找到下载目录执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i code_1.88.1-1712771838_amd64.deb</span><br></pre></td></tr></table></figure><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><p>Debian12.5:<br>            <a class="link"   href="https://blog.csdn.net/qq_39997939/article/details/131405963" >https://blog.csdn.net/qq_39997939/article/details/131405963<i class="fas fa-external-link-alt"></i></a><br>            严格按步骤复制即可。 别用其他网站的安装方式，很容易错！！！！！<br>        Ubuntu18.04:<br>            ubuntu18.04安装docker_ubuntu 18.04安装docker-CSDN博客</p><h1 id="安装构建基础包"><a href="#安装构建基础包" class="headerlink" title="安装构建基础包"></a>安装构建基础包</h1><p>它含有libc、gcc、g++、make、dpkg-dev<br>执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install build-essential</span><br></pre></td></tr></table></figure><h1 id="win"><a href="#win" class="headerlink" title="win"></a>win</h1><p><a class="link"   href="https://blog.csdn.net/weixin_52799373/article/details/139039181" >https://blog.csdn.net/weixin_52799373/article/details/139039181<i class="fas fa-external-link-alt"></i></a></p><p>win测通道xxx<br><a class="link"   href="https://knowledge.broadcom.com/external/article?legacyId=79832" >https://knowledge.broadcom.com/external/article?legacyId=79832<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;debian12-5-0服务器安装&quot;&gt;&lt;a href=&quot;#debian12-5-0服务器安装&quot; class=&quot;headerlink&quot; title=&quot;debian12.5.0服务器安装&quot;&gt;&lt;/a&gt;debian12.5.0服务器安装&lt;/h1&gt;&lt;p&gt;参考&lt;a class</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Docker" scheme="https://qfsysw.github.io/tags/Docker/"/>
    
    <category term="Linux" scheme="https://qfsysw.github.io/tags/Linux/"/>
    
    <category term="Debian" scheme="https://qfsysw.github.io/tags/Debian/"/>
    
    <category term="VM" scheme="https://qfsysw.github.io/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>Go-fastdfs</title>
    <link href="https://qfsysw.github.io/2024/06/19/Go-fastdfs/"/>
    <id>https://qfsysw.github.io/2024/06/19/Go-fastdfs/</id>
    <published>2024-06-19T15:58:46.000Z</published>
    <updated>2024-06-24T15:36:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="go-fastdfs"><a href="#go-fastdfs" class="headerlink" title="go-fastdfs"></a>go-fastdfs</h1><p>Go-fastdfs 是简单、可靠、高效的分布式文件系统。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a class="link"   href="https://sjqzhang.github.io/go-fastdfs/#character" >https://sjqzhang.github.io/go-fastdfs/#character<i class="fas fa-external-link-alt"></i></a></p><p>or<br><a class="link"   href="https://github.com/sjqzhang/go-fastdfs/releases" >https://github.com/sjqzhang/go-fastdfs/releases<i class="fas fa-external-link-alt"></i></a></p><!---releases下载 fileserverfileserver.exe--><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./fileserver server </span><br></pre></td></tr></table></figure><h1 id="docker部署"><a href="#docker部署" class="headerlink" title="docker部署"></a>docker部署</h1><!---  curl -fsSL https://get.docker.com -o get-docker.sh sudo sh get-docker.sh ---><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --network=host --name fastdfs -v /data/fastdfs_data:/data -p 8080:8080 -e GO_FASTDFS_DIR=/data sjqzhang/go-fastdfs</span><br></pre></td></tr></table></figure><h1 id="NET"><a href="#NET" class="headerlink" title=".NET"></a>.NET</h1><p>参考java实现<br><a class="link"   href="https://sjqzhang.github.io/go-fastdfs/usage.html#java" >https://sjqzhang.github.io/go-fastdfs/usage.html#java<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">string</span> UPLOAD_PATH2 = <span class="string">&quot;go-fastdfs地址XXX:XX&quot;</span>;</span><br><span class="line">  [<span class="meta">HttpPost(<span class="string">&quot;FormFile&quot;</span>)</span>]</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;<span class="built_in">string</span>&gt; <span class="title">UploadGo</span>(<span class="params">IFormFile file</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">if</span> (file == <span class="literal">null</span> || file.Length == <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="string">&quot;File is empty&quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">string</span> result = <span class="built_in">string</span>.Empty;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">using</span> (<span class="keyword">var</span> httpClient = <span class="keyword">new</span> HttpClient())</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">using</span> (<span class="keyword">var</span> form = <span class="keyword">new</span> MultipartFormDataContent())</span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="keyword">var</span> streamContent = <span class="keyword">new</span> StreamContent(file.OpenReadStream());</span><br><span class="line">                  streamContent.Headers.Add(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">$&quot;form-data; name=\&quot;file\&quot;; filename=\&quot;<span class="subst">&#123;file.FileName&#125;</span>\&quot;&quot;</span>);</span><br><span class="line">                  form.Add(streamContent, <span class="string">&quot;file&quot;</span>, file.FileName);</span><br><span class="line">                  </span><br><span class="line">                  form.Add(<span class="keyword">new</span> StringContent(<span class="string">&quot;default&quot;</span>), <span class="string">&quot;scene&quot;</span>);</span><br><span class="line">                  form.Add(<span class="keyword">new</span> StringContent(<span class="string">&quot;20240619&quot;</span>), <span class="string">&quot;path&quot;</span>);</span><br><span class="line">                  form.Add(<span class="keyword">new</span> StringContent(<span class="string">&quot;json2&quot;</span>), <span class="string">&quot;output&quot;</span>);</span><br><span class="line">                  form.Add(<span class="keyword">new</span> StringContent(<span class="string">&quot;upload&quot;</span>), <span class="string">&quot;submit&quot;</span>);</span><br><span class="line">                  <span class="keyword">var</span> response = <span class="keyword">await</span> httpClient.PostAsync(UPLOAD_PATH2, form);<span class="comment">//await</span></span><br><span class="line">                  result = <span class="keyword">await</span> response.Content.ReadAsStringAsync();<span class="comment">//await</span></span><br><span class="line">        </span><br><span class="line">                  Console.WriteLine(<span class="string">$&quot;resp: <span class="subst">&#123;response&#125;</span>&quot;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (Exception e)</span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(e.ToString());</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>“url”: “<a class="link"   href="http://xxx/group1/20240619/test1619.png?name=test1619.png&download=1" >http://xxx/group1/20240619/test1619.png?name=test1619.png&amp;download=1<i class="fas fa-external-link-alt"></i></a>“</p><h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = <span class="string">&#x27;http://xxx:xx/group1/upload&#x27;</span></span><br><span class="line">files = &#123;<span class="string">&#x27;file&#x27;</span>: open(<span class="string">&#x27;resized240525.jpg&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)&#125;</span><br><span class="line">options=&#123;<span class="string">&#x27;output&#x27;</span>:<span class="string">&#x27;json&#x27;</span>,<span class="string">&#x27;path&#x27;</span>:<span class="string">&#x27;20240619&#x27;</span>,<span class="string">&#x27;scene&#x27;</span>:<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;filename&#x27;</span>:<span class="string">&#x27;test123.jpg&#x27;</span>&#125; </span><br><span class="line">r = requests.post(url,data=options, files=files)</span><br><span class="line">print(r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">&quot;peers&quot;</span>: [<span class="string">&quot;http://192.168.44.128:8080&quot;</span>,<span class="string">&quot;http://192.168.31.36:8080&quot;</span>],</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;go-fastdfs&quot;&gt;&lt;a href=&quot;#go-fastdfs&quot; class=&quot;headerlink&quot; title=&quot;go-fastdfs&quot;&gt;&lt;/a&gt;go-fastdfs&lt;/h1&gt;&lt;p&gt;Go-fastdfs 是简单、可靠、高效的分布式文件系统。&lt;/p&gt;
&lt;h2 </summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>2FA-Enable two-factor authentication (2FA)</title>
    <link href="https://qfsysw.github.io/2024/06/18/2FA-Enable-two-factor-authentication-2FA/"/>
    <id>https://qfsysw.github.io/2024/06/18/2FA-Enable-two-factor-authentication-2FA/</id>
    <published>2024-06-18T15:40:12.000Z</published>
    <updated>2024-06-18T15:47:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>开源免费的Authenticator: 2FA Client，支持多种浏览器。</p><p>开源地址：Authenticator-Extension<br><a class="link"   href="https://github.com/Authenticator-Extension/Authenticator" >https://github.com/Authenticator-Extension/Authenticator<i class="fas fa-external-link-alt"></i></a></p><p>Edge扩展：Authenticator: 2FA Client - Microsoft Edge Addons<br><a class="link"   href="https://microsoftedge.microsoft.com/addons/detail/authenticator-2fa-client/ocglkepbibnalbgmbachknglpdipeoio" >https://microsoftedge.microsoft.com/addons/detail/authenticator-2fa-client/ocglkepbibnalbgmbachknglpdipeoio<i class="fas fa-external-link-alt"></i></a></p><h1 id="Chrome扩展：身份验证器-Chrome-应用商店-google-com"><a href="#Chrome扩展：身份验证器-Chrome-应用商店-google-com" class="headerlink" title="Chrome扩展：身份验证器 - Chrome 应用商店 (google.com)"></a>Chrome扩展：身份验证器 - Chrome 应用商店 (google.com)</h1><p><a class="link"   href="https://chrome.google.com/webstore/detail/authenticator/bhghoamapcdpbohphigoooaddinpkbai" >https://chrome.google.com/webstore/detail/authenticator/bhghoamapcdpbohphigoooaddinpkbai<i class="fas fa-external-link-alt"></i></a></p><p>安装好这个扩展程序以后，再次进入GitHub验证界面，等待二维码弹出。</p><p>二维码弹出以后，点击浏览器扩展，点击Authenticator: 2FA Client </p><p>点击二维码，选择指定区域，进行操作，等待代码就可以了。</p><p>Enable two-factor authentication (2FA)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;开源免费的Authenticator: 2FA Client，支持多种浏览器。&lt;/p&gt;
&lt;p&gt;开源地址：Authenticator-Extension&lt;br&gt;&lt;a class=&quot;link&quot;   href=&quot;https://github.com/Authenticator-E</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="github" scheme="https://qfsysw.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>.NET MinIO</title>
    <link href="https://qfsysw.github.io/2024/06/18/NET-MinIO/"/>
    <id>https://qfsysw.github.io/2024/06/18/NET-MinIO/</id>
    <published>2024-06-18T15:11:40.000Z</published>
    <updated>2024-06-18T15:13:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装MinIO"><a href="#安装MinIO" class="headerlink" title="安装MinIO"></a>安装MinIO</h1><p>docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run  --name minio  -p 9000:9000   -p 9090:9090  -d  -e <span class="string">&quot;MINIO_ROOT_USER=minio&quot;</span>  -e <span class="string">&quot;MINIO_ROOT_PASSWORD=minio123&quot;</span>  -v /usr/local/minio-data:/data  -v /usr/local/minio-config:/root/.minio  minio/minio server  data --console-address <span class="string">&quot;:9090&quot;</span> --address <span class="string">&quot;:9000&quot;</span></span><br></pre></td></tr></table></figure><h2 id="后台创建-Buckets"><a href="#后台创建-Buckets" class="headerlink" title="后台创建 Buckets"></a>后台创建 Buckets</h2><p>访问 localhost:9000  登陆后创建Buckets io617</p><h2 id="创建密钥"><a href="#创建密钥" class="headerlink" title="创建密钥"></a>创建密钥</h2><p>Access Keys  </p><h1 id="add-package"><a href="#add-package" class="headerlink" title="add package"></a>add package</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package Minio</span><br></pre></td></tr></table></figure><h1 id="配置json"><a href="#配置json" class="headerlink" title="配置json"></a>配置json</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="string">&quot;Minio&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;Endpoint&quot;</span>: <span class="string">&quot;192.168.80.xx:9000&quot;</span>,<span class="comment">//&quot;localhost:9000&quot;, //90/service-account-credentials</span></span><br><span class="line">  <span class="string">&quot;AccessKey&quot;</span>: <span class="string">&quot;EctmxSNB9FqfW6UWxxx&quot;</span>,</span><br><span class="line">  <span class="string">&quot;SecretKey&quot;</span>: <span class="string">&quot;frQhYoH1k7UphMxbwK2PiG2xKadzPjxxx&quot;</span>,</span><br><span class="line">  <span class="string">&quot;BucketName&quot;</span>: <span class="string">&quot;io617&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><h1 id="服务类MinioService"><a href="#服务类MinioService" class="headerlink" title="服务类MinioService"></a>服务类MinioService</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MinioService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> MinioClient _minioClient;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">string</span> _bucketName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MinioService</span>(<span class="params">IConfiguration configuration</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> endpoint = configuration[<span class="string">&quot;Minio:Endpoint&quot;</span>];</span><br><span class="line">        <span class="keyword">var</span> accessKey = configuration[<span class="string">&quot;Minio:AccessKey&quot;</span>];</span><br><span class="line">        <span class="keyword">var</span> secretKey = configuration[<span class="string">&quot;Minio:SecretKey&quot;</span>];</span><br><span class="line">        _bucketName = configuration[<span class="string">&quot;Minio:BucketName&quot;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//http://localhost:9090/api/v1/service-account-credentials</span></span><br><span class="line">        _minioClient = (MinioClient?)<span class="keyword">new</span> MinioClient()</span><br><span class="line">            .WithEndpoint(endpoint)</span><br><span class="line">            .WithCredentials(accessKey, secretKey)</span><br><span class="line">            .Build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">UploadFileAsync</span>(<span class="params"><span class="built_in">string</span> objectName, Stream data, <span class="built_in">long</span> size, <span class="built_in">string</span> contentType</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">await</span> _minioClient.PutObjectAsync(<span class="keyword">new</span> PutObjectArgs()</span><br><span class="line">            .WithBucket(_bucketName)</span><br><span class="line">            .WithObject(objectName)</span><br><span class="line">            .WithStreamData(data)</span><br><span class="line">            .WithObjectSize(size)</span><br><span class="line">            .WithContentType(contentType));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;Stream&gt; <span class="title">GetFileAsync</span>(<span class="params"><span class="built_in">string</span> objectName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> memoryStream = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">        <span class="keyword">await</span> _minioClient.GetObjectAsync(<span class="keyword">new</span> GetObjectArgs()</span><br><span class="line">            .WithBucket(_bucketName)</span><br><span class="line">            .WithObject(objectName)</span><br><span class="line">            .WithCallbackStream((stream) =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                stream.CopyTo(memoryStream);</span><br><span class="line">            &#125;));</span><br><span class="line">        memoryStream.Seek(<span class="number">0</span>, SeekOrigin.Begin);</span><br><span class="line">        <span class="keyword">return</span> memoryStream;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="注入服务"><a href="#注入服务" class="headerlink" title="注入服务"></a>注入服务</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">builder.Services.AddSingleton&lt;MinioService&gt;();</span><br></pre></td></tr></table></figure><h1 id="使用服务"><a href="#使用服务" class="headerlink" title="使用服务"></a>使用服务</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HomeController</span>(<span class="params">ILogger&lt;HomeController&gt; logger,MinioService minioService</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    _minioService = minioService;<span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="testcode"><a href="#testcode" class="headerlink" title="testcode"></a>testcode</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">Upload</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> View();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HttpPost</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">Upload</span>(<span class="params">IFormFile file</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (file != <span class="literal">null</span> &amp;&amp; file.Length &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">using</span> (<span class="keyword">var</span> stream = file.OpenReadStream())</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">await</span> _minioService.UploadFileAsync(file.FileName, stream, file.Length, file.ContentType);</span><br><span class="line">                &#125;</span><br><span class="line">                ViewBag.Message = <span class="string">&quot;File uploaded successfully!&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> View();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">Download</span>(<span class="params"><span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> stream = <span class="keyword">await</span> _minioService.GetFileAsync(fileName);</span><br><span class="line">            <span class="keyword">return</span> File(stream, <span class="string">&quot;application/octet-stream&quot;</span>, fileName);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//use https://localhost:7118/Home/download?filename=bx.png</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@using (Html.BeginForm(&quot;Upload&quot;, &quot;Home&quot;, FormMethod.Post, new &#123; enctype = &quot;multipart/form-data&quot; &#125;))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Upload<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    @ViewBag.Message</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>or console </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//TEST</span></span><br><span class="line"><span class="built_in">string</span> endpoint = <span class="string">&quot;xxx:9000&quot;</span>;<span class="comment">//&quot;localhost:9000&quot;; // </span></span><br><span class="line"><span class="built_in">string</span> accessKey = <span class="string">&quot;EctmxSNB9FqfW6UWrcAY&quot;</span>; <span class="comment">// Access Key</span></span><br><span class="line"><span class="built_in">string</span> secretKey = <span class="string">&quot;frQhYoH1k7UphMxbwK2PiG2xKadzPjTE3q9HgHHk&quot;</span>; <span class="comment">//Secret Key</span></span><br><span class="line"><span class="built_in">string</span> bucketName = <span class="string">&quot;io617&quot;</span>; <span class="comment">//Bucket</span></span><br><span class="line"><span class="built_in">string</span> filePath = <span class="string">&quot;D:\\UploadPath\\FileSystem\\files\\c.jpg&quot;</span>;<span class="comment"><span class="doctag">///</span>/.png&quot;; //</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> minioClient  = (MinioClient?)<span class="keyword">new</span> MinioClient()</span><br><span class="line">    .WithEndpoint(endpoint)</span><br><span class="line">    .WithCredentials(accessKey, secretKey)</span><br><span class="line">    </span><br><span class="line">    .Build();</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 上传文件</span></span><br><span class="line">    <span class="built_in">string</span> fileName = Path.GetFileName(filePath);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> fileStream = File.OpenRead(filePath))</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> startTime = DateTime.Now;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> filestream = fileStream;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">using</span> (filestream)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> file_write_size = filestream.Length;</span><br><span class="line">  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">var</span> putObjectArgs = <span class="keyword">new</span> PutObjectArgs()</span><br><span class="line">            .WithBucket(bucketName)</span><br><span class="line">            .WithObject(<span class="string">&quot;obj2222&quot;</span>)</span><br><span class="line">            .WithStreamData(filestream)</span><br><span class="line">            .WithObjectSize(filestream.Length)</span><br><span class="line">            .WithContentType(<span class="string">&quot;application/octet-stream&quot;</span>)</span><br><span class="line">            .WithHeaders(<span class="literal">null</span>);</span><br><span class="line">            minioClient.PutObjectAsync(putObjectArgs).ConfigureAwait(<span class="literal">false</span>);<span class="comment">//await</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  minioClient.PutObject(bucketName, fileName, fileStream, fileStream.Length);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;File <span class="subst">&#123;fileName&#125;</span> uploaded successfully&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception e)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;Error: <span class="subst">&#123;e.Message&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码创建bucket"><a href="#代码创建bucket" class="headerlink" title="代码创建bucket"></a>代码创建bucket</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// code create bucket</span></span><br><span class="line"><span class="keyword">var</span> beArgs = <span class="keyword">new</span> BucketExistsArgs()</span><br><span class="line">    .WithBucket(bucket);</span><br><span class="line"><span class="built_in">bool</span> found = <span class="keyword">await</span> _minioClient.BucketExistsAsync(beArgs).ConfigureAwait(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (!found)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> mbArgs = <span class="keyword">new</span> MakeBucketArgs()</span><br><span class="line">        .WithBucket(bucket);</span><br><span class="line">    <span class="keyword">await</span> _minioClient.MakeBucketAsync(mbArgs).ConfigureAwait(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><!--高性能分布式对象存储——MinIO实战操作//p// See https://aka.ms/new-console-template for more informationusing Minio;using Minio.Exceptions; Console.WriteLine("Hello, World!");var endpoint = "192.168.31.103:9001";var accessKey = "qIzCxOe3U0c7d0qyDCDY";var secretKey = "MWbsCbeKqQLgTKtOybIRaqNhQaF36AaqxnHA4uln";try{    var minio = new MinioClient()                        .WithEndpoint(endpoint)                        .WithCredentials(accessKey, secretKey)                        //.WithSSL()                        .Build();    await Run(minio);}catch (Exception ex){    Console.WriteLine(ex.Message);}Console.ReadLine(); async static Task Run(MinioClient minio){    var bucketName = "saas";    var objectName = "Program.cs";    var filePath = "xx\VS2022Projects\\miniodemo\\miniodemo\\Program.cs";    var contentType = "application/zip";     try    {        // Make a bucket on the server, if not already present.        var beArgs = new BucketExistsArgs()            .WithBucket(bucketName);        bool found = await minio.BucketExistsAsync(beArgs).ConfigureAwait(false);        if (!found)        {            var mbArgs = new MakeBucketArgs()                .WithBucket(bucketName);            await minio.MakeBucketAsync(mbArgs).ConfigureAwait(false);        }        // Upload a file to bucket.        var putObjectArgs = new PutObjectArgs()            .WithBucket(bucketName)            .WithObject(objectName)            .WithFileName(filePath);            //.WithContentType(contentType)        await minio.PutObjectAsync(putObjectArgs).ConfigureAwait(false);        Console.WriteLine("Successfully uploaded " + objectName);    }    catch (MinioException e)    {        Console.WriteLine("File Upload Error: {0}", e.Message);    }---><p>–<br><a class="link"   href="https://min.io/docs/minio/linux/index.html?ref=con" >https://min.io/docs/minio/linux/index.html?ref=con<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装MinIO&quot;&gt;&lt;a href=&quot;#安装MinIO&quot; class=&quot;headerlink&quot; title=&quot;安装MinIO&quot;&gt;&lt;/a&gt;安装MinIO&lt;/h1&gt;&lt;p&gt;docker&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".NET" scheme="https://qfsysw.github.io/tags/NET/"/>
    
  </entry>
  
  <entry>
    <title>HarmonyOS TeachApp</title>
    <link href="https://qfsysw.github.io/2024/06/15/HarmonyOS-TeachApp/"/>
    <id>https://qfsysw.github.io/2024/06/15/HarmonyOS-TeachApp/</id>
    <published>2024-06-15T15:58:57.000Z</published>
    <updated>2024-06-15T15:58:57.000Z</updated>
    
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Golang Web Base</title>
    <link href="https://qfsysw.github.io/2024/06/14/Golang-Base/"/>
    <id>https://qfsysw.github.io/2024/06/14/Golang-Base/</id>
    <published>2024-06-13T21:53:14.000Z</published>
    <updated>2024-06-18T15:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="setup"><a href="#setup" class="headerlink" title="setup"></a>setup</h1><p>windows环境安装<br>windows环境下，go安装包安装成功后，会自动将go添加到path目录下，所以不需要再向Path环境变量中添加go</p><p>GOROOT设置：Go安装路径</p><p> “我的电脑”&#x3D;》“属性”&#x3D;》“高级系统设置”&#x3D;》“环境变量”&#x3D;》“系统环境变量”，新增GOROOT环境变量</p><!--GOPATH设置：删除用户变量中的GOPATH设置，这个是go安装包默认添加的工作目录，一般不使用新建Go工作环境目录goworks，并在此目录下创建src,pkg,bin三个子目录--><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        fmt.Fprintf(w, <span class="string">&quot;Hello, m requested: %s\n&quot;</span>, r.URL.Path)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:24612&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Http-Server"><a href="#Http-Server" class="headerlink" title="Http Server"></a>Http Server</h2><p>static</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span> <span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        fmt.Fprintf(w, <span class="string">&quot;Welcome !&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    fs := http.FileServer(http.Dir(<span class="string">&quot;static/&quot;</span>))</span><br><span class="line">    http.Handle(<span class="string">&quot;/static/&quot;</span>, http.StripPrefix(<span class="string">&quot;/static/&quot;</span>, fs))</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:24612&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">``</span><span class="string">``</span></span><br><span class="line">##  gorilla/mux</span><br><span class="line">router</span><br><span class="line"><span class="string">``</span><span class="string">`bash</span></span><br><span class="line"><span class="string">go get github.com/gorilla/mux</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;github.com/gorilla/mux&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := mux.NewRouter()</span><br><span class="line"></span><br><span class="line">    r.HandleFunc(<span class="string">&quot;/books/&#123;title&#125;/page/&#123;page&#125;&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        vars := mux.Vars(r)</span><br><span class="line">        title := vars[<span class="string">&quot;title&quot;</span>]</span><br><span class="line">        page := vars[<span class="string">&quot;page&quot;</span>]</span><br><span class="line"></span><br><span class="line">        fmt.Fprintf(w, <span class="string">&quot; book: %s on page %s\n&quot;</span>, title, page)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:24612&quot;</span>, r)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//http://localhost:24612/books/mybook/page/1</span></span><br></pre></td></tr></table></figure><!---https://gowebexamples.com/routes-using-gorilla-mux/--><h2 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;database/sql&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line">    _ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    db, err := sql.Open(<span class="string">&quot;mysql&quot;</span>, <span class="string">&quot;root:xxx@(119.23.xxx.xxx:123)/TestDB?parseTime=true&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> err := db.Ping(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#123; // Create a new table</span></span><br><span class="line">    <span class="comment">//     query := `</span></span><br><span class="line">    <span class="comment">//         CREATE TABLE users (</span></span><br><span class="line">    <span class="comment">//             id INT AUTO_INCREMENT,</span></span><br><span class="line">    <span class="comment">//             username TEXT NOT NULL,</span></span><br><span class="line">    <span class="comment">//             password TEXT NOT NULL,</span></span><br><span class="line">    <span class="comment">//             created_at DATETIME,</span></span><br><span class="line">    <span class="comment">//             PRIMARY KEY (id)</span></span><br><span class="line">    <span class="comment">//         );`</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//     if _, err := db.Exec(query); err != nil &#123;</span></span><br><span class="line">    <span class="comment">//         log.Fatal(err)</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="comment">// Insert a new user</span></span><br><span class="line">        username := <span class="string">&quot;m24612&quot;</span></span><br><span class="line">        password := <span class="string">&quot;secret&quot;</span></span><br><span class="line">        createdAt := time.Now()</span><br><span class="line"></span><br><span class="line">        result, err := db.Exec(<span class="string">`INSERT INTO users (username, password, created_at) VALUES (?, ?, ?)`</span>, username, password, createdAt)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        id, err := result.LastInsertId()</span><br><span class="line">        fmt.Println(id)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#123; <span class="comment">// Query a single user</span></span><br><span class="line">        <span class="keyword">var</span> (</span><br><span class="line">            id        <span class="type">int</span></span><br><span class="line">            username  <span class="type">string</span></span><br><span class="line">            password  <span class="type">string</span></span><br><span class="line">            createdAt time.Time</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        query := <span class="string">&quot;SELECT id, username, password, created_at FROM users WHERE id = ?&quot;</span></span><br><span class="line">        <span class="keyword">if</span> err := db.QueryRow(query, <span class="number">1</span>).Scan(&amp;id, &amp;username, &amp;password, &amp;createdAt); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fmt.Println(id, username, password, createdAt)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#123; <span class="comment">// Query all users</span></span><br><span class="line">        <span class="keyword">type</span> user <span class="keyword">struct</span> &#123;</span><br><span class="line">            id        <span class="type">int</span></span><br><span class="line">            username  <span class="type">string</span></span><br><span class="line">            password  <span class="type">string</span></span><br><span class="line">            createdAt time.Time</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        rows, err := db.Query(<span class="string">`SELECT id, username, password, created_at FROM users`</span>)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">defer</span> rows.Close()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> users []user</span><br><span class="line">        <span class="keyword">for</span> rows.Next() &#123;</span><br><span class="line">            <span class="keyword">var</span> u user</span><br><span class="line"></span><br><span class="line">            err := rows.Scan(&amp;u.id, &amp;u.username, &amp;u.password, &amp;u.createdAt)</span><br><span class="line">            <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                log.Fatal(err)</span><br><span class="line">            &#125;</span><br><span class="line">            users = <span class="built_in">append</span>(users, u)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> err := rows.Err(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fmt.Printf(<span class="string">&quot;%#v&quot;</span>, users)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//     _, err := db.Exec(`DELETE FROM users WHERE id = ?`, 1)</span></span><br><span class="line">    <span class="comment">//     if err != nil &#123;</span></span><br><span class="line">    <span class="comment">//         log.Fatal(err)</span></span><br><span class="line">    <span class="comment">//     &#125;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img   src="https://img-blog.csdnimg.cn/direct/367112f73b2944229ddb680c01d4f2af.png"  alt="在这里插入图片描述"></p><h2 id="Template"><a href="#Template" class="headerlink" title="Template"></a>Template</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;html/template&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Todo <span class="keyword">struct</span> &#123;</span><br><span class="line">    Title <span class="type">string</span></span><br><span class="line">    Done  <span class="type">bool</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> TodoPageData <span class="keyword">struct</span> &#123;</span><br><span class="line">    PageTitle <span class="type">string</span></span><br><span class="line">    Todos     []Todo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    tmpl := template.Must(template.ParseFiles(<span class="string">&quot;layout.html&quot;</span>))</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        data := TodoPageData&#123;</span><br><span class="line">            PageTitle: <span class="string">&quot;My TODO list&quot;</span>,</span><br><span class="line">            Todos: []Todo&#123;</span><br><span class="line">                &#123;Title: <span class="string">&quot;Task 1&quot;</span>, Done: <span class="literal">false</span>&#125;,</span><br><span class="line">                &#123;Title: <span class="string">&quot;Task 2&quot;</span>, Done: <span class="literal">true</span>&#125;,</span><br><span class="line">                &#123;Title: <span class="string">&quot;Task 3&quot;</span>, Done: <span class="literal">true</span>&#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">        tmpl.Execute(w, data)</span><br><span class="line">    &#125;)</span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:80&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;.PageTitle&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;&#123;range .Todos&#125;&#125;</span><br><span class="line">        &#123;&#123;if .Done&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;done&quot;</span>&gt;</span>&#123;&#123;.Title&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;else&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123;.Title&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        &#123;&#123;end&#125;&#125;</span><br><span class="line">    &#123;&#123;end&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> (  </span><br><span class="line">    <span class="string">&quot;io/ioutil&quot;</span>  </span><br><span class="line">    <span class="string">&quot;log&quot;</span>  </span><br><span class="line">    <span class="string">&quot;net/http&quot;</span>  </span><br><span class="line">)  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;  </span><br><span class="line">    <span class="comment">// 设置 HTML 文件的路径  </span></span><br><span class="line">    htmlFilePath := <span class="string">&quot;static/test.html&quot;</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 创建一个 HTTP 处理程序来服务 HTML 文件  </span></span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;  </span><br><span class="line">        <span class="comment">// 读取 HTML 文件  </span></span><br><span class="line">        data, err := ioutil.ReadFile(htmlFilePath)  </span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;  </span><br><span class="line">            http.Error(w, <span class="string">&quot;Error reading HTML file&quot;</span>, http.StatusInternalServerError)  </span><br><span class="line">            <span class="keyword">return</span>  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// 将文件内容写入 HTTP 响应  </span></span><br><span class="line">        w.Header().Set(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/html; charset=utf-8&quot;</span>)  </span><br><span class="line">        w.Write(data)  </span><br><span class="line">    &#125;)  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 启动 HTTP 服务器并监听端口 8080  </span></span><br><span class="line">    log.Println(<span class="string">&quot;Listening on :8080...&quot;</span>)  </span><br><span class="line">    <span class="keyword">if</span> err := http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, <span class="literal">nil</span>); err != <span class="literal">nil</span> &#123;  </span><br><span class="line">        log.Fatal(<span class="string">&quot;ListenAndServe: &quot;</span>, err)  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="from"><a href="#from" class="headerlink" title="from"></a>from</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;html/template&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line"> <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> ContactDetails <span class="keyword">struct</span> &#123;</span><br><span class="line">    Email   <span class="type">string</span></span><br><span class="line">    Subject <span class="type">string</span></span><br><span class="line">    Message <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    tmpl := template.Must(template.ParseFiles(<span class="string">&quot;temp.html&quot;</span>))</span><br><span class="line"></span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> r.Method != http.MethodPost &#123;</span><br><span class="line">            tmpl.Execute(w, <span class="literal">nil</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        details := ContactDetails&#123;</span><br><span class="line">            Email:   r.FormValue(<span class="string">&quot;email&quot;</span>),</span><br><span class="line">            Subject: r.FormValue(<span class="string">&quot;sub&quot;</span>),</span><br><span class="line">            Message: r.FormValue(<span class="string">&quot;msg&quot;</span>),</span><br><span class="line">        &#125;</span><br><span class="line">fmt.Println(details)</span><br><span class="line">fmt.Println(details.Email)</span><br><span class="line">        <span class="comment">// do something with details</span></span><br><span class="line">        _ = details</span><br><span class="line"></span><br><span class="line">        tmpl.Execute(w, <span class="keyword">struct</span>&#123; Success <span class="type">bool</span> &#125;&#123;<span class="literal">true</span>&#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;if .Success&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span> message!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">&#123;&#123;else&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Contact<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email:<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Subject:<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sub&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Message:<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="HandleFunc"><a href="#HandleFunc" class="headerlink" title="HandleFunc"></a>HandleFunc</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// basic-middleware.go</span></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">logging</span><span class="params">(f http.HandlerFunc)</span></span> http.HandlerFunc &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        log.Println(r.URL.Path)</span><br><span class="line">        f(w, r)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    fmt.Fprintln(w, <span class="string">&quot;www&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bar</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    fmt.Fprintln(w, <span class="string">&quot;bbb&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/www&quot;</span>, logging(foo))</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/bbb&quot;</span>, logging(bar))</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:24614&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="json"><a href="#json" class="headerlink" title="json"></a>json</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">    Firstname <span class="type">string</span> <span class="string">`json:&quot;firstname&quot;`</span></span><br><span class="line">    Lastname  <span class="type">string</span> <span class="string">`json:&quot;lastname&quot;`</span></span><br><span class="line">    Age       <span class="type">int</span>    <span class="string">`json:&quot;age&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/decode&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> user User</span><br><span class="line">        json.NewDecoder(r.Body).Decode(&amp;user)</span><br><span class="line"></span><br><span class="line">        fmt.Fprintf(w, <span class="string">&quot;%s %s is %d years old!&quot;</span>, user.Firstname, user.Lastname, user.Age)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/encode&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        peter := User&#123;</span><br><span class="line">            Firstname: <span class="string">&quot;m&quot;</span>,</span><br><span class="line">            Lastname:  <span class="string">&quot;s&quot;</span>,</span><br><span class="line">            Age:       <span class="number">25</span>,</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        json.NewEncoder(w).Encode(peter)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:24614&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#123;&quot;firstname&quot;:&quot;e&quot;,&quot;lastname&quot;:&quot;m&quot;,&quot;age&quot;:28&#125;</span></span><br><span class="line"><span class="comment">//curl -s -XPOST -d&#x27;&#123;&quot;firstname&quot;:&quot;e&quot;,&quot;lastname&quot;:&quot;m&quot;,&quot;age&quot;:28&#125;&#x27; http://localhost:24614/decode</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//curl -s http://localhost:8080/encode</span></span><br></pre></td></tr></table></figure><h2 id="webapi-get"><a href="#webapi-get" class="headerlink" title="webapi get"></a>webapi get</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">import</span> (  </span><br><span class="line"><span class="string">&quot;encoding/json&quot;</span>  </span><br><span class="line"><span class="string">&quot;fmt&quot;</span>  </span><br><span class="line"><span class="string">&quot;io/ioutil&quot;</span>  </span><br><span class="line"><span class="string">&quot;log&quot;</span>  </span><br><span class="line"><span class="string">&quot;net/http&quot;</span>  </span><br><span class="line">)  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// 定义与JSON响应相对应的结构体  </span></span><br><span class="line"><span class="keyword">type</span> APIResponse <span class="keyword">struct</span> &#123;  </span><br><span class="line">IsOk    <span class="type">bool</span>    <span class="string">`json:&quot;isOk&quot;`</span>  </span><br><span class="line">Code    <span class="type">int</span>     <span class="string">`json:&quot;code&quot;`</span>  </span><br><span class="line">Msg     <span class="type">string</span>  <span class="string">`json:&quot;msg&quot;`</span>  </span><br><span class="line">RsData  <span class="keyword">interface</span>&#123;&#125; <span class="string">`json:&quot;rsData&quot;`</span> <span class="comment">// 如果rsData可能是不同的类型，可以使用interface&#123;&#125;  </span></span><br><span class="line"></span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;  </span><br><span class="line"><span class="comment">// 设置API的URL  </span></span><br><span class="line">url :=<span class="string">&quot;https://localhost:32768/api/v10/xxx/rsRsModel2?t1=1&quot;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// 发送GET请求  </span></span><br><span class="line">resp, err := http.Get(url)  </span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;  </span><br><span class="line">log.Fatal(err)  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close() <span class="comment">// 确保关闭响应体  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment">// 读取响应体  </span></span><br><span class="line">body, err := ioutil.ReadAll(resp.Body)  </span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;  </span><br><span class="line">log.Fatal(err)  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// 解析JSON响应  </span></span><br><span class="line"><span class="keyword">var</span> result APIResponse  </span><br><span class="line">err = json.Unmarshal(body, &amp;result)  </span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;  </span><br><span class="line">log.Fatal(err)  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">// 打印结果  </span></span><br><span class="line">fmt.Printf(<span class="string">&quot;IsOk: %v\n&quot;</span>, result.IsOk)  </span><br><span class="line">fmt.Printf(<span class="string">&quot;Code: %d\n&quot;</span>, result.Code)  </span><br><span class="line">fmt.Printf(<span class="string">&quot;Msg: %s\n&quot;</span>, result.Msg)  </span><br><span class="line">fmt.Printf(<span class="string">&quot;RsData: %v\n&quot;</span>, result.RsData) </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> result.IsOk &amp;&amp; result.Code == <span class="number">1</span> &#123;  </span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;  </span><br><span class="line"></span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="websocket"><a href="#websocket" class="headerlink" title="websocket"></a>websocket</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;github.com/gorilla/websocket&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> upgrader = websocket.Upgrader&#123;</span><br><span class="line">    ReadBufferSize:  <span class="number">1024</span>,</span><br><span class="line">    WriteBufferSize: <span class="number">1024</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/echo&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        conn, _ := upgrader.Upgrade(w, r, <span class="literal">nil</span>) <span class="comment">// error ignored for sake of simplicity</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> &#123;</span><br><span class="line">            <span class="comment">// Read message from browser</span></span><br><span class="line">            msgType, msg, err := conn.ReadMessage()</span><br><span class="line">            <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Print the message to the console</span></span><br><span class="line">            fmt.Printf(<span class="string">&quot;%s sent: %s\n&quot;</span>, conn.RemoteAddr(), <span class="type">string</span>(msg))</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Write message back to browser</span></span><br><span class="line">            <span class="keyword">if</span> err = conn.WriteMessage(msgType, msg); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.HandleFunc(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        http.ServeFile(w, r, <span class="string">&quot;ws.html&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    http.ListenAndServe(<span class="string">&quot;:24614&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;send()&quot;</span>&gt;</span>Send<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span> <span class="attr">id</span>=<span class="string">&quot;output&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> input = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;input&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> output = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;output&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> socket = <span class="keyword">new</span> <span class="title class_">WebSocket</span>(<span class="string">&quot;ws://localhost:24614/echo&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    socket.<span class="property">onopen</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        output.<span class="property">innerHTML</span> += <span class="string">&quot;Status: Connected\n&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    socket.<span class="property">onmessage</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        output.<span class="property">innerHTML</span> += <span class="string">&quot;Server: &quot;</span> + e.<span class="property">data</span> + <span class="string">&quot;\n&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">send</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        socket.<span class="title function_">send</span>(input.<span class="property">value</span>);</span></span><br><span class="line"><span class="language-javascript">        input.<span class="property">value</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="hash"><a href="#hash" class="headerlink" title="hash"></a>hash</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;golang.org/x/crypto/bcrypt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HashPassword</span><span class="params">(password <span class="type">string</span>)</span></span> (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">    bytes, err := bcrypt.GenerateFromPassword([]<span class="type">byte</span>(password), <span class="number">14</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="type">string</span>(bytes), err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CheckPasswordHash</span><span class="params">(password, hash <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">    err := bcrypt.CompareHashAndPassword([]<span class="type">byte</span>(hash), []<span class="type">byte</span>(password))</span><br><span class="line">    <span class="keyword">return</span> err == <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    password := <span class="string">&quot;musu&quot;</span></span><br><span class="line">    hash, _ := HashPassword(password) <span class="comment">// ignore error for the sake of simplicity</span></span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;Password:&quot;</span>, password)</span><br><span class="line">    fmt.Println(<span class="string">&quot;Hash:    &quot;</span>, hash)</span><br><span class="line"></span><br><span class="line">    match := CheckPasswordHash(password, hash)</span><br><span class="line">    fmt.Println(<span class="string">&quot;Match:   &quot;</span>, match)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="aes"><a href="#aes" class="headerlink" title="aes"></a>aes</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="comment">//&quot;bytes&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/aes&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/cipher&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/base64&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Encrypt</span><span class="params">(plainText, key <span class="type">string</span>)</span></span> (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">block, err := aes.NewCipher([]<span class="type">byte</span>(key))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">iv := []<span class="type">byte</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cfb := cipher.NewCFBEncrypter(block, iv)</span><br><span class="line"></span><br><span class="line">ciphertext := <span class="built_in">make</span>([]<span class="type">byte</span>, <span class="built_in">len</span>(plainText))</span><br><span class="line">cfb.XORKeyStream(ciphertext, []<span class="type">byte</span>(plainText))</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> base64.StdEncoding.EncodeToString(ciphertext), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Decrypt</span><span class="params">(cipherText, key <span class="type">string</span>)</span></span> (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">block, err := aes.NewCipher([]<span class="type">byte</span>(key))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">decryptedBytes, err := base64.StdEncoding.DecodeString(cipherText)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;&quot;</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">iv := []<span class="type">byte</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line">cfb := cipher.NewCFBDecrypter(block, iv)</span><br><span class="line"></span><br><span class="line">plaintext := <span class="built_in">make</span>([]<span class="type">byte</span>, <span class="built_in">len</span>(decryptedBytes))</span><br><span class="line">cfb.XORKeyStream(plaintext, decryptedBytes)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="type">string</span>(plaintext), <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">plainText := <span class="string">&quot;mus11test111u&quot;</span></span><br><span class="line">key := <span class="string">&quot;thisisaverysecretkeymusu&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密</span></span><br><span class="line">encrypted, err := Encrypt(plainText, key)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Encryption failed:&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;Encrypted:&quot;</span>, encrypted)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//encrypted =  &quot;2gAFF&quot;</span></span><br><span class="line"><span class="comment">// 解密</span></span><br><span class="line">decrypted, err := Decrypt(encrypted, key)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;Decryption failed:&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;Decrypted:&quot;</span>, decrypted)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="gin"><a href="#gin" class="headerlink" title="gin"></a>gin</h1><p>有点像express.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/gin-gonic/gin</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="type">string</span> <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">Age  <span class="type">int</span>    <span class="string">`json:&quot;age&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//middleware</span></span><br><span class="line">    r.Use(<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;middleware called&quot;</span>)</span><br><span class="line">c.Next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.String(<span class="number">200</span>, <span class="string">&quot;hello ~ &quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">    <span class="comment">//router</span></span><br><span class="line">    r.GET(<span class="string">&quot;/user/:name&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        name := c.Param(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">        c.String(<span class="number">200</span>, <span class="string">&quot;hi, %s!&quot;</span>, name)</span><br><span class="line">    &#125;)   </span><br><span class="line"></span><br><span class="line">    <span class="comment">//static</span></span><br><span class="line">    r.Static(<span class="string">&quot;/static&quot;</span>, <span class="string">&quot;./static&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/////http://localhost:24614/user/m </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//get</span></span><br><span class="line">    r.GET(<span class="string">&quot;/users&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        user := User&#123;Name: <span class="string">&quot;mu&quot;</span>, Age: <span class="number">15</span>&#125;</span><br><span class="line">        c.JSON(http.StatusOK, user)<span class="comment">//users</span></span><br><span class="line">    &#125;) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//    err</span></span><br><span class="line">    r.NoRoute(<span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        c.JSON(http.StatusNotFound, gin.H&#123;<span class="string">&quot;error&quot;</span>: <span class="string">&quot;Page not found&quot;</span>&#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">r.Run(<span class="string">&quot;:24614&quot;</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><p>main.go</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用官方的 Go 运行时作为基础镜像</span></span><br><span class="line">FROM golang:1.18-alpine as builder</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将源代码复制到工作目录</span></span><br><span class="line">COPY . .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 GOPATH 和 GOBIN（可选）</span></span><br><span class="line">ENV GOPATH=/go</span><br><span class="line">ENV PATH=<span class="variable">$GOPATH</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建 Go 应用</span></span><br><span class="line">RUN go build -o app .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 Alpine Linux 作为最终的运行时环境</span></span><br><span class="line">FROM alpine:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录</span></span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将编译好的二进制文件从 builder 阶段复制到最终镜像</span></span><br><span class="line">COPY --from=builder /app/app /app/app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给二进制文件添加执行权限</span></span><br><span class="line">RUN <span class="built_in">chmod</span> +x /app/app</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露应用需要监听的端口</span></span><br><span class="line">EXPOSE 8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置容器启动时运行的命令</span></span><br><span class="line">CMD [<span class="string">&quot;/app/app&quot;</span>]</span><br></pre></td></tr></table></figure><p>build</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build -t your-image-name .</span><br><span class="line">docker run -p 8080:8080 your-image-name</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/</span><br></pre></td></tr></table></figure><p>push</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker login</span><br><span class="line">docker push your-image-name</span><br></pre></td></tr></table></figure><!--go mod init xxx# 协程Go协程（goroutine）是Go语言中用于实现并发编程的一种机制。它比线程更轻量级，可以在一个OS线程中运行多个goroutine。协程的调度由Go运行时管理，这使得在编写高并发程序时更加灵活和高效。作用：**提高程序的并发能力**：通过使用goroutine，可以轻松地实现多任务同时执行，而不需要关心底层线程的创建和调度细节。**降低资源消耗**：相对于系统线程，goroutine的创建和切换成本更低，可以支持成千上万甚至更多的并发任务。**简化异步编程**：Go的channel机制与goroutine结合，可以非常优雅地处理异步通信和数据交换问题。package mainimport (    "encoding/json"    "fmt"    "io/ioutil"    "net/http"    "os")// Define a struct to match the JSON structuretype WeatherResponse struct {    CityInfo struct {        City         string `json:"city"`        CityId       string `json:"cityId"`        Parent       string `json:"parent"`        UpdateTime   string `json:"updateTime"`    } `json:"cityInfo"`    Data struct {        Shidu       string `json:"shidu"`        Pm25        float64 `json:"pm25"`        Pm10        float64 `json:"pm10"`        Quality     string `json:"quality"`        Wendu       string `json:"wendu"`        Ganmao      string `json:"ganmao"`        Yesterday   struct {            Date     string `json:"date"`            High     string `json:"high"`            Low      string `json:"low"`            Fx       string `json:"fx"`            Fl       string `json:"fl"`            Type     string `json:"type"`            Notice   string `json:"notice"`        } `json:"yesterday"`        Forecast []struct {            Date      string `json:"date"`            High      string `json:"high"`            Low       string `json:"low"`            Fx        string `json:"fx"`            Fl        string `json:"fl"`            Type      string `json:"type"`            Notice    string `json:"notice"`        } `json:"forecast"`    } `json:"data"`    Message string `json:"message"`    Status  int    `json:"status"`    Date    string `json:"date"`    Time    string `json:"time"`}func main() {    // Define the URL    url := "http://t.weather.sojson.com/api/weather/city/101280501"    // Make the HTTP GET request    resp, err := http.Get(url)    if err != nil {        fmt.Printf("Failed to make request: %v\n", err)        os.Exit(1)    }    defer resp.Body.Close()    // Read the response body    body, err := ioutil.ReadAll(resp.Body)    if err != nil {        fmt.Printf("Failed to read response body: %v\n", err)        os.Exit(1)    }    // Parse the JSON response    var weather WeatherResponse    err = json.Unmarshal(body, &weather)    if err != nil {        fmt.Printf("Failed to parse JSON: %v\n", err)        os.Exit(1)    }    // Print the parsed data    fmt.Printf("City: %s\n", weather.CityInfo.City)    fmt.Printf("Update Time: %s\n", weather.CityInfo.UpdateTime)    fmt.Printf("Current Temperature: %s°C\n", weather.Data.Wendu)    fmt.Printf("PM2.5: %.2f\n", weather.Data.Pm25)    fmt.Printf("Weather Forecast:\n")    for _, forecast := range weather.Data.Forecast {        fmt.Printf("  Date: %s, High: %s, Low: %s, Type: %s\n",            forecast.Date, forecast.High, forecast.Low, forecast.Type)    }}https://gowebexamples.com/templates/https://gobyexample.com/https://go.dev/learn/https://www.cainiaoplus.com/golang/go-keywords.htmlhwhttps://developer.huawei.com/consumer/cn/hmos/samples/?catalogVersion=V2https://github.com/practical-tutorials/project-based-learning-->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;setup&quot;&gt;&lt;a href=&quot;#setup&quot; class=&quot;headerlink&quot; title=&quot;setup&quot;&gt;&lt;/a&gt;setup&lt;/h1&gt;&lt;p&gt;windows环境安装&lt;br&gt;windows环境下，go安装包安装成功后，会自动将go添加到path目录下，所以不需</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="go" scheme="https://qfsysw.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>.NET JSON2MySQL</title>
    <link href="https://qfsysw.github.io/2024/06/12/NET-JSON2MySQL/"/>
    <id>https://qfsysw.github.io/2024/06/12/NET-JSON2MySQL/</id>
    <published>2024-06-12T14:35:33.000Z</published>
    <updated>2024-06-12T14:44:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>这是一段json</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101010100&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;北京&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;100000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;010&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:06&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;安徽&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;福建&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;甘肃&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;广东&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">6</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;广西&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;贵州&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">8</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;海南&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:03:37&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">9</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;河北&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:06&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;河南&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:07&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">11</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;黑龙江&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">12</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;湖北&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">13</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;湖南&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">14</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;吉林&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:07&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">15</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;江苏&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">16</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;江西&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">17</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;辽宁&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;内蒙古&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">19</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;宁夏&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;青海&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">21</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;山东&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">22</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;山西&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">23</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;陕西&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">24</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101020100&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;上海&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;200000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;021&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:08&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">25</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;四川&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">26</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101030100&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;天津&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;300000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;022&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:08&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">27</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;西藏&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">28</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;新疆&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">29</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;云南&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;浙江&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">31</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101040100&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;重庆&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;023&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:08&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">32</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101320101&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;香港&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;999077&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;+852&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:03:38&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">33</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101330101&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;澳门&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;999078&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;+853&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:03:39&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">34</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;台湾&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="literal">null</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">35</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220601&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;安庆&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;246000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0556&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:10&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">36</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220201&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;蚌埠&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;233000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0552&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:10&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">37</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">3400</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220105&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;巢湖市&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;238000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0551&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:03:40&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">38</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221701&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;池州&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;247100&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0566&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:10&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">39</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221101&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;滁州&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;239000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0550&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:10&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">40</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220801&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;阜阳&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;236000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0558&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:10&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">41</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221201&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;淮北&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;235000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0561&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:11&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">42</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220401&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;淮南&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;232000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0554&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:11&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">43</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221001&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;黄山市&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;245000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0559&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 21:23:56&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">44</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221501&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;六安&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;237000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0564&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:11&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">45</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220501&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;马鞍山&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;243000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0555&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:11&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">46</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220701&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;宿州&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;234000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0557&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:11&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">47</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221301&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;铜陵&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;244000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0562&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:12&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">48</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220301&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;芜湖市&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;241000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0553&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 21:23:57&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">49</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101221401&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;宣城&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;242000&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0563&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:12&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;id&quot;</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="string">&quot;pid&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;city_code&quot;</span>: <span class="string">&quot;101220901&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city_name&quot;</span>: <span class="string">&quot;亳州&quot;</span>,</span><br><span class="line">    <span class="string">&quot;post_code&quot;</span>: <span class="string">&quot;236800&quot;</span>,</span><br><span class="line">    <span class="string">&quot;area_code&quot;</span>: <span class="string">&quot;0558&quot;</span>,</span><br><span class="line">    <span class="string">&quot;ctime&quot;</span>: <span class="string">&quot;2024-06-11 17:30:12&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">  ]</span><br></pre></td></tr></table></figure><p>SQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> CityInfo (</span><br><span class="line">CtId <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">Pid <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">CityCode <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">CityName <span class="type">VARCHAR</span>(<span class="number">110</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">PostCode <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">AreaCode <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">Ctime DATETIME <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">CtimeInt <span class="type">bigint</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">LangType <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (CtId)</span><br><span class="line">);  </span><br></pre></td></tr></table></figure><p>.NET类</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CityInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> CtId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Pid &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> CityCode &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> CityName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> PostCode &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> AreaCode &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> DateTime? Ctime &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">long</span> CtimeInt &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> LangType &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后端处理<br>json file &gt;&gt;&gt;  class &gt;&gt;&gt; sql </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpPost</span>]</span><br><span class="line">  <span class="function"><span class="keyword">public</span> ActionResult <span class="title">ImportCities</span>(<span class="params">IFormFile file</span>)</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span> (file == <span class="literal">null</span> || file.Length == <span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">return</span> Json(<span class="keyword">new</span> &#123; success = <span class="literal">false</span>, message = <span class="string">&quot;No file uploaded.&quot;</span> &#125;);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">using</span> (<span class="keyword">var</span> streamReader = <span class="keyword">new</span> StreamReader(file.InputStream))</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">var</span> jsonData = streamReader.ReadToEnd();</span><br><span class="line">              <span class="keyword">var</span> cityList = JsonConvert.DeserializeObject&lt;List&lt;CityInfo&gt;&gt;(jsonData);</span><br><span class="line"></span><br><span class="line">              <span class="keyword">using</span> (MySqlConnection connection = <span class="keyword">new</span> MySqlConnection(ConnectionString))</span><br><span class="line">              &#123;</span><br><span class="line">                  connection.Open();</span><br><span class="line"></span><br><span class="line">                  <span class="keyword">foreach</span> (<span class="keyword">var</span> city <span class="keyword">in</span> cityList)</span><br><span class="line">                  &#123;</span><br><span class="line">                      <span class="built_in">string</span> query = <span class="string">&quot;INSERT INTO IMCityInfo (Pid, CityCode, CityName, PostCode, AreaCode, Ctime, CtimeInt, LangType) VALUES (@Pid, @CityCode, @CityName, @PostCode, @AreaCode, @Ctime, @CtimeInt, @LangType)&quot;</span>;</span><br><span class="line"></span><br><span class="line">                      <span class="keyword">using</span> (MySqlCommand command = <span class="keyword">new</span> MySqlCommand(query, connection))</span><br><span class="line">                      &#123;</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@Pid&quot;</span>, city.Pid);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@CityCode&quot;</span>, city.CityCode);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@CityName&quot;</span>, city.CityName);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@PostCode&quot;</span>, city.PostCode);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@AreaCode&quot;</span>, city.AreaCode);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@Ctime&quot;</span>, city.Ctime);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@CtimeInt&quot;</span>, city.CtimeInt);</span><br><span class="line">                          command.Parameters.AddWithValue(<span class="string">&quot;@LangType&quot;</span>, city.LangType);</span><br><span class="line"></span><br><span class="line">                          command.ExecuteNonQuery();</span><br><span class="line">                      &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">return</span> Json(<span class="keyword">new</span> &#123; success = <span class="literal">true</span>, message = <span class="string">&quot;Data imported successfully.&quot;</span> &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">return</span> Json(<span class="keyword">new</span> &#123; success = <span class="literal">false</span>, message = ex.Message &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>前端上传JSON</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;uploadForm&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;jsonFile&quot;</span> <span class="attr">accept</span>=<span class="string">&quot;.json&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>Upload JSON File<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;response&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;#uploadForm&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;submit&#x27;</span>, <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">        event.<span class="title function_">preventDefault</span>(); <span class="comment">// Prevent the default form submission</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">        <span class="keyword">var</span> fileInput = $(<span class="string">&#x27;#jsonFile&#x27;</span>)[<span class="number">0</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (fileInput.<span class="property">files</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> file = fileInput.<span class="property">files</span>[<span class="number">0</span>];</span><br><span class="line">            formData.<span class="title function_">append</span>(<span class="string">&#x27;file&#x27;</span>, file);</span><br><span class="line"></span><br><span class="line">            $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">                <span class="attr">url</span>: <span class="string">&#x27;/ImportCities&#x27;</span>, <span class="comment">// Adjust this URL to match your API endpoint</span></span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">                <span class="attr">data</span>: formData,</span><br><span class="line">                <span class="attr">processData</span>: <span class="literal">false</span>, <span class="comment">// Important!</span></span><br><span class="line">                <span class="attr">contentType</span>: <span class="literal">false</span>, <span class="comment">// Important!</span></span><br><span class="line">                <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">                    $(<span class="string">&#x27;#response&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;Success: &#x27;</span> + response.<span class="property">message</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">error</span>) &#123;</span><br><span class="line">                    $(<span class="string">&#x27;#response&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;Error: &#x27;</span> + error.<span class="property">responseJSON</span>.<span class="property">error</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $(<span class="string">&#x27;#response&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;Please select a file.&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><!-- ![在这里插入图片描述](https://img-blog.csdnimg.cn/direct/a3f93c329ed04ad4b656d022b7521e22.png) --><!--TRUNCATE TABLE IMCityInfo;     clear table and pkswagger=>download js-->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是一段json&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".NET" scheme="https://qfsysw.github.io/tags/NET/"/>
    
    <category term="MySQL" scheme="https://qfsysw.github.io/tags/MySQL/"/>
    
    <category term="JSON" scheme="https://qfsysw.github.io/tags/JSON/"/>
    
  </entry>
  
  <entry>
    <title>Azure AI Document Intelligence</title>
    <link href="https://qfsysw.github.io/2024/06/07/Azure-AI-Document-Intelligence/"/>
    <id>https://qfsysw.github.io/2024/06/07/Azure-AI-Document-Intelligence/</id>
    <published>2024-06-07T15:06:10.000Z</published>
    <updated>2024-07-23T16:28:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建智能文档处理解决方案"><a href="#创建智能文档处理解决方案" class="headerlink" title="创建智能文档处理解决方案"></a>创建智能文档处理解决方案</h1><p>在第二级中，这3个模块，每一个中都有不同的任务操作，这些操作包括使用 Azure 进行实际创建服务操作或者使用代码调用 Azure的服务，这些代码可以使用python或者C#，这些进行选择。所有的模块内的考试是通过一个邮件的方式进行告知。</p><p><a class="link"   href="https://learn.microsoft.com/en-us/credentials/applied-skills/create-intelligent-document-solution-azure-ai/#applied-skill-take-the-assessment" >https://learn.microsoft.com/en-us/credentials/applied-skills/create-intelligent-document-solution-azure-ai/#applied-skill-take-the-assessment<i class="fas fa-external-link-alt"></i></a></p><p>start</p><p>登陆实验环境<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607001.jpg"  ></p><p>加载成功后会出现虚拟机器登陆界面，找到右侧的 Step1 中的用户名密码。登陆<br>获取实验账号并登陆 Azure<br>进入到机器后，点击桌面的 Email 图片，打开我们的实验目标。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607002.jpg"  ></p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607003.jpg"  >打开桌面的 email 后，会出现如下的界面。这里主要关注两点：<p>一个是左侧蓝色的部分：Inbox，这里包括环境信息以及实验目标考题。<br>另一个是浏览器的页签中的第二个，也就是登陆 Azure 的环境网址</p><p>点击上图的 Azure 标签页，进入登陆页面，用email提供的账号密码登陆</p><h1 id="试验一：-Create-a-prototype"><a href="#试验一：-Create-a-prototype" class="headerlink" title="试验一： Create a prototype"></a>试验一： Create a prototype</h1><p>点击邮件中的 Create a prototype 菜单会出现具体的内容要求。</p><p>在第一个实验中主要是使用微软的只能存储服务，并且创建的时候要符合要求，这个服务要满足的要求是要保存所给的文件成Json文件，之后在保存到 Azure 的存储服务中。</p><p>实验流程操作<br>首先到 Azure 中，搜索所给出的资源组，选择 RG1开头的资源组<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607004.jpg"  ></p><p>进入到资源组后，点击创建按钮。<br>在搜索框中输入document intelligence 点击选择。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607005.jpg"  ></p><p>点击 文档智能服务</p><p>进入到服务后，点击蓝色的创建按钮。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607006.jpg"  ></p><p>在这里直接选择默认的订阅以及资源组，Region 目前建议选择 Japan East（如果后面的步骤，在运行分析文档时，遇到权限不足问题，请在此步骤选择其他 Region ）</p><p>在这里名字填入：from-document-xxx，如（from-document-01）价格层要选择免费层，也就是下图中的 Free F0，之后点击预览创建按钮。</p><p>预览没有问题后，直接点击创建按钮。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/220240607007.jpg"  ><br>创建完毕后，在页面中点击 Go to resource 按钮</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/220240607008.jpg"  ><p>之后点击 Go to Document Intelligence Studio 按钮<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/220240607009.jpg"  ></p><p>进入到服务页面后，下滑页面，点击 Invoices 的 Try it out。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607010.jpg"  ><p>（如果弹出选择账户的弹框，点击一个就好）</p><p>在服务的填写表格页面，默认的订阅和资源组选择下拉按钮</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607011.jpg"  >预览后点击完成按钮。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607012.jpg"  ><p>在上述步骤完成后，点击左侧的上传区域，点击选择文件按钮，在新弹出的选择文件筐，找到 C:\Files的文件，之后选择发票pdf</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607013.jpg"  ><p>选择玩文件后，点击 Analyze options 选项，之后选择 all documents，之后点击保存按钮。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607014.jpg"  ><p>配置完分析选项后，点击直接点击运行分析按钮。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607015.jpg"  ><p>运行完后，找到右侧的 Result按钮，之后下载下来我们所需要的 JSON 文件。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607016.jpg"  ><p>刚上传的三个文件，分析完三个都下载下来。</p><p>之后我们重复操作，将所有的图片文件上传。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607018.jpg"  ></p><p>同样的点击分析按钮。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607019.jpg"  ><br>下载下来结果JSON文件。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607020.jpg"  ></p><p>最后我们可以看到下载的结果文件如下图这几个在 Downloads 文件夹中（在在这里我们需要复制这些文件<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607021.jpg"  ></p><p>复制上述的文件后粘贴在下图路径的文件夹中。 c:&#x2F;files<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607022.jpg"  ></p><p>接着我们返回 RG1 的这个资源组（进入步骤在本篇文档开头的位置……），选择 prototype 开头的资源，点击进入<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607023.jpg"  ></p><p>之后我们展开 Data storage 进入到存储服务中选择 Containers</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607024.jpg"  >之后我们创建一个新的 Container，这里直接使用名字：con-invoices。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607025.jpg"  >同样操作再次创建另一个 Containers，名字叫做：con-receipts。可以看到我这里创建了两个 Containers，一个存pdf的一个存图片的<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607026.jpg"  >分别点击两个名字，之后我们开始上传 把所有的 Invoice 相关文件上传<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607027.jpg"  >另外一个将所有的 receipt 文件上传。到这里我们的第一个任务就完成了。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607028.jpg"  ><h1 id="试验二：Train-a-custom-model"><a href="#试验二：Train-a-custom-model" class="headerlink" title="试验二：Train a custom model"></a>试验二：Train a custom model</h1><p>在实验二中，我们需要创建一个智能文档分析服务，并且进行相关的训练。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607029.jpg"  ><br>首先我们进入 <a class="link"   href="https://documentintelligence.ai.azure.com/studio" >https://documentintelligence.ai.azure.com/studio<i class="fas fa-external-link-alt"></i></a> 页面选择服务：Custom extraction model。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607030.jpg"  ></p><p>下拉页面，之后点击项目选项中的 创建一个项目按钮，在新页面，输入项目名点击继续按钮。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607031.jpg"  >在详细页面，订阅以及资源组选项选择默认，智能文档名字要选择我们的题目要求form开头的， API选择：2022-08-31<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607032.jpg"  >这里注意除了订阅和资源组选项默认外，我们的存储账号要选择quality开头的这个，这里不要选错。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607033.jpg"  >上述完成后点击预览创建按钮。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607034.jpg"  >等待一会后，在弹出的页面直接点击 Run now 按钮<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607035.jpg"  >如果出现 failed to fetch 刷新一下当前的页面在新页面中，选择一个jpg文件后，点击右侧的添加字段选项<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607036.jpg"  >这里根据我们的题目，需要添加如下的几个字段Email里（第一列是字段，第二列是对应的类型）可以看到我在右侧已经根据题目创建了这5个字段<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607037.jpg"  >这里是介绍如何进行选择字段的数据类型*，比如Number字段，要选择 integer 类型。依次把五个标签名都设置好数据类型。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607038.jpg"  >之后我们点击图片的 Number数字，也就是下图的绿色部分的数字，之后点鼠标左键，选择我们刚才创建的 Number 字段<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607039.jpg"  >同样的我们把所有的字段都在图片中选择打上标签 重复操作所有的图片文件，将字段标记清楚，之后点击训练按钮.这里选择训练模型，直接写上 QA-Template，如下图所示。Build Mode 选择 Template<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607040.jpg"  >点击 Go to Models<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607041.jpg"  ><p>可以看到我们这里已经创建了训练，点击QA-Template</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607042.jpg"  >我们进行测试，直接点击 Test 按钮。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607043.jpg"  >选择电脑中的 C盘下 QA_Test 文件夹内的文件。<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607044.jpg"  >点击运行分析按钮<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607045.jpg"  ><p>在这里我们需要注意，所有的都分析完后，我们要下载 report0008.jpg的结果，讲这个 JSON文件下载下来。<br><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607046.jpg"  ></p><p>结果保存下来。存到QA_Test<br>打开VSCode &gt;&gt; 点击 Open Folder 按钮。<br>接下来打开 C 盘下的 App1 文件夹</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607047.jpg"  >之后打开Python 文件夹下 App1.py 文件。更改的代码：（！！！格式缩进要！！！注！！！意！！！）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#9</span></span><br><span class="line">task = form_recognizer_client.begin_recognize_invoices(form_data)</span><br><span class="line"><span class="comment">#21</span></span><br><span class="line"><span class="keyword">if</span> field.confidence &gt;= <span class="number">0.70</span>:</span><br><span class="line">    invoice_total += field.value</span><br><span class="line"><span class="comment">#37</span></span><br><span class="line">folder_path = <span class="string">r&quot;C:\App1\Invoices&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607048.jpg"  >之后在 python 目录下的.env文件内，添加自己的创建服务的 endpoint 和 key 值。ctrl S 保存文件ps：Key 和 endpoint 进入https://portal.azure.com/ ，选择刚刚创建的资源<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607049.jpg"  >页面切回 App1.py 这个文件 直接点击右上角三角运行<img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607050.jpg"  ><p>运行看结果，已经分析出来了</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607051.jpg"  ><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607052.jpg"  ><p>最后实验完成，点击提交实验等待结果即可。</p><img    onerror="notfound(this);"    src="https://cdn.jsdelivr.net/gh/qfsysw/resources/v2/20240607053.jpg"  ><p>End</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建智能文档处理解决方案&quot;&gt;&lt;a href=&quot;#创建智能文档处理解决方案&quot; class=&quot;headerlink&quot; title=&quot;创建智能文档处理解决方案&quot;&gt;&lt;/a&gt;创建智能文档处理解决方案&lt;/h1&gt;&lt;p&gt;在第二级中，这3个模块，每一个中都有不同的任务操作，这些操作</summary>
      
    
    
    
    <category term="技术" scheme="https://qfsysw.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Python" scheme="https://qfsysw.github.io/tags/Python/"/>
    
    <category term=".NET" scheme="https://qfsysw.github.io/tags/NET/"/>
    
    <category term="AzureAI" scheme="https://qfsysw.github.io/tags/AzureAI/"/>
    
  </entry>
  
</feed>
