<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M Study Log</title>
  
  
  <link href="https://banjinmei.github.io/atom.xml" rel="self"/>
  
  <link href="https://banjinmei.github.io/"/>
  <updated>2024-11-13T16:59:25.442Z</updated>
  <id>https://banjinmei.github.io/</id>
  
  <author>
    <name>m</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>.NET MemoryPack</title>
    <link href="https://banjinmei.github.io/2024/11/14/NET-MemoryPack/"/>
    <id>https://banjinmei.github.io/2024/11/14/NET-MemoryPack/</id>
    <published>2024-11-13T16:57:37.000Z</published>
    <updated>2024-11-13T16:59:25.442Z</updated>
    
    <content type="html"><![CDATA[<p><strong>MemoryPack</strong><br>是一个高效的数据序列化库，它专注于性能优化，适用于需要快速序列化和反序列化的场景。这个库是由 Yuki Yogo 开发的，并且在 .NET 社区中获得了相当的关注。MemoryPack 支持<strong>零拷贝</strong>（zero-copy）读取，这意味着可以在不需要额外内存分配的情况下直接从原始字节数据中读取值。</p><p>MemoryPack使用示例，包括定义一个可序列化的类、序列化对象以及反序列化回对象的过程。</p><h1 id="安装-MemoryPack"><a href="#安装-MemoryPack" class="headerlink" title="安装 MemoryPack"></a>安装 MemoryPack</h1><p>首先，需要安装 MemoryPack 库。可以通过 NuGet 包管理器来安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package MemoryPack</span><br></pre></td></tr></table></figure><p>或者在 Visual Studio 中使用 NuGet 包管理器界面来安装。</p><h1 id="定义可序列化的类"><a href="#定义可序列化的类" class="headerlink" title="定义可序列化的类"></a>定义可序列化的类</h1><p>为了使一个类能够被 MemoryPack 序列化，需要为该类添加 [MemoryPackable] 属性，并为类中的每个字段或属性添加 [MemoryPackIgnore] 属性（如果想要忽略某些字段或属性的话）。这里有一个简单的例子：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> MemoryPack;</span><br><span class="line"></span><br><span class="line">[<span class="meta">MemoryPackable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">MemoryPackIgnore</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> NotSerializedProperty &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：partial 关键字是必须的，因为 MemoryPack 在编译时会生成一些额外的代码来支持序列化&#x2F;反序列化。</p><h1 id="序列化和反序列化"><a href="#序列化和反序列化" class="headerlink" title="序列化和反序列化"></a>序列化和反序列化</h1><p>接下来，我们可以创建一个 Person 对象，然后使用 MemoryPack 将其序列化为字节数组，再从字节数组反序列化回 Person 对象。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> MemoryPack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建一个 Person 实例</span></span><br><span class="line">        <span class="keyword">var</span> person = <span class="keyword">new</span> Person</span><br><span class="line">        &#123;</span><br><span class="line">            Name = <span class="string">&quot;John Doe&quot;</span>,</span><br><span class="line">            Age = <span class="number">30</span>,</span><br><span class="line">            NotSerializedProperty = <span class="string">&quot;This will not be serialized&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="built_in">byte</span>[] serialized = MemoryPackSerializer.Serialize(person);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化  （零拷贝）</span></span><br><span class="line">        Person deserializedPerson = MemoryPackSerializer.Deserialize&lt;Person&gt;(serialized);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Name: <span class="subst">&#123;deserializedPerson.Name&#125;</span>, Age: <span class="subst">&#123;deserializedPerson.Age&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="comment">// 注意：NotSerializedProperty 不会被输出，因为它没有被序列化</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意事项<br>MemoryPack 支持大多数基本类型和复杂类型，但是也有一些限制，例如不支持循环引用的对象图。<br>如果的项目中存在多个需要序列化的类，每个类都需要标记 [MemoryPackable] 并且是 partial 类型。<br>由于 MemoryPack 使用了源生成器（source generators），因此它在编译时会生成额外的代码，这可能会稍微增加构建时间，但可以显著提高运行时的性能。<br>以上就是一个使用 MemoryPack 进行序列化和反序列化的简单示例。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;MemoryPack&lt;/strong&gt;&lt;br&gt;是一个高效的数据序列化库，它专注于性能优化，适用于需要快速序列化和反序列化的场景。这个库是由 Yuki Yogo 开发的，并且在 .NET 社区中获得了相当的关注。MemoryPack 支持&lt;strong&gt;零拷贝</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>.NET ILogger</title>
    <link href="https://banjinmei.github.io/2024/11/14/NET-ILogger/"/>
    <id>https://banjinmei.github.io/2024/11/14/NET-ILogger/</id>
    <published>2024-11-13T16:55:06.000Z</published>
    <updated>2024-11-13T16:56:46.669Z</updated>
    
    <content type="html"><![CDATA[<p>ILogger<T> 是 ASP.NET Core 中的一个接口，用于记录应用程序的日志信息。它是一个泛型接口，其中 T 是日志记录的上下文类型。通常情况下，会使用 ILogger 接口而不是 ILogger<T>，除非需要将特定的上下文类型传递给日志记录器。</p><p>ILogger 的示例：</p><h1 id="1-注入-ILogger"><a href="#1-注入-ILogger" class="headerlink" title="1. 注入 ILogger"></a>1. 注入 ILogger</h1><p>在的控制器、服务或其他依赖注入组件中，可以注入 ILogger<T> 或 ILogger。例如，在控制器中注入 ILogger<YourController>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">YourController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> ILogger&lt;YourController&gt; _logger;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">YourController</span>(<span class="params">ILogger&lt;YourController&gt; logger</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _logger = logger;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者，如果不需要特定的上下文类型，可以注入 ILogger：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">YourService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> ILogger _logger;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">YourService</span>(<span class="params">ILogger logger</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _logger = logger;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-记录日志"><a href="#2-记录日志" class="headerlink" title="2. 记录日志"></a>2. 记录日志</h1><p>使用 _logger 对象记录不同级别的日志，例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_logger.LogInformation(<span class="string">&quot;This is an information message.&quot;</span>);</span><br><span class="line">_logger.LogWarning(<span class="string">&quot;This is a warning message.&quot;</span>);</span><br><span class="line">_logger.LogError(<span class="string">&quot;This is an error message.&quot;</span>, exception);</span><br></pre></td></tr></table></figure><h1 id="3-配置日志记录"><a href="#3-配置日志记录" class="headerlink" title="3. 配置日志记录"></a>3. 配置日志记录</h1><p>在 appsettings.json 或其他配置文件中配置日志记录级别和输出目标。例如，在 appsettings.Development.json 中：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;System&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Information&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Microsoft&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Warning&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这将设置默认日志级别为 Debug，系统日志级别为 Information，Microsoft 日志级别为 Warning。</p><p>还可以配置日志记录器将日志输出到控制台、文件或其他目标。例如，在 appsettings.json 中：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Console&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;IncludeScopes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Debug&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Information&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Info&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Warning&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Warning&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Error&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Error&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Critical&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这将配置控制台日志记录器，并为不同级别的日志设置不同的输出级别。</p><p>总之，ILogger 和 ILogger<T> 提供了一种灵活且强大的方式来记录应用程序的日志信息。通过配置不同的日志级别和输出目标，可以轻松地满足各种日志记录需求。</p><h2 id="日志级别和分类："><a href="#日志级别和分类：" class="headerlink" title="日志级别和分类："></a>日志级别和分类：</h2><p>ILogger 提供了日志级别的概念，如 Trace、Debug、Info、Warning、Error 和 Critical。这允许开发者根据需要记录不同严重程度的信息，并且可以在配置中设置日志级别，以便在不同环境中（如开发、测试、生产）显示或隐藏某些级别的日志。<br>Console.WriteLine 只是简单地将文本输出到控制台，没有日志级别的概念。</p><h2 id="可配置性："><a href="#可配置性：" class="headerlink" title="可配置性："></a>可配置性：</h2><p>ILogger 是可配置的，可以配置日志记录器将日志输出到不同的目标（如文件、数据库、网络服务等），并且可以设置不同的格式化选项。<br>Console.WriteLine 只是将输出发送到控制台，没有可配置的输出目标或格式化选项。</p><h2 id="结构化日志："><a href="#结构化日志：" class="headerlink" title="结构化日志："></a>结构化日志：</h2><p>ILogger 支持结构化日志记录，这意味着可以记录包含键值对的对象，这些对象可以更容易地被日志分析工具解析和查询。<br>Console.WriteLine 只能输出文本字符串，不支持结构化日志。</p><h2 id="集成和扩展性："><a href="#集成和扩展性：" class="headerlink" title="集成和扩展性："></a>集成和扩展性：</h2><p>ILogger 是 ASP.NET Core 和许多其他 .NET 应用程序框架的一部分，它与其他框架组件（如依赖注入、中间件等）集成良好，并且可以通过第三方库轻松扩展。<br>Console.WriteLine 是 .NET 基础类库的一部分，但它不特定于任何特定的应用程序框架，也没有集成的概念。</p><h2 id="异常处理："><a href="#异常处理：" class="headerlink" title="异常处理："></a>异常处理：</h2><p>使用 ILogger 记录异常时，可以将异常对象作为参数传递，这样日志记录器可以捕获并记录异常的详细信息。<br>Console.WriteLine 只能手动将异常信息转换为字符串，然后输出。</p><p><strong>总结：</strong></p><p>ILogger 提供了更丰富的日志记录功能，包括日志级别、可配置性、结构化日志支持以及与框架的良好集成。<br>Console.WriteLine 更简单易用，适用于快速原型开发或简单的日志记录需求。<br>在大多数情况下，对于生产环境中的应用程序，推荐使用 ILogger，因为它提供了更多的灵活性和控制能力。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ILogger&lt;T&gt; 是 ASP.NET Core 中的一个接口，用于记录应用程序的日志信息。它是一个泛型接口，其中 T 是日志记录的上下文类型。通常情况下，会使用 ILogger 接口而不是 ILogger&lt;T&gt;，除非需要将特定的上下文类型传递给日志记录器。&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>Bogus-.NET Fake Data</title>
    <link href="https://banjinmei.github.io/2024/11/10/Bogus-NET-Fake-Data/"/>
    <id>https://banjinmei.github.io/2024/11/10/Bogus-NET-Fake-Data/</id>
    <published>2024-11-10T13:09:29.000Z</published>
    <updated>2024-11-10T13:11:34.231Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Bogus</strong><br>快速生成模拟数据<br>适用于单元测试、原型设计、演示数据准备。</p><h1 id="1-NuGet-安装-Bogus"><a href="#1-NuGet-安装-Bogus" class="headerlink" title="1.NuGet 安装 Bogus"></a>1.NuGet 安装 Bogus</h1><h1 id="2-简单使用"><a href="#2-简单使用" class="headerlink" title="2.简单使用"></a>2.简单使用</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> faker = <span class="keyword">new</span> Faker();</span><br><span class="line"><span class="comment">//   var faker = new Faker(&quot;zh_CN&quot;); ////中文</span></span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Name: <span class="subst">&#123;faker.Name.FullName()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Email: <span class="subst">&#123;faker.Internet.Email()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Phone: <span class="subst">&#123;faker.Phone.PhoneNumber()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Address: <span class="subst">&#123;faker.Address.FullAddress()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Company: <span class="subst">&#123;faker.Company.CompanyName()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Catch Phrase: <span class="subst">&#123;faker.Company.CatchPhrase()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;BS: <span class="subst">&#123;faker.Company.Bs()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Product: <span class="subst">&#123;faker.Commerce.Product()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Price: <span class="subst">&#123;faker.Commerce.Price()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Credit Card: <span class="subst">&#123;faker.Finance.CreditCardNumber()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Bitcoin Address: <span class="subst">&#123;faker.Finance.BitcoinAddress()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;User Agent: <span class="subst">&#123;faker.Internet.UserAgent()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Color: <span class="subst">&#123;faker.Commerce.Color()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Time Zone: <span class="subst">&#123;faker.Date.TimeZoneString()&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="3-自定义类使用"><a href="#3-自定义类使用" class="headerlink" title="3.自定义类使用"></a>3.自定义类使用</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TUser</span> </span><br><span class="line">   &#123; </span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> LastName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> Email &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">       <span class="keyword">public</span> DateTime Birth &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟数据</span></span><br><span class="line">           <span class="keyword">var</span> faker = <span class="keyword">new</span> Faker&lt;TUser&gt;().RuleFor(u =&gt; u.Id, f =&gt; f.Random.Int(<span class="number">1</span>, <span class="number">9999</span>))</span><br><span class="line">               .RuleFor(u =&gt; u.FirstName, f =&gt; f.Name.FirstName())</span><br><span class="line">               .RuleFor(u =&gt; u.LastName, f =&gt; f.Name.LastName())</span><br><span class="line">               .RuleFor(u =&gt; u.Email, (f, u) =&gt; f.Internet.Email(u.FirstName, u.LastName))</span><br><span class="line">               .RuleFor(u =&gt; u.Birth, f =&gt; f.Date.Past(<span class="number">50</span>));</span><br><span class="line">           TUser user = faker.Generate(); </span><br><span class="line">           Console.WriteLine(<span class="string">$&quot;Id: <span class="subst">&#123;user.Id&#125;</span>&quot;</span>); </span><br><span class="line">           Console.WriteLine(<span class="string">$&quot;Name: <span class="subst">&#123;user.FirstName&#125;</span> <span class="subst">&#123;user.LastName&#125;</span>&quot;</span>);</span><br><span class="line">           Console.WriteLine(<span class="string">$&quot;Email: <span class="subst">&#123;user.Email&#125;</span>&quot;</span>);</span><br><span class="line">           Console.WriteLine(<span class="string">$&quot;Date of Birth: <span class="subst">&#123;user.Birth:d&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟多个</span></span><br><span class="line">     List&lt;TUser&gt; users = faker.Generate(<span class="number">10</span>);<span class="comment">//10count</span></span><br><span class="line">     <span class="keyword">foreach</span> (<span class="keyword">var</span> user <span class="keyword">in</span> users) &#123; Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;user.FirstName&#125;</span> <span class="subst">&#123;user.LastName&#125;</span> (<span class="subst">&#123;user.Email&#125;</span>)&quot;</span>); &#125;</span><br></pre></td></tr></table></figure><h1 id="4-复杂对象"><a href="#4-复杂对象" class="headerlink" title="4.复杂对象"></a>4.复杂对象</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TOrderItem</span> </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> ProductName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Quantity &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">decimal</span> Price &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TOrder</span> </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> TUser Customer &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> DateTime OrderDate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> List&lt;TOrderItem&gt; Items &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">decimal</span> TotalAmount &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟数据</span></span><br><span class="line">     <span class="keyword">var</span> userFaker = <span class="keyword">new</span> Faker&lt;TUser&gt;()</span><br><span class="line">         .RuleFor(u =&gt; u.Id, f =&gt; f.Random.Int(<span class="number">1</span>, <span class="number">999</span>))</span><br><span class="line">         .RuleFor(u =&gt; u.FirstName, f =&gt; f.Name.FirstName())</span><br><span class="line">         .RuleFor(u =&gt; u.LastName, f =&gt; f.Name.LastName())</span><br><span class="line">         .RuleFor(u =&gt; u.Email, (f, u) =&gt; f.Internet.Email(u.FirstName, u.LastName));</span><br><span class="line">     <span class="keyword">var</span> orderItemFaker = <span class="keyword">new</span> Faker&lt;TOrderItem&gt;()</span><br><span class="line">         .RuleFor(oi =&gt; oi.ProductName, f =&gt; f.Commerce.ProductName())</span><br><span class="line">         .RuleFor(oi =&gt; oi.Quantity, f =&gt; f.Random.Int(<span class="number">1</span>, <span class="number">888</span>))</span><br><span class="line">         .RuleFor(oi =&gt; oi.Price, f =&gt; <span class="built_in">decimal</span>.Parse(f.Commerce.Price()));</span><br><span class="line">     <span class="keyword">var</span> orderFaker = <span class="keyword">new</span> Faker&lt;TOrder&gt;()</span><br><span class="line">         .RuleFor(o =&gt; o.Id, f =&gt; f.Random.Int(<span class="number">10000</span>, <span class="number">99999</span>))</span><br><span class="line">         .RuleFor(o =&gt; o.Customer, f =&gt; userFaker.Generate())</span><br><span class="line">         .RuleFor(o =&gt; o.OrderDate, f =&gt; f.Date.Recent(<span class="number">30</span>))</span><br><span class="line">         .RuleFor(o =&gt; o.Items, f =&gt; orderItemFaker.Generate(f.Random.Int(<span class="number">1</span>, <span class="number">5</span>)))</span><br><span class="line">         .RuleFor(o =&gt; o.TotalAmount, (f, o) =&gt; o.Items.Sum(i =&gt; i.Price * i.Quantity));</span><br><span class="line">     TOrder order = orderFaker.Generate();</span><br><span class="line">     Console.WriteLine(<span class="string">$&quot;Order ID: <span class="subst">&#123;order.Id&#125;</span>&quot;</span>); </span><br><span class="line">      Console.WriteLine(<span class="string">$&quot;Customer: <span class="subst">&#123;order.Customer.FirstName&#125;</span> <span class="subst">&#123;order.Customer.LastName&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="comment">// Console.WriteLine($&quot;Order Date: &#123;order.OrderDate:d&#125;&quot;); </span></span><br><span class="line">     Console.WriteLine(<span class="string">&quot;Items:&quot;</span>); </span><br><span class="line">     <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> order.Items) </span><br><span class="line">     &#123; </span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;  <span class="subst">&#123;item.ProductName&#125;</span> - Quantity: <span class="subst">&#123;item.Quantity&#125;</span>, Price: <span class="subst">&#123;item.Price:C&#125;</span>&quot;</span>); </span><br><span class="line">     &#125;</span><br><span class="line">     Console.WriteLine(<span class="string">$&quot;Total Amount: <span class="subst">&#123;order.TotalAmount:C&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="5-seed值"><a href="#5-seed值" class="headerlink" title="5.seed值"></a>5.seed值</h1><p>确保每次生成的值相同</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> faker = <span class="keyword">new</span> Faker(<span class="string">&quot;zh_CN&quot;</span>); faker.Random = <span class="keyword">new</span> Randomizer(<span class="number">123</span>);<span class="comment">//seed 123</span></span><br><span class="line">Console.WriteLine(faker.Name.FullName());</span><br></pre></td></tr></table></figure><h1 id="6-国际化"><a href="#6-国际化" class="headerlink" title="6.国际化"></a>6.国际化</h1><p>locales</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fakerEs = <span class="keyword">new</span> Faker(<span class="string">&quot;es&quot;</span>); Console.WriteLine(<span class="string">$&quot;Spanish name: <span class="subst">&#123;fakerEs.Name.FullName()&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fakerDe = <span class="keyword">new</span> Faker(<span class="string">&quot;de&quot;</span>); Console.WriteLine(<span class="string">$&quot;German name: <span class="subst">&#123;fakerDe.Name.FullName()&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fakerFr = <span class="keyword">new</span> Faker(<span class="string">&quot;fr&quot;</span>); Console.WriteLine(<span class="string">$&quot;French name: <span class="subst">&#123;fakerFr.Name.FullName()&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fakerRu = <span class="keyword">new</span> Faker(<span class="string">&quot;zh_TW&quot;</span>); Console.WriteLine(<span class="string">$&quot;TW name: <span class="subst">&#123;fakerRu.Name.FullName()&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fakerJP = <span class="keyword">new</span> Faker(<span class="string">&quot;ja&quot;</span>); Console.WriteLine(<span class="string">$&quot;JP name: <span class="subst">&#123;fakerJP.Name.FullName()&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="7-定义规则"><a href="#7-定义规则" class="headerlink" title="7.定义规则"></a>7.定义规则</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.RuleSet(<span class="string">&quot;adult&quot;</span>, <span class="keyword">set</span> =&gt; </span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">set</span>.RuleFor(u =&gt; u.Birth, f =&gt; f.Date.Past(<span class="number">35</span>, DateTime.Now.AddYears(<span class="number">-16</span>)));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>用户的出生日期被限定为当前时间往前推35年到16年之间的随机日期，这样生成的用户就是35岁内的成年人。<br>&#x2F;&#x2F;Born: {adultUser.Birth:d}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Bogus&lt;/strong&gt;&lt;br&gt;快速生成模拟数据&lt;br&gt;适用于单元测试、原型设计、演示数据准备。&lt;/p&gt;
&lt;h1 id=&quot;1-NuGet-安装-Bogus&quot;&gt;&lt;a href=&quot;#1-NuGet-安装-Bogus&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>.NET WatchDog</title>
    <link href="https://banjinmei.github.io/2024/11/09/NET-WatchDog/"/>
    <id>https://banjinmei.github.io/2024/11/09/NET-WatchDog/</id>
    <published>2024-11-08T16:01:03.000Z</published>
    <updated>2024-11-08T16:04:15.799Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WatchDog"><a href="#WatchDog" class="headerlink" title="WatchDog"></a>WatchDog</h1><p>是一个开源（MIT License）、免费的实时应用监控系统，它可以实时记录并查看应用中的消息、事件、HTTP 请求和响应，以及运行时捕获的异常。</p><h2 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h2><p><strong>实时日志记录</strong>：能够实时记录HTTP请求、响应以及运行时捕获的异常。<br><strong>代码内日志记录</strong>：支持在代码中记录消息和事件。<br><strong>日志搜索功能</strong>：支持对HTTP请求和异常日志进行搜索。<br><strong>HTTP日志筛选</strong>：可根据HTTP方法和状态码筛选HTTP日志。<br><strong>报警通知</strong>：支持通过邮件、短信等多种方式发送报警通知，确保能够及时得到反馈。<br><strong>灵活配置</strong>：可以根据应用需求进行灵活的配置，适应不同的监控需求。<br><strong>使用正则表达式黑名单</strong> ：新增了使用正则表达式进行黑名单过滤的功能。</p><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>WatchDog 利用 SignalR 实现了实时监控，并使用LiteDb作为无需配置的类似MongoDB的服务器端数据库，同时也支持使用外部数据库（如MSSQL、MySQL、PostgreSQL、MongoDB）。</p><h1 id="使用-WatchDog"><a href="#使用-WatchDog" class="headerlink" title="使用  WatchDog"></a>使用  WatchDog</h1><p>首先，在项目中安装 WatchDog 包。</p><h2 id="NuGet-包管理器中安装："><a href="#NuGet-包管理器中安装：" class="headerlink" title="NuGet 包管理器中安装："></a>NuGet 包管理器中安装：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package WatchDog</span><br></pre></td></tr></table></figure><h2 id="在-Startup-cs-中配置-WatchDog："><a href="#在-Startup-cs-中配置-WatchDog：" class="headerlink" title="在 Startup.cs 中配置 WatchDog："></a>在 Startup.cs 中配置 WatchDog：</h2><p>在 ConfigureServices 方法中添加 WatchDog：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    services.AddControllers();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加 WatchDog 服务</span></span><br><span class="line">    services.AddWatchDogServices();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，在 Configure 方法中配置它：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IWebHostEnvironment env</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (env.IsDevelopment())</span><br><span class="line">    &#123;</span><br><span class="line">        app.UseDeveloperExceptionPage();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    app.UseHttpsRedirection();</span><br><span class="line">    app.UseRouting();</span><br><span class="line">    app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">    app.UseEndpoints(endpoints =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        endpoints.MapControllers();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 配置 WatchDog 中间件，指定 API 日志查看的访问路径和安全选项</span></span><br><span class="line">    app.UseWatchDog(opt =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        opt.WatchPageUsername = <span class="string">&quot;admin&quot;</span>;  <span class="comment">// 设置用户名</span></span><br><span class="line">        opt.WatchPagePassword = <span class="string">&quot;password&quot;</span>;  <span class="comment">// 设置密码</span></span><br><span class="line">        opt.Blacklist = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; <span class="string">&quot;/health&quot;</span> &#125;;  <span class="comment">// 不记录特定路径</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制器中记录日志"><a href="#控制器中记录日志" class="headerlink" title="控制器中记录日志"></a>控制器中记录日志</h2><p>WatchDog 会自动记录所有 API 请求和响应，如果你想手动记录特定的事件或日志，可以使用 WatchLogger。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> WatchDog;</span><br><span class="line"></span><br><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line">[<span class="meta">Route(<span class="string">&quot;[controller]&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SampleController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">HttpGet(<span class="string">&quot;test&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IActionResult <span class="title">TestEndpoint</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 手动记录日志</span></span><br><span class="line">        WatchLogger.Log(<span class="string">&quot;This is a manual log message&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> Ok(<span class="string">&quot;Test endpoint&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h2><p>启动应用后，打开浏览器，访问 https:&#x2F;&#x2F;<your-host>&#x2F;watchdog (例如，<a class="link"   href="https://localhost:5001/watchdog" >https://localhost:5001/watchdog<i class="fas fa-external-link-alt"></i></a>) ，输入配置的用户名和密码即可查看日志。</p><p>注意事项<br>在生产环境中使用时，请确保设置合适的访问权限以保护日志。<br>使用 Blacklist 配置可以避免记录不需要的路由。<br>这样就可以通过 WatchDog 轻松记录和查看 API 请求和响应日志。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;WatchDog&quot;&gt;&lt;a href=&quot;#WatchDog&quot; class=&quot;headerlink&quot; title=&quot;WatchDog&quot;&gt;&lt;/a&gt;WatchDog&lt;/h1&gt;&lt;p&gt;是一个开源（MIT License）、免费的实时应用监控系统，它可以实时记录并查看应用中的消</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>Node Swagger</title>
    <link href="https://banjinmei.github.io/2024/11/07/Node-Swagger/"/>
    <id>https://banjinmei.github.io/2024/11/07/Node-Swagger/</id>
    <published>2024-11-06T16:37:19.000Z</published>
    <updated>2024-11-06T16:39:20.329Z</updated>
    
    <content type="html"><![CDATA[<p> Node.js 和 Swagger 创建简单增删改查 (CRUD) API ，<br> 使用 Express 作为 Web 框架，并集成 Swagger UI 来自动生成 API 文档。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> node-swagger-crud</span><br><span class="line"><span class="built_in">cd</span> node-swagger-crud</span><br><span class="line">npm init -y</span><br><span class="line">npm install express swagger-jsdoc swagger-ui-express</span><br></pre></td></tr></table></figure><h1 id="2-设置-Express-应用"><a href="#2-设置-Express-应用" class="headerlink" title="2: 设置 Express 应用"></a>2: 设置 Express 应用</h1><p>创建一个文件 app.js，用于定义 Express 应用及基本路由。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>()); <span class="comment">// 解析 JSON 请求</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> swaggerJsDoc = <span class="built_in">require</span>(<span class="string">&quot;swagger-jsdoc&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> swaggerUi = <span class="built_in">require</span>(<span class="string">&quot;swagger-ui-express&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Swagger 配置</span></span><br><span class="line"><span class="keyword">const</span> swaggerOptions = &#123;</span><br><span class="line">  <span class="attr">swaggerDefinition</span>: &#123;</span><br><span class="line">    <span class="attr">openapi</span>: <span class="string">&quot;3.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">info</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;Simple CRUD API&quot;</span>,</span><br><span class="line">      <span class="attr">version</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">      <span class="attr">description</span>: <span class="string">&quot;A simple CRUD API with Swagger documentation&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">apis</span>: [<span class="string">&quot;./routes/*.js&quot;</span>],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> swaggerDocs = <span class="title function_">swaggerJsDoc</span>(swaggerOptions);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/api-docs&quot;</span>, swaggerUi.<span class="property">serve</span>, swaggerUi.<span class="title function_">setup</span>(swaggerDocs));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入 CRUD 路由</span></span><br><span class="line"><span class="keyword">const</span> itemsRouter = <span class="built_in">require</span>(<span class="string">&quot;./routes/items&quot;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/api/items&quot;</span>, itemsRouter);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3000</span>;</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on http://localhost:<span class="subst">$&#123;PORT&#125;</span>`</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Swagger docs available on http://localhost:<span class="subst">$&#123;PORT&#125;</span>/api-docs`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="3-创建-CRUD-路由"><a href="#3-创建-CRUD-路由" class="headerlink" title="3: 创建 CRUD 路由"></a>3: 创建 CRUD 路由</h1><p>在项目根目录下创建 routes 文件夹，并在其中创建 items.js 文件，定义 CRUD 操作接口。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// routes/items.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> items = []; <span class="comment">// 模拟数据库中的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * components:</span></span><br><span class="line"><span class="comment"> *   schemas:</span></span><br><span class="line"><span class="comment"> *     Item:</span></span><br><span class="line"><span class="comment"> *       type: object</span></span><br><span class="line"><span class="comment"> *       required:</span></span><br><span class="line"><span class="comment"> *         - name</span></span><br><span class="line"><span class="comment"> *       properties:</span></span><br><span class="line"><span class="comment"> *         id:</span></span><br><span class="line"><span class="comment"> *           type: integer</span></span><br><span class="line"><span class="comment"> *           description: The auto-generated id of the item</span></span><br><span class="line"><span class="comment"> *         name:</span></span><br><span class="line"><span class="comment"> *           type: string</span></span><br><span class="line"><span class="comment"> *           description: The name of the item</span></span><br><span class="line"><span class="comment"> *       example:</span></span><br><span class="line"><span class="comment"> *         id: 1</span></span><br><span class="line"><span class="comment"> *         name: Sample Item</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items:</span></span><br><span class="line"><span class="comment"> *   get:</span></span><br><span class="line"><span class="comment"> *     summary: 获取所有 items</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       200:</span></span><br><span class="line"><span class="comment"> *         description: The list of items</span></span><br><span class="line"><span class="comment"> *         content:</span></span><br><span class="line"><span class="comment"> *           application/json:</span></span><br><span class="line"><span class="comment"> *             schema:</span></span><br><span class="line"><span class="comment"> *               type: array</span></span><br><span class="line"><span class="comment"> *               items:</span></span><br><span class="line"><span class="comment"> *                 $ref: &#x27;#/components/schemas/Item&#x27;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">json</span>(items);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items/&#123;id&#125;:</span></span><br><span class="line"><span class="comment"> *   get:</span></span><br><span class="line"><span class="comment"> *     summary: 获取单个 item</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     parameters:</span></span><br><span class="line"><span class="comment"> *       - in: path</span></span><br><span class="line"><span class="comment"> *         name: id</span></span><br><span class="line"><span class="comment"> *         schema:</span></span><br><span class="line"><span class="comment"> *           type: integer</span></span><br><span class="line"><span class="comment"> *         required: true</span></span><br><span class="line"><span class="comment"> *         description: Item ID</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       200:</span></span><br><span class="line"><span class="comment"> *         description: Item data</span></span><br><span class="line"><span class="comment"> *         content:</span></span><br><span class="line"><span class="comment"> *           application/json:</span></span><br><span class="line"><span class="comment"> *             schema:</span></span><br><span class="line"><span class="comment"> *               $ref: &#x27;#/components/schemas/Item&#x27;</span></span><br><span class="line"><span class="comment"> *       404:</span></span><br><span class="line"><span class="comment"> *         description: Item not found</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/:id&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> item = items.<span class="title function_">find</span>(<span class="function">(<span class="params">i</span>) =&gt;</span> i.<span class="property">id</span> === <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>));</span><br><span class="line">  <span class="keyword">if</span> (!item) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&quot;Item not found&quot;</span>);</span><br><span class="line">  res.<span class="title function_">json</span>(item);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items:</span></span><br><span class="line"><span class="comment"> *   post:</span></span><br><span class="line"><span class="comment"> *     summary: 创建一个新的 item</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     requestBody:</span></span><br><span class="line"><span class="comment"> *       required: true</span></span><br><span class="line"><span class="comment"> *       content:</span></span><br><span class="line"><span class="comment"> *         application/json:</span></span><br><span class="line"><span class="comment"> *           schema:</span></span><br><span class="line"><span class="comment"> *             $ref: &#x27;#/components/schemas/Item&#x27;</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       201:</span></span><br><span class="line"><span class="comment"> *         description: Item created</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> item = &#123;</span><br><span class="line">    <span class="attr">id</span>: items.<span class="property">length</span> + <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: req.<span class="property">body</span>.<span class="property">name</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  items.<span class="title function_">push</span>(item);</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">201</span>).<span class="title function_">json</span>(item);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items/&#123;id&#125;:</span></span><br><span class="line"><span class="comment"> *   put:</span></span><br><span class="line"><span class="comment"> *     summary: 更新指定 ID 的 item</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     parameters:</span></span><br><span class="line"><span class="comment"> *       - in: path</span></span><br><span class="line"><span class="comment"> *         name: id</span></span><br><span class="line"><span class="comment"> *         schema:</span></span><br><span class="line"><span class="comment"> *           type: integer</span></span><br><span class="line"><span class="comment"> *         required: true</span></span><br><span class="line"><span class="comment"> *         description: Item ID</span></span><br><span class="line"><span class="comment"> *     requestBody:</span></span><br><span class="line"><span class="comment"> *       required: true</span></span><br><span class="line"><span class="comment"> *       content:</span></span><br><span class="line"><span class="comment"> *         application/json:</span></span><br><span class="line"><span class="comment"> *           schema:</span></span><br><span class="line"><span class="comment"> *             $ref: &#x27;#/components/schemas/Item&#x27;</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       200:</span></span><br><span class="line"><span class="comment"> *         description: Item updated</span></span><br><span class="line"><span class="comment"> *       404:</span></span><br><span class="line"><span class="comment"> *         description: Item not found</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">put</span>(<span class="string">&quot;/:id&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> item = items.<span class="title function_">find</span>(<span class="function">(<span class="params">i</span>) =&gt;</span> i.<span class="property">id</span> === <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>));</span><br><span class="line">  <span class="keyword">if</span> (!item) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&quot;Item not found&quot;</span>);</span><br><span class="line"></span><br><span class="line">  item.<span class="property">name</span> = req.<span class="property">body</span>.<span class="property">name</span>;</span><br><span class="line">  res.<span class="title function_">json</span>(item);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items/&#123;id&#125;:</span></span><br><span class="line"><span class="comment"> *   delete:</span></span><br><span class="line"><span class="comment"> *     summary: 删除指定 ID 的 item</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     parameters:</span></span><br><span class="line"><span class="comment"> *       - in: path</span></span><br><span class="line"><span class="comment"> *         name: id</span></span><br><span class="line"><span class="comment"> *         schema:</span></span><br><span class="line"><span class="comment"> *           type: integer</span></span><br><span class="line"><span class="comment"> *         required: true</span></span><br><span class="line"><span class="comment"> *         description: Item ID</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       200:</span></span><br><span class="line"><span class="comment"> *         description: Item deleted</span></span><br><span class="line"><span class="comment"> *       404:</span></span><br><span class="line"><span class="comment"> *         description: Item not found</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">delete</span>(<span class="string">&quot;/:id&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> itemIndex = items.<span class="title function_">findIndex</span>(<span class="function">(<span class="params">i</span>) =&gt;</span> i.<span class="property">id</span> === <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>));</span><br><span class="line">  <span class="keyword">if</span> (itemIndex === -<span class="number">1</span>) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&quot;Item not found&quot;</span>);</span><br><span class="line"></span><br><span class="line">  items.<span class="title function_">splice</span>(itemIndex, <span class="number">1</span>);</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;Item deleted&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><h1 id="4-启动服务器"><a href="#4-启动服务器" class="headerlink" title="4: 启动服务器"></a>4: 启动服务器</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node app.js</span><br></pre></td></tr></table></figure><p>访问 <a class="link"   href="http://localhost:3000/api-docs%EF%BC%8C" >http://localhost:3000/api-docs，<i class="fas fa-external-link-alt"></i></a><br>可以查看生成的 Swagger 文档。</p><h1 id="测试-API"><a href="#测试-API" class="headerlink" title="测试 API"></a>测试 API</h1><p>以下是 API 接口的示例请求：</p><p>获取所有 items: GET <a class="link"   href="http://localhost:3000/api/items" >http://localhost:3000/api/items<i class="fas fa-external-link-alt"></i></a><br>获取单个 item: GET <a class="link"   href="http://localhost:3000/api/items/%7Bid%7D" >http://localhost:3000/api/items/{id}<i class="fas fa-external-link-alt"></i></a><br>创建 item: POST <a class="link"   href="http://localhost:3000/api/items%EF%BC%8CJSON" >http://localhost:3000/api/items，JSON<i class="fas fa-external-link-alt"></i></a> 数据 { “name”: “New Item” }<br>更新 item: PUT <a class="link"   href="http://localhost:3000/api/items/%7Bid%7D%EF%BC%8CJSON" >http://localhost:3000/api/items/{id}，JSON<i class="fas fa-external-link-alt"></i></a> 数据 { “name”: “Updated Item” }<br>删除 item: DELETE <a class="link"   href="http://localhost:3000/api/items/%7Bid%7D" >http://localhost:3000/api/items/{id}<i class="fas fa-external-link-alt"></i></a></p><p>这样，一个简单的 CRUD 接口及其文档就构建完成了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Node.js 和 Swagger 创建简单增删改查 (CRUD) API ，&lt;br&gt; 使用 Express 作为 Web 框架，并集成 Swagger UI 来自动生成 API 文档。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="node" scheme="https://banjinmei.github.io/tags/node/"/>
    
    <category term="swagger" scheme="https://banjinmei.github.io/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>Rspack Vue3</title>
    <link href="https://banjinmei.github.io/2024/11/07/Rspack-Vue3/"/>
    <id>https://banjinmei.github.io/2024/11/07/Rspack-Vue3/</id>
    <published>2024-11-06T16:31:15.000Z</published>
    <updated>2024-11-06T16:36:49.259Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Rspack-Vue3-TS-项目环境构建到实战Rspack是什么"><a href="#Rspack-Vue3-TS-项目环境构建到实战Rspack是什么" class="headerlink" title="Rspack+Vue3+TS 项目环境构建到实战Rspack是什么?"></a>Rspack+Vue3+TS 项目环境构建到实战Rspack是什么?</h1><p>Rspack是一个基于 Rust 编写的高性能JavaScript 打包工具，它提供对 webpack 生态良好的兼容性能够无缝替换 webpack，并提供闪电般的构建速度。</p><h1 id="为什么要做-Rspack"><a href="#为什么要做-Rspack" class="headerlink" title="为什么要做 Rspack"></a>为什么要做 Rspack</h1><p>创建 Rspack 的原因，是为了解决在<strong>字节跳动</strong>维护构建工具时遇到的各种性能问题。在字节跳动内部存在许多巨石应用，它们都具有复杂的构建配置，生产环境的构建需要耗费十几分钟，甚至超过半小时;开发环境的耗时也超过十几分钟。<br>我们在 webpack 上尝试了多种方法来优化这些巨石应用，但是效果甚微。我们意识到在 webpack 上的优化已经难以为继，必须要从底层改造，才能适应我们的需求。<br>同时在聆听解决业务各种复杂的构建需求中，我们意识到开发人员对构建工具有以下要求:<br><strong>快速的 Dev 启动性能</strong> npm run dev 是开发者每天需要运行很多次的命令，但大型项目每次都需和要等待 10分钟，这对于工程师来说非常痛苦，因此优化开发模式下启动的时间至关重要<br><strong>高效的 Build 性能</strong> npm run bui1d 经常在 CI&#x2F;CD 环境中运行，它决定了应用生产交付的效率,有些应用在生产环境中需要 20 到 30 分钟的构建时间，如果能缩短这段时间，对开发流程也将非<br>常有帮助。<br><strong>灵活的配置</strong> 用户工程的配置非常灵活，不够统一。在之前的尝试中，将webpack配置迁移到其他构建工具时，我们遇到了许多问题，因为其他构建工具的配置不如 webpack 灵活。<br><strong>生产环境的优化能力</strong> 在启用 Rspack之前，我们尝试了社区内的各种方案，但它们都面临着一定程度的生产环境负优化，例如拆分包不够精细等。因此，优化生产环境的产物是我们不可放弃的功能。<br>在确定了这四个需求后，我们调查了社区中的所有技术方案，它们通常都能很好的满足其中个别需求但没有一个方案能同时满足所有条件，因此，我们决定自研 Rspack。</p><h1 id="和-webpack-的区别"><a href="#和-webpack-的区别" class="headerlink" title="和 webpack 的区别"></a>和 webpack 的区别</h1><p>webpack是目前最为成熟的构建工具，有着活跃的生态，灵活的配置和丰富的功能，但是其最为人诟病的是其性能问题，尤其在一些大型项目上，构建花费的时间可能会达到几分钟甚至几十分钟，&lt;&lt;&lt;性能问题是目前 webpack 最大的短板。因此 Rspack 解决的问题核心就是webpack 的性能问题。 Rspack 比webpack 快得益于如下几方面:<br><strong>Rust 语言优势</strong>: Rspack 使用 Rust 语言编写，得益于 Rust的高性能编译器支持， Rust 编译生成的 Native Code 通常比JavaScript 性能更为高效。<br><strong>高度并行的架构</strong>: webpack 受限于JavaScript 对多线程的赢弱支持，导致其很难进行高度的并行化计算，而得益于 Rust语言的并行化的良好支持，Rspack采用了高度并行化的架构，如模块图生成，代码生成等阶段，都是采用多线程并行执行，这使得其编译性能随着 CPU核心数的增长而增长，充分挖掘 CPU的多核优势。<br><strong>内置大部分的功能</strong>: 事实上 webpack 本身的性能足够高效，但是因为 webpack 本身内置了较少的功能，这使得我们在使用 webpack 做现代 Web App 开发时，通常需要配合很多的 plugin 和loader 进行使用，而这些loader和 plugin 往往是性能的瓶颈，而 Rspack 虽然支持loader 和plugin，但是保证绝大部分常用功能都内置在Rspack内，从而减小Spluginlloader 导致的低性能和通信开销问题，<br><strong>增量编译</strong>: 尽管 Rspack 的全量编译足够高效，但是当项目庞大时，全量的编译仍然难以满足 HMR的性能要求，因此在 HMR 阶段，我们采用的是更为高效的增量编译策略，从而保证，无论你的项目多大，其 HMR 的开销总是控制在合理范围内。</p><h1 id="和-Vite-的区别"><a href="#和-Vite-的区别" class="headerlink" title="和 Vite 的区别"></a>和 Vite 的区别</h1><p>Vite提供了很好的开发者体验，但 Vite 在生产构建中依赖了 Rollup，因此与其他基于JavaScript 的工具链一样，面临着生产环境的构建性能问题。<br>另外，Rollup相较于 webpack做了一些平衡取舍，在这里同样适用。比如，Rollup缺失了 webpack对于拆包的灵活性，即缺失了 optimization.splitChunks提供的很多功能。</p><h1 id="和-esbuild-的区别"><a href="#和-esbuild-的区别" class="headerlink" title="和 esbuild 的区别"></a>和 esbuild 的区别</h1><p>我们在内部进行过大规模地将 esbuild作为通用的 Web App 构建工具的实践，但是遇到如下一些问题:缺乏对 JavaScript HMR 和增量编译的良好支持，这导致大型项目中的 HMR 性能较差。拆包策略也非常原始，难以满足业务复杂多变的拆包优化需求。</p><h1 id="Rspack快速上手"><a href="#Rspack快速上手" class="headerlink" title="Rspack快速上手"></a>Rspack快速上手</h1><p>环境准备<br>在开始使用前， 需要安装 Node.js&gt;&#x3D;16 版本，推荐使用 Node,js LTS 版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>创建新项目</p><h1 id="使用-Rsbuild"><a href="#使用-Rsbuild" class="headerlink" title="使用 Rsbuild"></a>使用 Rsbuild</h1><p>Rsbuip 是由 Rspack 驱动的高性能构建工具，由 Rspack 团队开发，它默认包含了一套精心设计的构建配置，提供开箱即用的开发体验，并能够充分发挥出 Rspack的性能优势。</p><p>我们推荐使用 Rsbuild来创建新项目，执行如下命令即可:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm create rsbuild@latest</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn create rsbuild</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm create rsbuildalatest</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bun create rsbuildalatest</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">◇  Project name or path</span><br><span class="line">│  <span class="built_in">test</span></span><br><span class="line">│</span><br><span class="line">◇  Select framework</span><br><span class="line">│  Vue 3</span><br><span class="line">│</span><br><span class="line">◇  Select language</span><br><span class="line">│  TypeScript</span><br><span class="line">│</span><br><span class="line">◇  Select additional tools (Use &lt;space&gt; to <span class="keyword">select</span>, &lt;enter&gt; to <span class="built_in">continue</span>)</span><br><span class="line">(enter)</span><br><span class="line">│  none</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">│◇ Next steps ──╮</span><br><span class="line">│               │</span><br><span class="line">│  <span class="built_in">cd</span> <span class="built_in">test</span>      │</span><br><span class="line">│  npm install  │</span><br><span class="line">│  npm run dev │</span><br><span class="line">│             │</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>package.json</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;  <span class="string">&quot;ast&quot;</span>: <span class="string">&quot;rsbuild dev --open&quot;</span>&#125; </span><br></pre></td></tr></table></figure><p>npm run ast</p><p>dependencies 生产<br>devDependencies 安装</p><p>rsbuild.config.ts </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">pluginVue</span>()],</span><br><span class="line"></span><br><span class="line">  <span class="attr">server</span>:&#123;</span><br><span class="line">    <span class="attr">port</span>:<span class="number">8116</span>,<span class="comment">//开发服务器端口</span></span><br><span class="line">    <span class="attr">open</span>:<span class="literal">true</span>,<span class="comment">//是否自动打开浏览器</span></span><br><span class="line">    <span class="attr">proxy</span>:&#123;<span class="comment">//代理设置</span></span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>tsconfig.json</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   <span class="string">&quot;target&quot;</span>: <span class="string">&quot;ES2020&quot;</span>,   编译的js版本 </span><br><span class="line"><span class="string">&quot;include&quot;</span>: [<span class="string">&quot;src&quot;</span>] 包含目录</span><br></pre></td></tr></table></figure><h1 id="安装element-plus"><a href="#安装element-plus" class="headerlink" title="安装element-plus"></a>安装element-plus</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus -s</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add element-plus</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm insta1l element-plus</span><br></pre></td></tr></table></figure><p>index.ts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import&#123;createApp&#125;from <span class="string">&quot;vue&quot;</span>;</span><br><span class="line">import ElementPlus from<span class="string">&quot;element-plus&quot;</span></span><br><span class="line">import <span class="string">&quot;element-plus/dist/index.css&quot;</span></span><br><span class="line">import App from <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line">import<span class="string">&#x27;/index.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line">createApp(App).use(ElementPlus).mount(<span class="string">&#x27;#root&#x27;</span>);</span><br></pre></td></tr></table></figure><p>.vue使用即可</p><h1 id="配置路由"><a href="#配置路由" class="headerlink" title="配置路由"></a>配置路由</h1><p> vue-router<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router</span><br></pre></td></tr></table></figure><br>src-router-index.ts<br>const router &#x3D; CreateRouter()</p><p>index.ts<br>add rout<br>import router from “.&#x2F;router”; </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Rspack-Vue3-TS-项目环境构建到实战Rspack是什么&quot;&gt;&lt;a href=&quot;#Rspack-Vue3-TS-项目环境构建到实战Rspack是什么&quot; class=&quot;headerlink&quot; title=&quot;Rspack+Vue3+TS 项目环境构建到实战Rs</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="vue3" scheme="https://banjinmei.github.io/tags/vue3/"/>
    
  </entry>
  
  <entry>
    <title>Loacl IP get Weather</title>
    <link href="https://banjinmei.github.io/2024/11/06/Loacl-IP-get-Weather/"/>
    <id>https://banjinmei.github.io/2024/11/06/Loacl-IP-get-Weather/</id>
    <published>2024-11-05T22:22:53.000Z</published>
    <updated>2024-11-05T22:37:33.426Z</updated>
    
    <content type="html"><![CDATA[<p>通过当前网络IP获取天气~</p><h1 id="获取天气的接口"><a href="#获取天气的接口" class="headerlink" title="获取天气的接口"></a>获取天气的接口</h1><p>地址：<br><a class="link"   href="https://weather.sl.al/" >https://weather.sl.al/<i class="fas fa-external-link-alt"></i></a></p><p>参数：<br><a class="link"   href="https://weather.sl.al/?lat=22.2783&lon=114.1747" >https://weather.sl.al/?lat=22.2783&amp;lon=114.1747<i class="fas fa-external-link-alt"></i></a></p><p>&amp;lang&#x3D;en</p><p>lat：纬度</p><p>lon：经度</p><p>lang：语言</p><p>(默认不带 lang 的话为中文)</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;22.2783&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;lon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;114.1747&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;location&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;湾仔&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;region&quot;</span><span class="punctuation">:</span> <span class="string">&quot;湾仔区&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;feelsLike&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;阴&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;airQuality&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;差&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;statement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;空气污染已经达到了很高水平，对敏感人群是不健康的。如果您感到呼吸困难或喉咙刺激等症状，应减少户外活动时间。&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sun&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;duration&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11 hrs 13 mins&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sunrise&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AM6:30&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sunset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PM5:43&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hourly&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;上午7时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;上午8时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;上午9时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;上午10时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;上午11时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午12时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午1时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午2时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午3时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午4时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午5时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午6时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;daily&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-06&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;部分晴，天气宜人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大部分晴，有风&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-07&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大部分晴，微风&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;部分多云，微风&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-08&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大部分晴，天气宜人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主要为晴&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-09&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;部分晴，天气宜人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主要为晴&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-10&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴，天气宜人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-11&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">29</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主要为晴，暖和潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-12&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主要为晴&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-13&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-14&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-15&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span>   </span><br></pre></td></tr></table></figure><h1 id="获取经纬度接口"><a href="#获取经纬度接口" class="headerlink" title="获取经纬度接口"></a>获取经纬度接口</h1><p>获取当前网络经纬度的免费且稳定的接口有几个选择。这些接口通常提供基于IP地址的服务，能够返回访问者的大致地理位置信息，包括经纬度。请注意，基于IP地址的服务精度有限，特别是在城市范围内，因为它们依赖于ISP提供的数据。以下是一些常用的免费API选项：</p><h2 id="1-ip-api-com"><a href="#1-ip-api-com" class="headerlink" title="1. ip-api.com"></a>1. ip-api.com</h2><p>URL: <a class="link"   href="http://ip-api.com/json" >http://ip-api.com/json<i class="fas fa-external-link-alt"></i></a><br>方法: GET<br>返回值: JSON格式的数据，包含国家、地区、城市、邮编、经纬度等信息。</p><h2 id="2-ipinfo-io"><a href="#2-ipinfo-io" class="headerlink" title="2. ipinfo.io"></a>2. ipinfo.io</h2><p>URL: <a class="link"   href="https://ipinfo.io/json" >https://ipinfo.io/json<i class="fas fa-external-link-alt"></i></a><br>方法: GET<br>返回值: JSON格式的数据，包括IP地址、城市、区域、国家、位置（经纬度）、组织等信息。</p><h2 id="3-freegeoip-app"><a href="#3-freegeoip-app" class="headerlink" title="3. freegeoip.app"></a>3. freegeoip.app</h2><p>URL: <a class="link"   href="https://api.freegeoip.app/json/" >https://api.freegeoip.app/json/<i class="fas fa-external-link-alt"></i></a><br>方法: GET<br>请求头: 需要加入 Accept-Language: en 和 User-Agent: YourAppName，其中 YourAppName 应用的名字。<br>返回值: JSON格式的数据，包括IP、国家代码、国家名、地区、城市、邮政编码、纬度、经度等信息。</p><p>使用示例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Get Current Position<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;getLocation()&quot;</span>&gt;</span>Get Location<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;location&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">getLocation</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">fetch</span>(<span class="string">&#x27;https://ipinfo.io/json&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> location = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;location&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                    location.<span class="property">textContent</span> = <span class="string">`Latitude: <span class="subst">$&#123;data.loc.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">0</span>]&#125;</span>, Longitude: <span class="subst">$&#123;data.loc.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>]&#125;</span>`</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error));</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>两者结合</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Weather Information<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.section</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.details</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.hourly-forecast</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.hourly-item</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.daily-forecast</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.daily-item</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;getWeather()&quot;</span>&gt;</span>Get Weather<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;weather-info&quot;</span> <span class="attr">class</span>=<span class="string">&quot;section&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">getWeather</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 获取经纬度</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">fetch</span>(<span class="string">&#x27;https://ipinfo.io/json&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> lat = data.<span class="property">loc</span>.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> lon = data.<span class="property">loc</span>.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">                    </span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 使用经纬度调用天气API</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="title function_">fetch</span>(<span class="string">`https://weather.sl.al/?lat=<span class="subst">$&#123;lat&#125;</span>&amp;lon=<span class="subst">$&#123;lon&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">weatherData</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> weatherInfo = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;weather-info&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                    weatherInfo.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 显示当前天气</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> currentWeather = <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;div class=&quot;section&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;header&quot;&gt;Current Weather in <span class="subst">$&#123;weatherData.location.city&#125;</span>&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;details&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Temperature: <span class="subst">$&#123;weatherData.current.temperature&#125;</span>°C&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Feels Like: <span class="subst">$&#123;weatherData.current.feelsLike&#125;</span>°C&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Description: <span class="subst">$&#123;weatherData.current.description&#125;</span>&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Air Quality: <span class="subst">$&#123;weatherData.current.airQuality.category&#125;</span>&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                <span class="subst">$&#123;weatherData.current.airQuality.statement&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    `</span>;</span></span><br><span class="line"><span class="language-javascript">                    weatherInfo.<span class="property">innerHTML</span> += currentWeather;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 显示今日天气详情</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> todayWeather = <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;div class=&quot;section&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;header&quot;&gt;Today&#x27;s Weather (<span class="subst">$&#123;weatherData.daily[<span class="number">0</span>].date&#125;</span>)&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;details&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                High: <span class="subst">$&#123;weatherData.daily[<span class="number">0</span>].high&#125;</span>°C&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Low: <span class="subst">$&#123;weatherData.daily[<span class="number">0</span>].low&#125;</span>°C&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Day: <span class="subst">$&#123;weatherData.daily[<span class="number">0</span>].dayDescription&#125;</span>&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Night: <span class="subst">$&#123;weatherData.daily[<span class="number">0</span>].nightDescription&#125;</span>&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Rain Probability: <span class="subst">$&#123;weatherData.daily[<span class="number">0</span>].rainProbability&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    `</span>;</span></span><br><span class="line"><span class="language-javascript">                    weatherInfo.<span class="property">innerHTML</span> += todayWeather;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 显示未来几天的天气预报</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> dailyForecast = <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;div class=&quot;section&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;header&quot;&gt;Daily Forecast&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;daily-forecast&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                <span class="subst">$&#123;weatherData.daily.slice(<span class="number">1</span>).map(day =&gt; <span class="string">`</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                    &lt;div class=&quot;daily-item&quot;&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Date: <span class="subst">$&#123;day.date&#125;</span>&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        High: <span class="subst">$&#123;day.high&#125;</span>°C&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Low: <span class="subst">$&#123;day.low&#125;</span>°C&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Day: <span class="subst">$&#123;day.dayDescription&#125;</span>&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Night: <span class="subst">$&#123;day.nightDescription&#125;</span>&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Rain Probability: <span class="subst">$&#123;day.rainProbability&#125;</span></span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                    &lt;/div&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                `</span>).join(<span class="string">&#x27;&#x27;</span>)&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    `</span>;</span></span><br><span class="line"><span class="language-javascript">                    weatherInfo.<span class="property">innerHTML</span> += dailyForecast;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 显示每小时的天气预报</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> hourlyForecast = <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;div class=&quot;section&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;header&quot;&gt;Hourly Forecast&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;hourly-forecast&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                <span class="subst">$&#123;weatherData.hourly.map(hour =&gt; <span class="string">`</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                    &lt;div class=&quot;hourly-item&quot;&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Time: <span class="subst">$&#123;hour.time&#125;</span>&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Temperature: <span class="subst">$&#123;hour.temperature&#125;</span>°C&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Rain Probability: <span class="subst">$&#123;hour.rainProbability&#125;</span></span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                    &lt;/div&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                `</span>).join(<span class="string">&#x27;&#x27;</span>)&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    `</span>;</span></span><br><span class="line"><span class="language-javascript">                    weatherInfo.<span class="property">innerHTML</span> += hourlyForecast;</span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error));</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果为当前天气、今日天气详情、未来几天的天气预报以及每小时的天气预报~<br>（Current Weather、Today’s Weather、Daily Forecast、Hourly Forecast）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;通过当前网络IP获取天气~&lt;/p&gt;
&lt;h1 id=&quot;获取天气的接口&quot;&gt;&lt;a href=&quot;#获取天气的接口&quot; class=&quot;headerlink&quot; title=&quot;获取天气的接口&quot;&gt;&lt;/a&gt;获取天气的接口&lt;/h1&gt;&lt;p&gt;地址：&lt;br&gt;&lt;a class=&quot;link&quot;   href</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="weather" scheme="https://banjinmei.github.io/tags/weather/"/>
    
  </entry>
  
  <entry>
    <title>IIS Web</title>
    <link href="https://banjinmei.github.io/2024/11/04/IIS-Web/"/>
    <id>https://banjinmei.github.io/2024/11/04/IIS-Web/</id>
    <published>2024-11-03T17:43:24.000Z</published>
    <updated>2024-11-03T17:48:42.507Z</updated>
    
    <content type="html"><![CDATA[<!-- server2016 --><h1 id="IIS-Web迁移"><a href="#IIS-Web迁移" class="headerlink" title="IIS Web迁移"></a>IIS Web迁移</h1><p>mstsc远程</p><h1 id="安装iis"><a href="#安装iis" class="headerlink" title="安装iis"></a>安装iis</h1><p>本地机子开启远程Err<br>出现“身份验证错误。要求的函数不受支持。远程计算机：xxx，这可能是由于CredSSP加密Oracle修正。 </p><p>运行 gpedit.msc，选择“计算机配置”-&gt;“管理模板”-&gt;“系统”-&gt;“凭据分配”，选择“加密 Oracle 修正”，改为启用，选择“易受攻击”，OK。</p><h1 id="备份web"><a href="#备份web" class="headerlink" title="备份web"></a>备份web</h1><p>copy web文件夹</p><h1 id="备份sql-bak"><a href="#备份sql-bak" class="headerlink" title="备份sql.bak"></a>备份sql.bak</h1><p>BACKUP DATABASE [zx] TO DISK &#x3D; ‘C:\zz.bak’;</p><h1 id="还原sql"><a href="#还原sql" class="headerlink" title="还原sql"></a>还原sql</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--err 因为数据库正在使用，所以无法获得对数据库的独占访问权。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE zx <span class="keyword">SET</span> SINGLE_USER <span class="keyword">WITH</span> <span class="keyword">ROLLBACK</span> IMMEDIATE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RESTORE DATABASE zx</span><br><span class="line"><span class="keyword">FROM</span> DISK <span class="operator">=</span></span><br><span class="line"><span class="string">&#x27;c:\webx\zx.bak&#x27;</span></span><br><span class="line"><span class="keyword">with</span> replace,</span><br><span class="line">MOVE <span class="string">&#x27;zx&#x27;</span> <span class="keyword">TO</span> <span class="string">&#x27;C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\zx.mdf&#x27;</span>,</span><br><span class="line">MOVE <span class="string">&#x27;zx_log&#x27;</span> <span class="keyword">TO</span></span><br><span class="line"><span class="string">&#x27;C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\zx_log.ldf&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--设置MULTI_USER模式</span></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE [zx] <span class="keyword">SET</span> MULTI_USER;</span><br></pre></td></tr></table></figure><h1 id="iis部署"><a href="#iis部署" class="headerlink" title="iis部署"></a>iis部署</h1><p>设置文件夹权限</p><p>设置xx.com跳转<a class="link"   href="http://www.xx.com/" >www.xx.com<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">system.webServer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">httpRedirect</span> <span class="attr">enabled</span>=<span class="string">&quot;true&quot;</span> <span class="attr">destination</span>=<span class="string">&quot;http://www.xx.com&quot;</span> <span class="attr">exactDestination</span>=<span class="string">&quot;true&quot;</span> <span class="attr">httpResponseStatus</span>=<span class="string">&quot;Permanent&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">system.webServer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><!-- rdhttps://blog.csdn.net/DT_FlagshipStore/article/details/132121946 -->]]></content>
    
    
      
      
    <summary type="html">&lt;!-- server2016 --&gt;

&lt;h1 id=&quot;IIS-Web迁移&quot;&gt;&lt;a href=&quot;#IIS-Web迁移&quot; class=&quot;headerlink&quot; title=&quot;IIS Web迁移&quot;&gt;&lt;/a&gt;IIS Web迁移&lt;/h1&gt;&lt;p&gt;mstsc远程&lt;/p&gt;
&lt;h1 id=&quot;安</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="IIS" scheme="https://banjinmei.github.io/tags/IIS/"/>
    
  </entry>
  
  <entry>
    <title>HarmonyOS应用开发者初级认证题目(2024.11新版，题目&amp;答案)</title>
    <link href="https://banjinmei.github.io/2024/10/31/HarmonyOS-test/"/>
    <id>https://banjinmei.github.io/2024/10/31/HarmonyOS-test/</id>
    <published>2024-10-30T16:36:03.000Z</published>
    <updated>2024-11-04T16:26:04.855Z</updated>
    
    <content type="html"><![CDATA[<p>HarmonyOS应用开发者认证题目(2024.11新版，题目&amp;答案)</p><p><strong>c1 about</strong></p><p>判断题</p><p>1.“一次开发，多端部署”指的是一个工程，一次开发上架，多端按需部署。为了实现这一目的，HarmonyOS提供了多端开发环境，多端开发能力以及多端分发机制。</p><p>正确(True)</p><p>2.《鸿蒙生态应用开发白皮书》全面阐释了鸿蒙生态下应用开发核心理念、关键能力以及创新体验，旨在帮助开发者快速、准确、全面的了解鸿蒙开发套件给开发者提供的能力全景和未来的愿景。</p><p>正确(True)</p><p>3.HUAWEI DevEco Studio是面向HarmonyOS生态的集成开发环境，提供了一站式的HarmonyOS生态应用开发能力。</p><p>正确(True)</p><p>单选题</p><p>1.当用户希望能够在多个设备间来回切换、完成多个任务，开发者可以使用以下哪个核心能力，以便应用不间断地给用户提供服务的能力。</p><p>C. 自由流转</p><p>2.当您希望获取到最全面、最详细的功能描述、参数说明和权限信息时，应该从（）寻找？</p><p>C. API参考</p><p>3.应用如需在多个设备上运行，需要适配不同的屏幕尺寸和分辨率、不同的交互方式（如触摸和键盘等）、不同的硬件能力（如内存差异和器件差异等），开发成本较高。“一次开发，多端部署”提供了哪个核心能力降低了多设备应用的开发成本？</p><p>B. 多端开发能力</p><p>4.如果开发者在原生应用版本的基础上，想要提供多种服务给用户，开发者选择开发场景的最优选是？</p><p>B. 开发多个元服务，按需组合为一个复杂的应用</p><p>多选题</p><p>1.下列哪些选项属于HarmonyOS三大技术理念。</p><p>A. 一次开发，多端部署<br>B. 可分可合，自由流转<br>C. 统一生态，原生智能</p><p>2.用户使用应用的情境发生变化时（例如从室内走到户外、从办公室到车上等），之前使用的设备可能已经不适合继续当前的任务，或者周围有更合适的设备，此时，可以选择使用新的设备来继续当前的任务。以下哪些场景适合使用跨端迁移能力？</p><p>A. 在外时手机上编辑邮件，到公司后在2in1设备上继续编辑<br>B. 在外时手机玩游戏，到家后希望获取更好的视觉体验，在平板上继续玩<br>C. 在家里智慧屏上看视频，当下需要出门时，可以手机上继续观看<br>D. 手机视频通话中，到家后家中有智慧屏，可以更沉浸地视频聊天</p><p>3.下列哪些说法是正确的。</p><p>A. HUAWEI DevEco Studio 提供了设备模拟的能力，解决HarmonyOS生态应用、元服务开发过程中遇到的真机设备不足、无分布式应用调试环境等问题，为开发者提供低成本、易获取的调测验证环境<br>B. 为了降低性能调优技术难度，HUAWEI DevEco Studio推出了场景化调优工具 DevEco Profiler<br>C. HUAWEI DevEco Studio提供了一系列命令行工具，辅助开发者更高效的管理 SDK 、设备，提升调试、调优的效率<br>D. HUAWEI DevEco Studio是面向HarmonyOS生态的集成开发环境，提供了一站式的HarmonyOS生态应用开发能力</p><p><strong>c2 DevEco Studio</strong></p><p>判断题</p><p>1.如果代码中涉及到一些网络、数据库、传感器等功能的开发，均可使用预览器进行预览。</p><p>错误(False)</p><p>2.module.json5文件中的deviceTypes字段中，配置了phone，tablet，2in1等多种设备类型，才能进行多设备预览。</p><p>正确(True)</p><p>3.DevEco Studio支持代码自动补全、自动导包等能力。</p><p>正确(True)</p><p>1.用哪一种装饰器修饰的组件可作为页面入口组件：</p><p>B. @Entry</p><p>2.ArkTS Stage模型，关于其工程目录结构说法不正确的是：</p><p>D. app.json5用于编写应用级编译构建任务脚本</p><p>3.使用下面哪个hdc命令可以查看设备链接信息</p><p>B. hdc list targets</p><p>4.组件预览通过在组件前添加下面哪个注解：</p><p>C. @Preview</p><p>多选题</p><p>1.关于预览器的使用，以下哪些说法是正确的：</p><p>A. 在开发界面UI代码过程中，如果添加或删除了UI组件，您只需Ctrl+S进行保存，然后预览器就会立即刷新预览结果<br>B. 在预览器界面，可以在预览器中操作应用&#x2F;服务的界面交互动作，如单击、跳转、滑动等，与应用&#x2F;服务运行在真机设备上的界面交互体验一致<br>C. 组件预览通过在组件前添加注解@Preview实现<br>D. 页面预览通过在工程的ets文件头部添加注解@Entry实现</p><p>2.DevEco Studio代码编辑支持下面哪些能力：</p><p>A. 代码自动补齐<br>B. 实时检查<br>C. 跨语言跳转<br>D. 代码引用查找<br>E. 快速查阅API接口及组件参考文档</p><p>3.DevEco Studio支持使用多种语言进行应用&#x2F;服务的开发，包括ArkTS、JS和C&#x2F;C++。在编写应用&#x2F;服务阶段，可以通过以下哪些方法提升编码效率：</p><p>A. 提供代码的智能补齐能力，编辑器工具会分析上下文并理解项目内容，并根据输入的内容，提示可补齐的类、方法、字段和关键字的名称等<br>B. 在编辑器中调用ArkTS API接口或ArkTS&#x2F;JS组件时，支持在编辑器中快速、精准调取出对应的参考文档<br>C. 代码格式化功能可以帮助您快速的调整和规范代码格式，提升代码的美观度和可读性<br>D. 如果输入的语法不符合编码规范，或者出现语义语法错误，编辑器会显示错误或警告</p><p>c3</p><p>let const</p><p>let stu:Array<string> &#x3D;[‘a’,’b’];<br>let stus:string [] &#x3D; [‘a’,’b’];</p><p>enum Color{<br>    Red,<br>    Blue<br>}</p><p>let fvColor:Color&#x3D; Color.Red;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;HarmonyOS应用开发者认证题目(2024.11新版，题目&amp;amp;答案)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;c1 about&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;判断题&lt;/p&gt;
&lt;p&gt;1.“一次开发，多端部署”指的是一个工程，一次开发上架，多端按需部署。为了实现这一目的，Ha</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="HarmonyOS" scheme="https://banjinmei.github.io/tags/HarmonyOS/"/>
    
  </entry>
  
  <entry>
    <title>docker pro</title>
    <link href="https://banjinmei.github.io/2024/10/26/docker-pro/"/>
    <id>https://banjinmei.github.io/2024/10/26/docker-pro/</id>
    <published>2024-10-26T14:43:10.000Z</published>
    <updated>2024-10-26T15:07:55.658Z</updated>
    
    <content type="html"><![CDATA[<p>docker 运行有趣的项目 </p><h1 id="Portainer-容器管理面板"><a href="#Portainer-容器管理面板" class="headerlink" title="Portainer - 容器管理面板"></a>Portainer - 容器管理面板</h1><p>Portainer 提供了一个简单易用的 Web 界面来管理和监控 Docker 容器、镜像、网络等。你可以通过下面的命令快速启动它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker volume create portainer_data</span><br><span class="line">docker run -d -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce</span><br></pre></td></tr></table></figure><h1 id="Jenkins-持续集成服务器"><a href="#Jenkins-持续集成服务器" class="headerlink" title="Jenkins - 持续集成服务器"></a>Jenkins - 持续集成服务器</h1><p>Jenkins 是一个流行的开源持续集成工具，用于自动化构建、测试和部署过程。可以通过以下命令启动 Jenkins：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -u root --<span class="built_in">rm</span> -d -p 8080:8080 -p 50000:50000 -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts</span><br><span class="line">docker logs &lt;containerId&gt; </span><br></pre></td></tr></table></figure><p>管理密码 登录<br><a class="link"   href="https://www.jenkins.io/doc/book/system-administration/viewing-logs/" >https://www.jenkins.io/doc/book/system-administration/viewing-logs/<i class="fas fa-external-link-alt"></i></a></p><h1 id="Gitea-自托管的-Git-服务"><a href="#Gitea-自托管的-Git-服务" class="headerlink" title="Gitea - 自托管的 Git 服务"></a>Gitea - 自托管的 Git 服务</h1><p>Gitea 是一个轻量级的代码托管平台，适合个人或小团队使用。使用 Docker 运行 Gitea 非常简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name gitea -p 10022:22 -p 10080:3000 -v /path/to/gitea:/data gitea/gitea:latest</span><br></pre></td></tr></table></figure><h1 id="Nextcloud-自建云盘"><a href="#Nextcloud-自建云盘" class="headerlink" title="Nextcloud - 自建云盘"></a>Nextcloud - 自建云盘</h1><p>Nextcloud 是一个功能强大的自托管文件同步与分享解决方案，支持多种设备访问。启动 Nextcloud 的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name nextcloud -p 8080:80 -v /path/to/nextcloud-data:/var/www/html nextcloud</span><br></pre></td></tr></table></figure><p>设定管理密码 即可使用</p><h1 id="Pi-hole-广告拦截DNS服务器"><a href="#Pi-hole-广告拦截DNS服务器" class="headerlink" title="Pi-hole - 广告拦截DNS服务器"></a>Pi-hole - 广告拦截DNS服务器</h1><p>Pi-hole 可以帮助你拦截广告、跟踪器和其他不需要的内容，为网络浏览体验提供更好的保护。安装和运行 Pi-hole 很简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name pihole --cap-add=NET_ADMIN --dns=127.0.0.1 --dns=8.8.8.8 -e TZ=Asia/Shanghai -p 53:53/tcp -p 53:53/udp -p 80:80 -p 443:443 -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/pihole:/etc/pihole -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/dnsmasq.d:/etc/dnsmasq.d pihole/pihole</span><br></pre></td></tr></table></figure><h1 id="Ghost-博客平台"><a href="#Ghost-博客平台" class="headerlink" title="Ghost - 博客平台"></a>Ghost - 博客平台</h1><p>Ghost 是一个现代化的开源博客平台，专为出版而设计。运行 Ghost 的 Docker 容器只需要一行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name some-ghost -p 2368:2368 ghost</span><br></pre></td></tr></table></figure><h1 id="Nginx-高性能的-Web-和反向代理服务器"><a href="#Nginx-高性能的-Web-和反向代理服务器" class="headerlink" title="Nginx - 高性能的 Web 和反向代理服务器"></a>Nginx - 高性能的 Web 和反向代理服务器</h1><p>Nginx 是一个非常流行和高效的 Web 服务器，适用于静态网站或作为反向代理服务器。启动 Nginx 非常简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name my-nginx -p 80:80 nginx</span><br></pre></td></tr></table></figure><h1 id="WordPress-开源博客平台和-CMS"><a href="#WordPress-开源博客平台和-CMS" class="headerlink" title="WordPress - 开源博客平台和 CMS"></a>WordPress - 开源博客平台和 CMS</h1><p>WordPress 是世界上最受欢迎的博客平台之一，也可以用作内容管理系统 (CMS)。启动 WordPress 需要同时运行 MySQL 数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动 MySQL 数据库</span></span><br><span class="line">docker run -d --name mysql-wordpress -e MYSQL_ROOT_PASSWORD=my-secret-pw -e MYSQL_DATABASE=wordpress -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=my-secret-pw mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 WordPress</span></span><br><span class="line">docker run -d --name wordpress --<span class="built_in">link</span> mysql-wordpress:mysql -p 8080:80 -e WORDPRESS_DB_HOST=mysql-wordpress:3306 -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=my-secret-pw -e WORDPRESS_DB_NAME=wordpress wordpress</span><br></pre></td></tr></table></figure><h1 id="PostgreSQL-强大的开源对象关系型数据库系统"><a href="#PostgreSQL-强大的开源对象关系型数据库系统" class="headerlink" title="PostgreSQL - 强大的开源对象关系型数据库系统"></a>PostgreSQL - 强大的开源对象关系型数据库系统</h1><p>PostgreSQL 是一个非常强大且可靠的数据库系统。启动 PostgreSQL 非常简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name my-postgres -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 postgres</span><br></pre></td></tr></table></figure><h1 id="MongoDB-文档型-NoSQL-数据库"><a href="#MongoDB-文档型-NoSQL-数据库" class="headerlink" title="MongoDB - 文档型 NoSQL 数据库"></a>MongoDB - 文档型 NoSQL 数据库</h1><p>MongoDB 是一个基于分布式文件存储的数据库，适用于大数据处理。启动 MongoDB：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name my-mongo -p 27017:27017 mongo</span><br></pre></td></tr></table></figure><h1 id="Redis-高性能键值存储系统"><a href="#Redis-高性能键值存储系统" class="headerlink" title="Redis - 高性能键值存储系统"></a>Redis - 高性能键值存储系统</h1><p>Redis 是一个高性能的键值数据库，常用于缓存和消息队列。启动 Redis：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name my-redis -p 6379:6379 redis</span><br></pre></td></tr></table></figure><h1 id="MinIO-高性能的对象存储系统"><a href="#MinIO-高性能的对象存储系统" class="headerlink" title="MinIO - 高性能的对象存储系统"></a>MinIO - 高性能的对象存储系统</h1><p>MinIO 是一个高性能的对象存储系统，兼容 Amazon S3 API。非常适合用来搭建私有云存储服务。启动 MinIO：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name minio1 -p 9000:9000 -p 9001:9001 -e <span class="string">&quot;MINIO_ROOT_USER=minioadmin&quot;</span> -e <span class="string">&quot;MINIO_ROOT_PASSWORD=minioadmin&quot;</span> minio/minio server /data --console-address <span class="string">&quot;:9001&quot;</span></span><br></pre></td></tr></table></figure><h1 id="Traefik-现代的-HTTP-反向代理和负载均衡器"><a href="#Traefik-现代的-HTTP-反向代理和负载均衡器" class="headerlink" title="Traefik - 现代的 HTTP 反向代理和负载均衡器"></a>Traefik - 现代的 HTTP 反向代理和负载均衡器</h1><p>Traefik 是一个现代的 HTTP 反向代理和负载均衡器，支持自动发现后端服务。启动 Traefik：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name traefik -p 8080:8080 -p 80:80 -v /var/run/docker.sock:/var/run/docker.sock -v <span class="variable">$PWD</span>/traefik.yml:/etc/traefik/traefik.yml traefik:v2.5</span><br></pre></td></tr></table></figure><p>注意：需要创建一个 traefik.yml 配置文件来指定 Traefik 的行为。</p><h1 id="NetData-实时性能监控工具"><a href="#NetData-实时性能监控工具" class="headerlink" title="NetData - 实时性能监控工具"></a>NetData - 实时性能监控工具</h1><p>NetData 是一个实时性能监控工具，可以监控服务器的各种指标。启动 NetData：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name netdata -p 19999:19999 -v /host/proc:/host/proc:ro -v /etc/os-release:/host/etc/os-release:ro -v /sys:/host/sys:ro -v /etc/passwd:/host/etc/passwd:ro -v /etc/group:/host/etc/group:ro -v /etc/machine-id:/host/etc/machine-id:ro -v /var/lib/netdata:/netdata -v /etc/netdata:/etc/netdata -v /run/docker.sock:/var/run/docker.sock -e NETDATA_CLAIM_TOKEN=my-token -e NETDATA_CLAIM_URL=https://app.netdata.cloud -e NETDATA_CLAIM_ID=my-machine-id netdata/netdata</span><br></pre></td></tr></table></figure><p>这些项目不仅功能强大，而且非常容易通过 Docker 快速启动和运行。</p><h1 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h1><h1 id="Golang-Go-语言开发环境"><a href="#Golang-Go-语言开发环境" class="headerlink" title="Golang - Go 语言开发环境"></a>Golang - Go 语言开发环境</h1><p>Go 是一种静态类型的编译语言，适合构建高效的服务和应用程序。启动一个 Go 语言的开发环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name go-lang golang:latest</span><br></pre></td></tr></table></figure><h1 id="Node-js-JavaScript-运行时环境"><a href="#Node-js-JavaScript-运行时环境" class="headerlink" title="Node.js - JavaScript 运行时环境"></a>Node.js - JavaScript 运行时环境</h1><p>Node.js 允许你在服务器端运行 JavaScript 代码。启动一个 Node.js 环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name node-app node:latest</span><br></pre></td></tr></table></figure><h1 id="Python-多用途编程语言"><a href="#Python-多用途编程语言" class="headerlink" title="Python - 多用途编程语言"></a>Python - 多用途编程语言</h1><p>Python 是一种广泛使用的高级编程语言，适用于各种应用场景。启动一个 Python 环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name python-env python:latest</span><br></pre></td></tr></table></figure><h1 id="Flask-轻量级-Web-应用框架"><a href="#Flask-轻量级-Web-应用框架" class="headerlink" title="Flask - 轻量级 Web 应用框架"></a>Flask - 轻量级 Web 应用框架</h1><p>Flask 是一个用 Python 编写的轻量级 Web 应用框架。启动一个简单的 Flask 应用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name flask-app -p 5000:5000 tiangolo/uwsgi-nginx-flask:python3.7</span><br></pre></td></tr></table></figure><h1 id="Django-高级-Web-框架"><a href="#Django-高级-Web-框架" class="headerlink" title="Django - 高级 Web 框架"></a>Django - 高级 Web 框架</h1><p>Django 是一个高级的 Python Web 框架，鼓励快速开发和干净、实用的设计。启动一个 Django 应用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name django-app -p 8000:8000 python:3.9-slim bash -c <span class="string">&quot;pip install django &amp;&amp; django-admin startproject myproject &amp;&amp; cd myproject &amp;&amp; python manage.py runserver 0.0.0.0:8000&quot;</span></span><br></pre></td></tr></table></figure><h1 id="React-前端-JavaScript-库"><a href="#React-前端-JavaScript-库" class="headerlink" title="React - 前端 JavaScript 库"></a>React - 前端 JavaScript 库</h1><p>React 是一个用于构建用户界面的 JavaScript 库。启动一个 React 开发环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name react-app -p 3000:3000 node:14 bash</span><br><span class="line"><span class="comment"># 在容器内执行以下命令</span></span><br><span class="line">npm init react-app my-app</span><br><span class="line"><span class="built_in">cd</span> my-app</span><br><span class="line">npm start</span><br><span class="line">Vue.js - 前端 JavaScript 框架</span><br><span class="line">Vue.js 是一个用于构建用户界面的渐进式框架。启动一个 Vue.js 开发环境：</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name vue-app -p 8080:8080 node:14 bash</span><br><span class="line"><span class="comment"># 在容器内执行以下命令</span></span><br><span class="line">npm install -g @vue/cli</span><br><span class="line">vue create my-app</span><br><span class="line"><span class="built_in">cd</span> my-app</span><br><span class="line">npm run serve</span><br><span class="line">Gatsby - 静态站点生成器</span><br><span class="line">Gatsby 是一个基于 React 的静态站点生成器，适合构建静态网站和博客。启动一个 Gatsby 开发环境：</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name gatsby-app -p 8000:8000 node:14 bash</span><br><span class="line"><span class="comment"># 在容器内执行以下命令</span></span><br><span class="line">npm install -g gatsby-cli</span><br><span class="line">gatsby new my-site</span><br><span class="line"><span class="built_in">cd</span> my-site</span><br><span class="line">gatsby develop</span><br></pre></td></tr></table></figure><h1 id="Next-js-React-框架的全栈解决方案"><a href="#Next-js-React-框架的全栈解决方案" class="headerlink" title="Next.js - React 框架的全栈解决方案"></a>Next.js - React 框架的全栈解决方案</h1><p>Next.js 是一个用于构建服务器渲染的 React 应用程序的框架。启动一个 Next.js 开发环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name next-app -p 3000:3000 node:14 bash</span><br><span class="line"><span class="comment"># 在容器内执行以下命令</span></span><br><span class="line">npx create-next-app my-app</span><br><span class="line"><span class="built_in">cd</span> my-app</span><br><span class="line">npm run dev</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="drawio"><a href="#drawio" class="headerlink" title="drawio"></a>drawio</h1><p>这是一个高人气的免费在线图表软件，用于创建流程图、UML 图、架构图等。支持多种文件格式，并且可以与 Google Drive、OneDrive 等云存储服务集成，支持实时协作编辑功能。在线使用地址：<a class="link"   href="https://app.diagrams.net/" >https://app.diagrams.net/<i class="fas fa-external-link-alt"></i></a> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --<span class="built_in">rm</span> --name=<span class="string">&quot;draw&quot;</span> -p 8080:8080 -p 8443:8443 jgraph/drawio</span><br></pre></td></tr></table></figure><!-- --><h1 id="easyimage"><a href="#easyimage" class="headerlink" title="easyimage"></a>easyimage</h1><p>一个简单的图床程序，功能简单，无需数据库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name easyimage -p 8080:80 -e TZ=Asia/Shanghai -e PUID=1000 -e PGID=1000 -e DEBUG=<span class="literal">false</span> -v /share/Data/easyimage/config:/app/web/config -v /share/Data/easyimage/i:/app/web/i ddsderek/easyimage:latest</span><br></pre></td></tr></table></figure><h1 id="Neko"><a href="#Neko" class="headerlink" title="Neko"></a>Neko</h1><p>这是一个在 Docker 中运行并使用 WebRTC 技术的自托管虚拟浏览器。Neko 是一个功能强大的工具，允许您在虚拟环境中运行功能齐全的浏览器，使您能够从任何地方安全、私密地访问互联网。借助 Neko，您可以像在常规浏览器上一样浏览网页、运行应用程序并执行其他任务，所有这些都在安全且隔离的环境中进行。无论您是想要测试 Web 应用程序的开发人员、寻求安全浏览体验的注重隐私的用户，还是只是想要利用虚拟浏览器的便利性和灵活性的人，Neko 是完美的解决方案。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">   --restart always  \</span><br><span class="line">   --name neko \</span><br><span class="line">   --shm-size=<span class="string">&quot;2gb&quot;</span> \</span><br><span class="line">   -p 8080:8080 \</span><br><span class="line">   -p 52000-52100:52000-52100/udp \</span><br><span class="line">   -e NEKO_PASSWORD=<span class="string">&#x27;neko&#x27;</span> \</span><br><span class="line">   -e NEKO_PASSWORD_ADMIN=<span class="string">&#x27;admin&#x27;</span> \</span><br><span class="line">   -e NEKO_NAT1TO1=43.156.38.52 \</span><br><span class="line">   -e NEKO_SCREEN=1920x1080@30 \</span><br><span class="line">   -e NEKO_ICELITE=1 \</span><br><span class="line">   -e NEKO_EPR=52000-52100 \</span><br><span class="line">   m1k1o/neko:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="speedtest-x"><a href="#speedtest-x" class="headerlink" title="speedtest-x"></a>speedtest-x</h1><p>网速测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name speedtest-x --restart always -p 9001:80 -it badapple9/speedtest-x</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="myspeed-网速测试"><a href="#myspeed-网速测试" class="headerlink" title="myspeed 网速测试"></a>myspeed 网速测试</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">   --restart always  \</span><br><span class="line">   --name myspeed \</span><br><span class="line">   -p 8080:5216 \</span><br><span class="line">   -v /data/myspeed/data:/myspeed/data \</span><br><span class="line">   germannewsmaker/myspeed</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="SurveyKing调查问卷系统和考试系统"><a href="#SurveyKing调查问卷系统和考试系统" class="headerlink" title="SurveyKing调查问卷系统和考试系统"></a>SurveyKing调查问卷系统和考试系统</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name SurveyKing --restart always -p 8080:1991 surveyking/surveyking</span><br></pre></td></tr></table></figure><p>admin  123456 驾考考试&#x2F;问卷 </p><h1 id="EnBizCard"><a href="#EnBizCard" class="headerlink" title="EnBizCard"></a>EnBizCard</h1><p>基于 HTML 的交互式和响应式数字名片。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">   --restart unless-stopped \</span><br><span class="line">   --name enbizcard \</span><br><span class="line">   -p 5600:80 \</span><br><span class="line">   swr.cn-north-4.myhuaweicloud.com/jeven/enbizcard</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="SyncTV"><a href="#SyncTV" class="headerlink" title="SyncTV"></a>SyncTV</h1><p>一起看视频</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name synctv -p 8080:8080 synctvorg/synctv</span><br><span class="line"></span><br><span class="line">docker run -d \  \</span><br><span class="line">--name briefing \</span><br><span class="line">-v /datar/briefing/data:/app/data \</span><br><span class="line">-p 8080:8080 \</span><br><span class="line">--restart always \</span><br><span class="line">holtwick/briefing</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="go-file-图床"><a href="#go-file-图床" class="headerlink" title="go-file 图床"></a>go-file 图床</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /data/go-file/data</span><br><span class="line"><span class="built_in">chmod</span> -R 777 /data/go-file/</span><br><span class="line"></span><br><span class="line">docker run -d --restart always -p 8080:3000 -e TZ=Asia/Shanghai -v /data/go-file/data:/data justsong/go-file</span><br></pre></td></tr></table></figure><h1 id="Adminer-轻量级的-MySQL-管理工具"><a href="#Adminer-轻量级的-MySQL-管理工具" class="headerlink" title="Adminer  轻量级的 MySQL 管理工具"></a>Adminer  轻量级的 MySQL 管理工具</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name adminer -d -p 8080:8080 adminer</span><br></pre></td></tr></table></figure><h1 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h1><p>使用 Docker Compose 来启动一个包含 Nginx 和 PHP-FPM 的 WordPress 环境。</p><h2 id="步骤-1-安装-Docker-和-Docker-Compose"><a href="#步骤-1-安装-Docker-和-Docker-Compose" class="headerlink" title="步骤 1: 安装 Docker 和 Docker Compose"></a>步骤 1: 安装 Docker 和 Docker Compose</h2><p>首先，确保你已经在机器上安装了 Docker 和 Docker Compose。</p><h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><p>打开终端或命令提示符。<br>根据操作系统，按照官方文档安装 Docker：<br>Ubuntu:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker.io</span><br><span class="line">MacOS: 下载并安装 Docker Desktop <span class="keyword">for</span> Mac</span><br><span class="line">Windows: 下载并安装 Docker Desktop <span class="keyword">for</span> Windows</span><br><span class="line">安装 Docker Compose</span><br></pre></td></tr></table></figure><p>在终端或命令提示符中运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h2 id="步骤-2-创建项目目录"><a href="#步骤-2-创建项目目录" class="headerlink" title="步骤 2: 创建项目目录"></a>步骤 2: 创建项目目录</h2><p>创建一个新的目录来存放项目文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> wordpress-project</span><br><span class="line"><span class="built_in">cd</span> wordpress-project</span><br></pre></td></tr></table></figure><h1 id="步骤-3-创建-docker-compose-yml-文件"><a href="#步骤-3-创建-docker-compose-yml-文件" class="headerlink" title="步骤 3: 创建 docker-compose.yml 文件"></a>步骤 3: 创建 docker-compose.yml 文件</h1><p>使用你喜欢的文本编辑器（如 nano 或 vim）创建 docker-compose.yml 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><h2 id="将以下内容复制并粘贴到-docker-compose-yml-文件中："><a href="#将以下内容复制并粘贴到-docker-compose-yml-文件中：" class="headerlink" title="将以下内容复制并粘贴到 docker-compose.yml 文件中："></a>将以下内容复制并粘贴到 docker-compose.yml 文件中：</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db_data:/var/lib/mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">somewordpress</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">wordpress</span></span><br><span class="line">  <span class="attr">wordpress:</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wordpress:latest</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8000:80&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_HOST:</span> <span class="string">db:3306</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_USER:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_PASSWORD:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_NAME:</span> <span class="string">wordpress</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">db_data:</span></span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h2 id="步骤-4-启动-Docker-Compose"><a href="#步骤-4-启动-Docker-Compose" class="headerlink" title="步骤 4: 启动 Docker Compose"></a>步骤 4: 启动 Docker Compose</h2><p>在终端或命令提示符中，导航到项目目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> wordpress-project</span><br></pre></td></tr></table></figure><h2 id="运行以下命令启动-Docker-Compose："><a href="#运行以下命令启动-Docker-Compose：" class="headerlink" title="运行以下命令启动 Docker Compose："></a>运行以下命令启动 Docker Compose：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>-d 参数表示在后台运行容器。</p><h2 id="步骤-5-访问-WordPress"><a href="#步骤-5-访问-WordPress" class="headerlink" title="步骤 5: 访问 WordPress"></a>步骤 5: 访问 WordPress</h2><p>打开浏览器，访问 <a href="http://localhost:8000。">http://localhost:8000。</a><br>看到 WordPress 的安装页面。按照提示完成安装过程。</p><h2 id="步骤-6-停止和删除容器"><a href="#步骤-6-停止和删除容器" class="headerlink" title="步骤 6: 停止和删除容器"></a>步骤 6: 停止和删除容器</h2><p>如果你需要停止和删除所有容器，可以运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down</span><br></pre></td></tr></table></figure><p>version: ‘3’: 指定 Docker Compose 文件的版本。<br>services: 定义了多个服务，每个服务对应一个容器。<br>db: 定义了一个 MySQL 数据库服务。<br>image: mysql:5.7: 使用 MySQL 5.7 镜像。<br>volumes: 将主机上的 db_data 卷挂载到容器的 &#x2F;var&#x2F;lib&#x2F;mysql 目录。<br>environment: 设置环境变量，如数据库密码和用户名。<br>wordpress: 定义了一个 WordPress 服务。<br>depends_on: 指定该服务依赖于 db 服务。<br>image: wordpress:latest: 使用最新版本的 WordPress 镜像。<br>ports: 将主机的 8000 端口映射到容器的 80 端口。<br>environment: 设置环境变量，如数据库主机地址和用户名。<br>volumes: 定义了数据卷，用于持久化数据。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;docker 运行有趣的项目 &lt;/p&gt;
&lt;h1 id=&quot;Portainer-容器管理面板&quot;&gt;&lt;a href=&quot;#Portainer-容器管理面板&quot; class=&quot;headerlink&quot; title=&quot;Portainer - 容器管理面板&quot;&gt;&lt;/a&gt;Portainer - 容</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>android run linux</title>
    <link href="https://banjinmei.github.io/2024/10/26/android-run-linux/"/>
    <id>https://banjinmei.github.io/2024/10/26/android-run-linux/</id>
    <published>2024-10-26T14:39:32.000Z</published>
    <updated>2024-10-26T14:42:42.358Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在安卓中运行linux"><a href="#在安卓中运行linux" class="headerlink" title="在安卓中运行linux"></a>在安卓中运行linux</h1><h2 id="AnLinux-App"><a href="#AnLinux-App" class="headerlink" title="AnLinux-App"></a>AnLinux-App</h2><p><a class="link"   href="https://github.com/EXALAB/AnLinux-App" >https://github.com/EXALAB/AnLinux-App<i class="fas fa-external-link-alt"></i></a><br>download anlinux</p><p>安装完<br>选择安装的linux系统</p><p>复制启动&#x2F;安装命令</p><h2 id="安装termux（如果没装）"><a href="#安装termux（如果没装）" class="headerlink" title="安装termux（如果没装）"></a>安装termux（如果没装）</h2><p><a class="link"   href="https://github.com/termux/termux-app" >https://github.com/termux/termux-app<i class="fas fa-external-link-alt"></i></a></p><p>（安装好了之后，进入termux界面：</p><p>执行termux-setup-storage   来申请一下内存卡权限</p><p>然后同意就行了，之后执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg update &amp;&amp; pkg upgrade）</span><br></pre></td></tr></table></figure><p>启动 粘贴运行命令</p><p>安装完 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./start-debian.sh</span><br></pre></td></tr></table></figure><p>启动 debian</p><h2 id="查IP"><a href="#查IP" class="headerlink" title="查IP"></a>查IP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">su</span><br><span class="line"></span><br><span class="line">apt update</span><br><span class="line">apt install sudo</span><br><span class="line"></span><br><span class="line">sudo apt install net-tools</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">su</span><br><span class="line"><span class="comment"># 输入当前 root 用户的密码</span></span><br><span class="line">passwd</span><br><span class="line"><span class="comment"># 输入新密码</span></span><br><span class="line">Enter new UNIX password:</span><br><span class="line"><span class="comment"># 再次输入新密码以确认</span></span><br><span class="line">Retype new UNIX password:</span><br><span class="line"><span class="comment"># 确认密码更改成功</span></span><br><span class="line">passwd: password updated successfully</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;在安卓中运行linux&quot;&gt;&lt;a href=&quot;#在安卓中运行linux&quot; class=&quot;headerlink&quot; title=&quot;在安卓中运行linux&quot;&gt;&lt;/a&gt;在安卓中运行linux&lt;/h1&gt;&lt;h2 id=&quot;AnLinux-App&quot;&gt;&lt;a href=&quot;#AnLinu</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="linux" scheme="https://banjinmei.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>.net orm</title>
    <link href="https://banjinmei.github.io/2024/10/26/net-orm/"/>
    <id>https://banjinmei.github.io/2024/10/26/net-orm/</id>
    <published>2024-10-26T14:35:57.000Z</published>
    <updated>2024-10-26T14:38:36.599Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SqlSugar"><a href="#SqlSugar" class="headerlink" title="SqlSugar"></a>SqlSugar</h1><p>nuget 安装 SqlSugar</p><p>安装 MySql.Data</p><p>实体类 </p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">SugarTable(<span class="string">&quot;IMMenu&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">class</span> <span class="title">IMMenu</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">SugarColumn(IsPrimaryKey = true, IsIdentity = true)</span>] <span class="comment">//id</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他属性...</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">$&quot;id: <span class="subst">&#123;id&#125;</span>, name: <span class="subst">&#123;name&#125;</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 连接字符串</span></span><br><span class="line"><span class="built_in">string</span> connectionString = <span class="string">&quot;server=xxx;user=root;password=xxx;database=DB&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建SqlSugar客户端实例</span></span><br><span class="line">SqlSugarClient db = <span class="keyword">new</span> SqlSugarClient(<span class="keyword">new</span> ConnectionConfig()</span><br><span class="line">&#123;</span><br><span class="line">    ConnectionString = connectionString,</span><br><span class="line">    DbType = DbType.MySql,</span><br><span class="line">    IsAutoCloseConnection = <span class="literal">true</span>,</span><br><span class="line">    InitKeyType = InitKeyType.Attribute</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询数据</span></span><br><span class="line"><span class="keyword">var</span> data = db.Queryable&lt;IMMenu&gt;().ToList();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line">data.ForEach(item =&gt; Console.WriteLine(item.ToString()));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="dapper"><a href="#dapper" class="headerlink" title="dapper"></a>dapper</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IMMenu</span></span><br><span class="line">&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DapperExample</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IEnumerable&lt;IMMenu&gt; <span class="title">GetAllIMMenus</span>(<span class="params"><span class="built_in">string</span> connectionString</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (IDbConnection db = <span class="keyword">new</span> MySqlConnection(connectionString))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> db.Query&lt;IMMenu&gt;(<span class="string">&quot;SELECT * FROM IMMenu&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="built_in">string</span> connectionString = <span class="string">&quot;server=xxx;user=root;password=xxx;database=DB&quot;</span>;</span><br><span class="line"></span><br><span class="line">IEnumerable&lt;IMMenu&gt; ms = DapperExample.GetAllIMMenus(connectionString);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> m <span class="keyword">in</span> ms)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;Id: <span class="subst">&#123;m.id&#125;</span>, Name: <span class="subst">&#123;m.name&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="EF-EF-Core"><a href="#EF-EF-Core" class="headerlink" title="EF&#x2F;EF Core"></a>EF&#x2F;EF Core</h1><p>Entity Framework (EF) Core 是轻量化、可扩展、开源和跨平台版的常用 Entity Framework 数据访问技术，EF Core 是适用于 .NET 的现代对象数据库映射器。它支持 LINQ 查询、更改跟踪、更新和架构迁移。EF Core 通过提供程序插件 API 与 SQL Server、Azure SQL 数据库、SQLite、Azure Cosmos DB、MySQL、PostgreSQL 和其他数据库一起使用（微软官方出品）。</p><p>官方文档教程：<a class="link"   href="https://docs.microsoft.com/zh-cn/ef/" >https://docs.microsoft.com/zh-cn/ef/<i class="fas fa-external-link-alt"></i></a><br>GitHub地址：<a class="link"   href="https://github.com/dotnet/efcore" >https://github.com/dotnet/efcore<i class="fas fa-external-link-alt"></i></a></p><h1 id="Dapper"><a href="#Dapper" class="headerlink" title="Dapper"></a>Dapper</h1><p>Dapper是一个简单的.NET对象映射器，在速度方面具有”King of Micro ORM”的头衔，几乎与使用原始的ADO.NET数据读取器一样快。ORM是一个对象关系映射器，它负责数据库和编程语言之间的映射。Dapper通过扩展IDbConnection提供一些有用的扩展方法去查询您的数据库。</p><p>官方文档教程：<a class="link"   href="https://www.learndapper.com/" >https://www.learndapper.com/<i class="fas fa-external-link-alt"></i></a><br>GitHub地址：<a class="link"   href="https://github.com/DapperLib/Dapper" >https://github.com/DapperLib/Dapper<i class="fas fa-external-link-alt"></i></a></p><h1 id="SqlSugar-1"><a href="#SqlSugar-1" class="headerlink" title="SqlSugar"></a>SqlSugar</h1><p>SqlSugar 是一款 老牌 .NET 开源多库架构ORM框架（EF Core单库架构），由果糖大数据科技团队 维护和更新 ，开箱即用最易上手的.NET ORM框架 。</p><p>官网地址：<a class="link"   href="http://www.donet5.com/" >http://www.donet5.com<i class="fas fa-external-link-alt"></i></a><br>GitHub地址：<a class="link"   href="https://github.com/donet5/SqlSugar" >https://github.com/donet5/SqlSugar<i class="fas fa-external-link-alt"></i></a></p><h1 id="FreeSql"><a href="#FreeSql" class="headerlink" title="FreeSql"></a>FreeSql</h1><p>FreeSql 是一款功能强大的对象关系映射（O&#x2F;RM）组件，支持 .NET Core 2.1+、.NET Framework 4.0+ 以及 Xamarin。</p><p>GitHub地址：<a class="link"   href="https://github.com/dotnetcore/FreeSql" >https://github.com/dotnetcore/FreeSql<i class="fas fa-external-link-alt"></i></a></p><h1 id="Chloe-ORM"><a href="#Chloe-ORM" class="headerlink" title="Chloe.ORM"></a>Chloe.ORM</h1><p>Chloe.ORM 是一款国产十分稳定可靠的 ORM 框架。除了常规增删查改外还支持连接查询、分组查询、聚合查询、子查询，大部分操作可通过 lambda 完成。还支持分库分表分页、聚合、分组聚合，并支持多个字段组合分片以及多字段路由。</p><p>文档地址：https :&#x2F;&#x2F;github.com&#x2F;shuxinqin&#x2F;Chloe&#x2F;wiki<br>GitHub地址：<a class="link"   href="https://github.com/shuxinqin/Chloe" >https://github.com/shuxinqin/Chloe<i class="fas fa-external-link-alt"></i></a></p><h1 id="nhibernate-core"><a href="#nhibernate-core" class="headerlink" title="nhibernate-core"></a>nhibernate-core</h1><p>NHibernate是.NET框架的成熟、开源的对象关系映射工具。它在积极开发中，功能齐全，并已成功应用于数千个项目中。</p><p>NHibernate社区网站: <a class="link"   href="https://nhibernate.info/" >https://nhibernate.info<i class="fas fa-external-link-alt"></i></a><br>GitHub地址：<a class="link"   href="https://github.com/nhibernate/nhibernate-core" >https://github.com/nhibernate/nhibernate-core<i class="fas fa-external-link-alt"></i></a></p><h1 id="SmartSql"><a href="#SmartSql" class="headerlink" title="SmartSql"></a>SmartSql</h1><p>SmartSql &#x3D; C# 中的 MyBatis + .NET Core+ 缓存（内存 | Redis）+ R&#x2F;W 拆分 + PropertyChangedTrack +动态存储库 + InvokeSync + 诊断。SmartSql 借鉴了 MyBatis 的思想，使用 XML 来管理 SQL ，并且提供了若干个筛选器标签来消除代码层面的各种 if&#x2F;else 的判断分支。SmartSql将管理你的 SQL ，并且通过筛选标签来维护本来你在代码层面的各种条件判断，使你的代码更加优美。</p><p>文档地址： <a class="link"   href="https://smartsql.net/guide/" >https://smartsql.net/guide/<i class="fas fa-external-link-alt"></i></a><br>GitHub地址：<a class="link"   href="https://github.com/dotnetcore/SmartSql" >https://github.com/dotnetcore/SmartSql<i class="fas fa-external-link-alt"></i></a></p><h1 id="PetaPoco"><a href="#PetaPoco" class="headerlink" title="PetaPoco"></a>PetaPoco</h1><p>PetaPoco 是一个用于 .NET（4、4.5+、net standard 2.0+）和 Mono 的微型、快速、易于使用的 micro-ORM。由于 PetaPoco 所代表的简单性和易用性，它受到许多人的喜爱。PetaPoco 是首选的微 ORM，也是任何体面的开发人员工具包中必不可少的实用程序。</p><p>文档地址：<a class="link"   href="https://discoverdot.net/projects/peta-poco" >https://discoverdot.net/projects/peta-poco<i class="fas fa-external-link-alt"></i></a><br>GitHub地址：<a class="link"   href="https://github.com/CollaboratingPlatypus/PetaPoco" >https://github.com/CollaboratingPlatypus/PetaPoco<i class="fas fa-external-link-alt"></i></a></p><h1 id="linq2db"><a href="#linq2db" class="headerlink" title="linq2db"></a>linq2db</h1><p>LINQ to DB 是最快的LINQ数据库访问库，在POCO对象和数据库之间提供了一个简单、轻量、快速且类型安全的层。在架构上，它比 Dapper、Massive 或 PetaPoco 等微 ORM 高出一步，因为您使用 LINQ 表达式，而不是魔术字符串，同时在代码和数据库之间维护一个薄抽象层。您的查询由 C# 编译器检查并允许轻松重构。但是，它不像 LINQ to SQL 或实体框架那么重。没有更改跟踪，因此您必须自己进行管理，但从积极的方面来说，您可以获得更多控制权并更快地访问您的数据。</p><p>文档地址：<a class="link"   href="https://linq2db.github.io/" >https://linq2db.github.io/<i class="fas fa-external-link-alt"></i></a><br>GitHub地址：<a class="link"   href="https://github.com/linq2db/linq2db" >https://github.com/linq2db/linq2db<i class="fas fa-external-link-alt"></i></a></p><h1 id="RepoDb"><a href="#RepoDb" class="headerlink" title="RepoDb"></a>RepoDb</h1><p>RepoDB是一个开源的.NET ORM库，它弥合了微ORM和完整ORM之间的差距。它帮助您简化在开发过程中何时使用基本操作和高级操作的切换。</p><p>GitHub地址：<a class="link"   href="https://github.com/mikependon/RepoDB" >https://github.com/mikependon/RepoDB<i class="fas fa-external-link-alt"></i></a></p><h1 id="ServiceStack-OrmLite"><a href="#ServiceStack-OrmLite" class="headerlink" title="ServiceStack.OrmLite"></a>ServiceStack.OrmLite</h1><p>OrmLite是一个快速、简单、类型化的.NET ORM，OrmLite 的目标是提供一个方便、DRY、无配置、与 RDBMS 无关的类型包装器，该包装器与 SQL 保持高度亲和性，公开直观的 API，生成可预测的 SQL 并干净地映射到断开连接和数据传输对象 (DTO) 友好、普通的旧C# 对象 (POCO)。这种方法更容易推理您的数据访问，从而清楚地知道什么 SQL 在什么时间执行，同时减轻意外行为、隐式 N+1 查询和重对象关系映射器 (ORM) 中普遍存在的泄漏数据访问。</p><p>文档地址：<a class="link"   href="https://docs.servicestack.net/ormlite/" >https://docs.servicestack.net/ormlite/<i class="fas fa-external-link-alt"></i></a><br>GitHub地址：<a class="link"   href="https://github.com/ServiceStack/ServiceStack.OrmLite" >https://github.com/ServiceStack/ServiceStack.OrmLite<i class="fas fa-external-link-alt"></i></a></p><h1 id="SQLite-net"><a href="#SQLite-net" class="headerlink" title="SQLite-net"></a>SQLite-net</h1><p>简单、强大、跨平台的 SQLite 客户端和 .NET 的 ORM。</p><p>GitHub地址：<a class="link"   href="https://github.com/praeclarum/sqlite-net" >https://github.com/praeclarum/sqlite-net<i class="fas fa-external-link-alt"></i></a></p><h1 id="Insight-Database"><a href="#Insight-Database" class="headerlink" title="Insight.Database"></a>Insight.Database</h1><p>Insight.Database是一个用于 .NET 的快速、轻量级的 micro-orm。</p><p>GitHub地址：<a class="link"   href="https://github.com/jonwagner/Insight.Database" >https://github.com/jonwagner/Insight.Database<i class="fas fa-external-link-alt"></i></a></p><h1 id="cyqdata"><a href="#cyqdata" class="headerlink" title="cyqdata"></a>cyqdata</h1><p>cyq.data是一个高性能且功能最强大的orm（支持.NET Core），支持Txt、Xml、Access、Sqlite、Mssql、Mysql、Oracle、Sybase、Postgres、DB2、Redis、MemCache。</p><p>GitHub地址：<a class="link"   href="https://github.com/cyq1162/cyqdata" >https://github.com/cyq1162/cyqdata<i class="fas fa-external-link-alt"></i></a></p><h1 id="querybuilder"><a href="#querybuilder" class="headerlink" title="querybuilder"></a>querybuilder</h1><p>SQL 查询构建器，用 c# 编写，帮助您轻松构建复杂的查询，支持 SqlServer、MySql、PostgreSql、Oracle、Sqlite 和 Firebird。</p><p>官网地址：<a class="link"   href="https://sqlkata.com/" >https://sqlkata.com/<i class="fas fa-external-link-alt"></i></a><br>GitHub地址：<a class="link"   href="https://github.com/sqlkata/querybuilder" >https://github.com/sqlkata/querybuilder<i class="fas fa-external-link-alt"></i></a></p><h1 id="TinyORM"><a href="#TinyORM" class="headerlink" title="TinyORM"></a>TinyORM</h1><p>TinyORM是一个简单、快速且安全的微型.NET ORM。</p><p>Wiki地址：<a class="link"   href="https://github.com/sdrapkin/SecurityDriven.TinyORM/wiki" >https://github.com/sdrapkin/SecurityDriven.TinyORM/wiki<i class="fas fa-external-link-alt"></i></a><br>GitHub地址：<a class="link"   href="https://github.com/sdrapkin/SecurityDriven.TinyORM" >https://github.com/sdrapkin/SecurityDriven.TinyORM<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;SqlSugar&quot;&gt;&lt;a href=&quot;#SqlSugar&quot; class=&quot;headerlink&quot; title=&quot;SqlSugar&quot;&gt;&lt;/a&gt;SqlSugar&lt;/h1&gt;&lt;p&gt;nuget 安装 SqlSugar&lt;/p&gt;
&lt;p&gt;安装 MySql.Data&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
    <category term="orm" scheme="https://banjinmei.github.io/tags/orm/"/>
    
  </entry>
  
  <entry>
    <title>.NET ZIP</title>
    <link href="https://banjinmei.github.io/2024/10/17/NET-ZIP/"/>
    <id>https://banjinmei.github.io/2024/10/17/NET-ZIP/</id>
    <published>2024-10-16T17:03:45.000Z</published>
    <updated>2024-10-16T17:06:35.265Z</updated>
    
    <content type="html"><![CDATA[<!-- System.IO.Compression。 --><h1 id="压缩一个目录为-ZIP-文件"><a href="#压缩一个目录为-ZIP-文件" class="headerlink" title="压缩一个目录为 ZIP 文件"></a>压缩一个目录为 ZIP 文件</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO.Compression;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> startPath = <span class="string">@&quot;c:\example\start&quot;</span>; <span class="comment">// 要压缩的目录路径</span></span><br><span class="line">        <span class="built_in">string</span> zipPath = <span class="string">@&quot;c:\example\result.zip&quot;</span>; <span class="comment">// 输出的 ZIP 文件路径</span></span><br><span class="line"></span><br><span class="line">        ZipFile.CreateFromDirectory(startPath, zipPath);</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;压缩完成！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="压缩单个文件到-ZIP-文件"><a href="#压缩单个文件到-ZIP-文件" class="headerlink" title="压缩单个文件到 ZIP 文件"></a>压缩单个文件到 ZIP 文件</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.IO.Compression;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> filePath = <span class="string">@&quot;c:\example\file.txt&quot;</span>; <span class="comment">// 要压缩的文件路径</span></span><br><span class="line">        <span class="built_in">string</span> zipPath = <span class="string">@&quot;c:\example\result.zip&quot;</span>; <span class="comment">// 输出的 ZIP 文件路径</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">using</span> (FileStream fs = File.OpenRead(filePath))</span><br><span class="line">        <span class="keyword">using</span> (FileStream zipFs = File.Create(zipPath))</span><br><span class="line">        <span class="keyword">using</span> (ZipArchive archive = <span class="keyword">new</span> ZipArchive(zipFs, ZipArchiveMode.Create))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> fileEntry = archive.CreateEntry(Path.GetFileName(filePath));</span><br><span class="line">            <span class="keyword">using</span> (Stream entryStream = fileEntry.Open())</span><br><span class="line">            &#123;</span><br><span class="line">                fs.CopyTo(entryStream);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;压缩完成！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="解压-ZIP-文件"><a href="#解压-ZIP-文件" class="headerlink" title="解压 ZIP 文件"></a>解压 ZIP 文件</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO.Compression;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> zipPath = <span class="string">@&quot;c:\example\result.zip&quot;</span>; <span class="comment">// 输入的 ZIP 文件路径</span></span><br><span class="line">        <span class="built_in">string</span> extractPath = <span class="string">@&quot;c:\example\extract&quot;</span>; <span class="comment">// 解压的目标目录</span></span><br><span class="line"></span><br><span class="line">        ZipFile.ExtractToDirectory(zipPath, extractPath);</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;解压完成！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="加密压缩文件"><a href="#加密压缩文件" class="headerlink" title="加密压缩文件"></a>加密压缩文件</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.IO.Compression;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> sourceFile = <span class="string">@&quot;c:\example\file.txt&quot;</span>; <span class="comment">// 要压缩的文件路径</span></span><br><span class="line">        <span class="built_in">string</span> zipPath = <span class="string">@&quot;c:\example\encrypted.zip&quot;</span>; <span class="comment">// 输出的 ZIP 文件路径</span></span><br><span class="line">        <span class="built_in">string</span> password = <span class="string">&quot;110110&quot;</span>; <span class="comment">// 设置的密码</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">using</span> (FileStream zipToOpen = <span class="keyword">new</span> FileStream(zipPath, FileMode.Create))</span><br><span class="line">        <span class="keyword">using</span> (ZipArchive archive = <span class="keyword">new</span> ZipArchive(zipToOpen, ZipArchiveMode.Create, <span class="literal">true</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            ZipArchiveEntry entry = archive.CreateEntry(Path.GetFileName(sourceFile));</span><br><span class="line">            <span class="keyword">using</span> (Stream entryStream = entry.Open())</span><br><span class="line">            <span class="keyword">using</span> (Aes aes = Aes.Create())</span><br><span class="line">            &#123;</span><br><span class="line">                aes.Key = GetKey(password); <span class="comment">// 获取 AES 密钥</span></span><br><span class="line">                aes.IV = GetIV(); <span class="comment">// 获取 AES 初始化向量</span></span><br><span class="line">                <span class="keyword">using</span> (CryptoStream cryptoStream = <span class="keyword">new</span> CryptoStream(entryStream, aes.CreateEncryptor(), CryptoStreamMode.Write))</span><br><span class="line">                <span class="keyword">using</span> (FileStream fileToCompress = <span class="keyword">new</span> FileStream(sourceFile, FileMode.Open))</span><br><span class="line">                &#123;</span><br><span class="line">                    fileToCompress.CopyTo(cryptoStream);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;加密压缩完成！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">byte</span>[] <span class="title">GetKey</span>(<span class="params"><span class="built_in">string</span> password</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (SHA256 sha256 = SHA256.Create())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> sha256.ComputeHash(System.Text.Encoding.UTF8.GetBytes(password));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">byte</span>[] <span class="title">GetIV</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">byte</span>[] iv = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">16</span>]; <span class="comment">// AES 需要 16 字节的 IV</span></span><br><span class="line">        <span class="keyword">using</span> (RandomNumberGenerator rng = RandomNumberGenerator.Create())</span><br><span class="line">        &#123;</span><br><span class="line">            rng.GetBytes(iv);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> iv;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="解密解压文件"><a href="#解密解压文件" class="headerlink" title="解密解压文件"></a>解密解压文件</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.IO.Compression;</span><br><span class="line"><span class="keyword">using</span> System.Security.Cryptography;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> zipPath = <span class="string">@&quot;c:\example\encrypted.zip&quot;</span>; <span class="comment">// 输入的 ZIP 文件路径</span></span><br><span class="line">        <span class="built_in">string</span> extractPath = <span class="string">@&quot;c:\example\extract&quot;</span>; <span class="comment">// 解压的目标目录</span></span><br><span class="line">        <span class="built_in">string</span> password = <span class="string">&quot;110110&quot;</span>; <span class="comment">// 设置的密码</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">using</span> (FileStream zipToOpen = <span class="keyword">new</span> FileStream(zipPath, FileMode.Open))</span><br><span class="line">        <span class="keyword">using</span> (ZipArchive archive = <span class="keyword">new</span> ZipArchive(zipToOpen, ZipArchiveMode.Read))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (ZipArchiveEntry entry <span class="keyword">in</span> archive.Entries)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> entryFilePath = Path.Combine(extractPath, entry.FullName);</span><br><span class="line">                Directory.CreateDirectory(Path.GetDirectoryName(entryFilePath));</span><br><span class="line"></span><br><span class="line">                <span class="keyword">using</span> (Stream entryStream = entry.Open())</span><br><span class="line">                <span class="keyword">using</span> (Aes aes = Aes.Create())</span><br><span class="line">                &#123;</span><br><span class="line">                    aes.Key = GetKey(password); <span class="comment">// 获取 AES 密钥</span></span><br><span class="line">                    aes.IV = GetIV(); <span class="comment">// 获取 AES 初始化向量</span></span><br><span class="line">                    <span class="keyword">using</span> (CryptoStream cryptoStream = <span class="keyword">new</span> CryptoStream(entryStream, aes.CreateDecryptor(), CryptoStreamMode.Read))</span><br><span class="line">                    <span class="keyword">using</span> (FileStream fileToExtract = <span class="keyword">new</span> FileStream(entryFilePath, FileMode.Create))</span><br><span class="line">                    &#123;</span><br><span class="line">                        cryptoStream.CopyTo(fileToExtract);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;解密解压完成！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">byte</span>[] <span class="title">GetKey</span>(<span class="params"><span class="built_in">string</span> password</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (SHA256 sha256 = SHA256.Create())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> sha256.ComputeHash(System.Text.Encoding.UTF8.GetBytes(password));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">byte</span>[] <span class="title">GetIV</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">byte</span>[] iv = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">16</span>]; <span class="comment">// AES 需要 16 字节的 IV</span></span><br><span class="line">        <span class="keyword">using</span> (RandomNumberGenerator rng = RandomNumberGenerator.Create())</span><br><span class="line">        &#123;</span><br><span class="line">            rng.GetBytes(iv);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> iv;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;!-- System.IO.Compression。 --&gt;

&lt;h1 id=&quot;压缩一个目录为-ZIP-文件&quot;&gt;&lt;a href=&quot;#压缩一个目录为-ZIP-文件&quot; class=&quot;headerlink&quot; title=&quot;压缩一个目录为 ZIP 文件&quot;&gt;&lt;/a&gt;压缩一个目录为 ZIP</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>vue3 dialog play aac mp4</title>
    <link href="https://banjinmei.github.io/2024/10/16/vue3-dialog-play-aac-mp4/"/>
    <id>https://banjinmei.github.io/2024/10/16/vue3-dialog-play-aac-mp4/</id>
    <published>2024-10-15T17:29:29.000Z</published>
    <updated>2024-10-15T17:32:59.592Z</updated>
    
    <content type="html"><![CDATA[<!-- 通过api播放 aac mp4 --><p>vue3 play acc mp4 show png </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;scope.row.MsgType == 7 || scope.row.MsgType == 19&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:type</span>=<span class="string">&quot;playingRowId === scope.row.AutoID ? &#x27;warning&#x27; : &#x27;info&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:disabled</span>=<span class="string">&quot;playingRowId === scope.row.AutoID&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">click</span>=<span class="string">&quot;handleD(scope.row.Content, scope.row.MsgType, scope.row.UserID, scope.row.AutoID)&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      &#123;&#123; playingRowId === scope.row.AutoID ? &#x27;播放中&#x27; : &#x27;播放&#x27; &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- MP4 Dialog --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;dialogVisible&quot;</span> <span class="attr">width</span>=<span class="string">&quot;80%&quot;</span> <span class="attr">center</span> @<span class="attr">close</span>=<span class="string">&quot;handleDialogClose&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">video</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ref</span>=<span class="string">&quot;videoPlayer&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">controls</span></span></span><br><span class="line"><span class="tag">      <span class="attr">autoplay</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">ended</span>=<span class="string">&quot;handleDialogClose&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:src</span>=<span class="string">&quot;mediaSource&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">style</span>=<span class="string">&quot;width: 100%;&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JS代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/api/request&#x27;</span>; <span class="comment">// Assuming you use Axios or similar</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> playingRowId = <span class="title function_">ref</span>(<span class="literal">null</span>); <span class="comment">// Tracks the AutoID of the row currently being played</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> dialogVisible = <span class="title function_">ref</span>(<span class="literal">false</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> mediaSource = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleD</span>(<span class="params">com, msgt, userid, autoid</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// Set the current row&#x27;s AutoID as the playing row</span></span></span><br><span class="line"><span class="language-javascript">    playingRowId.<span class="property">value</span> = autoid;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">request</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">url</span>: <span class="string">&#x27;/adm/zuserApi/FdMsgJMCon&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">method</span>: <span class="string">&#x27;put&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        com,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">msgtype</span>: <span class="title class_">String</span>(msgt),</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">userid</span>: <span class="title class_">String</span>(userid) <span class="comment">// Use UserID for API request</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> &#123; isOk, msg &#125; = response;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (isOk) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (msg.<span class="title function_">endsWith</span>(<span class="string">&#x27;.aac&#x27;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">playAAC</span>(msg, autoid);</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (msg.<span class="title function_">endsWith</span>(<span class="string">&#x27;.mp4&#x27;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">playMP4</span>(msg);</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&#x27;获取失败，请检查网络连接或联系管理员&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;获取时发生错误:&#x27;</span>, error);</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&#x27;获取失败，请检查网络连接或联系管理员&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">playAAC</span>(<span class="params">source, autoid</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> audio = <span class="keyword">new</span> <span class="title class_">Audio</span>(source);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  audio.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">  audio.<span class="property">onended</span> = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// Reset the playing row when playback finishes</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (playingRowId.<span class="property">value</span> === autoid) &#123;</span></span><br><span class="line"><span class="language-javascript">      playingRowId.<span class="property">value</span> = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  audio.<span class="property">onerror</span> = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (playingRowId.<span class="property">value</span> === autoid) &#123;</span></span><br><span class="line"><span class="language-javascript">      playingRowId.<span class="property">value</span> = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&#x27;音频播放失败&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">playMP4</span>(<span class="params">source</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  mediaSource.<span class="property">value</span> = source;</span></span><br><span class="line"><span class="language-javascript">  dialogVisible.<span class="property">value</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">handleDialogClose</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  dialogVisible.<span class="property">value</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">  playingRowId.<span class="property">value</span> = <span class="literal">null</span>; <span class="comment">// Reset when the dialog is closed</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>设置媒体源（mediaSource）</strong>：确保在打开对话框之前，视频的来源（mediaSource.value）已正确设置为MP4的URL。<br><strong>设置对话框可见性（dialogVisible）</strong>：必须将dialogVisible.value设置为true，以确保对话框能够打开。<br><strong>视频元素：</strong>视频元素的src属性应绑定到mediaSource，并且该元素应在el-dialog组件中可见。</p><p>弹窗注意引入 <strong>Element Plus</strong><br>v-model&#x3D;”dialogVisible” </p><p>console.log(‘Dialog visible:’, dialogVisible.value);  &#x2F;&#x2F; true<br>console.log(‘Video source:’, mediaSource.value);  &#x2F;&#x2F; MP4 URL</p><h1 id="图片显示"><a href="#图片显示" class="headerlink" title="图片显示"></a>图片显示</h1><p>使用 Element Plus 提供的 el-image-viewer 组件。这个组件允许你点击图片时显示大图，带有放大、缩小、旋转等功能</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 缩略图 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">el-image</span></span></span><br><span class="line"><span class="tag">     <span class="attr">style</span>=<span class="string">&quot;width: 80px; height: 80px&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">:src</span>=<span class="string">&quot;scope.row.ContentT2&quot;</span></span></span><br><span class="line"><span class="tag">     @<span class="attr">click</span>=<span class="string">&quot;handleImageClick(scope.row.ContentT2)&quot;</span></span></span><br><span class="line"><span class="tag">   &gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">template</span> #<span class="attr">error</span>&gt;</span> ERR <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">el-image</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- 大图查看器 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">:visible.sync</span>=<span class="string">&quot;dialogVisible&quot;</span> <span class="attr">width</span>=<span class="string">&quot;80%&quot;</span> <span class="attr">center</span> @<span class="attr">close</span>=<span class="string">&quot;closeDialog&quot;</span> <span class="attr">append-to-body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">el-image-viewer</span> <span class="attr">:url-list</span>=<span class="string">&quot;urlList&quot;</span> <span class="attr">:initial-index</span>=<span class="string">&quot;0&quot;</span> @<span class="attr">close</span>=<span class="string">&quot;closeDialog&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;dialogVisible&quot;</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JS代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> dialogVisible = <span class="title function_">ref</span>(<span class="literal">false</span>); <span class="comment">// 控制对话框是否可见</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> urlList = <span class="title function_">ref</span>([]); <span class="comment">// 图片列表</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 点击图片时触发，打开图片查看器</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">handleImageClick</span>(<span class="params">imageUrl</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  urlList.<span class="property">value</span> = [imageUrl]; <span class="comment">// 设置图片 URL 列表</span></span></span><br><span class="line"><span class="language-javascript">  dialogVisible.<span class="property">value</span> = <span class="literal">true</span>; <span class="comment">// 打开对话框</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 关闭对话框</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">closeDialog</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  dialogVisible.<span class="property">value</span> = <span class="literal">false</span>; <span class="comment">// 关闭对话框</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><!-- 说明：缩略图展示：el-image 用来展示缩略图，并且添加 @click 事件，点击后会调用 handleImageClick，打开大图查看器。el-image-viewer：el-image-viewer 用于展示大图，url-list 是图片地址的数组。在这里，我们只显示点击的那张图片，所以只将一个图片 URL 传入。el-dialog：包裹 el-image-viewer 组件，用于弹出查看器，并设置了 append-to-body 来避免样式冲突。效果：点击缩略图时会弹出一个对话框，展示原图或大图，用户可以对图片进行放大、缩小等操作。点击查看器的关闭按钮或者 esc 键可以关闭对话框。可以根据需求调整样式或者添加更多功能，如支持多张图片轮播查看等。 --><h2 id="也可以使用-el-image-简单展示"><a href="#也可以使用-el-image-简单展示" class="headerlink" title="也可以使用 el-image 简单展示"></a>也可以使用 el-image 简单展示</h2><pre><code>&lt;!-- 大图展示 --&gt;&lt;el-dialog :visible.sync=&quot;dialogVisible&quot; width=&quot;50%&quot; center @close=&quot;closeDialog&quot; append-to-body&gt;  &lt;el-image :src=&quot;currentImage&quot; style=&quot;width: 100%;&quot; /&gt;&lt;/el-dialog&gt;</code></pre><h2 id="取消播放结束关闭"><a href="#取消播放结束关闭" class="headerlink" title="取消播放结束关闭"></a>取消播放结束关闭</h2><p> @ended&#x3D;”handleDialogClose”</p><!--https://element-plus.org/zh-CN/component/table.html#table-column-%E5%B1%9E%E6%80%A7 -->]]></content>
    
    
      
      
    <summary type="html">&lt;!-- 通过api播放 aac mp4 --&gt;

&lt;p&gt;vue3 play acc mp4 show png &lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="vue" scheme="https://banjinmei.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>.net write wwwroot json</title>
    <link href="https://banjinmei.github.io/2024/10/16/net-write-wwwroot-json/"/>
    <id>https://banjinmei.github.io/2024/10/16/net-write-wwwroot-json/</id>
    <published>2024-10-15T17:24:24.000Z</published>
    <updated>2024-10-15T17:27:41.002Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-创建一个新的控制器"><a href="#1-创建一个新的控制器" class="headerlink" title="1. 创建一个新的控制器"></a>1. 创建一个新的控制器</h1><p>在Controllers文件夹中创建一个新控制器，例如JsonController.cs。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Namespace.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">ApiController</span>]</span><br><span class="line">    [<span class="meta">Route(<span class="string">&quot;[controller]&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JsonController</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">string</span> _jsonFilePath = Path.Combine(Directory.GetCurrentDirectory(), <span class="string">&quot;wwwroot&quot;</span>, <span class="string">&quot;data.json&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// GET: /json</span></span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">GetJson</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!System.IO.File.Exists(_jsonFilePath))</span><br><span class="line">                <span class="keyword">return</span> NotFound(<span class="string">&quot;JSON file not found.&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> jsonContent = System.IO.File.ReadAllText(_jsonFilePath);</span><br><span class="line">            <span class="keyword">return</span> Content(jsonContent, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// POST: /json</span></span><br><span class="line">        [<span class="meta">HttpPost</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">PostJson</span>(<span class="params">[FromBody] DataType data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> jsonString = JsonConvert.SerializeObject(data);</span><br><span class="line">            System.IO.File.WriteAllText(_jsonFilePath, jsonString);</span><br><span class="line">            <span class="keyword">return</span> Ok(<span class="string">&quot;JSON file updated successfully.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DataType</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Define  JSON structure here</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-添加依赖项-package"><a href="#2-添加依赖项-package" class="headerlink" title="2. 添加依赖项 package"></a>2. 添加依赖项 package</h1><p>确保已经安装了Newtonsoft.Json包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">dotnet add package Newtonsoft.Json</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="3-配置文件路径"><a href="#3-配置文件路径" class="headerlink" title="3.配置文件路径"></a>3.配置文件路径</h1><p>在上述代码中，我们将JSON文件的路径设置为wwwroot&#x2F;data.json</p><h1 id="4-运行项目"><a href="#4-运行项目" class="headerlink" title="4. 运行项目"></a>4. 运行项目</h1><p>启动ASP.NET Core应用程序，并使用工具如Postman或浏览器测试API端点。</p><p>GET请求：<a class="link"   href="http://localhost:5000/json" >http://localhost:5000/json<i class="fas fa-external-link-alt"></i></a></p><p>POST请求：使用类似以下的JSON数据发送一个POST请求到<a class="link"   href="http://localhost:5000/json%EF%BC%9A" >http://localhost:5000/json：<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lll&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">30</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>DataType  class也可以嵌套多层 根据实际应用来编写</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-创建一个新的控制器&quot;&gt;&lt;a href=&quot;#1-创建一个新的控制器&quot; class=&quot;headerlink&quot; title=&quot;1. 创建一个新的控制器&quot;&gt;&lt;/a&gt;1. 创建一个新的控制器&lt;/h1&gt;&lt;p&gt;在Controllers文件夹中创建一个新控制器，例如JsonC</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
    <category term="json" scheme="https://banjinmei.github.io/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>.net chacha20 decrypted</title>
    <link href="https://banjinmei.github.io/2024/10/16/net-chacha20-decrypted/"/>
    <id>https://banjinmei.github.io/2024/10/16/net-chacha20-decrypted/</id>
    <published>2024-10-15T17:10:02.000Z</published>
    <updated>2024-10-15T17:18:44.673Z</updated>
    
    <content type="html"><![CDATA[<p>.NET 实现  ChaCha20 加密和解密</p><h1 id="add-package"><a href="#add-package" class="headerlink" title="add package"></a>add package</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Install-Package BouncyCastle</span><br></pre></td></tr></table></figure><h1 id="chacha20-helper"><a href="#chacha20-helper" class="headerlink" title="chacha20 helper"></a>chacha20 helper</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">using Org.BouncyCastle.Crypto;</span><br><span class="line">using Org.BouncyCastle.Crypto.Engines;</span><br><span class="line">using Org.BouncyCastle.Crypto.Parameters;</span><br><span class="line">using System;</span><br><span class="line"></span><br><span class="line">public class ChaCha20</span><br><span class="line">&#123;</span><br><span class="line">    private <span class="built_in">readonly</span> byte[] key;</span><br><span class="line">    private <span class="built_in">readonly</span> byte[] nonce;</span><br><span class="line"></span><br><span class="line">    // Constructor to initialize key and nonce</span><br><span class="line">    public ChaCha20(byte[] key, byte[] nonce)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (key.Length != 32)</span><br><span class="line">        &#123;</span><br><span class="line">            throw new ArgumentException(<span class="string">&quot;Key must be 32 bytes (256 bits).&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (nonce.Length != 12)</span><br><span class="line">        &#123;</span><br><span class="line">            throw new ArgumentException(<span class="string">&quot;Nonce must be 12 bytes (96 bits).&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        this.key = key;</span><br><span class="line">        this.nonce = nonce;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Method to encrypt the data using ChaCha20</span><br><span class="line">    public byte[] Encrypt(byte[] data, int offset, int count)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">return</span> ProcessData(<span class="literal">true</span>, data, offset, count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Method to decrypt the data using ChaCha20</span><br><span class="line">    public byte[] Decrypt(byte[] data, int offset, int count)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">return</span> ProcessData(<span class="literal">false</span>, data, offset, count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Helper method to process encryption/decryption</span><br><span class="line">    private byte[] ProcessData(bool forEncryption, byte[] data, int offset, int count)</span><br><span class="line">    &#123;</span><br><span class="line">        var engine = new ChaCha7539Engine(); // ChaCha20/Poly1305 engine (ChaCha7539)</span><br><span class="line">        var parameters = new ParametersWithIV(new KeyParameter(key), nonce);</span><br><span class="line">        engine.Init(forEncryption, parameters);</span><br><span class="line"></span><br><span class="line">        byte[] output = new byte[count];</span><br><span class="line">        engine.ProcessBytes(data, offset, count, output, 0);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">return</span> output;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>关键点解释：</strong><br>ChaCha7539Engine:</p><p>BouncyCastle 提供了 ChaCha7539Engine，这是 ChaCha20 加密算法的实现（96-bit nonce，32-byte key）。<br><strong>ProcessData:</strong></p><p>ProcessData 方法负责执行加密和解密，取决于传入的 forEncryption 参数。<br>加密时，forEncryption 为 true，否则为 false。<br><strong>Key 和 Nonce:</strong></p><p>ChaCha20 使用 32 字节（256 位）的密钥和 12 字节（96 位）的 nonce。<br>如果传入的密钥或 nonce 不符合长度要求，会抛出 ArgumentException。<br><strong>Encrypt 和 Decrypt:</strong></p><p>Encrypt 和 Decrypt 调用 ProcessData 来执行加解密，分别用于加密和解密数据。<br><strong>调用示例：</strong></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 示例密钥和 nonce</span></span><br><span class="line">        <span class="built_in">byte</span>[] key = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">32</span>] &#123; <span class="number">0x1E</span>, <span class="number">0x12</span>, <span class="number">0x0B</span>, <span class="number">0x02</span>, <span class="number">0x05</span>, <span class="number">0x18</span>, <span class="number">0x01</span>, <span class="number">0x13</span>,</span><br><span class="line">                                    <span class="number">0x10</span>, <span class="number">0x0D</span>, <span class="number">0x04</span>, <span class="number">0x06</span>, <span class="number">0x07</span>, <span class="number">0x19</span>, <span class="number">0x09</span>, <span class="number">0x15</span>,</span><br><span class="line">                                    <span class="number">0x0F</span>, <span class="number">0x17</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x1A</span>, <span class="number">0x16</span>, <span class="number">0x1D</span>, <span class="number">0x14</span>,</span><br><span class="line">                                    <span class="number">0x0E</span>, <span class="number">0x03</span>, <span class="number">0x1B</span>, <span class="number">0x1C</span>, <span class="number">0x11</span>, <span class="number">0x0C</span>, <span class="number">0x1E</span>, <span class="number">0x1F</span> &#125;;</span><br><span class="line">        <span class="built_in">byte</span>[] nonce = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">12</span>] &#123; <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x04</span>, <span class="number">0x05</span>, <span class="number">0x06</span>, <span class="number">0x07</span>, <span class="number">0x08</span>, <span class="number">0x09</span>, <span class="number">0x0A</span>, <span class="number">0x0B</span> &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 要加密的示例数据</span></span><br><span class="line">        <span class="built_in">byte</span>[] plainText = System.Text.Encoding.UTF8.GetBytes(<span class="string">&quot;Hello, ChaCha20 encryption!&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 加密</span></span><br><span class="line">        ChaCha20 chacha20 = <span class="keyword">new</span> ChaCha20(key, nonce);</span><br><span class="line">        <span class="built_in">byte</span>[] cipherText = chacha20.Encrypt(plainText, <span class="number">0</span>, plainText.Length);</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Encrypted: &quot;</span> + BitConverter.ToString(cipherText));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 解密</span></span><br><span class="line">        <span class="built_in">byte</span>[] decryptedText = chacha20.Decrypt(cipherText, <span class="number">0</span>, cipherText.Length);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Decrypted: &quot;</span> + System.Text.Encoding.UTF8.GetString(decryptedText));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Encrypted: &lt;加密的十六进制字节串&gt;</span><br><span class="line">Decrypted: Hello, ChaCha20 encryption!</span><br></pre></td></tr></table></figure><h1 id="通过CHACHA2加解密文件"><a href="#通过CHACHA2加解密文件" class="headerlink" title="通过CHACHA2加解密文件"></a>通过CHACHA2加解密文件</h1><!-- //https://github.com/mcraiha/CSharp-ChaCha20-NetStandard     How many bytes to read and write at time  --- 4096 --><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FileEncryptorHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 生成随机的 Nonce（12字节）</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">byte</span>[] <span class="title">GenerateRandomNonce</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">byte</span>[] nonce = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">12</span>]; <span class="comment">// 12字节的Nonce</span></span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> rng = RandomNumberGenerator.Create())</span><br><span class="line">        &#123;</span><br><span class="line">            rng.GetBytes(nonce);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nonce;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成固定的 Key（32字节）</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">byte</span>[] <span class="title">GenerateKey</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 使用固定的 256 位（32 字节）的密钥</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">byte</span>[]</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="number">0x1E</span>, <span class="number">0x12</span>, <span class="number">0x0B</span>, <span class="number">0x02</span>, <span class="number">0x05</span>, <span class="number">0x18</span>, <span class="number">0x01</span>, <span class="number">0x13</span>,</span><br><span class="line">        <span class="number">0x10</span>, <span class="number">0x0D</span>, <span class="number">0x04</span>, <span class="number">0x06</span>, <span class="number">0x07</span>, <span class="number">0x19</span>, <span class="number">0x09</span>, <span class="number">0x15</span>,</span><br><span class="line">        <span class="number">0x0F</span>, <span class="number">0x17</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x1A</span>, <span class="number">0x16</span>, <span class="number">0x1D</span>, <span class="number">0x14</span>,</span><br><span class="line">        <span class="number">0x0E</span>, <span class="number">0x03</span>, <span class="number">0x1B</span>, <span class="number">0x1C</span>, <span class="number">0x11</span>, <span class="number">0x0C</span>, <span class="number">0x1E</span>, <span class="number">0x1F</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加密文件 每4096</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">EncryptFile</span>(<span class="params"><span class="built_in">string</span> inputPath, <span class="built_in">string</span> outputPath, <span class="built_in">int</span> blockSize = <span class="number">4096</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">byte</span>[] nonce = GenerateRandomNonce();</span><br><span class="line">        <span class="built_in">byte</span>[] key = GenerateKey();</span><br><span class="line"></span><br><span class="line">        EncryptFile(inputPath, outputPath, key, nonce, blockSize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用随机生成的 Nonce 和固定的 Key 进行 ChaCha20 加密</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">EncryptFile</span>(<span class="params"><span class="built_in">string</span> inputPath, <span class="built_in">string</span> outputPath, <span class="built_in">byte</span>[] key, <span class="built_in">byte</span>[] nonce, <span class="built_in">int</span> blockSize</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!File.Exists(outputPath))</span><br><span class="line">        &#123;</span><br><span class="line">            File.Create(outputPath).Dispose();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> inputFile = File.OpenRead(inputPath))</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> outputFile = File.OpenWrite(outputPath))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 将 nonce 写入输出文件的开头</span></span><br><span class="line">            outputFile.Write(nonce, <span class="number">0</span>, nonce.Length);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">using</span> (<span class="keyword">var</span> chacha20 = <span class="keyword">new</span> MyCC20(key, nonce))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[blockSize];</span><br><span class="line">                <span class="built_in">int</span> bytesRead;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 逐块读取文件内容并加密</span></span><br><span class="line">                <span class="keyword">while</span> ((bytesRead = inputFile.Read(buffer, <span class="number">0</span>, blockSize)) &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">byte</span>[] encryptedData = chacha20.EncryptBytes(buffer, bytesRead);</span><br><span class="line">                    outputFile.Write(encryptedData, <span class="number">0</span>, encryptedData.Length);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;File encrypted successfully: &quot;</span> + outputPath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 解密文件</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DecryptFile</span>(<span class="params"><span class="built_in">string</span> inputPath, <span class="built_in">string</span> outputPath, <span class="built_in">int</span> blockSize = <span class="number">4096</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!File.Exists(outputPath))</span><br><span class="line">        &#123;</span><br><span class="line">            File.Create(outputPath).Dispose();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> inputFile = File.OpenRead(inputPath))</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> outputFile = File.OpenWrite(outputPath))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 从输入文件的开头读取 nonce</span></span><br><span class="line">            <span class="built_in">byte</span>[] nonce = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">12</span>];</span><br><span class="line">            <span class="built_in">int</span> nonceRead = inputFile.Read(nonce, <span class="number">0</span>, nonce.Length);</span><br><span class="line">            <span class="keyword">if</span> (nonceRead != <span class="number">12</span>) <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;Invalid nonce&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] key = GenerateKey();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">using</span> (<span class="keyword">var</span> chacha20 = <span class="keyword">new</span> MyCC20(key, nonce))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[blockSize];</span><br><span class="line">                <span class="built_in">int</span> bytesRead;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 逐块读取文件内容并解密</span></span><br><span class="line">                <span class="keyword">while</span> ((bytesRead = inputFile.Read(buffer, <span class="number">0</span>, blockSize)) &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">byte</span>[] decryptedData = chacha20.DecryptBytes(buffer, bytesRead);</span><br><span class="line">                    outputFile.Write(decryptedData, <span class="number">0</span>, decryptedData.Length);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;File decrypted successfully: &quot;</span> + outputPath);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>调用</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 创建 FileEncryptorHelper 对象</span></span><br><span class="line">    FileEncryptorHelper fileEncryptor = <span class="keyword">new</span> FileEncryptorHelper();</span><br><span class="line">    <span class="comment">// 指定加密文件路径和解密后的输出文件路径</span></span><br><span class="line">    <span class="built_in">string</span> encryptedFilePath = <span class="string">&quot;13632AE2-354E-45B8-9BBA-D474005B5DBC.data&quot;</span>; <span class="comment">// 加密文件路径 &quot;http://8xxx4:8080/group1/110/13632AE2-354E-45B8-9BBA-D474005B5DBC.data&quot;;//</span></span><br><span class="line">    <span class="built_in">string</span> decryptedFilePath = <span class="string">&quot;decryptedFile3.png&quot;</span>; <span class="comment">// 解密后的文件路径</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用解密方法</span></span><br><span class="line">    fileEncryptor.DecryptFile(encryptedFilePath, decryptedFilePath);</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">&quot;文件解密成功！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;文件解密失败: &quot;</span> + ex.Message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;5&quot;</span>:<span class="string">&quot;\/group1\/110\/13632AE2-354E-45B8-9BBA-D474005B5DBC.data&quot;</span>&#125;</span><br><span class="line">Str5 : /group1/110/13632AE2-354E-45B8-9BBA-D474005B5DBC.data</span><br><span class="line">File decrypted successfully: decryptedFile3.png</span><br><span class="line">文件解密成功！</span><br></pre></td></tr></table></figure><p>同理解密音频文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xxx93EC685A2D41.data</span><br><span class="line">File decrypted successfully: decryptedFileaac.aac</span><br><span class="line"></span><br><span class="line">文件解密成功！</span><br></pre></td></tr></table></figure><p>mp4视频同理</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;.NET 实现  ChaCha20 加密和解密&lt;/p&gt;
&lt;h1 id=&quot;add-package&quot;&gt;&lt;a href=&quot;#add-package&quot; class=&quot;headerlink&quot; title=&quot;add package&quot;&gt;&lt;/a&gt;add package&lt;/h1&gt;&lt;figur</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
    <category term="chacha20" scheme="https://banjinmei.github.io/tags/chacha20/"/>
    
  </entry>
  
  <entry>
    <title>.net local LLM</title>
    <link href="https://banjinmei.github.io/2024/10/16/net-local-LLM/"/>
    <id>https://banjinmei.github.io/2024/10/16/net-local-LLM/</id>
    <published>2024-10-15T16:11:42.000Z</published>
    <updated>2024-10-15T16:42:19.011Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ollama"><a href="#ollama" class="headerlink" title="ollama"></a>ollama</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama --version</span><br></pre></td></tr></table></figure><p>比较常用的指令不多，也很简单<br>列出本地下载的模型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama list</span><br></pre></td></tr></table></figure><p>查看正在运行的模型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama ps</span><br></pre></td></tr></table></figure><p>模型标识下载模型到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama pull </span><br></pre></td></tr></table></figure><p>比如我要下载llama2-chinese:7b则使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama pull llama2-chinese:7b</span><br></pre></td></tr></table></figure><p>模型标识运行模型，如果已下载则直接运行，如果没下载则先下载再运行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run</span><br></pre></td></tr></table></figure><p>比如我要运行llama2-chinese:7b可以直接运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run llama2-chinese:7b</span><br></pre></td></tr></table></figure><h1 id="net-package"><a href="#net-package" class="headerlink" title=".net package"></a>.net package</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package Ollama --version 1.9.0</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//模型名称是必须要传递的，默认 流式输出,如果想一次返回同样的是设置stream为false。</span></span><br><span class="line">    <span class="built_in">string</span> modelName = <span class="string">&quot;llama2-chinese:7b&quot;</span>;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">var</span> ollama = <span class="keyword">new</span> OllamaApiClient(baseUri: <span class="keyword">new</span> Uri(<span class="string">&quot;http://127.0.0.1:11434/api&quot;</span>));</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">&quot;begin~~~&quot;</span>);</span><br><span class="line">    <span class="built_in">string</span> userInput = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;User:&quot;</span>);</span><br><span class="line">        userInput = Console.ReadLine()!;</span><br><span class="line">        <span class="keyword">var</span> enumerable = ollama.Completions.GenerateCompletionAsync(modelName, userInput);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Agent:&quot;</span>);</span><br><span class="line">        <span class="keyword">await</span> <span class="keyword">foreach</span> (<span class="keyword">var</span> response <span class="keyword">in</span> enumerable)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.Write(<span class="string">$&quot;<span class="subst">&#123;response.Response&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Console.WriteLine();</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">while</span> (!<span class="built_in">string</span>.Equals(userInput, <span class="string">&quot;exit&quot;</span>, StringComparison.OrdinalIgnoreCase));</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">&quot;end~~~&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><!--https://www.cnblogs.com/wucy/p/18400124/csharp-ollama-->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ollama&quot;&gt;&lt;a href=&quot;#ollama&quot; class=&quot;headerlink&quot; title=&quot;ollama&quot;&gt;&lt;/a&gt;ollama&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
    <category term="LLM" scheme="https://banjinmei.github.io/tags/LLM/"/>
    
    <category term="ollama" scheme="https://banjinmei.github.io/tags/ollama/"/>
    
  </entry>
  
  <entry>
    <title>debian docker gitlab gitea</title>
    <link href="https://banjinmei.github.io/2024/10/15/debian-docker-gitlab-gitea/"/>
    <id>https://banjinmei.github.io/2024/10/15/debian-docker-gitlab-gitea/</id>
    <published>2024-10-15T15:57:02.000Z</published>
    <updated>2024-11-03T17:45:42.784Z</updated>
    
    <content type="html"><![CDATA[<p>使用docker部署私有化代码管理~</p><h1 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line"> sudo sh get-docker.sh</span><br></pre></td></tr></table></figure><h1 id="国内docker"><a href="#国内docker" class="headerlink" title="国内docker"></a>国内docker</h1><p>更新系统包索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>安装一些必要的包，以便于后续添加 apt 仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common</span><br></pre></td></tr></table></figure><p>添加阿里云密钥<br>添加 GPG 密钥是为了确保软件包的安全性和完整性，避免安装过程中的潜在问题。建议尽量执行这一步，以确保安装过程顺利进行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/debian/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>设置阿里云docker仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository <span class="string">&quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/debian <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br></pre></td></tr></table></figure><p>再次更新下系统包的索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p>安装docker </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -y docker-ce</span><br></pre></td></tr></table></figure><p>启动并设置docker的开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><p>查看下docker是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker version</span><br></pre></td></tr></table></figure><p>最后配置docker的镜像加速推荐阿里云的网址<br><a class="link"   href="https://cr.console.aliyun.com/us-west-1/instances/mirrors" >https://cr.console.aliyun.com/us-west-1/instances/mirrors<i class="fas fa-external-link-alt"></i></a></p><h1 id="gitlab"><a href="#gitlab" class="headerlink" title="gitlab"></a>gitlab</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run --name <span class="string">&quot;my-gitlab&quot;</span>               \</span><br><span class="line">  --hostname <span class="string">&quot;my-gitlab&quot;</span>                  \</span><br><span class="line">  -p 80:80                                \</span><br><span class="line">  --restart unless-stopped                \</span><br><span class="line">  -d gitlab/gitlab-ce:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>默认用户名: root<br>默认密码: 5iveL!fe</p><!--docker logs <your_gitlab_container_name>你需要将 <your_gitlab_container_name> 替换为你实际的 GitLab 容器名称。在日志中，查找包含 Password: 的行，这行会显示默认密码。通过 Docker Exec 命令： 你也可以直接进入容器内部，查看初始化的密码文件。运行以下命令进入容器：https://www.cnblogs.com/mithrilon/p/13985710.html--><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it my-gitlab bash</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> /etc/gitlab/initial_root_password</span><br><span class="line"></span><br><span class="line">Password: 5iveL!fe</span><br></pre></td></tr></table></figure><p><strong>修改默认密码</strong><br>首次登录 GitLab 后，建议立即更改默认密码。可以通过以下步骤进行：</p><p>登录 GitLab Web 界面，使用 root 作为用户名和默认密码。<br>登录后，点击右上角的头像，选择 Settings。<br>在 User Settings 页面，选择 Password。<br>输入当前密码和新密码，然后点击 Save password。<br>通过这些步骤，你可以安全地管理 GitLab 的默认账号和密码，确保系统的安全性和稳定性。</p><p>用户名：m<br>密码：xxx</p><p>URL:<a class="link"   href="http://xxx:9090/" >http://xxx:9090/<i class="fas fa-external-link-alt"></i></a></p><p>git命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># input user pwd </span></span><br><span class="line">git <span class="built_in">clone</span> http://xxx/dev/xx.git   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git config –global user.email</span><br><span class="line">git config –global user.name </span><br><span class="line"></span><br><span class="line"><span class="comment">#添加到暂存区</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment">#推送，提交更改</span></span><br><span class="line">git commit -m “这是一个测试文件”</span><br><span class="line"><span class="comment">#推送更改到gitlab</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h1 id="Gitea"><a href="#Gitea" class="headerlink" title="Gitea"></a>Gitea</h1><!-- https://www.daniao.org/8383.html   github：https://github.com/go-gitea/gitea官网：https://gitea.io/  --><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker pull gitea/gitea:latest</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /var/lib/gitea</span><br><span class="line"></span><br><span class="line">docker run -d --name=gitea -p 10022:22 -p 80:3000 -v /var/lib/gitea:/data gitea/gitea:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>访问80 完成初始化</p><p>初始化完即可使用</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用docker部署私有化代码管理~&lt;/p&gt;
&lt;h1 id=&quot;docker&quot;&gt;&lt;a href=&quot;#docker&quot; class=&quot;headerlink&quot; title=&quot;docker&quot;&gt;&lt;/a&gt;docker&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="docker" scheme="https://banjinmei.github.io/tags/docker/"/>
    
    <category term="gitea" scheme="https://banjinmei.github.io/tags/gitea/"/>
    
    <category term="gitlab" scheme="https://banjinmei.github.io/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>nginx domain 4 nodeserver</title>
    <link href="https://banjinmei.github.io/2024/10/09/nginx-domain-4-nodeserver/"/>
    <id>https://banjinmei.github.io/2024/10/09/nginx-domain-4-nodeserver/</id>
    <published>2024-10-09T12:36:34.000Z</published>
    <updated>2024-10-09T17:19:33.958Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装了-Nginx"><a href="#安装了-Nginx" class="headerlink" title="安装了 Nginx"></a>安装了 Nginx</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="node"><a href="#node" class="headerlink" title="node"></a>node</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//testwebside </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> hostname = <span class="string">&#x27;0.0.0.0&#x27;</span>; <span class="comment">//127001</span></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">8080</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="property">statusCode</span> = <span class="number">200</span>;</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/plain&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;Hello World 8080 \n&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">server.<span class="title function_">listen</span>(port, hostname, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running at http://<span class="subst">$&#123;hostname&#125;</span>:<span class="subst">$&#123;port&#125;</span>/`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>9090<br>const port &#x3D; 9090;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> node n80.js &gt; n80.log 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="built_in">nohup</span> node n90.js &gt; n90.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>或 pm2</p><h1 id="配置-Node-js-应用"><a href="#配置-Node-js-应用" class="headerlink" title="配置 Node.js 应用"></a>配置 Node.js 应用</h1><p>假设你有两个 Node.js 应用，分别监听在端口 8080（n80.js） 和 9090（n90.js）。</p><p>确保 Node.js 应用已经启动并分别监听这两个端口。你可以用 pm2 或 forever 来管理 Node.js 应用的启动。</p><p>例如，使用 pm2 启动应用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pm2 start n80.js --name n80-app</span><br><span class="line">pm2 start n90.js --name n90-app</span><br></pre></td></tr></table></figure><h1 id="Nginx-配置"><a href="#Nginx-配置" class="headerlink" title="Nginx 配置"></a>Nginx 配置</h1><p>编辑或创建你自己的 Nginx 配置文件，通常在 &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F; 下。</p><p>配置示例：<br>你需要为两个不同的域名（或子域名）配置两个 server 块。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/nginx/sites-available/my-apps</span><br></pre></td></tr></table></figure><p> Nginx 配置文件：</p><h2 id="配置第一个域名-w1-xxx-com-绑定到端口-8080"><a href="#配置第一个域名-w1-xxx-com-绑定到端口-8080" class="headerlink" title="配置第一个域名 w1.xxx.com 绑定到端口 8080"></a>配置第一个域名 w1.xxx.com 绑定到端口 8080</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name w1.xxx.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8080;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置第二个域名-w2-xxx-com-绑定到端口-9090"><a href="#配置第二个域名-w2-xxx-com-绑定到端口-9090" class="headerlink" title="配置第二个域名 w2.xxx.com 绑定到端口 9090"></a>配置第二个域名 w2.xxx.com 绑定到端口 9090</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name w2.xxx.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:9090;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个配置文件将使 w1.xxx.com 指向第一个应用（监听端口 8080 的 n80.js），而 w2.xxx.com 指向第二个应用（监听端口 9090 的 n90.js）。</p><h1 id="启用-Nginx-配置"><a href="#启用-Nginx-配置" class="headerlink" title="启用 Nginx 配置"></a>启用 Nginx 配置</h1><p>将配置文件链接到 sites-enabled 目录并重启 Nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo <span class="built_in">ln</span> -s /etc/nginx/sites-available/my-apps /etc/nginx/sites-enabled/</span><br><span class="line">sudo nginx -t  <span class="comment"># 测试配置文件是否正确</span></span><br><span class="line">sudo systemctl restart nginx  <span class="comment"># 重启 Nginx</span></span><br></pre></td></tr></table></figure><h1 id="DNS-配置-域名解析"><a href="#DNS-配置-域名解析" class="headerlink" title="DNS 配置  &#x2F; 域名解析"></a>DNS 配置  &#x2F; 域名解析</h1><p>确保你已经将 w1.xxx.com 和 w2.xxx.com 的 DNS 配置指向服务器的 IP 地址。</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p> 访问 w1.xxx.com   &#x3D;&#x3D; n80.js</p><p>Hello World 8080</p><p>而访问w2.xxx.com &#x3D;&#x3D; n90.js。</p><p>Hello World 9090</p><p> Nginx 日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">tail</span> -f /var/log/nginx/error.log</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装了-Nginx&quot;&gt;&lt;a href=&quot;#安装了-Nginx&quot; class=&quot;headerlink&quot; title=&quot;安装了 Nginx&quot;&gt;&lt;/a&gt;安装了 Nginx&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="node" scheme="https://banjinmei.github.io/tags/node/"/>
    
    <category term="nginx" scheme="https://banjinmei.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>.NET build release 4 linux</title>
    <link href="https://banjinmei.github.io/2024/09/29/NET-build-release-4-linux/"/>
    <id>https://banjinmei.github.io/2024/09/29/NET-build-release-4-linux/</id>
    <published>2024-09-29T03:52:15.000Z</published>
    <updated>2024-11-10T13:08:36.384Z</updated>
    
    <content type="html"><![CDATA[<p>在项目中使用 dotnet publish 命令来发布应用程序。</p><p>将发布的应用程序文件夹复制到 Linux 服务器上。</p><p>在 Linux 服务器上安装 .NET 运行时，如果应用是 self-contained（独立部署）的。</p><p>使用 systemd 创建一个服务单元文件来管理应用作为服务运行。</p><p>启动应用程序服务。</p><p>发布应用程序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet publish -c Release -o ./publish</span><br></pre></td></tr></table></figure><p>将发布文件夹复制到 Linux 服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r ./publish [user]@[host]:/var/www/myapp</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet myapp.dll</span><br></pre></td></tr></table></figure><p>创建 systemd 服务文件 &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;myapp.service：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=My .NET App</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">WorkingDirectory=/var/www/myapp</span><br><span class="line">ExecStart=/var/www/myapp/MyApp</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=10</span><br><span class="line">SyslogIdentifier=dotnet-myapp</span><br><span class="line">User=www-data</span><br><span class="line">Environment=ASPNETCORE_ENVIRONMENT=Production</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> myapp.service</span><br><span class="line">sudo systemctl start myapp.service</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>确保应用程序配置了正确的端口监听和防火墙规则。</p><hr><p>api wr wwwroot json</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MNamespace.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">ApiController</span>]</span><br><span class="line">    [<span class="meta">Route(<span class="string">&quot;[controller]&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JsonController</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//wwwroot/data.json</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">string</span> _jsonFilePath = Path.Combine(Directory.GetCurrentDirectory(), <span class="string">&quot;wwwroot&quot;</span>, <span class="string">&quot;data.json&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// GET: /json</span></span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">GetJson</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!System.IO.File.Exists(_jsonFilePath))</span><br><span class="line">                <span class="keyword">return</span> NotFound(<span class="string">&quot;JSON file not found.&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> jsonContent = System.IO.File.ReadAllText(_jsonFilePath);</span><br><span class="line">            <span class="keyword">return</span> Content(jsonContent, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// POST: /json</span></span><br><span class="line">        [<span class="meta">HttpPost</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">PostJson</span>(<span class="params">[FromBody] MDataType data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> jsonString = JsonConvert.SerializeObject(data);</span><br><span class="line">            System.IO.File.WriteAllText(_jsonFilePath, jsonString);</span><br><span class="line">            <span class="keyword">return</span> Ok(<span class="string">&quot;JSON file updated successfully.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MDataType</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Define M JSON structure here</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> Newtonsoft.Json</p><p>GET请求：<a class="link"   href="http://localhost:5000/json" >http://localhost:5000/json<i class="fas fa-external-link-alt"></i></a></p><p>POST请求：使用类似以下的JSON数据发送一个POST请求到<a class="link"   href="http://localhost:5000/json%EF%BC%9A" >http://localhost:5000/json：<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Copy Code</span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;m&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">30</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>写入</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MNamespace.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">ApiController</span>]</span><br><span class="line">    [<span class="meta">Route(<span class="string">&quot;[controller]&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JsonController</span> : <span class="title">ControllerBase</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">string</span> _jsonFilePath = Path.Combine(Directory.GetCurrentDirectory(), <span class="string">&quot;wwwroot&quot;</span>, <span class="string">&quot;data.json&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// GET: /json</span></span><br><span class="line">        [<span class="meta">HttpGet</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">GetJson</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!System.IO.File.Exists(_jsonFilePath))</span><br><span class="line">                <span class="keyword">return</span> NotFound(<span class="string">&quot;JSON file not found.&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> jsonContent = System.IO.File.ReadAllText(_jsonFilePath);</span><br><span class="line">            <span class="keyword">return</span> Content(jsonContent, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// POST: /json</span></span><br><span class="line">        [<span class="meta">HttpPost</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IActionResult <span class="title">PostJson</span>(<span class="params">[FromBody] MDataType data</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> jsonString = JsonConvert.SerializeObject(data);</span><br><span class="line">            System.IO.File.WriteAllText(_jsonFilePath, jsonString);</span><br><span class="line">            <span class="keyword">return</span> Ok(<span class="string">&quot;JSON file updated successfully.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MDataType</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Define M JSON structure here</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="发布所有"><a href="#发布所有" class="headerlink" title="发布所有"></a>发布所有</h1><p> dotnet publish -c Release -o .&#x2F;publish </p><p>MySolution&#x2F;<br>│<br>├── MyProjectA&#x2F;<br>│   └── MyProjectA.csproj<br>├── MyProjectB&#x2F;<br>│   └── MyProjectB.csproj<br>└── MySolution.sln<br>如果想只发布 MyProjectA 而不是整个解决方案，<br>可以导航到 MyProjectA 的目录下执行 dotnet publish 命令，<br>或者从解决方案的根目录直接指定项目的路径。以下是两种方法：</p><h1 id="方法一：在项目目录中执行命令"><a href="#方法一：在项目目录中执行命令" class="headerlink" title="方法一：在项目目录中执行命令"></a>方法一：在项目目录中执行命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> MySolution/MyProjectA</span><br><span class="line">dotnet publish -c Release -o ../../publish</span><br></pre></td></tr></table></figure><h1 id="方法二：从解决方案根目录指定项目路径"><a href="#方法二：从解决方案根目录指定项目路径" class="headerlink" title="方法二：从解决方案根目录指定项目路径"></a>方法二：从解决方案根目录指定项目路径</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> MySolution</span><br><span class="line">dotnet publish ./MyProjectA/MyProjectA.csproj -c Release -o ./publish</span><br></pre></td></tr></table></figure><p>排除特定项目<br>dotnet publish 命令本身没有直接支持排除特定项目的选项。<br>但是，可以通过仅指定要发布的项目来间接实现这一点。<br>如果需要同时发布多个项目，可以为每个项目单独运行 dotnet publish 命令。</p><p>例如，如果想发布 MyProjectA 和 MyProjectB，但不发布其他任何项目，可以这样做：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dotnet publish ./MyProjectA/MyProjectA.csproj -c Release -o ./publish</span><br><span class="line">dotnet publish ./MyProjectB/MyProjectB.csproj -c Release -o ./publish</span><br></pre></td></tr></table></figure><p>这样，只有 MyProjectA 和 MyProjectB 被发布到了 .&#x2F;publish 目录中，而其他项目则被忽略。 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在项目中使用 dotnet publish 命令来发布应用程序。&lt;/p&gt;
&lt;p&gt;将发布的应用程序文件夹复制到 Linux 服务器上。&lt;/p&gt;
&lt;p&gt;在 Linux 服务器上安装 .NET 运行时，如果应用是 self-contained（独立部署）的。&lt;/p&gt;
&lt;p&gt;使用 </summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
    <category term="linux" scheme="https://banjinmei.github.io/tags/linux/"/>
    
  </entry>
  
</feed>
