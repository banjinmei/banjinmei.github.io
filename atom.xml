<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M Study Log</title>
  
  
  <link href="https://banjinmei.github.io/atom.xml" rel="self"/>
  
  <link href="https://banjinmei.github.io/"/>
  <updated>2024-12-03T17:38:48.089Z</updated>
  <id>https://banjinmei.github.io/</id>
  
  <author>
    <name>m</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jwt redis</title>
    <link href="https://banjinmei.github.io/2024/12/03/jwt-redis/"/>
    <id>https://banjinmei.github.io/2024/12/03/jwt-redis/</id>
    <published>2024-12-02T17:20:03.000Z</published>
    <updated>2024-12-03T17:38:48.089Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Redis-JWT"><a href="#Redis-JWT" class="headerlink" title="Redis JWT"></a>Redis JWT</h1><p>在 .NET 中使用 Redis 来存储 JWT（JSON Web Token）可以通过多种方式实现，<br>例如在用户登录时将生成的 JWT 存储在 Redis 中以便于后续验证和管理。</p><p>实现步骤</p><h1 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h1><p>确保你的项目引入了以下必要的 NuGet 包：</p><p>Microsoft.AspNetCore.Authentication.JwtBearer：用于 JWT 身份验证。<br>StackExchange.Redis：用于与 Redis 通信。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package Microsoft.AspNetCore.Authentication.JwtBearer</span><br><span class="line">dotnet add package StackExchange.Redis</span><br></pre></td></tr></table></figure><h1 id="配置-Redis-客户端"><a href="#配置-Redis-客户端" class="headerlink" title="配置 Redis 客户端"></a>配置 Redis 客户端</h1><p>设置 Redis 的连接和操作。</p><h1 id="生成-JWT"><a href="#生成-JWT" class="headerlink" title="生成 JWT"></a>生成 JWT</h1><p>根据用户信息生成 JWT 并将其存储到 Redis。</p><h1 id="验证-JWT"><a href="#验证-JWT" class="headerlink" title="验证 JWT"></a>验证 JWT</h1><p>在验证阶段从 Redis 检查 token 是否有效。</p><h1 id="实现-Token-的失效机制"><a href="#实现-Token-的失效机制" class="headerlink" title="实现 Token 的失效机制"></a>实现 Token 的失效机制</h1><p>利用 Redis 的 TTL（过期时间）特性来管理 token 的生命周期。</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="1-配置-Redis-客户端"><a href="#1-配置-Redis-客户端" class="headerlink" title="1. 配置 Redis 客户端"></a>1. 配置 Redis 客户端</h2><p>在 Program.cs 或 Startup.cs 中配置 Redis 和 JWT 身份验证：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Authentication.JwtBearer;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Extensions.DependencyInjection;</span><br><span class="line"><span class="keyword">using</span> Microsoft.IdentityModel.Tokens;</span><br><span class="line"><span class="keyword">using</span> StackExchange.Redis;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> builder = WebApplication.CreateBuilder(args);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Redis 配置</span></span><br><span class="line">builder.Services.AddSingleton&lt;IConnectionMultiplexer&gt;(sp =&gt;</span><br><span class="line">    ConnectionMultiplexer.Connect(<span class="string">&quot;localhost:6379&quot;</span>)); <span class="comment">// 替换为你的 Redis 地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// JWT 配置</span></span><br><span class="line"><span class="keyword">var</span> key = <span class="string">&quot;YourSecretKeyForJwt&quot;</span>; <span class="comment">// 替换为你的密钥</span></span><br><span class="line">builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)</span><br><span class="line">    .AddJwtBearer(options =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        options.TokenValidationParameters = <span class="keyword">new</span> TokenValidationParameters</span><br><span class="line">        &#123;</span><br><span class="line">            ValidateIssuerSigningKey = <span class="literal">true</span>,</span><br><span class="line">            IssuerSigningKey = <span class="keyword">new</span> SymmetricSecurityKey(Encoding.UTF8.GetBytes(key)),</span><br><span class="line">            ValidateIssuer = <span class="literal">false</span>,</span><br><span class="line">            ValidateAudience = <span class="literal">false</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">builder.Services.AddAuthorization();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = builder.Build();</span><br><span class="line">app.UseAuthentication();</span><br><span class="line">app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">app.MapControllers();</span><br><span class="line"></span><br><span class="line">app.Run();</span><br></pre></td></tr></table></figure><h2 id="2-生成和存储-JWT"><a href="#2-生成和存储-JWT" class="headerlink" title="2. 生成和存储 JWT"></a>2. 生成和存储 JWT</h2><p>在 Controller 中生成 JWT 并将其存储到 Redis。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"><span class="keyword">using</span> Microsoft.IdentityModel.Tokens;</span><br><span class="line"><span class="keyword">using</span> StackExchange.Redis;</span><br><span class="line"><span class="keyword">using</span> System.IdentityModel.Tokens.Jwt;</span><br><span class="line"><span class="keyword">using</span> System.Security.Claims;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line">[<span class="meta">Route(<span class="string">&quot;api/[controller]&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AuthController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IConnectionMultiplexer _redis;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">string</span> _jwtKey = <span class="string">&quot;YourSecretKeyForJwt&quot;</span>; <span class="comment">// 替换为你的密钥</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AuthController</span>(<span class="params">IConnectionMultiplexer redis</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _redis = redis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">HttpPost(<span class="string">&quot;login&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IActionResult <span class="title">Login</span>(<span class="params"><span class="built_in">string</span> username</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建 JWT token</span></span><br><span class="line">        <span class="keyword">var</span> claims = <span class="keyword">new</span>[]</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">new</span> Claim(ClaimTypes.Name, username)</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> key = <span class="keyword">new</span> SymmetricSecurityKey(Encoding.UTF8.GetBytes(_jwtKey));</span><br><span class="line">        <span class="keyword">var</span> creds = <span class="keyword">new</span> SigningCredentials(key, SecurityAlgorithms.HmacSha256);</span><br><span class="line">        <span class="keyword">var</span> token = <span class="keyword">new</span> JwtSecurityToken(</span><br><span class="line">            claims: claims,</span><br><span class="line">            expires: DateTime.UtcNow.AddHours(<span class="number">1</span>),</span><br><span class="line">            signingCredentials: creds);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> jwt = <span class="keyword">new</span> JwtSecurityTokenHandler().WriteToken(token);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将 token 存储到 Redis</span></span><br><span class="line">        <span class="keyword">var</span> db = _redis.GetDatabase();</span><br><span class="line">        db.StringSet(<span class="string">$&quot;jwt:<span class="subst">&#123;username&#125;</span>&quot;</span>, jwt, TimeSpan.FromHours(<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Ok(<span class="keyword">new</span> &#123; token = jwt &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-验证-JWT"><a href="#3-验证-JWT" class="headerlink" title="3. 验证 JWT"></a>3. 验证 JWT</h2><p>在中间件或验证逻辑中从 Redis 检查 JWT 是否有效。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet(<span class="string">&quot;validate&quot;</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> IActionResult <span class="title">ValidateToken</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> authHeader = Request.Headers[<span class="string">&quot;Authorization&quot;</span>].ToString();</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(authHeader) || !authHeader.StartsWith(<span class="string">&quot;Bearer &quot;</span>))</span><br><span class="line">        <span class="keyword">return</span> Unauthorized();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> token = authHeader.Replace(<span class="string">&quot;Bearer &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> username = User.Identity?.Name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> db = _redis.GetDatabase();</span><br><span class="line">    <span class="keyword">var</span> storedToken = db.StringGet(<span class="string">$&quot;jwt:<span class="subst">&#123;username&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (storedToken.IsNullOrEmpty || storedToken != token)</span><br><span class="line">        <span class="keyword">return</span> Unauthorized();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Ok(<span class="string">&quot;Token is valid&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-Token-失效机制"><a href="#4-Token-失效机制" class="headerlink" title="4. Token 失效机制"></a>4. Token 失效机制</h2><p>利用 Redis 的 TTL 设置 token 的自动过期：</p><p>在存储 token 时设置过期时间。<br>用户注销时可以手动删除 Redis 中的 token。<br>注销示例：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpPost(<span class="string">&quot;logout&quot;</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> IActionResult <span class="title">Logout</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> username = User.Identity?.Name;</span><br><span class="line">    <span class="keyword">var</span> db = _redis.GetDatabase();</span><br><span class="line">    db.KeyDelete(<span class="string">$&quot;jwt:<span class="subst">&#123;username&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> Ok(<span class="string">&quot;Logged out&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>通过 Redis 存储 JWT，可以实现以下功能：</p><p>集中管理 JWT：便于实时撤销或查询。<br>自动过期：Redis 自带 TTL，可以简化 token 的管理。<br>扩展性好：适用于分布式系统。<br>根据实际需求，还可以扩展功能，例如黑名单机制或支持多设备登录等。</p><!-- <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JwtHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IConfiguration _configuration;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> IDatabase _redisDatabase;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Token配置</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;configuration&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JwtHelper</span>(<span class="params">IConfiguration configuration</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _configuration = configuration;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 连接Redis并获取数据库实例，这里假设使用默认配置和数据库索引0</span></span><br><span class="line">        <span class="keyword">var</span> redis = ConnectionMultiplexer.Connect(_configuration[<span class="string">&quot;Redis:ConnectionString&quot;</span>]);</span><br><span class="line">        _redisDatabase = redis.GetDatabase();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 创建Token并将其存储到Redis中，这里面可以保存自己想要的信息</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;username&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;uid&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">CreateTokenIDAndStoreInRedis</span>(<span class="params"><span class="built_in">string</span> username, <span class="built_in">string</span> uid</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        DateTime dt1 = DateTime.Now;</span><br><span class="line">        DateTime dt2 = DateTime.Now.AddHours(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 1. 定义需要使用到的Claims</span></span><br><span class="line">            <span class="keyword">var</span> claims = <span class="keyword">new</span>[]</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">new</span> Claim(<span class="string">&quot;username&quot;</span>, username),</span><br><span class="line">                <span class="keyword">new</span> Claim(<span class="string">&quot;uid&quot;</span>, uid),</span><br><span class="line">                <span class="comment">/* 可以保存自己想要信息，传参进来即可</span></span><br><span class="line"><span class="comment">                new Claim(&quot;sex&quot;, &quot;sex&quot;),</span></span><br><span class="line"><span class="comment">                new Claim(&quot;limit&quot;, &quot;limit&quot;),</span></span><br><span class="line"><span class="comment">                new Claim(&quot;head_url&quot;, &quot;xxxxx&quot;)</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">// 2. 从 appsettings.json 中读取SecretKey</span></span><br><span class="line">            <span class="keyword">var</span> secretKey = <span class="keyword">new</span> SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration[<span class="string">&quot;Jwt:SecKey&quot;</span>]));</span><br><span class="line">            <span class="comment">// 3. 选择加密算法</span></span><br><span class="line">            <span class="keyword">var</span> algorithm = SecurityAlgorithms.HmacSha256;</span><br><span class="line">            <span class="comment">// 4. 生成Credentials</span></span><br><span class="line">            <span class="keyword">var</span> signingCredentials = <span class="keyword">new</span> SigningCredentials(secretKey, algorithm);</span><br><span class="line">            <span class="comment">// 5. 根据以上，生成token</span></span><br><span class="line">            <span class="keyword">var</span> jwtSecurityToken = <span class="keyword">new</span> JwtSecurityToken(</span><br><span class="line">                _configuration[<span class="string">&quot;Jwt:Issuer&quot;</span>],    <span class="comment">//Issuer</span></span><br><span class="line">                _configuration[<span class="string">&quot;Jwt:ExpireSeconds&quot;</span>],  <span class="comment">//ExpireSeconds</span></span><br><span class="line">                claims,                          <span class="comment">//Claims,</span></span><br><span class="line">                dt1,                    <span class="comment">//notBefore</span></span><br><span class="line">                dt2,     <span class="comment">//expires</span></span><br><span class="line">                signingCredentials               <span class="comment">//Credentials</span></span><br><span class="line">            );</span><br><span class="line">            <span class="comment">// 6. 将token变为string</span></span><br><span class="line">            <span class="keyword">var</span> token = <span class="keyword">new</span> JwtSecurityTokenHandler().WriteToken(jwtSecurityToken);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 将生成的JWT存储到Redis中，以uid作为键，设置过期时间为JWT的有效期</span></span><br><span class="line">            <span class="keyword">var</span> expirationSeconds = (dt2 - dt1).TotalSeconds;</span><br><span class="line">            _redisDatabase.StringSet(uid, token, TimeSpan.FromSeconds(expirationSeconds));</span><br><span class="line"></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/ log tktklogtk</span></span><br><span class="line">            <span class="comment">//Console.WriteLine(&quot;userlogin &quot; + username + &quot; ID &quot; + uid + &quot; &quot; + dt1 + &quot; ~ &quot; + dt2 + &quot;  &quot; + token);</span></span><br><span class="line">            <span class="keyword">return</span> token;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 从Redis中读取JWT并解密获取信息</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;uid&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ReadAndDecryptTokenFromRedis</span>(<span class="params"><span class="built_in">string</span> uid</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> token = _redisDatabase.StringGet(uid);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(token))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> JWToken = JwtDecrypt(token);</span><br><span class="line">            <span class="keyword">return</span> JWToken;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">string</span>.Empty;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 以下是原有的方法，如CreateToken、ReaderToken、GetUid、JwtDecrypt等方法保持不变，此处省略重复代码展示</span></span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">YourController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> JwtHelper _jwt;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">YourController</span>(<span class="params">JwtHelper jwt</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _jwt = jwt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建并存储JWT到Redis的方法</span></span><br><span class="line">    [<span class="meta">HttpPost</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IActionResult <span class="title">CreateAndStoreToken</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 假设这里从请求中获取到了username和userID等信息，示例中直接赋值</span></span><br><span class="line">        <span class="built_in">string</span> username = <span class="string">&quot;example_username&quot;</span>;</span><br><span class="line">        <span class="built_in">string</span> userID = <span class="string">&quot;12345&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> token = _jwt.CreateTokenIDAndStoreInRedis(username, userID);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Ok(<span class="keyword">new</span> &#123; token &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从Redis读取并解密JWT获取信息的方法</span></span><br><span class="line">    [<span class="meta">HttpGet</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IActionResult <span class="title">ReadTokenFromRedis</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 假设这里从请求中获取到了要读取的用户的uid，示例中直接赋值</span></span><br><span class="line">        <span class="built_in">string</span> uid = <span class="string">&quot;12345&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> JWToken = _jwt.ReadAndDecryptTokenFromRedis(uid);</span><br><span class="line">        <span class="built_in">string</span> tkuid = _jwt.GetUid(JWToken);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Ok(<span class="keyword">new</span> &#123; JWToken, tkuid &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">``` --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"># debian redis setup</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"># 1: 更新软件包列表</span></span><br><span class="line">首先，确保的软件包列表是最新的。打开终端并执行以下命令：</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><h1 id="2-安装Redis"><a href="#2-安装Redis" class="headerlink" title="2: 安装Redis"></a>2: 安装Redis</h1><p>更新完软件包列表后，可以通过apt包管理器来安装Redis服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install redis-server</span><br></pre></td></tr></table></figure><p>这将安装Redis及其依赖项，并自动启动Redis服务。</p><h1 id="3-检查Redis状态"><a href="#3-检查Redis状态" class="headerlink" title="3: 检查Redis状态"></a>3: 检查Redis状态</h1><p>安装完成后，可以检查Redis服务是否正在运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status redis-server</span><br></pre></td></tr></table></figure><p>如果服务正在运行，会看到类似“active (running)”的状态信息。</p><h1 id="4-配置Redis"><a href="#4-配置Redis" class="headerlink" title="4: 配置Redis"></a>4: 配置Redis</h1><p>Redis的配置文件位于&#x2F;etc&#x2F;redis&#x2F;redis.conf。可能想要编辑这个文件来更改默认设置，例如绑定地址、端口号、要求密码等。使用文本编辑器打开它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/redis/redis.conf</span><br></pre></td></tr></table></figure><p>做出必要的更改后保存文件并退出编辑器。</p><h1 id="5-重启Redis服务"><a href="#5-重启Redis服务" class="headerlink" title="5: 重启Redis服务"></a>5: 重启Redis服务</h1><p>如果对配置文件做了任何修改，记得重启Redis服务以使更改生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis-server</span><br></pre></td></tr></table></figure><h1 id="6-设置Redis开机自启"><a href="#6-设置Redis开机自启" class="headerlink" title="6: 设置Redis开机自启"></a>6: 设置Redis开机自启</h1><p>为了确保Redis在系统启动时自动启动，可以使用以下命令启用开机自启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> redis-server</span><br></pre></td></tr></table></figure><h1 id="7-测试Redis安装"><a href="#7-测试Redis安装" class="headerlink" title="7: 测试Redis安装"></a>7: 测试Redis安装</h1><p>可以通过连接到本地Redis服务器来测试安装是否成功。使用redis-cli命令行工具连接到Redis：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br></pre></td></tr></table></figure><p>一旦进入Redis CLI，可以尝试运行ping命令，如果Redis服务器响应PONG，则说明安装和配置都正常工作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br></pre></td></tr></table></figure><h2 id="Redis-配置文件"><a href="#Redis-配置文件" class="headerlink" title="Redis 配置文件"></a>Redis 配置文件</h2><p>编辑 Redis 的配置文件（通常是 &#x2F;etc&#x2F;redis&#x2F;redis.conf）。</p><p>确保允许远程连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（默认仅允许本地连接，127.0.0.1）。<br>确保未设置 protected-mode 为 yes，或者明确配置授权规则：</p><p>protected-mode no<br>重启 Redis 服务以应用更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis</span><br></pre></td></tr></table></figure><h1 id="err"><a href="#err" class="headerlink" title="err"></a>err</h1><h2 id="500-Undocumented"><a href="#500-Undocumented" class="headerlink" title="500 Undocumented"></a>500 Undocumented</h2><p>Error: Internal Server Error<br>Response body<br>System.InvalidOperationException: Multiple constructors accepting all given argument types have been found in type ‘userApiController’. There should only be one applicable constructor.<br>   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.TryFindMatchingConstructor(Type instanceType, Type[] argumentTypes, ConstructorInfo&amp; matchingConstructor, Nullable<code>1[]&amp; parameterMap)    at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.FindApplicableConstructor(Type instanceType, Type[] argumentTypes, ConstructorInfo&amp; matchingConstructor, Nullable</code>1[]&amp; matchingParameterMap)<br>   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactoryInternal(Type instanceType, Type[] argumentTypes, ParameterExpression&amp; provider, ParameterExpression&amp; argumentArray, Expression&amp; factoryExpressionBody)</p><p>问题是由于依赖注入系统在实例化 userApiController 时发现有多个构造函数可以匹配传递的参数，因此无法确定使用哪个构造函数。这种情况会导致 System.InvalidOperationException 异常。多个改成一个。 </p><h2 id="System-InvalidOperationException-、"><a href="#System-InvalidOperationException-、" class="headerlink" title="System.InvalidOperationException: 、"></a>System.InvalidOperationException: 、</h2><p>Unable to resolve service for type ‘JwtHelper’ while attempting to activate ‘userApiController’.<br>   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ThrowHelperUnableToResolveService(Type type, Type requiredBy)<br>   at lambda_method69(Closure, IServiceProvider, Object[])</p><p>这个错误表明 wtHelper 类型未在依赖注入 (DI) 容器中注册，而 IM.Controllers.userApiController 需要它作为依赖。DI 系统在尝试解析 JwtHelper 时失败，导致 Internal Server Error。</p><p><strong>检查依赖注册</strong><br>确保在 Program.cs 或 Startup.cs 文件中注册了 JwtHelper 服务。如果 JwtHelper 是一个自定义工具类或服务，你需要将它添加到 DI 容器中。</p><p>builder.Services.AddScoped<JwtHelper>();<br>如果 JwtHelper 需要构造函数注入的依赖项，也要确保这些依赖已注册。<br>如果 JwtHelper 是无状态的，考虑使用 AddSingleton。</p><h2 id="StackExchange-Redis-RedisConnectionException"><a href="#StackExchange-Redis-RedisConnectionException" class="headerlink" title="StackExchange.Redis.RedisConnectionException:"></a>StackExchange.Redis.RedisConnectionException:</h2><p>“It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it’s able to connect, use abortConnect&#x3D;false in your connection string or AbortOnConnectFail&#x3D;false; in your code.”</p><p>检查 Redis 的配置文件（通常是 &#x2F;etc&#x2F;redis&#x2F;redis.conf）。<br><strong>确保允许远程连接</strong>：<br>bind 0.0.0.0<br> .Connect(“XXXX:6379,abortConnect&#x3D;false”));</p><p>重启redis</p><h1 id="Redis-保护模式"><a href="#Redis-保护模式" class="headerlink" title="Redis 保护模式"></a>Redis 保护模式</h1><p>Redis 处于保护模式，默认情况下禁止外部连接。</p><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>修改 redis.conf 中的 protected-mode 设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">protected-mode no</span><br></pre></td></tr></table></figure><p>重启 Redis：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis</span><br></pre></td></tr></table></figure><h1 id="程序测试redis"><a href="#程序测试redis" class="headerlink" title="程序测试redis"></a>程序测试redis</h1><p>.NET</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Redis 服务器地址和端口</span></span><br><span class="line"><span class="built_in">string</span> redisConnectionString = <span class="string">&quot;199.24x.x.x:6379&quot;</span>; <span class="comment">// 默认 Redis 端口是 6379</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建连接到 Redis 的实例</span></span><br><span class="line">ConnectionMultiplexer redis = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    redis = ConnectionMultiplexer.Connect(redisConnectionString);</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;连接成功!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;连接到 Redis 失败: <span class="subst">&#123;ex.Message&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 Redis 数据库实例</span></span><br><span class="line">IDatabase db = redis.GetDatabase();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入数据</span></span><br><span class="line"><span class="built_in">string</span> key = <span class="string">&quot;myKey22&quot;</span>;</span><br><span class="line"><span class="built_in">string</span> <span class="keyword">value</span> = <span class="string">&quot;Hello, Redis!&quot;</span>;</span><br><span class="line">db.StringSet(key, <span class="keyword">value</span>);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;已写入: <span class="subst">&#123;key&#125;</span> - <span class="subst">&#123;<span class="keyword">value</span>&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取数据</span></span><br><span class="line"><span class="built_in">string</span> retrievedValue = db.StringGet(key);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;读取到: <span class="subst">&#123;key&#125;</span> - <span class="subst">&#123;retrievedValue&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除数据</span></span><br><span class="line">db.KeyDelete(key);</span><br><span class="line">Console.WriteLine(<span class="string">$&quot;已删除: <span class="subst">&#123;key&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭连接</span></span><br><span class="line">redis.Close();</span><br><span class="line">Console.WriteLine(<span class="string">&quot;连接关闭&quot;</span>);</span><br></pre></td></tr></table></figure><p>node</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i redis</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> redis = <span class="built_in">require</span>(<span class="string">&#x27;redis&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建Redis客户端连接</span></span><br><span class="line"><span class="keyword">const</span> client = redis.<span class="title function_">createClient</span>(&#123;</span><br><span class="line">    <span class="attr">host</span>: <span class="string">&#x27;199.24x.x.x&#x27;</span>,</span><br><span class="line">    <span class="attr">port</span>: <span class="number">6379</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听连接事件，当成功连接到Redis时执行回调函数</span></span><br><span class="line">client.<span class="title function_">on</span>(<span class="string">&#x27;connect&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;成功连接到Redis服务器&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听错误事件，当出现错误时执行回调函数</span></span><br><span class="line">client.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;连接Redis服务器时出现错误：&#x27;</span>, err);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置一个键值对</span></span><br><span class="line">client.<span class="title function_">set</span>(<span class="string">&#x27;myKey&#x27;</span>, <span class="string">&#x27;myValue&#x27;</span>, <span class="function">(<span class="params">err, reply</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;设置键值对时出现错误：&#x27;</span>, err);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;设置键值对成功，回复：&#x27;</span>, reply);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取键值对</span></span><br><span class="line">client.<span class="title function_">get</span>(<span class="string">&#x27;myKey&#x27;</span>, <span class="function">(<span class="params">err, value</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获取键值对时出现错误：&#x27;</span>, err);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获取到的键值对的值为：&#x27;</span>, value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除键值对</span></span><br><span class="line">client.<span class="title function_">del</span>(<span class="string">&#x27;myKey&#x27;</span>, <span class="function">(<span class="params">err, reply</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;删除键值对时出现错误：&#x27;</span>, err);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;删除键值对成功，回复：&#x27;</span>, reply);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭Redis客户端连接</span></span><br><span class="line">client.<span class="title function_">quit</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br></pre></td></tr></table></figure><h1 id="redis设置密码"><a href="#redis设置密码" class="headerlink" title="redis设置密码"></a>redis设置密码</h1><h2 id="1-编辑-Redis-配置文件"><a href="#1-编辑-Redis-配置文件" class="headerlink" title="1. 编辑 Redis 配置文件"></a>1. 编辑 Redis 配置文件</h2><p>Redis 的配置文件通常位于 &#x2F;etc&#x2F;redis&#x2F;redis.conf 或 &#x2F;etc&#x2F;redis.conf。用你喜欢的文本编辑器打开它，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/redis/redis.conf</span><br></pre></td></tr></table></figure><h2 id="2-找到并修改-requirepass-参数"><a href="#2-找到并修改-requirepass-参数" class="headerlink" title="2. 找到并修改 requirepass 参数"></a>2. 找到并修改 requirepass 参数</h2><p>在配置文件中找到以下行（可能被注释掉）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># requirepass foobared</span></span><br></pre></td></tr></table></figure><p>将其取消注释并替换为你的密码，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requirepass your_secure_password</span><br></pre></td></tr></table></figure><h2 id="3-重启-Redis-服务"><a href="#3-重启-Redis-服务" class="headerlink" title="3. 重启 Redis 服务"></a>3. 重启 Redis 服务</h2><p>保存并退出文件后，重启 Redis 服务以应用更改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis</span><br></pre></td></tr></table></figure><h2 id="4-测试密码功能"><a href="#4-测试密码功能" class="headerlink" title="4. 测试密码功能"></a>4. 测试密码功能</h2><p>你可以通过以下命令测试 Redis 是否需要密码：</p><p>使用 redis-cli 连接<br>尝试未输入密码的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line">&gt; get key</span><br></pre></td></tr></table></figure><p>如果设置了密码，Redis 会返回类似如下的错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(error) NOAUTH Authentication required.</span><br></pre></td></tr></table></figure><p>使用 AUTH 命令验证：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line">&gt; auth your_secure_password</span><br><span class="line">OK</span><br><span class="line">&gt; get key</span><br></pre></td></tr></table></figure><p>如果密码正确，后续操作将生效。</p><h2 id="5-链接修改"><a href="#5-链接修改" class="headerlink" title="5. 链接修改"></a>5. 链接修改</h2><p>199.x.x.xxx:6379,password&#x3D;123X.zx  更改redis链接 </p><!--            private readonly int isRedis= ConfigManager.TempI115;  string tkuid = isRedis==1? _jwt.GetTokenFromRedis(token): _jwt.GetUid(_jwt.JwtDecrypt(token)) ; --><h1 id="redis缓存json-RedisHelper"><a href="#redis缓存json-RedisHelper" class="headerlink" title="redis缓存json RedisHelper"></a>redis缓存json RedisHelper</h1><p>方法添加 Redis 缓存，可以通过以下方式扩展代码：</p><h2 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h2><p>定义 Redis 缓存逻辑：</p><p>先尝试从 Redis 缓存中读取数据。<br>如果缓存命中，则直接返回数据。<br>如果缓存未命中，则查询数据库，处理数据后存入 Redis，并设置适当的过期时间。<br>定义 Redis 键：</p><p>使用一个唯一键，例如 **CityInfoList:{id}**，确保缓存区分不同 id 的数据。<br>序列化和反序列化：</p><p>使用 JSON 格式存储数据，方便跨语言和跨系统的兼容性。<br>扩展后的代码<br>以下是添加 Redis 缓存后的完整实现：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;CityInfoS&gt; <span class="title">FindIMCityInfoListByPIDS</span>(<span class="params"><span class="built_in">string</span> id</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 定义 Redis 缓存键</span></span><br><span class="line">    <span class="built_in">string</span> redisKey = <span class="string">$&quot;IMCityInfoList:<span class="subst">&#123;id&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 尝试从 Redis 获取数据</span></span><br><span class="line">    <span class="built_in">string</span> cachedData = RedisHelper.GetString(redisKey); <span class="comment">// RedisHelper 是 Redis 操作工具类</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(cachedData))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果缓存命中，反序列化并返回数据</span></span><br><span class="line">        <span class="keyword">return</span> JsonConvert.DeserializeObject&lt;List&lt;IMCityInfoS&gt;&gt;(cachedData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 缓存未命中，从数据库查询</span></span><br><span class="line">    <span class="built_in">string</span> sql = <span class="string">@&quot;SELECT `CtId`, `Pid`, `PidS`, `CityCode`, `CityName`, </span></span><br><span class="line"><span class="string">                          `PostCode`, `AreaCode`, `Ctime`, `CtimeInt`, `LangType`, `HasSon`</span></span><br><span class="line"><span class="string">                   FROM `IMCityInfoS` </span></span><br><span class="line"><span class="string">                   WHERE PID = @PID&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> parameters = <span class="keyword">new</span> MySqlParameter[] &#123; <span class="keyword">new</span> MySqlParameter(<span class="string">&quot;@PID&quot;</span>, id) &#125;;</span><br><span class="line"></span><br><span class="line">    DataSet ds = DbHelperMySQL.Query(sql, parameters);</span><br><span class="line">    <span class="keyword">if</span> (ds != <span class="literal">null</span> &amp;&amp; ds.Tables[<span class="number">0</span>].Rows.Count &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 转换查询结果为 JSON</span></span><br><span class="line">        <span class="built_in">string</span> json = JsonConvert.SerializeObject(ds.Tables[<span class="number">0</span>]);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置缓存并指定过期时间（例如30分钟）</span></span><br><span class="line">        RedisHelper.SetString(redisKey, json, TimeSpan.FromMinutes(<span class="number">30</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化为对象列表并返回</span></span><br><span class="line">        <span class="keyword">return</span> JsonConvert.DeserializeObject&lt;List&lt;IMCityInfoS&gt;&gt;(json);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果查询无结果，返回空</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="RedisHelper-工具类"><a href="#RedisHelper-工具类" class="headerlink" title="RedisHelper 工具类"></a>RedisHelper 工具类</h2><p>如果你尚未实现 RedisHelper，可以参考以下示例代码：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> StackExchange.Redis;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">RedisHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> ConnectionMultiplexer redis = ConnectionMultiplexer.Connect(<span class="string">&quot;localhost&quot;</span>); <span class="comment">// 替换为你的 Redis 地址</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> IDatabase db = redis.GetDatabase();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取字符串数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetString</span>(<span class="params"><span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> db.StringGet(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置字符串数据并指定过期时间</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetString</span>(<span class="params"><span class="built_in">string</span> key, <span class="built_in">string</span> <span class="keyword">value</span>, TimeSpan? expiry = <span class="literal">null</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        db.StringSet(key, <span class="keyword">value</span>, expiry);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用注意事项"><a href="#使用注意事项" class="headerlink" title="使用注意事项"></a>使用注意事项</h2><p>Redis 连接池：实际生产中，建议使用 Redis 连接池来管理连接，避免连接过多导致资源占用。<br>异常处理：在 Redis 读写操作中，添加异常捕获逻辑，确保即使 Redis 出现问题，也不会影响数据库查询。<br>过期时间：根据业务需求设置合理的过期时间，避免缓存数据过期或无效。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Redis-JWT&quot;&gt;&lt;a href=&quot;#Redis-JWT&quot; class=&quot;headerlink&quot; title=&quot;Redis JWT&quot;&gt;&lt;/a&gt;Redis JWT&lt;/h1&gt;&lt;p&gt;在 .NET 中使用 Redis 来存储 JWT（JSON Web Token）可以</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="jwt" scheme="https://banjinmei.github.io/tags/jwt/"/>
    
    <category term="token" scheme="https://banjinmei.github.io/tags/token/"/>
    
    <category term="redis" scheme="https://banjinmei.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>cashrp opencv</title>
    <link href="https://banjinmei.github.io/2024/12/03/cashrp-opencv/"/>
    <id>https://banjinmei.github.io/2024/12/03/cashrp-opencv/</id>
    <published>2024-12-02T17:15:38.000Z</published>
    <updated>2024-12-02T17:17:14.106Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Emgu-CV进行基本的人脸检测。"><a href="#Emgu-CV进行基本的人脸检测。" class="headerlink" title="Emgu CV进行基本的人脸检测。"></a>Emgu CV进行基本的人脸检测。</h1><p>人脸检测是指定位图像中的人脸位置，而人脸识别是指确认或验证这些脸孔的身份。为了实现人脸识别，需要训练一个模型，或者使用预训练的模型。</p><h1 id="安装-Emgu-CV"><a href="#安装-Emgu-CV" class="headerlink" title="安装 Emgu CV"></a>安装 Emgu CV</h1><p>首先，需要通过NuGet安装Emgu CV包。可以通过Visual Studio的NuGet包管理器来安装：</p><p>打开的C#项目。<br>右键点击解决方案资源管理器中的项目名称，选择“管理NuGet程序包”。</p><h2 id="搜索并安装Emgu-CV和Emgu-CV-runtime-windows。"><a href="#搜索并安装Emgu-CV和Emgu-CV-runtime-windows。" class="headerlink" title="搜索并安装Emgu.CV和Emgu.CV.runtime.windows。"></a>搜索并安装Emgu.CV和Emgu.CV.runtime.windows。</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载人脸检测分类器</span></span><br><span class="line">CascadeClassifier faceCascade = <span class="keyword">new</span> CascadeClassifier(<span class="string">&quot;haarcascade_frontalface_default.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取输入图像</span></span><br><span class="line">Image&lt;Bgr, <span class="built_in">byte</span>&gt; inputImage = <span class="keyword">new</span> Image&lt;Bgr, <span class="built_in">byte</span>&gt;(<span class="string">&quot;face.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换为灰度图像，因为人脸检测通常在灰度图像上进行</span></span><br><span class="line">Image&lt;Gray, <span class="built_in">byte</span>&gt; grayImage = inputImage.Convert&lt;Gray, <span class="built_in">byte</span>&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 进行人脸检测</span></span><br><span class="line">Rectangle[] faces = faceCascade.DetectMultiScale(grayImage, <span class="number">1.1</span>, <span class="number">3</span>, Size.Empty);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在检测到的人脸周围绘制矩形框</span></span><br><span class="line"><span class="keyword">foreach</span> (Rectangle face <span class="keyword">in</span> faces)</span><br><span class="line">&#123;</span><br><span class="line">    inputImage.Draw(face, <span class="keyword">new</span> Bgr(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存标记后的图像为output.jpg</span></span><br><span class="line">inputImage.Save(<span class="string">&quot;output.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">&quot;save~output.jpg&quot;</span>);</span><br></pre></td></tr></table></figure><p>xml来自 <a class="link"   href="https://github.com/opencv/opencv/tree/master/data/haarcascades" >https://github.com/opencv/opencv/tree/master/data/haarcascades<i class="fas fa-external-link-alt"></i></a></p><h2 id="runtime"><a href="#runtime" class="headerlink" title="runtime"></a>runtime</h2><p>如果没有 Emgu.CV.runtime.windows  则会加载不了xml</p><p>Exception ：System.TypeInitializationException:“The type initializer for ‘Emgu.CV.CvInvoke’ threw an exception.”</p><p>检查运行时依赖 (opencv_world*.dll) 是否加载正确。<br>安装最新的 VC++ Redistributable。<br>确保项目目标平台与 Emgu.CV 的依赖项一致。</p><h1 id="识别猫脸"><a href="#识别猫脸" class="headerlink" title="识别猫脸"></a>识别猫脸</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载检测分类器</span></span><br><span class="line">CascadeClassifier faceCascade = <span class="keyword">new</span> CascadeClassifier(<span class="string">&quot;haarcascade_frontalcatface.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取输入图像</span></span><br><span class="line">Image&lt;Bgr, <span class="built_in">byte</span>&gt; inputImage = <span class="keyword">new</span> Image&lt;Bgr, <span class="built_in">byte</span>&gt;(<span class="string">&quot;cat2.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换为灰度图像，因为人脸检测通常在灰度图像上进行</span></span><br><span class="line">Image&lt;Gray, <span class="built_in">byte</span>&gt; grayImage = inputImage.Convert&lt;Gray, <span class="built_in">byte</span>&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 进行人脸检测</span></span><br><span class="line">Rectangle[] faces = faceCascade.DetectMultiScale(grayImage, <span class="number">1.1</span>, <span class="number">3</span>, Size.Empty);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在检测到的人脸周围绘制矩形框</span></span><br><span class="line"><span class="keyword">foreach</span> (Rectangle face <span class="keyword">in</span> faces)</span><br><span class="line">&#123;</span><br><span class="line">    inputImage.Draw(face, <span class="keyword">new</span> Bgr(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存标记后的图像为output.jpg</span></span><br><span class="line">inputImage.Save(<span class="string">&quot;output.jpg&quot;</span>);</span><br><span class="line"></span><br><span class="line">Console.WriteLine(<span class="string">&quot;save~output.jpg&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Emgu-CV进行基本的人脸检测。&quot;&gt;&lt;a href=&quot;#Emgu-CV进行基本的人脸检测。&quot; class=&quot;headerlink&quot; title=&quot;Emgu CV进行基本的人脸检测。&quot;&gt;&lt;/a&gt;Emgu CV进行基本的人脸检测。&lt;/h1&gt;&lt;p&gt;人脸检测是指定位图像</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
    <category term="csharp" scheme="https://banjinmei.github.io/tags/csharp/"/>
    
    <category term="opencv" scheme="https://banjinmei.github.io/tags/opencv/"/>
    
    <category term="emgu" scheme="https://banjinmei.github.io/tags/emgu/"/>
    
  </entry>
  
  <entry>
    <title>uniapp 节拍器</title>
    <link href="https://banjinmei.github.io/2024/12/03/uniapp-%E8%8A%82%E6%8B%8D%E5%99%A8/"/>
    <id>https://banjinmei.github.io/2024/12/03/uniapp-%E8%8A%82%E6%8B%8D%E5%99%A8/</id>
    <published>2024-12-02T17:12:19.000Z</published>
    <updated>2024-12-02T17:15:14.529Z</updated>
    
    <content type="html"><![CDATA[<h1 id="节拍器基础功能"><a href="#节拍器基础功能" class="headerlink" title="节拍器基础功能"></a>节拍器基础功能</h1><p>加速 前速 启动 暂停</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 节拍显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>节拍：<span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123; beat &#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 滑块定义节拍数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slider</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;slider&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">min</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">max</span>=<span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">step</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; beat &#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">change</span>=<span class="string">&quot;handleBeatChange&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">slider</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 速度显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>速度：<span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123; speed &#125;&#125; BPM<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 增加速度按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;button-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;increaseSpeed&quot;</span>&gt;</span>加速<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;decreaseSpeed&quot;</span>&gt;</span>减速<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 播放/停止按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;play-button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;togglePlay&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; playStatus === &#x27;playing&#x27; ? &#x27;停止&#x27; : &#x27;播放&#x27; &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">beat</span>: <span class="number">4</span>, <span class="comment">// 初始节拍数</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">speed</span>: <span class="number">60</span>, <span class="comment">// 初始速度（每分钟节拍数）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">playStatus</span>: <span class="string">&#x27;stopped&#x27;</span>, <span class="comment">// 播放状态，初始为停止</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">intervalId</span>: <span class="literal">null</span>, <span class="comment">// 用于存储定时器ID</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">audioContext</span>: <span class="literal">null</span>, <span class="comment">// 音频上下文</span></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 初始化音频上下文</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">initAudio</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">audioContext</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span> = uni.<span class="title function_">createInnerAudioContext</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a1.mp3&#x27;</span>; <span class="comment">// 替换为节拍音效文件路径</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">volume</span> = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 处理滑块改变节拍数的事件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleBeatChange</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">beat</span> = event.<span class="property">detail</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 增加速度的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">increaseSpeed</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">speed</span> += <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 减少速度的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">decreaseSpeed</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">speed</span> -= <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">speed</span> &lt; <span class="number">10</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">speed</span> = <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 切换播放/停止状态的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">togglePlay</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;stopped&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">playStatus</span> = <span class="string">&#x27;playing&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">initAudio</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">startMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">playStatus</span> = <span class="string">&#x27;stopped&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">stopMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 启动节拍器的方法，通过定时器播放声音</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">startMetronome</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> intervalTime = <span class="number">60000</span> / <span class="variable language_">this</span>.<span class="property">speed</span>; <span class="comment">// 根据速度计算每个节拍的间隔时间（毫秒）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">intervalId</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>(); <span class="comment">// 播放音效</span></span></span><br><span class="line"><span class="language-javascript">      &#125;, intervalTime);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 停止节拍器的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">stopMetronome</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">intervalId</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">intervalId</span> = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">stop</span>(); <span class="comment">// 停止音效</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">onUnload</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 页面卸载时清理音频资源</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">audioContext</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">destroy</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.label</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.value</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#007aff</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.slider</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">90%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.button-group</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">gap</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#007aff</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.play-button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#34c759</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.play-button</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#32a852</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>处理音频文件  a1 a2<br><a class="link"   href="https://audiotrimmer.com/cn/" >https://audiotrimmer.com/cn/<i class="fas fa-external-link-alt"></i></a></p><h1 id="实时更新节拍音效："><a href="#实时更新节拍音效：" class="headerlink" title="实时更新节拍音效："></a>实时更新节拍音效：</h1><p>滑动滑块 (handleBeatChange) 或点击按钮 (increaseSpeed&#x2F;decreaseSpeed) 时，<br>会立即调用 restartMetronome，停止当前节拍器并重新启动。<br>当播放状态为 stopped 时，仅播放一次节拍音效以便即时反馈。<br>新增 restartMetronome 方法：</p><p>停止当前节拍器后，重新启动，以实现动态调整速度和节拍。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 节拍显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>节拍：<span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123; beat &#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 滑块定义节拍数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slider</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;slider&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">min</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">max</span>=<span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">step</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; beat &#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">change</span>=<span class="string">&quot;handleBeatChange&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">slider</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 速度显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>速度：<span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123; speed &#125;&#125; BPM<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 增加/减少速度按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;button-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;increaseSpeed&quot;</span>&gt;</span>加速<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;decreaseSpeed&quot;</span>&gt;</span>减速<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 播放/停止按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;play-button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;togglePlay&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; playStatus === &#x27;playing&#x27; ? &#x27;停止&#x27; : &#x27;播放&#x27; &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">beat</span>: <span class="number">4</span>, <span class="comment">// 初始节拍数</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">speed</span>: <span class="number">60</span>, <span class="comment">// 初始速度（每分钟节拍数）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">playStatus</span>: <span class="string">&#x27;stopped&#x27;</span>, <span class="comment">// 播放状态，初始为停止</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">intervalId</span>: <span class="literal">null</span>, <span class="comment">// 用于存储定时器ID</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">audioContext</span>: <span class="literal">null</span>, <span class="comment">// 音频上下文</span></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 初始化音频上下文</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">initAudio</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">audioContext</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span> = uni.<span class="title function_">createInnerAudioContext</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a1.mp3&#x27;</span>; <span class="comment">// 替换为节拍音效文件路径</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">volume</span> = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 处理滑块改变节拍数的事件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleBeatChange</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">beat</span> = event.<span class="property">detail</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;playing&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">restartMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>(); <span class="comment">// 播放一次音效</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 增加速度的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">increaseSpeed</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">speed</span> += <span class="number">5</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;playing&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">restartMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>(); <span class="comment">// 播放一次音效</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 减少速度的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">decreaseSpeed</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">speed</span> -= <span class="number">5</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">speed</span> &lt; <span class="number">5</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">speed</span> = <span class="number">5</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;playing&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">restartMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>(); <span class="comment">// 播放一次音效</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 切换播放/停止状态的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">togglePlay</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;stopped&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">playStatus</span> = <span class="string">&#x27;playing&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">initAudio</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">startMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">playStatus</span> = <span class="string">&#x27;stopped&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">stopMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 启动节拍器的方法，通过定时器播放声音</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">startMetronome</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> intervalTime = <span class="number">60000</span> / <span class="variable language_">this</span>.<span class="property">speed</span>; <span class="comment">// 根据速度计算每个节拍的间隔时间（毫秒）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">intervalId</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>(); <span class="comment">// 播放音效</span></span></span><br><span class="line"><span class="language-javascript">      &#125;, intervalTime);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 停止节拍器的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">stopMetronome</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">intervalId</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">intervalId</span> = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 重启节拍器（用于更新速度或节拍）</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">restartMetronome</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">stopMetronome</span>(); <span class="comment">// 先停止当前节拍器</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">startMetronome</span>(); <span class="comment">// 再重新启动</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">onUnload</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 页面卸载时清理音频资源</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">audioContext</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">destroy</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.label</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.value</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#007aff</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.slider</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">90%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.button-group</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">gap</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#007aff</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.play-button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#34c759</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.play-button</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#32a852</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="区分第一拍-其余拍"><a href="#区分第一拍-其余拍" class="headerlink" title="区分第一拍&#x2F;其余拍"></a>区分第一拍&#x2F;其余拍</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 节拍显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>节拍：<span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123; beat &#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 滑块定义节拍数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slider</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;slider&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">min</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">max</span>=<span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">step</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; beat &#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">change</span>=<span class="string">&quot;handleBeatChange&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">slider</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 速度显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>速度：<span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123; speed &#125;&#125; BPM<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 增加/减少速度按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;button-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;increaseSpeed&quot;</span>&gt;</span>加速<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;decreaseSpeed&quot;</span>&gt;</span>减速<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 播放/停止按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;play-button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;togglePlay&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; playStatus === &#x27;playing&#x27;? &#x27;停止&#x27; : &#x27;播放&#x27; &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">beat</span>: <span class="number">4</span>, <span class="comment">// 初始节拍数</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">speed</span>: <span class="number">60</span>, <span class="comment">// 初始速度（每分钟节拍数）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">playStatus</span>: <span class="string">&#x27;stopped&#x27;</span>, <span class="comment">// 播放状态，初始为停止</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">intervalId</span>: <span class="literal">null</span>, <span class="comment">// 用于存储定时器ID</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">audioContext</span>: <span class="literal">null</span>, <span class="comment">// 音频上下文</span></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 初始化音频上下文</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">initAudio</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">audioContext</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span> = uni.<span class="title function_">createInnerAudioContext</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 先不设置具体音频源，后续根据节拍播放不同音频</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">volume</span> = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 处理滑块改变节拍数的事件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleBeatChange</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">beat</span> = event.<span class="property">detail</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;playing&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">restartMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 根据节拍数播放一次相应音频</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">beat</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a2.mp3&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a3.mp3&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 增加速度的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">increaseSpeed</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">speed</span> += <span class="number">5</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;playing&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">restartMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 根据节拍数播放一次相应音频</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">beat</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a2.mp3&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a3.mp3&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 减少速度的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">decreaseSpeed</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">speed</span> -= <span class="number">5</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">speed</span> &lt; <span class="number">5</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">speed</span> = <span class="number">5</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;playing&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">restartMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 根据节拍数播放一次相应音频</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">beat</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a2.mp3&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a3.mp3&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 切换播放/停止状态的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">togglePlay</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;stopped&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">playStatus</span> = <span class="string">&#x27;playing&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">initAudio</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">startMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">playStatus</span> = <span class="string">&#x27;stopped&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">stopMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 启动节拍器的方法，通过定时器播放声音</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">startMetronome</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> intervalTime = <span class="number">60000</span> / <span class="variable language_">this</span>.<span class="property">speed</span>; <span class="comment">// 根据速度计算每个节拍的间隔时间（毫秒）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> currentBeat = <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">intervalId</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">beat</span> === <span class="number">4</span> &amp;&amp; currentBeat === <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a2.mp3&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a3.mp3&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (currentBeat === <span class="variable language_">this</span>.<span class="property">beat</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          currentBeat = <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          currentBeat++;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;, intervalTime);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 停止节拍器的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">stopMetronome</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">intervalId</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">intervalId</span> = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 重启节拍器（用于更新速度或节拍）</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">restartMetronome</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">stopMetronome</span>(); <span class="comment">// 先停止当前节拍器</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">startMetronome</span>(); <span class="comment">// 再重新启动</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">onUnload</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 页面卸载时清理音频资源</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">audioContext</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">destroy</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.label</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.value</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#007aff</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.slider</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">90%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.button-group</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">gap</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#007aff</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.play-button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#34c759</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.play-button</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#32a852</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="实现长按-0"><a href="#实现长按-0" class="headerlink" title="实现长按  + -0"></a>实现长按  + -0</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;button&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">&quot;increaseSpeed&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">longpress</span>=<span class="string">&quot;startIncreaseSpeedLongPress&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">longpressend</span>=<span class="string">&quot;stopSpeedLongPress&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 长按开始</span></span><br><span class="line"><span class="title function_">handleLongPressStart</span>(<span class="params">action</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">longPressTimer</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (action === <span class="string">&#x27;increase&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">increaseSpeed</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action === <span class="string">&#x27;decrease&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">decreaseSpeed</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="number">100</span>); <span class="comment">// 每100ms触发一次</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 长按结束</span></span><br><span class="line"><span class="title function_">handleLongPressEnd</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">longPressTimer</span>);</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">longPressTimer</span> = <span class="literal">null</span>;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>完整</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 节拍显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>节拍：<span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123; beat &#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 滑块定义节拍数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slider</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;slider&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">min</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">max</span>=<span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">step</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; beat &#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">change</span>=<span class="string">&quot;handleBeatChange&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">slider</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 速度显示 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>速度：<span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123; speed &#125;&#125; BPM<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 增加/减少速度按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;button-group&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;button&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">&quot;increaseSpeed&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">touchstart</span>=<span class="string">&quot;handleLongPressStart(&#x27;increase&#x27;)&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">touchend</span>=<span class="string">&quot;handleLongPressEnd&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        加速</span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;button&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">click</span>=<span class="string">&quot;decreaseSpeed&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">touchstart</span>=<span class="string">&quot;handleLongPressStart(&#x27;decrease&#x27;)&quot;</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">touchend</span>=<span class="string">&quot;handleLongPressEnd&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        减速</span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 播放/停止按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;play-button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;togglePlay&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; playStatus === &#x27;playing&#x27; ? &#x27;停止&#x27; : &#x27;播放&#x27; &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">beat</span>: <span class="number">4</span>, <span class="comment">// 初始节拍数</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">speed</span>: <span class="number">60</span>, <span class="comment">// 初始速度（每分钟节拍数）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">playStatus</span>: <span class="string">&#x27;stopped&#x27;</span>, <span class="comment">// 播放状态，初始为停止</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">intervalId</span>: <span class="literal">null</span>, <span class="comment">// 用于存储定时器ID</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">audioContext</span>: <span class="literal">null</span>, <span class="comment">// 音频上下文</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">longPressTimer</span>: <span class="literal">null</span>, <span class="comment">// 用于长按的定时器</span></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 初始化音频上下文</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">initAudio</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">audioContext</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span> = uni.<span class="title function_">createInnerAudioContext</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">volume</span> = <span class="number">1.0</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 处理滑块改变节拍数的事件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleBeatChange</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">beat</span> = event.<span class="property">detail</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;playing&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">restartMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">playFirstBeatAudio</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 增加速度</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">increaseSpeed</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">speed</span> += <span class="number">5</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;playing&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">restartMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">playFirstBeatAudio</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 减少速度</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">decreaseSpeed</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">speed</span> -= <span class="number">5</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">speed</span> &lt; <span class="number">5</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">speed</span> = <span class="number">5</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;playing&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">restartMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">playFirstBeatAudio</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 长按开始</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleLongPressStart</span>(<span class="params">action</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">longPressTimer</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (action === <span class="string">&#x27;increase&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="title function_">increaseSpeed</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (action === <span class="string">&#x27;decrease&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="title function_">decreaseSpeed</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;, <span class="number">100</span>); <span class="comment">// 每100ms触发一次</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 长按结束</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">handleLongPressEnd</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">longPressTimer</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">longPressTimer</span> = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 切换播放/停止状态的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">togglePlay</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">playStatus</span> === <span class="string">&#x27;stopped&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">playStatus</span> = <span class="string">&#x27;playing&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">initAudio</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">startMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">playStatus</span> = <span class="string">&#x27;stopped&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">stopMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 启动节拍器的方法，通过定时器播放声音</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">startMetronome</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> intervalTime = <span class="number">60000</span> / <span class="variable language_">this</span>.<span class="property">speed</span>; <span class="comment">// 根据速度计算每个节拍的间隔时间（毫秒）</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> currentBeat = <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">intervalId</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="title function_">playBeatAudio</span>(currentBeat);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (currentBeat === <span class="variable language_">this</span>.<span class="property">beat</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          currentBeat = <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          currentBeat++;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;, intervalTime);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 停止节拍器的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">stopMetronome</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">intervalId</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">intervalId</span> = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 重启节拍器（用于更新速度或节拍）</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">restartMetronome</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">stopMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">startMetronome</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 播放第一拍音频的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">playFirstBeatAudio</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">beat</span> &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">audioContext</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">beat</span> === <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a2.mp3&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a3.mp3&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 根据当前拍数播放音频的方法</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">playBeatAudio</span>(<span class="params">currentBeat</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">beat</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">audioContext</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (currentBeat === <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a2.mp3&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="property">src</span> = <span class="string">&#x27;/static/sounds/a3.mp3&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">play</span>();</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">onUnload</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 页面卸载时清理音频资源</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">audioContext</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">audioContext</span>.<span class="title function_">destroy</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#f5f5f5</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.label</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#333</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.value</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: <span class="number">#007aff</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.slider</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">90%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.button-group</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">gap</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#007aff</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.play-button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#34c759</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">15px</span> <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.play-button</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#32a852</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;节拍器基础功能&quot;&gt;&lt;a href=&quot;#节拍器基础功能&quot; class=&quot;headerlink&quot; title=&quot;节拍器基础功能&quot;&gt;&lt;/a&gt;节拍器基础功能&lt;/h1&gt;&lt;p&gt;加速 前速 启动 暂停&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;ta</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="uniapp" scheme="https://banjinmei.github.io/tags/uniapp/"/>
    
  </entry>
  
  <entry>
    <title>DeepSeek-V2.5</title>
    <link href="https://banjinmei.github.io/2024/11/30/DeepSeek-V2-5/"/>
    <id>https://banjinmei.github.io/2024/11/30/DeepSeek-V2-5/</id>
    <published>2024-11-29T19:13:44.000Z</published>
    <updated>2024-11-29T19:18:43.503Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DeepSeek-V2-5"><a href="#DeepSeek-V2-5" class="headerlink" title="DeepSeek-V2.5"></a>DeepSeek-V2.5</h1><p>在目前大模型主流榜单中，DeepSeek-V2.5 均表现出色</p><h2 id="中文综合能力（AlignBench）位列开源榜首"><a href="#中文综合能力（AlignBench）位列开源榜首" class="headerlink" title="中文综合能力（AlignBench）位列开源榜首"></a>中文综合能力（AlignBench）位列开源榜首</h2><p>与 GPT-4-Turbo，文心 4.0 等闭源模型在评测中处于同一梯队</p><h2 id="英文综合能力（MT-Bench）处于第一梯队"><a href="#英文综合能力（MT-Bench）处于第一梯队" class="headerlink" title="英文综合能力（MT-Bench）处于第一梯队"></a>英文综合能力（MT-Bench）处于第一梯队</h2><p>英文综合能力（MT-Bench）与最强的开源模型 LLaMA3-70B 处于同一梯队，超过最强 MoE 开源模型 Mixtral8x22B</p><p>知识、数学、推理、编程等榜单结果位居前列<br>开源模型支持 128K 上下文</p><h1 id="api"><a href="#api" class="headerlink" title="api"></a>api</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">curl https://api.deepseek.com/chat/completions \</span><br><span class="line">  -H &quot;Content-Type: application/json&quot; \</span><br><span class="line">  -H &quot;Authorization: Bearer xx&quot; \</span><br><span class="line">  -d &#x27;&#123;</span><br><span class="line">        &quot;model&quot;: &quot;deepseek-chat&quot;,</span><br><span class="line">        &quot;messages&quot;: [</span><br><span class="line">          &#123;&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a helpful assistant.&quot;&#125;,</span><br><span class="line">          &#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;Hello!&quot;&#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;stream&quot;: false</span><br><span class="line">      &#125;&#x27;</span><br></pre></td></tr></table></figure><h2 id="py"><a href="#py" class="headerlink" title="py"></a>py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Please install OpenAI SDK first: `pip3 install openai`</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> openai <span class="keyword">import</span> OpenAI</span><br><span class="line"></span><br><span class="line">client = OpenAI(api_key=<span class="string">&quot;skx&quot;</span>, base_url=<span class="string">&quot;https://api.deepseek.com&quot;</span>)</span><br><span class="line"></span><br><span class="line">response = client.chat.completions.create(</span><br><span class="line">    model=<span class="string">&quot;deepseek-chat&quot;</span>,</span><br><span class="line">    messages=[</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You are a helpful assistant&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;你好，你是什么大模型？你能做什么？&quot;</span>&#125;,</span><br><span class="line">    ],</span><br><span class="line">    stream=<span class="literal">False</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(response.choices[<span class="number">0</span>].message.content)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="node"><a href="#node" class="headerlink" title="node"></a>node</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// Please install OpenAI SDK first: `npm install openai`</span><br><span class="line"></span><br><span class="line">import OpenAI from &quot;openai&quot;;</span><br><span class="line"></span><br><span class="line">const openai = new OpenAI(&#123;</span><br><span class="line">        baseURL: &#x27;https://api.deepseek.com&#x27;,</span><br><span class="line">        apiKey: &#x27;xx&#x27;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">async function main() &#123;</span><br><span class="line">  const completion = await openai.chat.completions.create(&#123;</span><br><span class="line">    messages: [&#123; role: &quot;system&quot;, content: &quot;You are a helpful assistant.&quot; &#125;],</span><br><span class="line">    model: &quot;deepseek-chat&quot;,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  console.log(completion.choices[0].message.content);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到回答:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">你好！我是一个基于人工智能技术的大型语言模型，由深度求索（DeepSeek）公司开发。我的核心功能是通过大量文本数据训练，能够理解和生成自然语言，从而协助用户解答问题、提供信息、进行对话等。</span><br><span class="line"></span><br><span class="line">我能做的事情包括但不限于：</span><br><span class="line">1. **回答问题**：无论是科学知识、历史事件、文化常识还是日常生活中的疑问，我都可以尽力提供准确的信息。</span><br><span class="line">2. **提供建议**：在某些情况下，我可以根据你的需求提供一些建议或指导。</span><br><span class="line">3. **语言翻译**：虽然我的主要语言是中文，但我也可以理解和生成其他语言的文本，帮助进行简单的翻译工作。</span><br><span class="line">4. **文本创作**：我可以协助撰写文章、故事、报告等文本内容，提供创意和写作支持。</span><br><span class="line">5. **学习辅导**：在教育领域，我可以提供一些基础的学习辅导，帮助理解复杂的概念。</span><br><span class="line"></span><br><span class="line">请注意，虽然我尽力提供准确和有用的信息，但我也有局限性，尤其是在处理非常专业或最新的信息时。我的知识截止日期是2023年，因此对于之后发生的事件或发展的信息可能不准确或不完整。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Temperature-设置"><a href="#Temperature-设置" class="headerlink" title="Temperature 设置"></a>Temperature 设置</h1><p>temperature 参数默认为 1.0。</p><p>场景温度<br>代码生成&#x2F;数学解题   0.0<br>数据抽取&#x2F;分析1.0<br>通用对话1.3<br>翻译1.3<br>创意类写作&#x2F;诗歌创作1.5</p><h1 id="token-和字数的换算比"><a href="#token-和字数的换算比" class="headerlink" title="token 和字数的换算比"></a>token 和字数的换算比</h1><p>1 个英文字符 ≈ 0.3 个 token。<br>1 个中文字符 ≈ 0.6 个 token。</p><h1 id="错误码描述"><a href="#错误码描述" class="headerlink" title="错误码描述"></a>错误码描述</h1><p>400 - 格式错误原因：请求体格式错误<br>解决方法：请根据错误信息提示修改请求体<br>401 - 认证失败原因：API key 错误，认证失败<br>解决方法：请检查您的 API key 是否正确，如没有 API key，请先 创建 API key<br>402 - 余额不足原因：账号余额不足<br>解决方法：请确认账户余额，并前往 充值 页面进行充值<br>422 - 参数错误原因：请求体参数错误<br>解决方法：请根据错误信息提示修改相关参数<br>429 - 请求速率达到上限原因：请求速率（TPM 或 RPM）达到上限<br>解决方法：请合理规划您的请求速率。<br>500 - 服务器故障原因：服务器内部故障<br>解决方法：请等待后重试。若问题一直存在，请联系我们解决<br>503 - 服务器繁忙原因：服务器负载过高<br>解决方法：请稍后重试您的请求</p><h1 id="JSON-Output"><a href="#JSON-Output" class="headerlink" title="JSON Output"></a>JSON Output</h1><p>在很多场景下，用户需要让模型严格按照 JSON 格式来输出，以实现输出的结构化，便于后续逻辑进行解析。</p><p>DeepSeek 提供了 JSON Output 功能，来确保模型输出合法的 JSON 字符串。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>设置 response_format 参数为 {‘type’: ‘json_object’}。<br>用户传入的 system 或 user prompt 中必须含有 json 字样，并给出希望模型输出的 JSON 格式的样例，以指导模型来输出合法 JSON。<br>需要合理设置 max_tokens 参数，防止 JSON 字符串被中途截断。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> openai <span class="keyword">import</span> OpenAI</span><br><span class="line"></span><br><span class="line">client = OpenAI(</span><br><span class="line">    api_key=<span class="string">&quot;&lt;your api key&gt;&quot;</span>,</span><br><span class="line">    base_url=<span class="string">&quot;https://api.deepseek.com&quot;</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">system_prompt = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">The user will provide some exam text. Please parse the &quot;question&quot; and &quot;answer&quot; and output them in JSON format. </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EXAMPLE INPUT: </span></span><br><span class="line"><span class="string">Which is the highest mountain in the world? Mount Everest.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">EXAMPLE JSON OUTPUT:</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;question&quot;: &quot;Which is the highest mountain in the world?&quot;,</span></span><br><span class="line"><span class="string">    &quot;answer&quot;: &quot;Mount Everest&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">user_prompt = <span class="string">&quot;Which is the longest river in the world? The Nile River.&quot;</span></span><br><span class="line"></span><br><span class="line">messages = [&#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>, <span class="string">&quot;content&quot;</span>: system_prompt&#125;,</span><br><span class="line">            &#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: user_prompt&#125;]</span><br><span class="line"></span><br><span class="line">response = client.chat.completions.create(</span><br><span class="line">    model=<span class="string">&quot;deepseek-chat&quot;</span>,</span><br><span class="line">    messages=messages,</span><br><span class="line">    response_format=&#123;</span><br><span class="line">        <span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;json_object&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(json.loads(response.choices[<span class="number">0</span>].message.content))</span><br></pre></td></tr></table></figure><p>模型将会输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;question&quot;</span>: <span class="string">&quot;Which is the longest river in the world?&quot;</span>,</span><br><span class="line">    <span class="string">&quot;answer&quot;</span>: <span class="string">&quot;The Nile River&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Function-Calling"><a href="#Function-Calling" class="headerlink" title="Function Calling"></a>Function Calling</h1><p>Function Calling 让模型能够调用外部工具，来增强自身能力。</p><p>获取用户当前位置的天气信息为例，展示了使用 Function Calling 的完整 Python 代码。</p><p>Function Calling 的具体 API 格式请参考对话补全文档。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> openai <span class="keyword">import</span> OpenAI</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_messages</span>(<span class="params">messages</span>):</span><br><span class="line">    response = client.chat.completions.create(</span><br><span class="line">        model=<span class="string">&quot;deepseek-chat&quot;</span>,</span><br><span class="line">        messages=messages,</span><br><span class="line">        tools=tools</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> response.choices[<span class="number">0</span>].message</span><br><span class="line"></span><br><span class="line">client = OpenAI(</span><br><span class="line">    api_key=<span class="string">&quot;&lt;your api key&gt;&quot;</span>,</span><br><span class="line">    base_url=<span class="string">&quot;https://api.deepseek.com&quot;</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">tools = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;function&quot;</span>,</span><br><span class="line">        <span class="string">&quot;function&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;get_weather&quot;</span>,</span><br><span class="line">            <span class="string">&quot;description&quot;</span>: <span class="string">&quot;Get weather of an location, the user shoud supply a location first&quot;</span>,</span><br><span class="line">            <span class="string">&quot;parameters&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;type&quot;</span>: <span class="string">&quot;object&quot;</span>,</span><br><span class="line">                <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;location&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;type&quot;</span>: <span class="string">&quot;string&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;description&quot;</span>: <span class="string">&quot;The city and state, e.g. San Francisco, CA&quot;</span>,</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;required&quot;</span>: [<span class="string">&quot;location&quot;</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">messages = [&#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;How&#x27;s the weather in Hangzhou?&quot;</span>&#125;]</span><br><span class="line">message = send_messages(messages)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;User&gt;\t <span class="subst">&#123;messages[<span class="number">0</span>][<span class="string">&#x27;content&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">tool = message.tool_calls[<span class="number">0</span>]</span><br><span class="line">messages.append(message)</span><br><span class="line"></span><br><span class="line">messages.append(&#123;<span class="string">&quot;role&quot;</span>: <span class="string">&quot;tool&quot;</span>, <span class="string">&quot;tool_call_id&quot;</span>: tool.<span class="built_in">id</span>, <span class="string">&quot;content&quot;</span>: <span class="string">&quot;24℃&quot;</span>&#125;)</span><br><span class="line">message = send_messages(messages)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Model&gt;\t <span class="subst">&#123;message.content&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>这个例子的执行流程如下：</p><p>用户：询问现在的天气<br>模型：返回 function get_weather({location: ‘Hangzhou’})<br>用户：调用 function get_weather({location: ‘Hangzhou’})，并传给模型。<br>模型：返回自然语言，”The current temperature in Hangzhou is 24°C.”<br>注：上述代码中 get_weather 函数功能需由用户提供，模型本身不执行具体函数。</p><p>此外还有上下文，缓存等</p><h1 id="能做什么？"><a href="#能做什么？" class="headerlink" title="能做什么？"></a>能做什么？</h1><p><strong>提示库</strong><br>探索 DeepSeek 提示词样例，挖掘更多可能</p><p><strong>代码改写</strong><br>对代码进行修改，来实现纠错、注释、调优等。</p><p><strong>代码解释</strong><br>对代码进行解释，来帮助理解代码内容。</p><p><strong>代码生成</strong><br>让模型生成一段完成特定功能的代码。</p><p><strong>内容分类</strong><br>对文本内容进行分析，并对齐进行自动归类</p><p><strong>结构化输出</strong><br>将内容转化为 Json，来方便后续程序处理</p><p><strong>角色扮演（自定义人设）</strong><br>自定义人设，来与用户进行角色扮演。</p><p><strong>角色扮演（情景续写）</strong><br>提供一个场景，让模型模拟该场景下的任务对话</p><p><strong>散文写作</strong><br>让模型根据提示词创作散文</p><p><strong>诗歌创作</strong><br>让模型根据提示词，创作诗歌</p><p><strong>文案大纲生成</strong><br>根据用户提供的主题，来生成文案大纲</p><p><strong>宣传标语生成</strong><br>让模型生成贴合商品信息的宣传标语。</p><p><strong>模型提示词生成</strong><br>根据用户需求，帮助生成高质量提示词</p><p><strong>中英翻译专家</strong><br>中英文互译，对用户输入内容进行翻译</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DeepSeek-V2-5&quot;&gt;&lt;a href=&quot;#DeepSeek-V2-5&quot; class=&quot;headerlink&quot; title=&quot;DeepSeek-V2.5&quot;&gt;&lt;/a&gt;DeepSeek-V2.5&lt;/h1&gt;&lt;p&gt;在目前大模型主流榜单中，DeepSeek-V2.5 </summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>packet splicing</title>
    <link href="https://banjinmei.github.io/2024/11/27/packet-splicing/"/>
    <id>https://banjinmei.github.io/2024/11/27/packet-splicing/</id>
    <published>2024-11-27T14:46:43.000Z</published>
    <updated>2024-11-27T14:51:40.459Z</updated>
    
    <content type="html"><![CDATA[<p>：</p><h1 id="模拟粘包的场景"><a href="#模拟粘包的场景" class="headerlink" title="模拟粘包的场景"></a>模拟粘包的场景</h1><p>粘包通常在发送端因数据频繁写入缓冲区并一起发送，或者在接收端没有明确的分包逻辑导致读取不完整的数据包时发生。</p><h1 id="使用固定分隔符或包头-包体"><a href="#使用固定分隔符或包头-包体" class="headerlink" title="使用固定分隔符或包头+包体"></a>使用固定分隔符或包头+包体</h1><p>常见的解决粘包方案是使用分隔符（如 \n 或特殊字符），或采用固定的包头标识数据长度。</p><p>服务端代码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">TcpServer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        TcpListener listener = <span class="keyword">new</span> TcpListener(IPAddress.Any, <span class="number">5000</span>);</span><br><span class="line">        listener.Start();</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Server started, waiting for connection...&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Socket clientSocket = listener.AcceptSocket();</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Client connected!&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="built_in">int</span> bytesRead;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ((bytesRead = clientSocket.Receive(buffer)) &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> receivedData = Encoding.UTF8.GetString(buffer, <span class="number">0</span>, bytesRead);</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Received: <span class="subst">&#123;receivedData&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 模拟数据未分包的场景</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Processing received data...&quot;</span>);</span><br><span class="line">            <span class="built_in">string</span>[] messages = receivedData.Split(<span class="string">&#x27;|&#x27;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> message <span class="keyword">in</span> messages)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(message))</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">$&quot;Processed: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        clientSocket.Close();</span><br><span class="line">        listener.Stop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>客户端代码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">TcpClientDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        TcpClient client = <span class="keyword">new</span> TcpClient(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">5000</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Connected to server.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        NetworkStream stream = client.GetStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 模拟粘包场景：连续发送多个小数据包</span></span><br><span class="line">        <span class="built_in">string</span>[] messages = &#123; <span class="string">&quot;Message1&quot;</span>, <span class="string">&quot;Message2&quot;</span>, <span class="string">&quot;Message3&quot;</span> &#125;;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> message <span class="keyword">in</span> messages)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> data = message + <span class="string">&quot;|&quot;</span>;</span><br><span class="line">            <span class="built_in">byte</span>[] buffer = Encoding.UTF8.GetBytes(data);</span><br><span class="line">            stream.Write(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Sent: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stream.Close();</span><br><span class="line">        client.Close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析代码中的粘包场景<br><strong>客户端</strong><br>模拟粘包通过连续发送数据包（Message1|Message2|Message3|），未等待服务端处理后再发送下一个包。</p><p><strong>服务端</strong><br>接收数据时，数据可能一次性接收到多个数据包，也可能接收到不完整的数据包。通过使用分隔符 | 拆分数据，可以解决粘包问题。</p><p>扩展：更高效的分包方式（包头+包体）<br>数据格式<br>包头：4 字节，表示包体长度。<br>包体：实际数据内容。</p><h1 id="处理粘包问题"><a href="#处理粘包问题" class="headerlink" title="处理粘包问题"></a>处理粘包问题</h1><p>服务端</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> headerSize = <span class="number">4</span>;</span><br><span class="line">    <span class="built_in">byte</span>[] headerBuffer = <span class="keyword">new</span> <span class="built_in">byte</span>[headerSize];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取包头</span></span><br><span class="line">    <span class="built_in">int</span> headerBytes = clientSocket.Receive(headerBuffer);</span><br><span class="line">    <span class="keyword">if</span> (headerBytes &lt; headerSize) <span class="keyword">break</span>; <span class="comment">// 连接断开</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> bodyLength = BitConverter.ToInt32(headerBuffer, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">byte</span>[] bodyBuffer = <span class="keyword">new</span> <span class="built_in">byte</span>[bodyLength];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取包体</span></span><br><span class="line">    <span class="built_in">int</span> bodyBytes = clientSocket.Receive(bodyBuffer);</span><br><span class="line">    <span class="built_in">string</span> message = Encoding.UTF8.GetString(bodyBuffer, <span class="number">0</span>, bodyBytes);</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">$&quot;Received Message: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>客户端代码（包头 + 包体）</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">TcpClientDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        TcpClient client = <span class="keyword">new</span> TcpClient(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">5000</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Connected to server.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        NetworkStream stream = client.GetStream();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 模拟发送多条消息</span></span><br><span class="line">        <span class="built_in">string</span>[] messages = &#123; <span class="string">&quot;Hello, Server!&quot;</span>, <span class="string">&quot;This is a test.&quot;</span>, <span class="string">&quot;Goodbye!&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> message <span class="keyword">in</span> messages)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 将消息转为字节数组</span></span><br><span class="line">            <span class="built_in">byte</span>[] bodyBuffer = Encoding.UTF8.GetBytes(message);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 包头：消息长度（4 字节整数）</span></span><br><span class="line">            <span class="built_in">byte</span>[] headerBuffer = BitConverter.GetBytes(bodyBuffer.Length);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 组合包头和包体</span></span><br><span class="line">            <span class="built_in">byte</span>[] packet = <span class="keyword">new</span> <span class="built_in">byte</span>[headerBuffer.Length + bodyBuffer.Length];</span><br><span class="line">            Buffer.BlockCopy(headerBuffer, <span class="number">0</span>, packet, <span class="number">0</span>, headerBuffer.Length);</span><br><span class="line">            Buffer.BlockCopy(bodyBuffer, <span class="number">0</span>, packet, headerBuffer.Length, bodyBuffer.Length);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发送数据包</span></span><br><span class="line">            stream.Write(packet, <span class="number">0</span>, packet.Length);</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;Sent: <span class="subst">&#123;message&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stream.Close();</span><br><span class="line">        client.Close();</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Disconnected from server.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>包头</strong><br>使用 BitConverter.GetBytes(int) 将包体长度转换为 4 字节的字节数组。<br>这样，服务端可以根据包头解析出包体的长度，确保不会漏读或多读数据。</p><p><strong>包体</strong><br>实际的消息内容（字符串）被编码为字节数组 bodyBuffer。</p><p>组合包头和包体<br>使用 Buffer.BlockCopy 将包头和包体拼接成一个完整的数据包，按照以下格式发送：</p><p>[包头 (4字节)][包体 (N字节)]<br><strong>发送逻辑</strong><br>调用 stream.Write 将整个数据包发送到服务端。即使多次发送，服务端依然能够正确解析每个数据包的内容。</p><p><strong>运行结果</strong><br>假设服务端按照之前的代码实现分包逻辑（先读包头，再根据长度读包体），运行客户端和服务端后，输出类似以下结果：</p><p>服务端输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Server started, waiting <span class="keyword">for</span> connection...</span><br><span class="line">Client connected!</span><br><span class="line">Received Message: Hello, Server!</span><br><span class="line">Received Message: This is a <span class="built_in">test</span>.</span><br><span class="line">Received Message: Goodbye!</span><br></pre></td></tr></table></figure><p>客户端输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Connected to server.</span><br><span class="line">Sent: Hello, Server!</span><br><span class="line">Sent: This is a <span class="built_in">test</span>.</span><br><span class="line">Sent: Goodbye!</span><br><span class="line">Disconnected from server.</span><br></pre></td></tr></table></figure><p>这种方式可以避免使用分隔符（如 |）时可能产生的冲突问题，常用于传输二进制数据和更复杂的协议通信。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;：&lt;/p&gt;
&lt;h1 id=&quot;模拟粘包的场景&quot;&gt;&lt;a href=&quot;#模拟粘包的场景&quot; class=&quot;headerlink&quot; title=&quot;模拟粘包的场景&quot;&gt;&lt;/a&gt;模拟粘包的场景&lt;/h1&gt;&lt;p&gt;粘包通常在发送端因数据频繁写入缓冲区并一起发送，或者在接收端没有明确的分包逻辑导致</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>csharp reflection delegate</title>
    <link href="https://banjinmei.github.io/2024/11/24/csharp-reflection-delegate/"/>
    <id>https://banjinmei.github.io/2024/11/24/csharp-reflection-delegate/</id>
    <published>2024-11-24T09:36:50.000Z</published>
    <updated>2024-11-24T09:59:16.558Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reflection"><a href="#Reflection" class="headerlink" title="Reflection"></a>Reflection</h1><p>反射<br>动态加载和创建对象：<br>反射可以在运行时加载程序集，并基于类型信息创建对象实例，而无需在编译时知道具体的类型。<br>这对于实现插件系统、动态加载模块或在不同版本的库之间提供兼容性非常有用。</p><p>反射可以获取有关类型（如类、接口、结构体等）及其成员（如字段、属性、方法等）的详细信息。<br>这对于生成文档、进行代码分析或创建序列化&#x2F;反序列化机制等任务非常有用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">class Program</span><br><span class="line">  &#123;</span><br><span class="line">      static void Main(string[] args)</span><br><span class="line">      &#123;</span><br><span class="line">          // 加载包含类型的程序集</span><br><span class="line">          Assembly assembly = Assembly.LoadFrom(<span class="string">&quot;ReflectionExample.dll&quot;</span>);</span><br><span class="line"> </span><br><span class="line">          // 获取类型信息</span><br><span class="line">          Type <span class="built_in">type</span> = assembly.GetType(<span class="string">&quot;ReflectionExample.MyClass&quot;</span>);</span><br><span class="line"> </span><br><span class="line">          // 创建对象实例</span><br><span class="line">          object instance = Activator.CreateInstance(<span class="built_in">type</span>);</span><br><span class="line"> </span><br><span class="line">          // 获取方法信息</span><br><span class="line">          MethodInfo methodInfo = type.GetMethod(<span class="string">&quot;MyMethod&quot;</span>);</span><br><span class="line"> </span><br><span class="line">          // 调用方法</span><br><span class="line">          methodInfo.Invoke(instance, new object[] &#123; <span class="string">&quot;Hello, Reflection!&quot;</span> &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  public class MyClass</span><br><span class="line">  &#123;</span><br><span class="line">      public void MyMethod(string message)</span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(message);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="Delegate"><a href="#Delegate" class="headerlink" title="Delegate"></a>Delegate</h1><p><strong>委托</strong><br>委托是一种类型安全的函数指针，可以用来引用一个或多个具有相同签名的方法。<br>委托（Delegate）是一种特殊的类型，它代表对具有特定参数列表和返回类型的函数的引用。委托可以用来封装静态方法或实例方法，并且可以在运行时像普通变量一样传递。这使得委托成为一种强大的工具，用于实现回调函数、事件处理以及其他需要函数作为参数传递的场景。</p><p><strong>委托的基本特性</strong><br>类型安全：委托是类型安全的，因为它们在声明时会指定一个方法签名，只有与这个签名匹配的方法才能被委托引用。<br>多播能力：大多数委托支持多播，即一个委托实例可以引用多个方法。当调用该委托时，所有引用的方法都会被依次调用。<br>灵活性：委托可以用来引用类的实例方法或静态方法，也可以引用匿名方法（使用lambda表达式）。<br>定义委托<br>委托可以通过delegate关键字定义。定义时需要指定返回类型和参数列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public delegate void MyDelegate(string message); // 返回类型为void，接受一个字符串参数</span><br></pre></td></tr></table></figure><p>使用委托<br>创建委托实例<br> 可以通过委托的构造函数或者new关键字创建委托实例，并将它绑定到具体的方法上。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MyMethod</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">StaticMethod</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Static: &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        MyClass instance = <span class="keyword">new</span> MyClass();</span><br><span class="line">        MyDelegate del1 = <span class="keyword">new</span> MyDelegate(instance.MyMethod);</span><br><span class="line">        MyDelegate del2 = <span class="keyword">new</span> MyDelegate(StaticMethod);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用委托</span></span><br><span class="line">        del1(<span class="string">&quot;Hello from instance method&quot;</span>);</span><br><span class="line">        del2(<span class="string">&quot;Hello from static method&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多播委托<br>如果 定义的委托不是void返回类型，那么当委托指向多个方法时，只有最后一个方法的返回值会被返回。对于返回类型为void的委托，所有方法都会被执行。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Method1</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Method1: &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Method2</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Method2: &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        MyDelegate del1 = <span class="keyword">new</span> MyDelegate(Method1);</span><br><span class="line">        MyDelegate del2 = <span class="keyword">new</span> MyDelegate(Method2);</span><br><span class="line">        MyDelegate combined = del1 + del2; <span class="comment">// 组合两个委托</span></span><br><span class="line"></span><br><span class="line">        combined(<span class="string">&quot;Hello multi-cast delegate&quot;</span>); <span class="comment">// 调用组合后的委托</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用Lambda表达式<br>从C# 3.0开始， 可以使用lambda表达式来创建委托，这使得代码更加简洁。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        MyDelegate del = message =&gt; Console.WriteLine(<span class="string">&quot;Lambda: &quot;</span> + message);</span><br><span class="line">        del(<span class="string">&quot;Hello lambda expression&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><p>事件是基于订阅-发布模式的一种机制，用于实现对象之间的解耦。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Publisher</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> EventHandler CustomEvent;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnCustomEvent</span>(<span class="params">EventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        CustomEvent?.Invoke(<span class="keyword">this</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TriggerEvent</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        OnCustomEvent(EventArgs.Empty);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Subscriber</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnCustomEvent</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Event received.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Publisher publisher = <span class="keyword">new</span> Publisher();</span><br><span class="line">        Subscriber subscriber = <span class="keyword">new</span> Subscriber();</span><br><span class="line"></span><br><span class="line">        publisher.CustomEvent += subscriber.OnCustomEvent;</span><br><span class="line">        publisher.TriggerEvent();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 .NET 中，事件是一种特殊的委托类型，用于实现发布-订阅模式。事件允许一个对象（发布者）通知其他对象（订阅者）发生了某些事情。下面是一个简单的 .NET 事件的例子，我们将创建一个简单的计数器类 Counter，当计数达到特定值时触发事件。</p><p>定义事件<br>首先，我们需要定义一个事件处理器委托，然后在 Counter 类中声明一个事件。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个事件处理程序委托</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">ReachedEventHandler</span>(<span class="params"><span class="built_in">object</span> source, EventArgs e</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计数器类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Counter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 定义一个事件</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> ReachedEventHandler Reached;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> _count;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增加计数的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Increment</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        _count++;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Count is now <span class="subst">&#123;_count&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当计数达到某个值时触发事件</span></span><br><span class="line">        <span class="keyword">if</span> (_count &gt;= <span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            OnReached();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 触发事件的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnReached</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Reached?.Invoke(<span class="keyword">this</span>, EventArgs.Empty);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用事件<br>接下来，我们将在主程序中创建 Counter 类的实例，并订阅其 Reached 事件。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> counter = <span class="keyword">new</span> Counter();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 订阅事件</span></span><br><span class="line">        counter.Reached += Counter_Reached;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 模拟增加计数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            counter.Increment();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事件处理方法</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Counter_Reached</span>(<span class="params"><span class="built_in">object</span> source, EventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;The count has reached the limit!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个例子中，每当计数器的值达到5时，就会触发 Reached 事件。订阅了此事件的对象将接收到通知，并可以执行相应的操作。在这个例子中，我们的主程序订阅了这个事件，并定义了一个事件处理方法 Counter_Reached，该方法会在事件被触发时输出一条消息。</p><p>这是一个非常基础的示例，实际应用中事件可以携带更多的信息，例如通过自定义的事件参数类来传递数据给事件处理方法。</p><h1 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h1><p>泛型允许 在定义方法、类或接口时不指定具体的类型，而是在使用的时候再指定。这样可以提高代码的复用性和类型安全性。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Box</span>&lt;<span class="title">T</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> T item;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Box</span>(<span class="params">T item</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.item = item;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">GetItem</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line">Box&lt;<span class="built_in">string</span>&gt; stringBox = <span class="keyword">new</span> Box&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line"><span class="built_in">string</span> content = stringBox.GetItem();</span><br><span class="line">Console.WriteLine(content);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Reflection&quot;&gt;&lt;a href=&quot;#Reflection&quot; class=&quot;headerlink&quot; title=&quot;Reflection&quot;&gt;&lt;/a&gt;Reflection&lt;/h1&gt;&lt;p&gt;反射&lt;br&gt;动态加载和创建对象：&lt;br&gt;反射可以在运行时加载程序集，并基于类</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="c#" scheme="https://banjinmei.github.io/tags/c/"/>
    
    <category term=".NET" scheme="https://banjinmei.github.io/tags/NET/"/>
    
  </entry>
  
  <entry>
    <title>mysql 压测</title>
    <link href="https://banjinmei.github.io/2024/11/22/sql-%E5%8E%8B%E6%B5%8B/"/>
    <id>https://banjinmei.github.io/2024/11/22/sql-%E5%8E%8B%E6%B5%8B/</id>
    <published>2024-11-22T14:55:35.000Z</published>
    <updated>2024-11-29T19:08:14.327Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysqlslap"><a href="#mysqlslap" class="headerlink" title="mysqlslap"></a>mysqlslap</h1><p>是 MySQL 自带的一个用于模拟负载和测试数据库性能的命令行工具。它可以帮助开发者或数据库管理员了解在不同操作模式下数据库的表现情况，从而优化数据库配置或查询语句。<br>使用方法</p><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlslap [options]</span><br></pre></td></tr></table></figure><p>常用选项<br>–auto-generate-sql: 自动生成 SQL 测试数据，默认为开启状态。<br>–concurrency&#x3D;thread_count: 指定并发线程数，例如 –concurrency&#x3D;50 表示创建 50 个并发连接。<br>–iterations&#x3D;count: 指定测试迭代次数，即执行多少轮测试。<br>–create-schema&#x3D;schema_name: 创建并使用指定的 schema 进行测试。<br>–query&#x3D;query_file: 使用文件中的 SQL 语句进行测试。<br>–auto-generate-sql-add-auto-increment: 对自动生成的表添加自动增长字段。<br>–auto-generate-sql-load-type&#x3D;type: 指定测试的数据加载类型，可以是 insert, update, delete, select 或 mixed。<br>–number-of-queries&#x3D;value: 当使用 –auto-generate-sql 参数时，设置每个线程执行的查询数量。<br>–engine&#x3D;engine_name: 指定存储引擎，如 InnoDB、MyISAM 等。<br>示例</p><h1 id="基本压力测试："><a href="#基本压力测试：" class="headerlink" title="基本压力测试："></a>基本压力测试：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlslap --concurrency=10 --iterations=3 --auto-generate-sql --engine=InnoDB</span><br></pre></td></tr></table></figure><p>这条命令将启动一个使用 InnoDB 存储引擎的压力测试，使用 10 个并发连接，执行 3 轮测试，并自动生成 SQL 语句。<br>自定义查询的压力测试：<br>如果你有一个包含多个 SQL 语句的文件 test_queries.sql，可以这样使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlslap --concurrency=5 --iterations=2 --query=test_queries.sql</span><br></pre></td></tr></table></figure><p>此命令将使用 5 个并发连接，执行 2 轮测试，使用 test_queries.sql 文件中定义的 SQL 语句。</p><h1 id="混合操作的压力测试："><a href="#混合操作的压力测试：" class="headerlink" title="混合操作的压力测试："></a>混合操作的压力测试：</h1><p>若要测试插入、更新、删除和选择操作的混合负载，可以这样做：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlslap --concurrency=20 --iterations=1 --auto-generate-sql --auto-generate-sql-load-type=mixed --number-of-queries=1000</span><br></pre></td></tr></table></figure><p>这将启动一个混合操作的测试，使用 20 个并发连接，执行一次迭代，总共执行 1000 条随机生成的 SQL 语句。</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>在进行压力测试前，请确保备份重要数据，避免测试过程中对生产环境造成影响。<br>测试结果会受到服务器硬件性能、MySQL 配置参数等多种因素的影响，因此测试环境应尽量接近生产环境。<br>分析测试结果时，注意查看错误信息，以便及时发现潜在的问题。</p><p>插入数据<br>执行如下命令实现数据插入，为提高效率这里开启 10 个客户端线程同时插入，总共执行 1 百万次操作：</p><p>mysqlslap -uroot -p 123123.zxcvb –concurrency&#x3D;10 –number-of-queries&#x3D;1000000 –create-schema&#x3D;IMDB–query&#x3D;”INSERT INTO people(name,age) VALUES (uuid(), RAND() * 100)”</p><h1 id="对user表进行-100000-插入测试"><a href="#对user表进行-100000-插入测试" class="headerlink" title="对user表进行 100000 插入测试"></a>对user表进行 100000 插入测试</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_username</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(random.choice(string.ascii_lowercase) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_email</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;generate_username()&#125;</span>@example.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;insert_data.sql&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000</span>):</span><br><span class="line">        username = generate_username()</span><br><span class="line">        email = generate_email()</span><br><span class="line">        f.write(<span class="string">f&quot;INSERT INTO User (username, email) VALUES (&#x27;<span class="subst">&#123;username&#125;</span>&#x27;, &#x27;<span class="subst">&#123;email&#125;</span>&#x27;);\n&quot;</span>)</span><br></pre></td></tr></table></figure><p>python 生成insert_data sql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlslap --concurrency=50 --iterations=1 --create-schema=test_db --query=insert_data.sql</span><br></pre></td></tr></table></figure><p>–concurrency&#x3D;50：使用 50 个并发连接。<br>–iterations&#x3D;1：执行一次迭代。<br>–create-schema&#x3D;test_db：创建并使用 test_db 数据库。<br>–query&#x3D;insert_data.sql：使用 insert_data.sql 文件中的 SQL 语句。</p><!-- https://blog.csdn.net/naisiing/article/details/135677935mysql 压测 -->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;mysqlslap&quot;&gt;&lt;a href=&quot;#mysqlslap&quot; class=&quot;headerlink&quot; title=&quot;mysqlslap&quot;&gt;&lt;/a&gt;mysqlslap&lt;/h1&gt;&lt;p&gt;是 MySQL 自带的一个用于模拟负载和测试数据库性能的命令行工具。它可以帮助开发者</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="mysql" scheme="https://banjinmei.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter 压测工具</title>
    <link href="https://banjinmei.github.io/2024/11/22/Jmeter-%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7/"/>
    <id>https://banjinmei.github.io/2024/11/22/Jmeter-%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7/</id>
    <published>2024-11-22T14:53:27.000Z</published>
    <updated>2024-11-22T14:54:54.773Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JMeter"><a href="#JMeter" class="headerlink" title="JMeter"></a>JMeter</h1><p>下载地址： Apache JMeter<br><a class="link"   href="https://jmeter.apache.org/download_jmeter.cgi" >https://jmeter.apache.org/download_jmeter.cgi<i class="fas fa-external-link-alt"></i></a></p><p>选择二进制包下载后解压，双击&#x2F;bin&#x2F;jmeter.bat<br>（依赖java环境）</p><h1 id="语言设置"><a href="#语言设置" class="headerlink" title="语言设置"></a>语言设置</h1><p>可以在Options&#x2F;Choose Language将语言设置为中文</p><h1 id="创建线程组"><a href="#创建线程组" class="headerlink" title="创建线程组"></a>创建线程组</h1><p>右键Test Plan<br>Test Plan-&gt;添加-&gt;线程（用户）-&gt;线程组</p><p>名称：线程组名称<br>注释（可选设置）<br>线程数：可以用作是用户数，即多少个同时并发向API发送请求<br>Ramp-Up时间：在设定的时间内启动上面设置的线程数<br>循环次数：即一个线程发送设定的请求，可以勾选永远，这样线程就会一直发送API请求</p><h1 id="添加HTTP请求"><a href="#添加HTTP请求" class="headerlink" title="添加HTTP请求"></a>添加HTTP请求</h1><p>右键线程组<br>线程组-&gt;添加-&gt;取样器-&gt;HTTP请求</p><h1 id="设置HTTP请求"><a href="#设置HTTP请求" class="headerlink" title="设置HTTP请求"></a>设置HTTP请求</h1><p>名称：接口名称<br>注释（可选）<br>协议：http&#x2F;https<br>服务器名称或IP：服务器域名或IP地址<br>端口号：web程序监听的端口号<br>请求方法：GET&#x2F;POST&#x2F;…<br>路径：API接口路径</p><h1 id="添加HTTP请求头"><a href="#添加HTTP请求头" class="headerlink" title="添加HTTP请求头"></a>添加HTTP请求头</h1><p>右键线程组<br>线程组-&gt;添加-&gt;配置元件-&gt;HTTP信息头</p><p>设置接口的HTTP请求头</p><h1 id="添加监听器"><a href="#添加监听器" class="headerlink" title="添加监听器"></a>添加监听器</h1><p>查看结果树：可以查看请求响应是否成功，也可以看到响应内存</p><p>线程组-&gt;添加-&gt;监听器-&gt;查看结构树</p><h1 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h1><h1 id="线程组-添加-取样器-TCP取样器"><a href="#线程组-添加-取样器-TCP取样器" class="headerlink" title="线程组-&gt;添加-&gt;取样器-&gt; TCP取样器"></a>线程组-&gt;添加-&gt;取样器-&gt; TCP取样器</h1><p>SERVER IP  端口  发送文本</p><h1 id="java环境"><a href="#java环境" class="headerlink" title="java环境"></a>java环境</h1><p>在Windows上安装Java环境通常涉及到两个主要步骤：安装Java运行环境（JRE）或开发工具包（JDK），以及设置环境变量。以下是详细的步骤说明：</p><h2 id="1-下载JDK"><a href="#1-下载JDK" class="headerlink" title="1. 下载JDK"></a>1. 下载JDK</h2><p>首先，需要从Oracle官网或其他可信的来源下载最新的JDK版本。访问Oracle JDK下载页面，<br><a class="link"   href="https://www.oracle.com/java/technologies/downloads/#java17" >https://www.oracle.com/java/technologies/downloads/#java17<i class="fas fa-external-link-alt"></i></a></p><p>选择适合的操作系统的版本进行下载。注意，页面上的链接可能会随着新版本的发布而变化。</p><h2 id="2-安装JDK"><a href="#2-安装JDK" class="headerlink" title="2. 安装JDK"></a>2. 安装JDK</h2><p>双击下载好的安装文件开始安装过程。<br>在安装过程中，可以选择自定义安装路径。建议选择一个容易记住的位置，比如 C:\Program Files\Java\jdk-xx（其中 xx 是安装的JDK版本号）。<br>按照提示完成安装。</p><h2 id="3-设置环境变量"><a href="#3-设置环境变量" class="headerlink" title="3. 设置环境变量"></a>3. 设置环境变量</h2><p>为了能够在命令行中任意位置使用 java 和 javac 命令，需要配置系统环境变量。</p><p>打开系统属性：<br>右键点击“此电脑”或“我的电脑”，选择“属性”。<br>点击“高级系统设置”。<br>在“高级”选项卡下，点击“环境变量”。<br>设置JAVA_HOME：<br>在“系统变量”部分，点击“新建”，然后添加变量名为 JAVA_HOME。<br>将变量值设为JDK的安装目录，例如 C:\Program Files\Java\jdk-xx。<br>修改Path变量：<br>找到并选中“系统变量”中的 Path 变量，然后点击“编辑”。<br>添加一个新的条目，其值为 %JAVA_HOME%\bin。这使得系统可以在任何地方识别 java 和 javac 命令。</p><h2 id="4-验证安装"><a href="#4-验证安装" class="headerlink" title="4. 验证安装"></a>4. 验证安装</h2><p>打开命令提示符（CMD），输入以下命令来验证安装是否成功：</p><p>输入 java -version 查看Java版本信息。<br>输入 javac -version 查看Java编译器版本信息。<br>如果能够正确显示版本信息，则表示Java环境已经成功安装并且配置正确。</p><!-- https://blog.csdn.net/weixin_73622063/article/details/143834672 -->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JMeter&quot;&gt;&lt;a href=&quot;#JMeter&quot; class=&quot;headerlink&quot; title=&quot;JMeter&quot;&gt;&lt;/a&gt;JMeter&lt;/h1&gt;&lt;p&gt;下载地址： Apache JMeter&lt;br&gt;&lt;a class=&quot;link&quot;   href=&quot;https:/</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="jmeter" scheme="https://banjinmei.github.io/tags/jmeter/"/>
    
    <category term="jvav" scheme="https://banjinmei.github.io/tags/jvav/"/>
    
  </entry>
  
  <entry>
    <title>redis sentinel cluster</title>
    <link href="https://banjinmei.github.io/2024/11/22/redis-sentinel-cluster/"/>
    <id>https://banjinmei.github.io/2024/11/22/redis-sentinel-cluster/</id>
    <published>2024-11-22T14:18:29.000Z</published>
    <updated>2024-11-22T14:37:47.028Z</updated>
    
    <content type="html"><![CDATA[<p> Debian 服务器上部署分布式 Redis 可以实现高可用性或负载均衡，具体可以选择以下两种方案之一：</p><p>主从复制 (Master-Slave Replication)<br>主从复制用于数据冗余备份和读写分离，但并不提供自动故障切换功能。</p><h1 id="Redis-Sentinel-哨兵模式"><a href="#Redis-Sentinel-哨兵模式" class="headerlink" title="Redis Sentinel (哨兵模式)"></a>Redis Sentinel (哨兵模式)</h1><p>Redis Sentinel 在主从复制的基础上增加了自动故障切换功能，用于实现高可用性。</p><h1 id="Redis-Cluster-集群模式"><a href="#Redis-Cluster-集群模式" class="headerlink" title="Redis Cluster (集群模式)"></a>Redis Cluster (集群模式)</h1><p>Redis Cluster 是一种分布式部署方式，支持数据分片和高可用性，适用于需要扩展性的场景。</p><h1 id="Redis-Sentinel-部署架构"><a href="#Redis-Sentinel-部署架构" class="headerlink" title="Redis Sentinel 部署架构"></a>Redis Sentinel 部署架构</h1><p>两台服务器：<br>主 Redis 服务器（假设 IP：192.168.1.101）<br>从 Redis 服务器（假设 IP：192.168.1.102）<br>Sentinel 哨兵进程：<br>每台服务器运行一个 Sentinel 进程，用于监控和故障切换。</p><h2 id="步骤-1：安装-Redis"><a href="#步骤-1：安装-Redis" class="headerlink" title="步骤 1：安装 Redis"></a>步骤 1：安装 Redis</h2><p>在两台服务器上分别安装 Redis：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install redis-server</span><br></pre></td></tr></table></figure><p>验证 Redis 版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --version</span><br></pre></td></tr></table></figure><h2 id="步骤-2：配置-Redis-主从复制"><a href="#步骤-2：配置-Redis-主从复制" class="headerlink" title="步骤 2：配置 Redis 主从复制"></a>步骤 2：配置 Redis 主从复制</h2><p>在主服务器 (192.168.1.101) 上<br>编辑 Redis 配置文件 &#x2F;etc&#x2F;redis&#x2F;redis.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0           <span class="comment"># 允许外部访问</span></span><br><span class="line">protected-mode no      <span class="comment"># 关闭保护模式（测试环境使用）</span></span><br><span class="line">appendonly <span class="built_in">yes</span>         <span class="comment"># 开启持久化</span></span><br></pre></td></tr></table></figure><p>启动 Redis 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis</span><br></pre></td></tr></table></figure><p>在从服务器 (192.168.1.102) 上<br>编辑 Redis 配置文件 &#x2F;etc&#x2F;redis&#x2F;redis.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line">protected-mode no</span><br><span class="line">appendonly <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置为主服务器的从节点</span></span><br><span class="line">replicaof 192.168.1.101 6379</span><br></pre></td></tr></table></figure><p>启动 Redis 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis</span><br></pre></td></tr></table></figure><p>验证主从复制<br>在主服务器上设置一个测试键：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line"><span class="built_in">set</span> mykey <span class="string">&quot;hello_redis&quot;</span></span><br></pre></td></tr></table></figure><p>在从服务器上读取：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line">get mykey</span><br><span class="line"><span class="comment"># 返回 &quot;hello_redis&quot;</span></span><br></pre></td></tr></table></figure><h2 id="步骤-3：配置-Redis-Sentinel"><a href="#步骤-3：配置-Redis-Sentinel" class="headerlink" title="步骤 3：配置 Redis Sentinel"></a>步骤 3：配置 Redis Sentinel</h2><p>在两台服务器上配置 Redis Sentinel。Redis 自带 Sentinel 二进制文件，不需要额外安装。</p><p>配置主服务器的 Sentinel<br>编辑 &#x2F;etc&#x2F;redis&#x2F;sentinel.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0                        <span class="comment"># 允许外部访问</span></span><br><span class="line">protected-mode no                   <span class="comment"># 关闭保护模式（测试环境使用）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控主节点，设置 quorum 为 2</span></span><br><span class="line">sentinel monitor mymaster 192.168.1.101 6379 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果主节点在 5 秒内无响应，则认为其失效</span></span><br><span class="line">sentinel down-after-milliseconds mymaster 5000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置故障切换的超时时间</span></span><br><span class="line">sentinel failover-timeout mymaster 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果主节点有密码，需添加以下配置</span></span><br><span class="line"><span class="comment"># sentinel auth-pass mymaster &lt;password&gt;</span></span><br></pre></td></tr></table></figure><p>配置从服务器的 Sentinel<br>在从服务器上，配置 &#x2F;etc&#x2F;redis&#x2F;sentinel.conf，内容与主服务器一致。</p><h2 id="步骤-4：启动-Redis-Sentinel"><a href="#步骤-4：启动-Redis-Sentinel" class="headerlink" title="步骤 4：启动 Redis Sentinel"></a>步骤 4：启动 Redis Sentinel</h2><p>在两台服务器上启动 Sentinel：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server /etc/redis/sentinel.conf --sentinel</span><br></pre></td></tr></table></figure><p>检查是否启动成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep redis</span><br></pre></td></tr></table></figure><p>应该能看到 Redis Sentinel 进程运行。</p><h2 id="步骤-5：测试高可用性"><a href="#步骤-5：测试高可用性" class="headerlink" title="步骤 5：测试高可用性"></a>步骤 5：测试高可用性</h2><p>模拟主节点故障<br>在主服务器上停止 Redis 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop redis</span><br></pre></td></tr></table></figure><p>Sentinel 检测到主节点不可用后，会自动将从节点（192.168.1.102）提升为主节点。</p><p>验证故障切换<br>在 Sentinel 中查看新的主节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">SENTINEL get-master-addr-by-name mymaster</span><br></pre></td></tr></table></figure><p>应返回从节点的 IP 和端口（192.168.1.102:6379）。</p><p>恢复主节点<br>启动主节点服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start redis</span><br></pre></td></tr></table></figure><p>主节点会自动成为新的从节点，重新加入集群。</p><p>附加：常用命令<br>查看 Sentinel 监控的所有节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">SENTINEL masters</span><br></pre></td></tr></table></figure><p>查看特定主节点的所有从节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">SENTINEL slaves mymaster</span><br></pre></td></tr></table></figure><p>手动触发故障切换：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">SENTINEL failover mymaster</span><br></pre></td></tr></table></figure><p>部署总结<br>Redis Sentinel 实现了主从复制的监控和自动故障切换，其核心是：</p><p>主节点负责写操作，从节点提供读操作。<br>Sentinel 检测主节点是否不可用，并自动将从节点提升为主节点。<br>整个系统实现了高可用性，无需人工干预。</p><p><strong>三台服务器</strong></p><p>假设有三台服务器：</p><p>主节点（Master）：192.168.1.101<br>从节点1（Replica1）：192.168.1.102<br>从节点2（Replica2）：192.168.1.103<br>每台服务器同时运行 Redis 和 Sentinel。</p><h2 id="1-安装-Redis"><a href="#1-安装-Redis" class="headerlink" title="1. 安装 Redis"></a>1. 安装 Redis</h2><p>在所有服务器上安装 Redis：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install redis-server</span><br></pre></td></tr></table></figure><p>验证 Redis 安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --version</span><br></pre></td></tr></table></figure><h2 id="2-配置主从复制"><a href="#2-配置主从复制" class="headerlink" title="2. 配置主从复制"></a>2. 配置主从复制</h2><p>主节点配置（192.168.1.101）<br>编辑 &#x2F;etc&#x2F;redis&#x2F;redis.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line">protected-mode no</span><br><span class="line">appendonly <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><p>启动 Redis 主节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis</span><br></pre></td></tr></table></figure><p>从节点配置（192.168.1.102 和 192.168.1.103）<br>编辑 &#x2F;etc&#x2F;redis&#x2F;redis.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line">protected-mode no</span><br><span class="line">appendonly <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置为从节点，指向主节点 IP 和端口</span></span><br><span class="line">replicaof 192.168.1.101 6379</span><br></pre></td></tr></table></figure><p>启动 Redis 从节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>验证主从同步<br>在主节点上插入数据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line">SET test_key <span class="string">&quot;hello_redis&quot;</span></span><br></pre></td></tr></table></figure><p>在从节点验证：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line">GET test_key</span><br><span class="line"><span class="comment"># 应返回 &quot;hello_redis&quot;</span></span><br></pre></td></tr></table></figure><h2 id="3-配置-Sentinel"><a href="#3-配置-Sentinel" class="headerlink" title="3. 配置 Sentinel"></a>3. 配置 Sentinel</h2><p>配置文件路径<br>默认 Sentinel 配置文件路径为 &#x2F;etc&#x2F;redis&#x2F;sentinel.conf。</p><p>编辑 Sentinel 配置文件<br>在所有服务器（192.168.1.101、192.168.1.102、192.168.1.103）上，编辑 &#x2F;etc&#x2F;redis&#x2F;sentinel.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line">protected-mode no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义监控的主节点名称和地址</span></span><br><span class="line">sentinel monitor mymaster 192.168.1.101 6379 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置检测主节点失败的时间（毫秒）</span></span><br><span class="line">sentinel down-after-milliseconds mymaster 5000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置故障转移完成的超时时间（毫秒）</span></span><br><span class="line">sentinel failover-timeout mymaster 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果启用了密码认证，请设置主节点密码</span></span><br><span class="line"><span class="comment"># sentinel auth-pass mymaster &lt;的密码&gt;</span></span><br></pre></td></tr></table></figure><p>启动 Sentinel<br>在每台服务器上分别启动 Sentinel：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server /etc/redis/sentinel.conf --sentinel</span><br></pre></td></tr></table></figure><h2 id="4-验证-Sentinel"><a href="#4-验证-Sentinel" class="headerlink" title="4. 验证 Sentinel"></a>4. 验证 Sentinel</h2><p>查看 Sentinel 状态<br>在任意 Sentinel 节点执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">SENTINEL masters</span><br></pre></td></tr></table></figure><p>输出应显示主节点的信息，例如：</p><p>name: mymaster, status: ok, slaves: 2</p><p>模拟故障转移<br>手动停止主节点服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop redis</span><br></pre></td></tr></table></figure><p>Sentinel 将检测主节点不可用，并自动提升从节点为主节点。<br>验证新的主节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">SENTINEL get-master-addr-by-name mymaster</span><br></pre></td></tr></table></figure><p>新主节点的 IP 和端口将被返回。</p><h3 id="5-高可用性测试"><a href="#5-高可用性测试" class="headerlink" title="5. 高可用性测试"></a>5. 高可用性测试</h3><p>在新主节点上插入数据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h &lt;新主节点IP&gt;</span><br><span class="line">SET test_key2 <span class="string">&quot;new_data&quot;</span></span><br></pre></td></tr></table></figure><p>验证数据是否同步到从节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h &lt;从节点IP&gt;</span><br><span class="line">GET test_key2</span><br></pre></td></tr></table></figure><p>总结<br>通过 Redis Sentinel，可以实现：</p><p>自动故障检测：当主节点不可用时，Sentinel 会自动检测并进行切换。<br>自动主从切换：从节点自动提升为主节点，保障服务持续可用。<br>无需人工干预：服务的高可用性大大提高。<br>如需进一步调整配置（如增加节点或优化参数），可根据具体业务需求进行调整。</p><h1 id="Redis-Cluster"><a href="#Redis-Cluster" class="headerlink" title="Redis Cluster"></a>Redis Cluster</h1><h2 id="步骤一：安装Redis"><a href="#步骤一：安装Redis" class="headerlink" title="步骤一：安装Redis"></a>步骤一：安装Redis</h2><p>在每台服务器上安装Redis。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install redis-server</span><br></pre></td></tr></table></figure><h2 id="步骤二：配置Redis"><a href="#步骤二：配置Redis" class="headerlink" title="步骤二：配置Redis"></a>步骤二：配置Redis</h2><p>备份原始配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/redis/redis.conf /etc/redis/redis.conf.bak</span><br></pre></td></tr></table></figure><p><strong>编辑Redis配置文件：</strong><br>编辑 &#x2F;etc&#x2F;redis&#x2F;redis.conf 文件，进行以下修改：<br>启用集群模式：</p><p>cluster-enabled yes<br><strong>指定集群配置文件：</strong></p><p>cluster-config-file nodes-6379.conf<br><strong>设置节点超时时间：</strong><br>cluster-node-timeout 5000<br><strong>启用AOF持久化（可选，但推荐）：</strong><br>appendonly yes<br><strong>绑定服务器的IP地址：</strong><br>将 bind 127.0.0.1 修改为服务器的实际IP地址，例如：<br>bind 192.168.1.1<br><strong>设置监听端口：</strong><br>默认端口是6379，确保每个节点的端口不同。例如，第一台服务器保持6379，第二台服务器可以设置为6380，第三台服务器可以设置为6381。</p><h2 id="步骤三：启动Redis服务"><a href="#步骤三：启动Redis服务" class="headerlink" title="步骤三：启动Redis服务"></a>步骤三：启动Redis服务</h2><p>在每台服务器上启动Redis服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis-server</span><br></pre></td></tr></table></figure><h2 id="步骤四：创建Redis集群"><a href="#步骤四：创建Redis集群" class="headerlink" title="步骤四：创建Redis集群"></a>步骤四：创建Redis集群</h2><p>下载Redis工具：<br>如果你还没有安装Redis的命令行工具，可以从官方GitHub仓库下载最新的Redis版本，解压后找到 redis-trib.rb 脚本。<br>创建集群：<br>使用 redis-cli 工具来创建集群。假设你的三台服务器的IP地址分别为 192.168.1.1、192.168.1.2 和 192.168.1.3，且Redis实例分别监听6379、6380和6381端口，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --cluster create 192.168.1.1:6379 192.168.1.2:6380 192.168.1.3:6381 --cluster-replicas 1</span><br></pre></td></tr></table></figure><p>这里 –cluster-replicas 1 表示每个主节点有一个副本。</p><h2 id="步骤五：验证集群"><a href="#步骤五：验证集群" class="headerlink" title="步骤五：验证集群"></a>步骤五：验证集群</h2><p>连接到任意一个节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 192.168.1.1 -p 6379</span><br></pre></td></tr></table></figure><p>执行基本命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> testkey <span class="string">&quot;Hello Redis Cluster&quot;</span></span><br><span class="line">get testkey</span><br></pre></td></tr></table></figure><p>检查集群状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cluster nodes</span><br></pre></td></tr></table></figure><h2 id="步骤六：监控和维护"><a href="#步骤六：监控和维护" class="headerlink" title="步骤六：监控和维护"></a>步骤六：监控和维护</h2><p>定期检查日志：<br>查看 &#x2F;var&#x2F;log&#x2F;redis&#x2F;redis-server.log 文件中的日志信息，确保没有错误。<br>监控性能：<br>使用 redis-cli 的 info 命令来监控集群的性能和状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 192.168.1.1 -p 6379 info</span><br></pre></td></tr></table></figure><h1 id="Debian-root登录"><a href="#Debian-root登录" class="headerlink" title="Debian root登录"></a>Debian root登录</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;PermitRootLogin yes&#x27;</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line"><span class="comment"># 重启ssh服务，使配置生效</span></span><br><span class="line">sudo systemctl restart ssh</span><br></pre></td></tr></table></figure><h1 id="debian-更换源"><a href="#debian-更换源" class="headerlink" title="debian 更换源"></a>debian 更换源</h1><h2 id="1-备份文件"><a href="#1-备份文件" class="headerlink" title="1.  备份文件"></a>1.  备份文件</h2><p>cp &#x2F;etc&#x2F;apt&#x2F;sources.list  &#x2F;etc&#x2F;apt&#x2F;sources.list.bak</p><h2 id="2-更改-sources-list文件内容为："><a href="#2-更改-sources-list文件内容为：" class="headerlink" title="2. 更改 sources.list文件内容为："></a>2. 更改 sources.list文件内容为：</h2><p>(官方源)<br>deb <a class="link"   href="http://deb.debian.org/debian" >http://deb.debian.org/debian<i class="fas fa-external-link-alt"></i></a> bullseye main contrib non-free<br>deb-src <a class="link"   href="http://deb.debian.org/debian" >http://deb.debian.org/debian<i class="fas fa-external-link-alt"></i></a> bullseye main contrib non-free</p><h2 id="3-更新"><a href="#3-更新" class="headerlink" title="3. 更新"></a>3. 更新</h2><p>apt-get -y update</p><!--https://www.runoob.com/redis/redis-commands.html在Debian系统上安装Redis并设置密码可以按照以下步骤进行：安装Redis更新软件包列表：Bashsudo apt update安装Redis服务器：Bashsudo apt install redis-server设置Redis密码编辑Redis配置文件：使用文本编辑器（如nano或vim）打开Redis配置文件。通常这个文件位于/etc/redis/redis.conf。Bashsudo nano /etc/redis/redis.conf找到requirepass指令：在配置文件中搜索requirepass关键字。默认情况下，这一行可能被注释掉了（前面有#号）。设置密码：删除#号以取消注释，并设置的密码。例如：Confrequirepass yourStrongPasswordHere请确保选择一个强密码来保护的Redis实例。保存并退出编辑器：如果使用的是nano，可以按Ctrl+X，然后按Y确认保存，最后按Enter退出。如果使用的是vim，可以按Esc键，然后输入:wq保存并退出。重启Redis服务为了使更改生效，需要重启Redis服务：Bashsudo systemctl restart redis.service验证设置可以通过Redis客户端连接到服务器来验证密码是否设置成功：Bashredis-cli在Redis命令行界面中，尝试执行一个命令，比如GET foo，会看到一个错误消息，提示需要认证。然后使用AUTH命令进行认证：BashAUTH yourStrongPasswordHere如果密码正确，应该会收到一个表示成功的回复，之后就可以正常执行其他命令了。-->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Debian 服务器上部署分布式 Redis 可以实现高可用性或负载均衡，具体可以选择以下两种方案之一：&lt;/p&gt;
&lt;p&gt;主从复制 (Master-Slave Replication)&lt;br&gt;主从复制用于数据冗余备份和读写分离，但并不提供自动故障切换功能。&lt;/p&gt;
&lt;h1 </summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="redis" scheme="https://banjinmei.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>nginx keepalived</title>
    <link href="https://banjinmei.github.io/2024/11/21/nginx-keepalived/"/>
    <id>https://banjinmei.github.io/2024/11/21/nginx-keepalived/</id>
    <published>2024-11-21T15:37:23.000Z</published>
    <updated>2024-11-21T15:54:57.040Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Keepalived"><a href="#Keepalived" class="headerlink" title="Keepalived"></a>Keepalived</h1><p>是一种用于实现高可用性的工具，它通过VRRP（虚拟路由冗余协议）来管理虚拟IP地址，从而确保在主服务器故障时，备用服务器能够接管服务。</p><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>假设有两台Debian服务器：</p><p>Server 1 (Master): IP地址 192.168.1.100<br>Server 2 (Backup): IP地址 192.168.1.101<br>虚拟IP地址: 192.168.1.102</p><h1 id="步骤一：安装Nginx"><a href="#步骤一：安装Nginx" class="headerlink" title="步骤一：安装Nginx"></a>步骤一：安装Nginx</h1><p>在两台服务器上安装Nginx。</p><p>Server 1 (Master)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><p>Server 2 (Backup)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><h1 id="步骤二：安装Keepalived"><a href="#步骤二：安装Keepalived" class="headerlink" title="步骤二：安装Keepalived"></a>步骤二：安装Keepalived</h1><p>在两台服务器上安装Keepalived。</p><p>Server 1 (Master)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install keepalived</span><br><span class="line">Server 2 (Backup)</span><br><span class="line">```Bash</span><br><span class="line">sudo apt install keepalived</span><br></pre></td></tr></table></figure><h1 id="步骤三：配置Keepalived"><a href="#步骤三：配置Keepalived" class="headerlink" title="步骤三：配置Keepalived"></a>步骤三：配置Keepalived</h1><p>编辑Keepalived的配置文件 &#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf。</p><p>Server 1 (Master)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/keepalived/keepalived.conf</span><br></pre></td></tr></table></figure><p>添加以下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.1.102</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Server 2 (Backup)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/keepalived/keepalived.conf</span><br></pre></td></tr></table></figure><p>添加以下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 90</span><br><span class="line">    advert_int 1</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.1.102</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="步骤四：启动Keepalived"><a href="#步骤四：启动Keepalived" class="headerlink" title="步骤四：启动Keepalived"></a>步骤四：启动Keepalived</h1><p>启动并启用Keepalived服务。</p><p>Server 1 (Master)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start keepalived</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> keepalived</span><br></pre></td></tr></table></figure><p>Server 2 (Backup)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start keepalived</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> keepalived</span><br></pre></td></tr></table></figure><h2 id="步骤五：配置Nginx"><a href="#步骤五：配置Nginx" class="headerlink" title="步骤五：配置Nginx"></a>步骤五：配置Nginx</h2><p>确保两台服务器上的Nginx配置相同。编辑Nginx配置文件 &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;default。</p><p>Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name your_domain_or_ip;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://backend_servers;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>步骤六：测试配置<br>测试Nginx配置文件是否正确无误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>重新加载Nginx以使更改生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><p>步骤七：验证高可用性<br>访问虚拟IP地址:<br>使用浏览器或其他工具访问虚拟IP地址 192.168.1.102，确保Nginx服务正常工作。<br>模拟故障:<br>关闭主服务器上的Nginx服务或Keepalived服务，观察备用服务器是否接管虚拟IP地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop nginx</span><br><span class="line">sudo systemctl stop keepalived</span><br></pre></td></tr></table></figure><p>检查状态:<br>在备用服务器上检查虚拟IP地址是否已经接管：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr show eth0</span><br></pre></td></tr></table></figure><p>步骤八：日志和监控<br>查看Keepalived的日志以确保没有错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">tail</span> -f /var/log/syslog</span><br></pre></td></tr></table></figure><p>通过以上步骤，可以在两台Debian服务器上成功部署Keepalived实现高可用Nginx。<br>这样，即使主服务器发生故障，备用服务器也会自动接管服务，确保系统的高可用性和稳定性。</p><h1 id="不同虚拟IP地址的高可用性："><a href="#不同虚拟IP地址的高可用性：" class="headerlink" title="不同虚拟IP地址的高可用性："></a>不同虚拟IP地址的高可用性：</h1><p>跨云服务商</p><h2 id="1-使用DNS轮询"><a href="#1-使用DNS轮询" class="headerlink" title="1. 使用DNS轮询"></a>1. 使用DNS轮询</h2><p>通过DNS轮询（Round Robin DNS）来实现负载均衡和高可用性。</p><p>步骤：<br>如 example.com。<br>配置DNS记录:<br>在DNS管理面板中，为的域名配置两个A记录，分别指向两个云服务商的IP地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">example.com.  A  192.168.1.100  (阿里云IP)</span><br><span class="line">example.com.  A  192.168.1.101  (腾讯云IP)</span><br></pre></td></tr></table></figure><p>客户端访问:<br>当客户端访问 example.com 时，DNS服务器会轮流返回两个IP地址之一，实现负载均衡。<br>健康检查:<br>可以使用DNS提供商的健康检查功能，自动将流量切换到健康的服务器。</p><h2 id="2-使用全局负载均衡器"><a href="#2-使用全局负载均衡器" class="headerlink" title="2. 使用全局负载均衡器"></a>2. 使用全局负载均衡器</h2><p>一些云服务商提供了全局负载均衡器（Global Load Balancer），可以跨区域和跨服务商实现高可用性。</p><h1 id="nginx-配置文件的同步"><a href="#nginx-配置文件的同步" class="headerlink" title="nginx 配置文件的同步"></a>nginx 配置文件的同步</h1><p>使用 <strong>inotify</strong> 和 <strong>rsync</strong> 实现两个 Debian 服务器之间的数据实时同步是一个常见且有效的方法。<br>inotify 可以监控文件系统的变更事件，而 rsync 则负责实际的数据同步。以下是详细的步骤：</p><h1 id="环境准备-1"><a href="#环境准备-1" class="headerlink" title="环境准备"></a>环境准备</h1><p>Server 1 (Master): IP地址 192.168.1.100<br>Server 2 (Backup): IP地址 192.168.1.101</p><h1 id="步骤一：安装必要的软件"><a href="#步骤一：安装必要的软件" class="headerlink" title="步骤一：安装必要的软件"></a>步骤一：安装必要的软件</h1><p>在两台服务器上安装 rsync 和 inotify-tools。</p><p>Server 1 (Master)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install rsync inotify-tools</span><br></pre></td></tr></table></figure><p>Server 2 (Backup)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install rsync</span><br></pre></td></tr></table></figure><h1 id="步骤二：配置-SSH-密钥免密登录"><a href="#步骤二：配置-SSH-密钥免密登录" class="headerlink" title="步骤二：配置 SSH 密钥免密登录"></a>步骤二：配置 SSH 密钥免密登录</h1><p>为了简化 rsync 的操作，建议配置从主服务器到备份服务器的 SSH 密钥免密登录。</p><p>在主服务器上生成 SSH 密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096</span><br></pre></td></tr></table></figure><p>按提示操作，默认保存路径即可。</p><p>将公钥复制到备份服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id user@192.168.1.101</span><br></pre></td></tr></table></figure><h1 id="步骤三：编写同步脚本"><a href="#步骤三：编写同步脚本" class="headerlink" title="步骤三：编写同步脚本"></a>步骤三：编写同步脚本</h1><p>在主服务器上编写一个脚本，使用 inotifywait 监控文件系统的变更事件，并调用 rsync 进行同步。</p><p>创建同步脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /usr/local/bin/inotify_sync.sh</span><br></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控的目录</span></span><br><span class="line">WATCH_DIR=<span class="string">&quot;/path/to/sync&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份服务器的IP地址和目标目录</span></span><br><span class="line">REMOTE_USER=<span class="string">&quot;user&quot;</span></span><br><span class="line">REMOTE_HOST=<span class="string">&quot;192.168.1.101&quot;</span></span><br><span class="line">REMOTE_DIR=<span class="string">&quot;/path/to/sync&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 inotifywait 监控目录变化</span></span><br><span class="line">inotifywait -m -r -e modify,create,delete,move <span class="string">&quot;<span class="variable">$WATCH_DIR</span>&quot;</span> | <span class="keyword">while</span> <span class="built_in">read</span> path action file; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Change detected: <span class="variable">$action</span> <span class="variable">$file</span> on <span class="variable">$path</span>&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 使用 rsync 同步文件</span></span><br><span class="line">    rsync -avz --delete --exclude <span class="string">&#x27;.git&#x27;</span> --exclude <span class="string">&#x27;.DS_Store&#x27;</span> <span class="string">&quot;<span class="variable">$WATCH_DIR</span>/&quot;</span> <span class="string">&quot;<span class="variable">$REMOTE_USER</span>@<span class="variable">$REMOTE_HOST</span>:<span class="variable">$REMOTE_DIR</span>/&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>赋予脚本执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/inotify_sync.sh</span><br></pre></td></tr></table></figure><p>步骤四：启动同步脚本<br>可以手动启动脚本，或者将其添加到 systemd 服务中以确保其在后台持续运行。</p><p>手动启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">nohup</span> /usr/local/bin/inotify_sync.sh &amp;</span><br></pre></td></tr></table></figure><h1 id="创建-systemd-服务-启动"><a href="#创建-systemd-服务-启动" class="headerlink" title="创建 systemd 服务 启动"></a>创建 systemd 服务 启动</h1><p>创建服务文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/systemd/system/inotify_sync.service</span><br></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Ini</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Inotify Sync Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">ExecStart=/usr/local/bin/inotify_sync.sh</span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动并启用服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl start inotify_sync.service</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> inotify_sync.service</span><br></pre></td></tr></table></figure><h1 id="步骤五：验证同步"><a href="#步骤五：验证同步" class="headerlink" title="步骤五：验证同步"></a>步骤五：验证同步</h1><p>在主服务器上创建或修改文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Test content&quot;</span> &gt; /path/to/sync/testfile.txt</span><br></pre></td></tr></table></figure><p>在备份服务器上检查文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /path/to/sync/</span><br><span class="line"><span class="built_in">cat</span> /path/to/sync/testfile.txt</span><br></pre></td></tr></table></figure><p>注意事项<br><strong>性能考虑:</strong><br>inotify 会消耗一定的系统资源，特别是在监控大量文件时。确保的服务器有足够的资源来处理这些事件。<br>可以通过排除不必要的文件或目录（如 .git、.DS_Store）来减少不必要的同步操作。<br><strong>安全考虑:</strong><br>确保 SSH 密钥的安全性，避免泄露。<br>可以使用更严格的 SSH 配置，例如限制密钥的使用范围和有效期。<br>通过以上步骤，可以在两台 Debian 服务器之间使用 inotify 和 rsync 实现实时数据同步。</p><h1 id="nginx-反代"><a href="#nginx-反代" class="headerlink" title="nginx 反代"></a>nginx 反代</h1><p>在Debian系统上安装Nginx并配置反向代理到特定的IP地址和端口</p><h2 id="1-更新软件包列表"><a href="#1-更新软件包列表" class="headerlink" title="1. 更新软件包列表"></a>1. 更新软件包列表</h2><p>首先，确保软件包列表是最新的。打开终端并执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><h2 id="2-安装Nginx"><a href="#2-安装Nginx" class="headerlink" title="2. 安装Nginx"></a>2. 安装Nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><h2 id="配置Nginx作为反向代理"><a href="#配置Nginx作为反向代理" class="headerlink" title=". 配置Nginx作为反向代理"></a>. 配置Nginx作为反向代理</h2><p>安装完成后，需要编辑Nginx的配置文件来设置反向代理。默认情况下，Nginx的配置文件位于&#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;default。</p><p>使用喜欢的文本编辑器（如nano或vim）打开此文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><p>在文件中找到server块，并添加或修改如下配置以设置反向代理。假设要将所有请求代理到192.168.1.100:8080：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Nginx</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name your_domain_or_ip;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://192.168.1.100:8080;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">listen 80; 指定了Nginx监听的端口号，这里使用的是80端口，即HTTP服务的标准端口。</span><br><span class="line">server_name 应该替换为域名或服务器的公网IP地址。</span><br><span class="line">proxy_pass 指令用于指定要代理的目标服务器的URL。</span><br><span class="line">proxy_set_header 指令用于设置转发给后端服务器的请求头信息。</span><br></pre></td></tr></table></figure><h2 id="4-测试配置文件"><a href="#4-测试配置文件" class="headerlink" title="4. 测试配置文件"></a>4. 测试配置文件</h2><p>在保存并退出编辑器之后，测试Nginx配置是否正确无误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>如果输出显示语法正确且测试成功，可以继续下一步。</p><h2 id="5-重新加载Nginx"><a href="#5-重新加载Nginx" class="headerlink" title="5. 重新加载Nginx"></a>5. 重新加载Nginx</h2><p>使更改生效，需要重新加载Nginx服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><h2 id="6-验证反向代理工作情况"><a href="#6-验证反向代理工作情况" class="headerlink" title="6. 验证反向代理工作情况"></a>6. 验证反向代理工作情况</h2><p>现在，可以通过浏览器访问域名或服务器的公网IP地址，看看是否能够正确地将请求代理到192.168.1.100:8080。</p><p>如果遇到任何问题，可以查看Nginx的日志文件来诊断问题。错误日志通常位于&#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log。</p><h2 id="Nginx中配置多个反向代理目标"><a href="#Nginx中配置多个反向代理目标" class="headerlink" title="Nginx中配置多个反向代理目标"></a>Nginx中配置多个反向代理目标</h2><p>可以使用upstream模块来定义一个负载均衡池。<br>Nginx可以根据配置的策略（例如轮询、最少连接等）将请求分发到不同的后端服务器。</p><p>以下是具体步骤：</p><h2 id="1-编辑Nginx配置文件"><a href="#1-编辑Nginx配置文件" class="headerlink" title="1. 编辑Nginx配置文件"></a>1. 编辑Nginx配置文件</h2><p>打开Nginx的配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo nano /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><h2 id="2-添加upstream块"><a href="#2-添加upstream块" class="headerlink" title="2. 添加upstream块"></a>2. 添加upstream块</h2><p>在配置文件的顶部或适当位置添加一个upstream块，定义后端服务器池：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Nginx</span><br><span class="line">upstream backend_servers &#123;</span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-修改server块"><a href="#3-修改server块" class="headerlink" title="3. 修改server块"></a>3. 修改server块</h2><p>在server块中，将proxy_pass指令指向刚刚定义的upstream块：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Nginx</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name your_domain_or_ip;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://backend_servers;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-测试配置文件-1"><a href="#4-测试配置文件-1" class="headerlink" title="4. 测试配置文件"></a>4. 测试配置文件</h2><p>保存并退出编辑器后，测试Nginx配置是否正确无误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><h2 id="5-重新加载Nginx-1"><a href="#5-重新加载Nginx-1" class="headerlink" title="5. 重新加载Nginx"></a>5. 重新加载Nginx</h2><p>如果测试成功，重新加载Nginx以使更改生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><h2 id="6-验证配置"><a href="#6-验证配置" class="headerlink" title="6. 验证配置"></a>6. 验证配置</h2><p>通过浏览器访问域名或服务器的公网IP地址，检查请求是否正确地被分发到两个后端服务器。</p><h2 id="7-进一步配置（可选）"><a href="#7-进一步配置（可选）" class="headerlink" title="7. 进一步配置（可选）"></a>7. 进一步配置（可选）</h2><p>如果需要更复杂的负载均衡策略，可以在upstream块中添加更多选项。例如：</p><p>轮询（默认）：每个请求按时间顺序逐一分配到不同的服务器，如果后端某个服务器宕机，能自动剔除。<br>最少连接：请求分配给连接数最少的服务器。<br>IP哈希：每个请求按访问客户端的IP哈希结果分配，这样来自同一客户端的请求会分配到同一台后端服务器。<br>示例配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Nginx</span><br><span class="line"></span><br><span class="line">upstream backend_servers &#123;</span><br><span class="line">    <span class="comment"># 轮询（默认）</span></span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 最少连接</span></span><br><span class="line">    <span class="comment"># least_conn;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># IP哈希</span></span><br><span class="line">    <span class="comment"># ip_hash;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="负载均衡策略及其配置方法："><a href="#负载均衡策略及其配置方法：" class="headerlink" title="负载均衡策略及其配置方法："></a>负载均衡策略及其配置方法：</h1><h2 id="1-轮询（默认）"><a href="#1-轮询（默认）" class="headerlink" title="1. 轮询（默认）"></a>1. 轮询（默认）</h2><p>轮询是Nginx默认的负载均衡策略，每个请求按时间顺序逐一分配到不同的服务器。如果后端某个服务器宕机，Nginx会自动将其从轮询列表中剔除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream backend_servers &#123;</span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-最少连接"><a href="#2-最少连接" class="headerlink" title="2. 最少连接"></a>2. 最少连接</h2><p>最少连接策略将请求分配给当前连接数最少的服务器，适用于处理长连接的场景。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream backend_servers &#123;</span><br><span class="line">    least_conn;</span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-IP哈希"><a href="#3-IP哈希" class="headerlink" title="3. IP哈希"></a>3. IP哈希</h2><p>IP哈希策略根据客户端的IP地址进行哈希运算，确保来自同一客户端的请求总是被分配到同一台后端服务器。这在会话保持（Session Stickiness）场景中非常有用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream backend_servers &#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-加权轮询"><a href="#4-加权轮询" class="headerlink" title="4. 加权轮询"></a>4. 加权轮询</h2><p>加权轮询允许为每个后端服务器分配权重，权重越高，被分配到请求的概率越大。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream backend_servers &#123;</span><br><span class="line">    server 192.168.1.100:8080 weight=3;</span><br><span class="line">    server 192.168.1.101:8081 weight=1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-备用服务器"><a href="#5-备用服务器" class="headerlink" title="5. 备用服务器"></a>5. 备用服务器</h2><p>可以指定备用服务器，当主服务器不可用时，请求会被转发到备用服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream backend_servers &#123;</span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081 backup;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-组合策略"><a href="#6-组合策略" class="headerlink" title="6. 组合策略"></a>6. 组合策略</h2><p>也可以组合使用多种策略，例如同时使用IP哈希和加权轮询。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream backend_servers &#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    server 192.168.1.100:8080 weight=3;</span><br><span class="line">    server 192.168.1.101:8081 weight=1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-测试和应用配置"><a href="#7-测试和应用配置" class="headerlink" title="7. 测试和应用配置"></a>7. 测试和应用配置</h2><p>完成配置后，测试Nginx配置文件是否正确无误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>如果测试成功，重新加载Nginx以使更改生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><h2 id="8-验证配置"><a href="#8-验证配置" class="headerlink" title="8. 验证配置"></a>8. 验证配置</h2><p>通过浏览器或其他工具访问域名或服务器的公网IP地址，检查请求是否按预期被分发到不同的后端服务器。<br>使用日志或后端服务器上的访问记录来验证负载均衡的效果。</p><p>通过这些配置，可以实现更灵活和强大的负载均衡策略，以满足不同业务场景的需求。</p><h2 id="完整的Nginx配置示例"><a href="#完整的Nginx配置示例" class="headerlink" title="完整的Nginx配置示例"></a>完整的Nginx配置示例</h2><p>完整的Nginx配置示例，其中包含两台主用服务器和一台备用服务器。<br>这个配置将使用轮询策略，并且备用服务器将在主用服务器不可用时接管请求。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/nginx/sites-available/default</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义上游服务器组</span></span><br><span class="line">upstream backend_servers &#123;</span><br><span class="line">    <span class="comment"># 主用服务器</span></span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 备用服务器</span></span><br><span class="line">    server 192.168.1.102:8082 backup;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义服务器块</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name your_domain_or_ip;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义location块</span></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://backend_servers;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可选：定义错误页面</span></span><br><span class="line">    error_page 404 /404.html;</span><br><span class="line">    location = /404.html &#123;</span><br><span class="line">        internal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page 500 502 503 504 /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        internal;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>upstream 块:</strong><br>server 192.168.1.100:8080; 和 server 192.168.1.101:8081; 是两台主用服务器。<br>server 192.168.1.102:8082 backup; 是一台备用服务器，只有在主用服务器不可用时才会被使用。<br><strong>server 块:</strong><br>listen 80; 指定了Nginx监听的端口号，这里是80端口。<br>server_name your_domain_or_ip; 应该替换为域名或服务器的公网IP地址。<br><strong>location 块:</strong><br>proxy_pass <a class="link"   href="http://backend_servers/" >http://backend_servers<i class="fas fa-external-link-alt"></i></a>; 将请求代理到定义的上游服务器组。<br>proxy_set_header 指令用于设置转发给后端服务器的请求头信息。<br><strong>错误页面:</strong><br>error_page 404 &#x2F;404.html; 和 location &#x3D; &#x2F;404.html { internal; } 用于定义404错误页面。<br>error_page 500 502 503 504 &#x2F;50x.html; 和 location &#x3D; &#x2F;50x.html { internal; } 用于定义500系列错误页面。</p><p>日志:<br>查看Nginx的访问日志和错误日志，确保一切正常：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Bash</span><br><span class="line"></span><br><span class="line">sudo tail -f /var/log/nginx/access.log</span><br><span class="line">sudo tail -f /var/log/nginx/error.log</span><br></pre></td></tr></table></figure><p>以实现两台主用服务器和一台备用服务器的负载均衡。</p><!--inotify+rsync实时同步https://cloud.tencent.com/developer/article/1373541https://www.cnblogs.com/hxqwe/p/18298664->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Keepalived&quot;&gt;&lt;a href=&quot;#Keepalived&quot; class=&quot;headerlink&quot; title=&quot;Keepalived&quot;&gt;&lt;/a&gt;Keepalived&lt;/h1&gt;&lt;p&gt;是一种用于实现高可用性的工具，它通过VRRP（虚拟路由冗余协议）来管理虚拟I</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="nigix" scheme="https://banjinmei.github.io/tags/nigix/"/>
    
    <category term="keepalived" scheme="https://banjinmei.github.io/tags/keepalived/"/>
    
    <category term="inotify" scheme="https://banjinmei.github.io/tags/inotify/"/>
    
    <category term="rsync" scheme="https://banjinmei.github.io/tags/rsync/"/>
    
  </entry>
  
  <entry>
    <title>python whoisdomain</title>
    <link href="https://banjinmei.github.io/2024/11/21/python-whoisdomain/"/>
    <id>https://banjinmei.github.io/2024/11/21/python-whoisdomain/</id>
    <published>2024-11-21T15:31:52.000Z</published>
    <updated>2024-11-21T15:32:33.020Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install python-whois</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> whois</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件中的域名</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_domains_from_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        domains = [line.strip() <span class="keyword">for</span> line <span class="keyword">in</span> file <span class="keyword">if</span> line.strip()]</span><br><span class="line">    <span class="keyword">return</span> domains</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询域名的WHOIS信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">query_whois</span>(<span class="params">domain</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        domain_info = whois.whois(domain)</span><br><span class="line">        <span class="keyword">if</span> domain_info.domain_name:</span><br><span class="line">            <span class="keyword">return</span> domain_info</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error querying WHOIS for <span class="subst">&#123;domain&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存查询结果到文件</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_results_to_file</span>(<span class="params">domains, results, output_file</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_file, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        <span class="keyword">for</span> domain, result <span class="keyword">in</span> results.items():</span><br><span class="line">            <span class="keyword">if</span> result:</span><br><span class="line">                file.write(<span class="string">f&quot;Domain: <span class="subst">&#123;domain&#125;</span>\n&quot;</span>)</span><br><span class="line">                file.write(<span class="string">&quot;WHOIS Information:\n&quot;</span>)</span><br><span class="line">                <span class="keyword">for</span> key, value <span class="keyword">in</span> result.items():</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">isinstance</span>(value, <span class="built_in">list</span>):</span><br><span class="line">                        <span class="keyword">for</span> item <span class="keyword">in</span> value:</span><br><span class="line">                            file.write(<span class="string">f&quot;<span class="subst">&#123;key&#125;</span>: <span class="subst">&#123;item&#125;</span>\n&quot;</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        file.write(<span class="string">f&quot;<span class="subst">&#123;key&#125;</span>: <span class="subst">&#123;value&#125;</span>\n&quot;</span>)</span><br><span class="line">                file.write(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                file.write(<span class="string">f&quot;Domain: <span class="subst">&#123;domain&#125;</span> - Not Registered\n\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    file_path = <span class="string">&#x27;12.txt&#x27;</span>  <span class="comment"># 文件路径</span></span><br><span class="line">    output_file = <span class="string">&#x27;whois_results2.txt&#x27;</span>  <span class="comment"># 输出文件路径</span></span><br><span class="line">    domains = read_domains_from_file(file_path)</span><br><span class="line">    </span><br><span class="line">    results = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> domain <span class="keyword">in</span> domains:</span><br><span class="line">        domain_info = query_whois(domain)</span><br><span class="line">        results[domain] = domain_info</span><br><span class="line">    </span><br><span class="line">    save_results_to_file(domains, results, output_file)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;WHOIS results have been saved to <span class="subst">&#123;output_file&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="python" scheme="https://banjinmei.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>uniapp postman</title>
    <link href="https://banjinmei.github.io/2024/11/21/uniapp-postman/"/>
    <id>https://banjinmei.github.io/2024/11/21/uniapp-postman/</id>
    <published>2024-11-21T13:43:36.000Z</published>
    <updated>2024-11-21T14:21:55.730Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础页面"><a href="#基础页面" class="headerlink" title="基础页面"></a>基础页面</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;url&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请求地址&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">picker</span> <span class="attr">:range</span>=<span class="string">&quot;methods&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;onMethodChange&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123; methods[selectedIndex] &#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">picker</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;body&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请求体&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendRequest&quot;</span>&gt;</span>发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">&quot;response&quot;</span> <span class="attr">class</span>=<span class="string">&quot;response&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span>响应:<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pre</span>&gt;</span>&#123;&#123; response &#125;&#125;<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">url</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">body</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">response</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">selectedIndex</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onMethodChange</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">selectedIndex</span> = e.<span class="property">detail</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">sendRequest</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> method = <span class="variable language_">this</span>.<span class="property">methods</span>[<span class="variable language_">this</span>.<span class="property">selectedIndex</span>];</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> data = method === <span class="string">&#x27;POST&#x27;</span> ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">this</span>.<span class="property">body</span>) : <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      uni.<span class="title function_">request</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">url</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">method</span>: method,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: data,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">response</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(res.<span class="property">data</span>, <span class="literal">null</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">response</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err, <span class="literal">null</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">input</span>, <span class="selector-tag">textarea</span>, <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.response</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">overflow-x</span>: auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="添加-methods-delete-put，添加header-，给出修改后的代码"><a href="#添加-methods-delete-put，添加header-，给出修改后的代码" class="headerlink" title="添加 methods delete put，添加header ，给出修改后的代码"></a>添加 methods delete put，添加header ，给出修改后的代码</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;url&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请求地址&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">picker</span> <span class="attr">:range</span>=<span class="string">&quot;methods&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;onMethodChange&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123; methods[selectedIndex] &#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">picker</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;body&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请求体&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;headers.Authorization&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入Authorization头&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;headers[&#x27;Content-Type&#x27;]&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入Content-Type头&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendRequest&quot;</span>&gt;</span>发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">&quot;response&quot;</span> <span class="attr">class</span>=<span class="string">&quot;response&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span>响应:<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pre</span>&gt;</span>&#123;&#123; response &#125;&#125;<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">url</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">body</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">response</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;PUT&#x27;</span>, <span class="string">&#x27;DELETE&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">selectedIndex</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">headers</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Authorization</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onMethodChange</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">selectedIndex</span> = e.<span class="property">detail</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">sendRequest</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> method = <span class="variable language_">this</span>.<span class="property">methods</span>[<span class="variable language_">this</span>.<span class="property">selectedIndex</span>];</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> data = method !== <span class="string">&#x27;GET&#x27;</span> ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">this</span>.<span class="property">body</span>) : <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      uni.<span class="title function_">request</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">url</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">method</span>: method,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: data,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">header</span>: <span class="variable language_">this</span>.<span class="property">headers</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">response</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(res.<span class="property">data</span>, <span class="literal">null</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">response</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err, <span class="literal">null</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">input</span>, <span class="selector-tag">textarea</span>, <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.response</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">overflow-x</span>: auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>url：用户输入的请求地址。<br>body：用户输入的请求体。<br>response：服务器返回的响应内容。<br>methods：支持的HTTP方法数组。<br>selectedIndex：当前选中的HTTP方法索引。<br>headers：请求头对象，包含Authorization和Content-Type。<br>onMethodChange(e)：当用户选择不同的HTTP方法时，更新selectedIndex。<br>sendRequest()：发送HTTP请求。根据选中的HTTP方法和请求体，调用uni.request发送请求，并处理成功和失败的回调。</p><p>添加了两个输入框，分别用于设置Authorization和Content-Type请求头。<br>在uni.request中，通过header属性传递请求头。</p><h1 id="动态请求头"><a href="#动态请求头" class="headerlink" title="动态请求头"></a>动态请求头</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;url&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请求地址&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">picker</span> <span class="attr">:range</span>=<span class="string">&quot;methods&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;onMethodChange&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123; methods[selectedIndex] &#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">picker</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;body&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请求体&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 动态请求头输入框 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-for</span>=<span class="string">&quot;(header, index) in headers&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span> <span class="attr">class</span>=<span class="string">&quot;header-input&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;header.key&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;键&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;header.value&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;值&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeHeader(index)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addHeader&quot;</span>&gt;</span>添加请求头<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendRequest&quot;</span>&gt;</span>发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">&quot;response&quot;</span> <span class="attr">class</span>=<span class="string">&quot;response&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span>响应:<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pre</span>&gt;</span>&#123;&#123; response &#125;&#125;<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">url</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">body</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">response</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;PUT&#x27;</span>, <span class="string">&#x27;DELETE&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">selectedIndex</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">headers</span>: [</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">key</span>: <span class="string">&#x27;Authorization&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">key</span>: <span class="string">&#x27;Content-Type&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;application/json&#x27;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">      ]</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onMethodChange</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">selectedIndex</span> = e.<span class="property">detail</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">addHeader</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">headers</span>.<span class="title function_">push</span>(&#123; <span class="attr">key</span>: <span class="string">&#x27;&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;&#x27;</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">removeHeader</span>(<span class="params">index</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">headers</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">sendRequest</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> method = <span class="variable language_">this</span>.<span class="property">methods</span>[<span class="variable language_">this</span>.<span class="property">selectedIndex</span>];</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> data = method !== <span class="string">&#x27;GET&#x27;</span> ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">this</span>.<span class="property">body</span>) : <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 将headers对象转换为uni.request所需的格式</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> requestHeaders = <span class="variable language_">this</span>.<span class="property">headers</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, header</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (header.<span class="property">key</span> &amp;&amp; header.<span class="property">value</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          acc[header.<span class="property">key</span>] = header.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> acc;</span></span><br><span class="line"><span class="language-javascript">      &#125;, &#123;&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      uni.<span class="title function_">request</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">url</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">method</span>: method,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: data,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">header</span>: requestHeaders,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">response</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(res.<span class="property">data</span>, <span class="literal">null</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">response</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err, <span class="literal">null</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">input</span>, <span class="selector-tag">textarea</span>, <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.header-input</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.header-input</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">45%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.header-input</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">10%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.response</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">overflow-x</span>: auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br></pre></td></tr></table></figure><p></style></p><p>使用v-for指令遍历headers数组，为每个请求头生成一对输入框和一个删除按钮。<br>提供一个“添加请求头”按钮，允许用户动态添加新的请求头输入框。</p><h1 id="长按复制结果"><a href="#长按复制结果" class="headerlink" title="长按复制结果"></a>长按复制结果</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">&quot;response&quot;</span> <span class="attr">class</span>=<span class="string">&quot;response&quot;</span> @<span class="attr">longpress</span>=<span class="string">&quot;copyResponse&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>响应:<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span>&gt;</span>&#123;&#123; response &#125;&#125;<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">    <span class="title function_">copyResponse</span>(<span class="params"></span>) &#123;</span><br><span class="line">      uni.<span class="title function_">setClipboardData</span>(&#123;</span><br><span class="line">        <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">response</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">          uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;复制成功&#x27;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">fail</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">          uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;复制失败&#x27;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">.<span class="property">response</span> &#123;</span><br><span class="line">  background-<span class="attr">color</span>: #f0f0f0;</span><br><span class="line">  <span class="attr">padding</span>: 10px;</span><br><span class="line">  border-<span class="attr">radius</span>: 5px;</span><br><span class="line">  overflow-<span class="attr">x</span>: auto;</span><br><span class="line">  white-<span class="attr">space</span>: pre-wrap; <span class="comment">/* 使文本换行显示 */</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基础页面&quot;&gt;&lt;a href=&quot;#基础页面&quot; class=&quot;headerlink&quot; title=&quot;基础页面&quot;&gt;&lt;/a&gt;基础页面&lt;/h1&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="uniapp" scheme="https://banjinmei.github.io/tags/uniapp/"/>
    
    <category term="postman" scheme="https://banjinmei.github.io/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>XAI Grok</title>
    <link href="https://banjinmei.github.io/2024/11/19/XAI/"/>
    <id>https://banjinmei.github.io/2024/11/19/XAI/</id>
    <published>2024-11-19T14:54:15.000Z</published>
    <updated>2024-11-19T15:02:20.333Z</updated>
    
    <content type="html"><![CDATA[<p>X.AI<br>Reg</p><h1 id="Create-API-key"><a href="#Create-API-key" class="headerlink" title="Create API key"></a>Create API key</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">curl https://api.x.ai/v1/chat/completions -H <span class="string">&quot;Content-Type: application/json&quot;</span> -H <span class="string">&quot;Authorization: Bearer xai-xxx&quot;</span> -d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;messages&quot;: [</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;role&quot;: &quot;system&quot;,</span></span><br><span class="line"><span class="string">      &quot;content&quot;: &quot;You are a test assistant.&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;role&quot;: &quot;user&quot;,</span></span><br><span class="line"><span class="string">      &quot;content&quot;: &quot;what can u do?&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  ],</span></span><br><span class="line"><span class="string">  &quot;model&quot;: &quot;grok-beta&quot;,</span></span><br><span class="line"><span class="string">  &quot;stream&quot;: false,</span></span><br><span class="line"><span class="string">  &quot;temperature&quot;: 0</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># API URL 和 API 密钥</span></span><br><span class="line">API_URL = <span class="string">&quot;https://api.x.ai/v1/chat/completions&quot;</span></span><br><span class="line">API_KEY = <span class="string">&quot;xai-bELnXX&quot;</span>  <span class="comment"># 替换为实际 API 密钥</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求头</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Authorization&quot;</span>: <span class="string">f&quot;Bearer <span class="subst">&#123;API_KEY&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求数据</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;messages&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>,</span><br><span class="line">            <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You are a test assistant.&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">            <span class="string">&quot;content&quot;</span>: <span class="string">&quot;what can u do?&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;model&quot;</span>: <span class="string">&quot;grok-beta&quot;</span>,</span><br><span class="line">    <span class="string">&quot;stream&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">&quot;temperature&quot;</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = requests.post(API_URL, headers=headers, json=data)</span><br><span class="line">    response.raise_for_status()  <span class="comment"># 确保状态码为 200</span></span><br><span class="line">    result = response.json()  <span class="comment"># 解析响应</span></span><br><span class="line">    <span class="comment"># print(&quot;API 响应：&quot;, result)</span></span><br><span class="line">    <span class="comment"># 提取内容</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;choices&#x27;</span> <span class="keyword">in</span> result <span class="keyword">and</span> result[<span class="string">&#x27;choices&#x27;</span>]:</span><br><span class="line">        content = result[<span class="string">&#x27;choices&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;message&#x27;</span>][<span class="string">&#x27;content&#x27;</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;XAI回答：\n&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(content)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;XAI的回答。&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.HTTPError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;HTTP 错误：&quot;</span>, e)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;响应内容：&quot;</span>, response.text)  <span class="comment"># 输出详细的错误信息</span></span><br><span class="line"><span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请求失败：&quot;</span>, e)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;X.AI&lt;br&gt;Reg&lt;/p&gt;
&lt;h1 id=&quot;Create-API-key&quot;&gt;&lt;a href=&quot;#Create-API-key&quot; class=&quot;headerlink&quot; title=&quot;Create API key&quot;&gt;&lt;/a&gt;Create API key&lt;/h1&gt;&lt;figur</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="XAI" scheme="https://banjinmei.github.io/tags/XAI/"/>
    
    <category term="Grok" scheme="https://banjinmei.github.io/tags/Grok/"/>
    
  </entry>
  
  <entry>
    <title>Python股票爬虫</title>
    <link href="https://banjinmei.github.io/2024/11/19/Python%E8%82%A1%E7%A5%A8%E7%88%AC%E8%99%AB/"/>
    <id>https://banjinmei.github.io/2024/11/19/Python%E8%82%A1%E7%A5%A8%E7%88%AC%E8%99%AB/</id>
    <published>2024-11-19T14:07:04.000Z</published>
    <updated>2024-11-19T14:52:46.309Z</updated>
    
    <content type="html"><![CDATA[<h1 id="功能概况："><a href="#功能概况：" class="headerlink" title="功能概况："></a>功能概况：</h1><p>根据股票代码，采集指定日期连续N个交易日数据，输出保存为xls数据表。</p><h1 id="详细说明"><a href="#详细说明" class="headerlink" title="详细说明:"></a>详细说明:</h1><p>变量为股票代码、指定日期、N个交易日，变量以xls表格形式给出，爬虫根据股票代码，逐条爬取交易数据(字段为日期、开盘价、收盘价、最高价、最低价，涨跌幅、成交量、成交额、振幅，换手率等），并输出保存到xls中。<br>采集来源 东方财富网  </p><h1 id="安装了必要的库"><a href="#安装了必要的库" class="headerlink" title="安装了必要的库"></a>安装了必要的库</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests pandas openpyxl</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_stock_data</span>(<span class="params">stock_code, start_date, days</span>):</span><br><span class="line">    <span class="comment"># 将输入的字符串日期转换为datetime对象</span></span><br><span class="line">    start_date = datetime.strptime(start_date, <span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">    end_date = start_date + timedelta(days=days)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 构建请求URL</span></span><br><span class="line">    url = <span class="string">f&quot;http://push2his.eastmoney.com/api/qt/stock/kline/get?secid=<span class="subst">&#123;stock_code&#125;</span>&amp;fields1=f1,f2,f3,f4,f5&amp;fields2=f51,f52,f53,f54,f55,f56,f57,f58,f59,f60,f61&amp;klt=101&amp;fqt=0&amp;beg=<span class="subst">&#123;start_date.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)&#125;</span>&amp;end=<span class="subst">&#123;end_date.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)&#125;</span>&quot;</span></span><br><span class="line">    </span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    response = requests.get(url, headers=headers)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 检查响应状态码</span></span><br><span class="line">    <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">f&quot;Request failed with status code <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    data = response.json()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 打印响应内容，以便调试</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Response content:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;rc&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> data <span class="keyword">or</span> data[<span class="string">&#x27;rc&#x27;</span>] != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">f&quot;Error fetching data: <span class="subst">&#123;data.get(<span class="string">&#x27;rt&#x27;</span>, <span class="string">&#x27;Unknown error&#x27;</span>)&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    klines = data[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;klines&#x27;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 解析数据</span></span><br><span class="line">    records = []</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> klines:</span><br><span class="line">        parts = line.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        record = &#123;</span><br><span class="line">            <span class="string">&#x27;日期&#x27;</span>: parts[<span class="number">0</span>],</span><br><span class="line">            <span class="string">&#x27;开盘价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">1</span>]),</span><br><span class="line">            <span class="string">&#x27;收盘价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">2</span>]),</span><br><span class="line">            <span class="string">&#x27;最高价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">3</span>]),</span><br><span class="line">            <span class="string">&#x27;最低价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">4</span>]),</span><br><span class="line">            <span class="string">&#x27;涨跌幅&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">8</span>]),</span><br><span class="line">            <span class="string">&#x27;成交量&#x27;</span>: <span class="built_in">int</span>(parts[<span class="number">5</span>]),</span><br><span class="line">            <span class="string">&#x27;成交额&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">6</span>]),</span><br><span class="line">            <span class="string">&#x27;振幅&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">9</span>]),</span><br><span class="line">            <span class="string">&#x27;换手率&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">10</span>])</span><br><span class="line">        &#125;</span><br><span class="line">        records.append(record)</span><br><span class="line">    </span><br><span class="line">    df = pd.DataFrame(records)</span><br><span class="line">    <span class="keyword">return</span> df</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_excel</span>(<span class="params">df, filename</span>):</span><br><span class="line">    df.to_excel(filename, index=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    stock_code = <span class="string">&quot;1.600519&quot;</span>  <span class="comment"># 示例股票代码，前缀1表示上海A股</span></span><br><span class="line">    start_date = <span class="string">&quot;2024-10-01&quot;</span></span><br><span class="line">    days = <span class="number">30</span>  <span class="comment"># 获取30个交易日的数据</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        df = get_stock_data(stock_code, start_date, days)</span><br><span class="line">        save_to_excel(df, <span class="string">&quot;stock_data.xlsx&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Data saved to stock_data.xlsx&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        </span><br></pre></td></tr></table></figure><h1 id="加入-港股-代码"><a href="#加入-港股-代码" class="headerlink" title="加入 港股 代码"></a>加入 港股 代码</h1><p>自动识别股票市场：根据股票代码的长度判断是港股还是大陆股票。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> calendar</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_weekend</span>(<span class="params">date_str</span>):</span><br><span class="line">    year, month, day = <span class="built_in">map</span>(<span class="built_in">int</span>, date_str.split(<span class="string">&#x27;-&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> calendar.weekday(year, month, day) &gt;= <span class="number">5</span>  <span class="comment"># 5是周六，6是周日</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_stock_data</span>(<span class="params">stock_code, start_date, days, retries=<span class="number">3</span>, delay=<span class="number">1</span></span>):</span><br><span class="line">    <span class="comment"># 将输入的字符串日期转换为datetime对象</span></span><br><span class="line">    start_date = datetime.strptime(start_date, <span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">    end_date = start_date + timedelta(days=days)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 根据股票代码长度识别市场</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(stock_code) == <span class="number">5</span>:</span><br><span class="line">        market = <span class="string">&#x27;HK&#x27;</span></span><br><span class="line">        secid = <span class="string">f&quot;116.<span class="subst">&#123;stock_code&#125;</span>&quot;</span>  <span class="comment"># 东方财富网港股代码前缀</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(stock_code) == <span class="number">6</span>:</span><br><span class="line">        market = <span class="string">&#x27;SH&#x27;</span> <span class="keyword">if</span> stock_code.startswith(<span class="string">&#x27;6&#x27;</span>) <span class="keyword">else</span> <span class="string">&#x27;SZ&#x27;</span></span><br><span class="line">        secid = <span class="string">f&quot;<span class="subst">&#123;market&#125;</span>.<span class="subst">&#123;stock_code&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;Invalid stock code length. Stock code should be 5 digits for HK stocks and 6 digits for mainland stocks.&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 构建请求URL</span></span><br><span class="line">    url = <span class="string">f&quot;http://push2his.eastmoney.com/api/qt/stock/kline/get?secid=<span class="subst">&#123;secid&#125;</span>&amp;fields1=f1,f2,f3,f4,f5&amp;fields2=f51,f52,f53,f54,f55,f56,f57,f58,f59,f60,f61&amp;klt=101&amp;fqt=0&amp;beg=<span class="subst">&#123;start_date.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)&#125;</span>&amp;end=<span class="subst">&#123;end_date.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)&#125;</span>&quot;</span></span><br><span class="line">    </span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> attempt <span class="keyword">in</span> <span class="built_in">range</span>(retries):</span><br><span class="line">        response = requests.get(url, headers=headers)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 检查响应状态码</span></span><br><span class="line">        <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">if</span> attempt &lt; retries - <span class="number">1</span>:</span><br><span class="line">                time.sleep(delay)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">f&quot;Request failed with status code <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        data = response.json()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 打印响应内容，以便调试</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Response content:&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(data)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;rc&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> data <span class="keyword">or</span> data[<span class="string">&#x27;rc&#x27;</span>] != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> attempt &lt; retries - <span class="number">1</span>:</span><br><span class="line">                time.sleep(delay)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">f&quot;Error fetching data: <span class="subst">&#123;data.get(<span class="string">&#x27;rt&#x27;</span>, <span class="string">&#x27;Unknown error&#x27;</span>)&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        klines = data[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;klines&#x27;</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 解析数据</span></span><br><span class="line">        records = []</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> klines:</span><br><span class="line">            parts = line.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">            record = &#123;</span><br><span class="line">                <span class="string">&#x27;日期&#x27;</span>: parts[<span class="number">0</span>],</span><br><span class="line">                <span class="string">&#x27;开盘价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">1</span>]),</span><br><span class="line">                <span class="string">&#x27;收盘价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">2</span>]),</span><br><span class="line">                <span class="string">&#x27;最高价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">3</span>]),</span><br><span class="line">                <span class="string">&#x27;最低价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">4</span>]),</span><br><span class="line">                <span class="string">&#x27;涨跌幅&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">8</span>]),</span><br><span class="line">                <span class="string">&#x27;成交量&#x27;</span>: <span class="built_in">int</span>(parts[<span class="number">5</span>]),</span><br><span class="line">                <span class="string">&#x27;成交额&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">6</span>]),</span><br><span class="line">                <span class="string">&#x27;振幅&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">9</span>]),</span><br><span class="line">                <span class="string">&#x27;换手率&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">10</span>])</span><br><span class="line">            &#125;</span><br><span class="line">            records.append(record)</span><br><span class="line">        </span><br><span class="line">        df = pd.DataFrame(records)</span><br><span class="line">        <span class="keyword">return</span> df</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_excel</span>(<span class="params">df, filename</span>):</span><br><span class="line">    df.to_excel(filename, index=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    stock_code = <span class="string">&quot;09999&quot;</span>  <span class="comment"># 示例股票代码，五位表示港股</span></span><br><span class="line">    start_date = <span class="string">&quot;2024-10-01&quot;</span></span><br><span class="line">    days = <span class="number">30</span>  <span class="comment"># 获取30个交易日的数据</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        df = get_stock_data(stock_code, start_date, days, retries=<span class="number">5</span>, delay=<span class="number">2</span>)</span><br><span class="line">        save_to_excel(df, <span class="string">&quot;%s_%s_%d.xlsx&quot;</span> % (stock_code, start_date,days))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Data saved to &quot;</span>+<span class="string">&quot;%s_%s_%d.xlsx&quot;</span> % (stock_code, start_date,days) )</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;功能概况：&quot;&gt;&lt;a href=&quot;#功能概况：&quot; class=&quot;headerlink&quot; title=&quot;功能概况：&quot;&gt;&lt;/a&gt;功能概况：&lt;/h1&gt;&lt;p&gt;根据股票代码，采集指定日期连续N个交易日数据，输出保存为xls数据表。&lt;/p&gt;
&lt;h1 id=&quot;详细说明&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="python" scheme="https://banjinmei.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>canal mysql auto bak</title>
    <link href="https://banjinmei.github.io/2024/11/17/canal-mysql-auto-bak/"/>
    <id>https://banjinmei.github.io/2024/11/17/canal-mysql-auto-bak/</id>
    <published>2024-11-17T15:28:55.000Z</published>
    <updated>2024-11-21T13:08:16.265Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Canal"><a href="#Canal" class="headerlink" title="Canal"></a>Canal</h1><p>是阿里巴巴开源的一个数据库binlog解析工具，它能够捕获并解析MySQL等数据库的增量数据变化（即binlog），然后将这些变化的数据以消息的形式发送给其他系统或服务，如Elasticsearch、HBase、Redis等。这样做的好处是可以实现数据的实时同步，保证不同存储系统之间的数据一致性。</p><p><strong>Canal</strong>的设计理念主要是基于数据库的增量订阅与消费模式，它通过模拟MySQL的slave来实现对MySQL主库binlog的监听，当主库有数据更新时，Canal能及时捕捉到这些变化，并将变化的数据按照一定的格式输出，供下游系统消费使用。</p><p><strong>使用Canal的主要优势包括：</strong><br><strong>实时性</strong><br>Canal通过模仿MySQL的slave节点行为，向MySQL master节点发送dump协议请求，以获取binlog日志8。这种方法使得Canal能够以较低的延迟捕获到数据库的变化，从而实现实时的数据同步。对于需要保持数据最新性的应用场景，如搜索引擎的索引更新或缓存系统的数据刷新，这一特性尤为重要。</p><p><strong>解耦</strong><br>Canal作为一个独立的服务，充当了数据库和数据消费者之间的中介角色。它不仅减少了直接连接数据库带来的性能压力，还避免了因数据库结构或数据模型变更导致的下游系统适配问题。这种解耦机制增强了系统的灵活性和可维护性，使得各个组件可以独立发展而不相互干扰18。</p><p><strong>灵活性</strong><br>Canal支持多种数据输出格式，包括但不限于JSON、XML等，这使得它可以很容易地与其他数据处理工具和服务集成。此外，Canal还提供了对Kafka、RocketMQ等消息队列的支持，这意味着数据不仅可以被同步到不同的存储系统，还可以被发送到消息队列中，供更多的应用和服务消费14。</p><p>除了上述提到的优点外，Canal还具备以下特点：</p><p><strong>高性能：</strong>经过优化的Canal能够在高并发环境下保持稳定的性能表现，适合大规模数据同步场景。<br><strong>低延迟：</strong>通过高效的日志解析和数据传输机制，Canal能够确保数据从源头到目的地的传输延迟尽可能低。<br><strong>高可用性：</strong>Canal支持集群部署，结合Zookeeper等协调服务，可以实现故障自动切换，保证服务的连续性和稳定性21。<br><strong>安全性：</strong>Canal可以通过配置SSL&#x2F;TLS加密通信，保护数据在传输过程中的安全18。</p><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>Canal的应用场景非常广泛，包括但不限于：</p><p><strong>数据同步：</strong>将MySQL数据库的数据同步到Elasticsearch、Redis等其他存储系统，用于构建搜索引擎、缓存层等18。<br><strong>数据备份：</strong>定期或实时备份MySQL数据库的数据，用于灾难恢复或数据归档18。<br><strong>数据集成：</strong>在微服务架构中，使用Canal将多个数据库中的数据进行集成，提供统一的数据视图18。<br><strong>数据监控：</strong>通过监听数据库的变化，及时发现异常操作或潜在的安全风险18。<br>Canal是一个功能强大、灵活多变的数据同步工具，它在保证数据实时性和一致性的基础上，提供了丰富的特性和广泛的应用场景，是现代数据驱动应用的理想选择。</p><h1 id="Canal环境准备"><a href="#Canal环境准备" class="headerlink" title="Canal环境准备"></a>Canal环境准备</h1><p>设置MySQL远程访问</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>MySQL配置</p><p>Canal的原理基于MySQL binlog技术，所以，要想使用Canal就要开启MySQL的binlog写入功能，建议配置binlog的模式为row。</p><p>可以在MySQL命令行输入如下命令来查看binlog的模式。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;binlog_format&#x27;</span>;</span><br></pre></td></tr></table></figure><!--show variables like 'log_bin';SHOW VARIABLES LIKE 'binlog_format';--><p>如果MySQL中默认的binlog格式为STATEMENT，需要将STATEMENT修改为ROW。修改&#x2F;etc&#x2F;my.cnf文件。</p><p>&#x2F;etc&#x2F;my.cnf<br>在[mysqld]下面新增如下三项配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">log-bin=mysql-bin  <span class="comment">#开启MySQL二进制日志</span></span><br><span class="line">binlog_format=ROW <span class="comment">#将二进制日志的格式设置为ROW</span></span><br><span class="line">server_id=1 <span class="comment">#server_id需要唯一，不能与Canal的slaveId重复</span></span><br></pre></td></tr></table></figure><p>修改完my.cnf文件后，需要重启MySQL服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure><p>再次查看binlog模式。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;binlog_format&#x27;</span>;</span><br></pre></td></tr></table></figure><p>MySQL创建用户授权</p><p>Canal的原理是模式自己为MySQL Slave，所以一定要设置MySQL Slave的相关权限。这里，需要创建一个主从同步的账户，并且赋予这个账户相关的权限。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> canal@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;canal&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, REPLICATION SLAVE, REPLICATION CLIENT <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;canal&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h1 id="服务器信息"><a href="#服务器信息" class="headerlink" title="服务器信息"></a>服务器信息</h1><p>124.219.119.2xx 主库所在服务器</p><p>192.168.80.203 canal数据同步所在服务器</p><h1 id="连接主库所在服务器"><a href="#连接主库所在服务器" class="headerlink" title="连接主库所在服务器"></a>连接主库所在服务器</h1><h2 id="切换-root-账号"><a href="#切换-root-账号" class="headerlink" title="切换 root 账号"></a>切换 root 账号</h2><p>su root</p><h2 id="启动MySQL8-0数据库"><a href="#启动MySQL8-0数据库" class="headerlink" title="启动MySQL8.0数据库"></a>启动MySQL8.0数据库</h2><p>systemctl start mysqld.service</p><h2 id="创建复制账号和密码"><a href="#创建复制账号和密码" class="headerlink" title="创建复制账号和密码"></a>创建复制账号和密码</h2><p>连接主库所在服务器，即：192.168.91.131，运行MySQL 8.0数据库，创建复制账号和密码，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE USER canal IDENTIFIED BY &#x27;canal&#x27;;  </span><br><span class="line">mysql&gt; GRANT SELECT, SHOW VIEW, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &#x27;canal&#x27;@&#x27;%&#x27;;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h1 id="canal数据同步服务器操作"><a href="#canal数据同步服务器操作" class="headerlink" title="canal数据同步服务器操作"></a>canal数据同步服务器操作</h1><h2 id="创建canal文件夹"><a href="#创建canal文件夹" class="headerlink" title="创建canal文件夹"></a>创建canal文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local</span><br><span class="line"><span class="built_in">mkdir</span> canal</span><br><span class="line"><span class="built_in">cd</span> canal</span><br><span class="line"><span class="built_in">mkdir</span> canal-package canal-adapter canal-deployer</span><br></pre></td></tr></table></figure><h2 id="安装canal-deployer和canal-adapter"><a href="#安装canal-deployer和canal-adapter" class="headerlink" title="安装canal deployer和canal adapter"></a>安装canal deployer和canal adapter</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> canal-package</span><br><span class="line">wget https://github.com/alibaba/canal/releases/download/canal-1.1.8canal.deployer-1.1.8.tar.gz</span><br><span class="line">wget https://github.com/alibaba/canal/releases/download/canal-1.1.8/canal.adapter-1.1.8.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>tar -zxvf canal.adapter.tar.gz -C &#x2F;usr&#x2F;local&#x2F;canal&#x2F;canal-adapter<br>tar -zxvf canal.deployer.tar.gz -C &#x2F;usr&#x2F;local&#x2F;canal&#x2F;canal-deployer</p><p>github:<br><a class="link"   href="https://github.com/alibaba/canal/releases?page=1" >https://github.com/alibaba/canal/releases?page=1<i class="fas fa-external-link-alt"></i></a> </p><!-- wget  https://github.com/alibaba/canal/releases/download/canal-1.1.8-alpha-2/canal.adapter-1.1.8-SNAPSHOT.tar.gzwget  https://github.com/alibaba/canal/releases/download/canal-1.1.8-alpha-2/canal.deployer-1.1.8-SNAPSHOT.tar.gzwget https://github.com/alibaba/canal/releases/download/canal-1.1.7/canal.deployer-1.1.7.tar.gzwget https://github.com/alibaba/canal/releases/download/canal-1.1.7/canal.adapter-1.1.7.tar.gztar -zxvf canal.adapter-1.1.7.tar.gz -C /usr/local/canal/canal-adapter3tar -zxvf canal.deployer-1.1.7.tar.gz -C /usr/local/canal/canal-deployer3tar -zxvf canal.adapter-1.1.8-SNAPSHOT.tar.gz -C /usr/local/canal/canal-adapter1183tar -zxvf canal.deployer-1.1.8-SNAPSHOT.tar.gz -C /usr/local/canal/canal-deployer1183tar -zxvf canal.adapter-1.1.5.tar.gz -C /usr/local/canal/canal-adaptertar -zxvf canal.deployer-1.1.5.tar.gz -C /usr/local/canal/canal-deployer --><h2 id="配置和启动canal-deployer"><a href="#配置和启动canal-deployer" class="headerlink" title="配置和启动canal-deployer"></a>配置和启动canal-deployer</h2><h2 id="配置canal-deployer"><a href="#配置canal-deployer" class="headerlink" title="配置canal-deployer"></a>配置canal-deployer</h2><p>由于此次同步为MySQL数据库间的数据同步，所以此处不需要修改 canal.properties 配置文件，只需修改 instance.properties 即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-deployer/conf/example</span><br><span class="line">vi instance.properties</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># position info</span></span><br><span class="line">canal.instance.master.address= xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># username/password</span></span><br><span class="line">canal.instance.dbUsername=root</span><br><span class="line">canal.instance.dbPassword=123123</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># table regex</span></span><br><span class="line">canal.instance.filter.regex=.*\\..*</span><br></pre></td></tr></table></figure><p>说明</p><p> canal.id：设置Canal实例的唯一ID，建议使用UUID。</p><p> canal.ip：设置Canal实例的IP地址。</p><p> canal.port：设置Canal实例的端口号。</p><p> canal.destinations：设置Canal实例要连接的目标数据库地址和端口号，格式为&lt;协议：&#x2F;&#x2F;用户名：密码@IP地址：端口号&#x2F;数据库名。</p><p> canal.username：设置连接目标数据库的用户名。</p><p> canal.password：设置连接目标数据库的密码。</p><p> canal.driverClassName：设置连接目标数据库的驱动类名，例如oracle.jdbc.driver.OracleDriver。</p><p> canal.connectionCharset：设置连接目标数据库的字符集，例如UTF8。</p><h2 id="可能遇到的问题："><a href="#可能遇到的问题：" class="headerlink" title="可能遇到的问题："></a>可能遇到的问题：</h2><p>canal-deployer启动之后，如果在 logs 文件夹下没有 example 文件，参考如下情况说明：</p><h3 id="查看-usr-local-canal-canal-deployer-bin-文件夹下，是否存在以hs-err-pid开头的文件。"><a href="#查看-usr-local-canal-canal-deployer-bin-文件夹下，是否存在以hs-err-pid开头的文件。" class="headerlink" title="查看 &#x2F;usr&#x2F;local&#x2F;canal&#x2F;canal-deployer&#x2F;bin 文件夹下，是否存在以hs_err_pid开头的文件。"></a>查看 &#x2F;usr&#x2F;local&#x2F;canal&#x2F;canal-deployer&#x2F;bin 文件夹下，是否存在以hs_err_pid开头的文件。</h3><p>出现hs_err_pid开头的文件，主要原因有两个：<br>1&gt; 服务器内存不足，导致服务启动失败，出现OOM问题，这时需要增加服务器内存<br>2&gt; 服务器打开的线程数达到上限，这时需要修改线程上限，操作如下：<br>vi &#x2F;etc&#x2F;security&#x2F;limits.conf</p><p>修改内容可参考下面配置：</p><ul><li><pre><code>     soft    nproc          102400</code></pre></li><li><pre><code>     hard    nofile         102400</code></pre></li></ul><h3 id="上述配置参数说明："><a href="#上述配置参数说明：" class="headerlink" title="上述配置参数说明："></a>上述配置参数说明：</h3><p>第一列：linux系统用户名，*代表所有用户<br>第二列：软连接&#x2F;硬连接<br>第三列：类型，nproc 进程的数量&#x2F;nofile 文件打开数&#x2F;core-core 文件大小<br>第四列：数量</p><h3 id="bin文件夹下不存在以hs-err-pid开头的文件，查看logs文件夹下的canal文件夹下的canal-stdout-log文件，命令如下："><a href="#bin文件夹下不存在以hs-err-pid开头的文件，查看logs文件夹下的canal文件夹下的canal-stdout-log文件，命令如下：" class="headerlink" title="bin文件夹下不存在以hs_err_pid开头的文件，查看logs文件夹下的canal文件夹下的canal_stdout.log文件，命令如下："></a>bin文件夹下不存在以hs_err_pid开头的文件，查看logs文件夹下的canal文件夹下的canal_stdout.log文件，命令如下：</h3><p>cat &#x2F;usr&#x2F;local&#x2F;canal&#x2F;canal-deployer&#x2F;logs&#x2F;canal&#x2F;canal_stdout.log</p><p>若出现如下报错信息：</p><p>OpenJDK 64-Bit Server VM warning: Ignoring option PermSize; support was removed in 8.0<br>OpenJDK 64-Bit Server VM warning: Ignoring option MaxPermSize; support was removed in 8.0<br>OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.</p><h3 id="Unrecognized-VM-option-‘UseCMSCompactAtFullCollection’"><a href="#Unrecognized-VM-option-‘UseCMSCompactAtFullCollection’" class="headerlink" title="Unrecognized VM option ‘UseCMSCompactAtFullCollection’"></a>Unrecognized VM option ‘UseCMSCompactAtFullCollection’</h3><p>Error: Could not create the Java Virtual Machine.<br>Error: A fatal exception has occurred. Program will exit.</p><p>出现此报错的原因是由于当前服务器安装的jdk版本高于jdk8，此时需要修改 startup.sh 的启动参数，操作如下：</p><p>cd &#x2F;usr&#x2F;local&#x2F;canal&#x2F;canal-deployer&#x2F;bin<br>.&#x2F;stop.sh<br>vi startup.sh</p><h3 id="删除-XX-UseCMSCompactAtFullCollection-XX-UseFastAccessorMethods-参数"><a href="#删除-XX-UseCMSCompactAtFullCollection-XX-UseFastAccessorMethods-参数" class="headerlink" title="删除 -XX:+UseCMSCompactAtFullCollection -XX:+UseFastAccessorMethods 参数"></a>删除 -XX:+UseCMSCompactAtFullCollection -XX:+UseFastAccessorMethods 参数</h3><p>.&#x2F;startup.sh</p><h3 id="Unrecognized-VM-option-‘UseBiasedLocking’"><a href="#Unrecognized-VM-option-‘UseBiasedLocking’" class="headerlink" title="Unrecognized VM option ‘UseBiasedLocking’"></a>Unrecognized VM option ‘UseBiasedLocking’</h3><p>Error: Could not create the Java Virtual Machine.<br>Error: A fatal exception has occurred. Program will exit.  </p><h3 id="移除-UseBiasedLocking-选项"><a href="#移除-UseBiasedLocking-选项" class="headerlink" title="移除 UseBiasedLocking 选项"></a>移除 UseBiasedLocking 选项</h3><p>-XX:+UseBiasedLocking</p><h3 id="Unrecognized-VM-option-‘AggressiveOpts’"><a href="#Unrecognized-VM-option-‘AggressiveOpts’" class="headerlink" title="Unrecognized VM option ‘AggressiveOpts’"></a>Unrecognized VM option ‘AggressiveOpts’</h3><p>Error: Could not create the Java Virtual Machine.<br>Error: A fatal exception has occurred. Program will exit. </p><h3 id="Remove-XX-AggressiveOpts"><a href="#Remove-XX-AggressiveOpts" class="headerlink" title="Remove -XX:+AggressiveOpts"></a>Remove -XX:+AggressiveOpts</h3><p>canal.deployer-1.1.8-SNAPSHOT.tar.gz</p><p>com.alibaba.druid.pool.DruidDataSource 类未找到，导致 Canal 的 dataSource bean 初始化失败。</p><p>.&#x2F;startup.sh</p><h2 id="若需要同步某几张表，可以参考如下配置"><a href="#若需要同步某几张表，可以参考如下配置" class="headerlink" title="若需要同步某几张表，可以参考如下配置"></a>若需要同步某几张表，可以参考如下配置</h2><h2 id="同步某数据库test1下的user表-test2数据库下的所有表，所有库下所有表数据"><a href="#同步某数据库test1下的user表-test2数据库下的所有表，所有库下所有表数据" class="headerlink" title="同步某数据库test1下的user表,test2数据库下的所有表，所有库下所有表数据"></a>同步某数据库test1下的user表,test2数据库下的所有表，所有库下所有表数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">canal.instance.filter.regex=test1.user,test2\\..*,.*\\..*</span><br></pre></td></tr></table></figure><h2 id="启动canal-deployer"><a href="#启动canal-deployer" class="headerlink" title="启动canal-deployer"></a>启动canal-deployer</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-deployer/bin</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><p>查看日志确定是否启动成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-deployer/logs/example</span><br><span class="line"><span class="built_in">cat</span> example.log</span><br></pre></td></tr></table></figure><p>log内容…<br> [main] INFO  c.a.otter.canal.instance.core.AbstractCanalInstance - stop CannalInstance for null-example<br> [main] INFO  c.a.otter.canal.instance.core.AbstractCanalInstance - stop successful….<br>启动</p><h2 id="启动canal需要jdk"><a href="#启动canal需要jdk" class="headerlink" title="启动canal需要jdk"></a>启动canal需要jdk</h2><p>安装 OpenJDK</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line">apt search openjdk</span><br><span class="line"></span><br><span class="line">sudo apt install openjdk-17-jdk</span><br><span class="line"></span><br><span class="line">sudo apt install -y openjdk-17-jdk</span><br></pre></td></tr></table></figure><p><strong>手动下载并安装</strong><br>前往 Oracle JDK 下载页面，下载最新的 .tar.gz 包。<br><a class="link"   href="https://www.oracle.com/java/technologies/downloads/?er=221886" >https://www.oracle.com/java/technologies/downloads/?er=221886<i class="fas fa-external-link-alt"></i></a><br>下载完成后，解压缩文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvzf jdk-&lt;version&gt;-linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure><p>将 JDK 移动到 &#x2F;opt 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mv</span> jdk-&lt;version&gt; /opt/</span><br></pre></td></tr></table></figure><p>配置环境变量。在 ~&#x2F;.bashrc 中添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/jdk-&lt;version&gt;</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>使配置生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>验证安装,确认安装成功，检查 Java 版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p><strong>卸载jdk</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg --list | grep -i jdk</span><br></pre></td></tr></table></figure><p>一旦知道了要卸载的JDK包的确切名称，使用apt-get命令卸载它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove your-jdk-package-name</span><br></pre></td></tr></table></figure><p>将your-jdk-package-name替换为从列表中找到的实际JDK包名称。<br>如果想同时删除配置文件，可以使用–purge选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge your-jdk-package-name</span><br></pre></td></tr></table></figure><p>最后，运行autoremove来清除系统中不再需要的依赖项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure><p>例如，如果安装的是OpenJDK 11，并且通过apt安装，可以使用以下命令来卸载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove openjdk-11-jdk</span><br><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure><h1 id="canal-deployer-和-canal-adapter-是-Canal-的两个独立模块，各自承担不同的功能："><a href="#canal-deployer-和-canal-adapter-是-Canal-的两个独立模块，各自承担不同的功能：" class="headerlink" title="canal-deployer 和 canal-adapter 是 Canal 的两个独立模块，各自承担不同的功能："></a>canal-deployer 和 canal-adapter 是 Canal 的两个独立模块，各自承担不同的功能：</h1><h2 id="canal-deployer"><a href="#canal-deployer" class="headerlink" title="canal-deployer"></a>canal-deployer</h2><p><strong>功能：</strong>canal-deployer 是 Canal 的核心组件，用于从 MySQL 数据库中读取 binlog，并解析 binlog 事件。<br><strong>作用：</strong>主要负责数据的实时捕获和解析。它将从 MySQL 实例捕获的 binlog 数据转换成 Canal 可以处理的格式，并通过网络或其他方式将这些数据推送给下游消费者。<br><strong>配置：</strong>canal-deployer 需要配置连接信息（如 MySQL 的地址、用户名、密码等）以及相关的过滤条件，比如要监控的表和过滤的字段。<br><strong>应用场景：</strong>适用于需要捕获 MySQL 数据变更的场景，比如数据库的实时增量数据同步和数据监控。</p><h2 id="canal-adapter"><a href="#canal-adapter" class="headerlink" title="canal-adapter"></a>canal-adapter</h2><p><strong>功能：</strong>canal-adapter 负责将 Canal 捕获并解析的数据，适配并同步到不同的下游目标。<br><strong>作用：</strong>可以将数据写入到 ElasticSearch、Kafka、HBase 等多种目标，起到数据同步的桥梁作用。<br><strong>配置：</strong>canal-adapter 提供了丰富的适配器配置（如 ES、Kafka、RocketMQ 等），可以根据业务需求配置同步的字段映射、数据转换和过滤规则。<br><strong>应用场景：</strong>适用于需要将 MySQL 的 binlog 数据实时同步到其他数据存储或消息队列的场景，比如数据仓库同步、实时索引等。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>canal-deployer 专注于从 MySQL 读取并解析 binlog 数据。<br>canal-adapter 则将解析后的数据推送或同步到下游目标，起到数据适配和转换的作用。</p><h1 id="配置和启动canal-adapter"><a href="#配置和启动canal-adapter" class="headerlink" title="配置和启动canal-adapter"></a>配置和启动canal-adapter</h1><h2 id="配置canal-adapter"><a href="#配置canal-adapter" class="headerlink" title="配置canal-adapter"></a>配置canal-adapter</h2><p> 修改application.yml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-adapter/conf</span><br><span class="line">vi application.yml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># canal tcp consumer</span></span><br><span class="line"><span class="comment"># 修改位置：Canal deployer所在主机IP</span></span><br><span class="line">canal.tcp.server.host: 192.168.91.135:11111</span><br></pre></td></tr></table></figure><p>修改位置：添加源库配置信息，此处为同步同库下所有表信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">srcDataSources:</span><br><span class="line">  defaultDS:</span><br><span class="line">    url: jdbc:mysql://124.219.119.xxx:3306/IMDB?useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf8mb4&amp;autoReconnect=<span class="literal">true</span>&amp;useSSL=<span class="literal">false</span></span><br><span class="line">    username: root</span><br><span class="line">    password: 123123.xx</span><br><span class="line">canalAdapters:</span><br><span class="line">- instance: example <span class="comment"># canal instance Name or mq topic name</span></span><br><span class="line">  <span class="built_in">groups</span>:</span><br><span class="line">  - groupId: g1</span><br><span class="line">    outerAdapters:</span><br><span class="line">    - name: logger</span><br><span class="line">    - name: rdb</span><br><span class="line">      key: mysql1</span><br><span class="line">      properties:</span><br><span class="line">        jdbc.driverClassName: com.mysql.jdbc.Driver</span><br><span class="line">        jdbc.url: jdbc:mysql://192.168.80.xxx/IMDB?useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf8mb4&amp;autoReconnect=<span class="literal">true</span>&amp;useSSL=<span class="literal">false</span></span><br><span class="line">        jdbc.username: root</span><br><span class="line">        jdbc.password: 123123.xx</span><br></pre></td></tr></table></figure><p>说明: </p><p>其中 outAdapter 的配置: name统一为rdb, key为对应的数据源的唯一标识需和下面的表映射文件中的outerAdapterKey对应, properties为目标库jdbc的相关参数</p><p>adapter将会自动加载 conf&#x2F;rdb 下的所有.yml结尾的表映射配置文件</p><h2 id="修改canal-adapter-conf-rdb文件夹下的yml文件"><a href="#修改canal-adapter-conf-rdb文件夹下的yml文件" class="headerlink" title="修改canal-adapter&#x2F;conf&#x2F;rdb文件夹下的yml文件"></a>修改canal-adapter&#x2F;conf&#x2F;rdb文件夹下的yml文件</h2><p>说明：canal-adapter&#x2F;conf&#x2F;rdb文件夹下的yml文件可以同步数据库下的一张表，也可以同步数据库下的所有表(此处的前提是：同步数据的数据库与主库的schema一致)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-adapter/conf/rdb</span><br><span class="line">.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Mirror schema synchronize config</span></span><br><span class="line">dataSourceKey: defaultDS</span><br><span class="line">destination: example</span><br><span class="line">groupId: g1</span><br><span class="line">outerAdapterKey: mysql1</span><br><span class="line">concurrent: <span class="literal">true</span></span><br><span class="line">dbMapping:</span><br><span class="line">  mirrorDb: <span class="literal">true</span></span><br><span class="line">  database: <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h2 id="启动canal-adapter"><a href="#启动canal-adapter" class="headerlink" title="启动canal-adapter"></a>启动canal-adapter</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-adapter/bin</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><p>查看日志信息，确保正常启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-adapter/logs/adapter</span><br><span class="line"><span class="built_in">cat</span> adapter.log</span><br></pre></td></tr></table></figure><p>log err<br>[main] ERROR org.springframework.boot.SpringApplication - Application run failed<br>org.yaml.snakeyaml.error.YAMLException: </p><p>如果没有log 或启动不成功</p><h2 id="移除未支持的-JVM-参数"><a href="#移除未支持的-JVM-参数" class="headerlink" title="移除未支持的 JVM 参数"></a>移除未支持的 JVM 参数</h2><p>-XX:+UseFastAccessorMethods<br>-XX:+PrintAdaptiveSizePolicy<br>-XX:+PrintTenuringDistribution</p><p> 参考1</p><h2 id="去掉-XX-AggressiveOpts-XX-UseBiasedLocking"><a href="#去掉-XX-AggressiveOpts-XX-UseBiasedLocking" class="headerlink" title="去掉  -XX:+AggressiveOpts -XX:-UseBiasedLocking"></a>去掉  -XX:+AggressiveOpts -XX:-UseBiasedLocking</h2><p>-XX:+UseFastAccessorMethods </p><p>去掉<br>str&#x3D;<code>file -L $JAVA | grep 64-bit</code></p><p>JAVA_OPTS&#x3D;”$JAVA_OPTS -Xss1m  -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath&#x3D;$base&#x2F;logs”<br>if [ $JavaVersion -ge 11 ] ; then<br>  #JAVA_OPTS&#x3D;”$JAVA_OPTS -Xlog:gc*:$base_log&#x2F;gc.log:time “<br>  JAVA_OPTS&#x3D;”$JAVA_OPTS”<br>else<br>  #JAVA_OPTS&#x3D;”$JAVA_OPTS -Xloggc:$base&#x2F;logs&#x2F;canal&#x2F;gc.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCApplicationStoppedTime”<br>  JAVA_OPTS&#x3D;”$JAVA_OPTS -XX:+PrintAdaptiveSizePolicy -XX:+PrintTenuringDistribution”<br>fi</p><!--  canal-adapter 时，启动步骤如下：1. 准备工作确保已经完成以下事项：下载了 Canal 的 adapter 包（通常在 Canal GitHub 或相关资源中可以找到）。配置了 Canal 服务并已成功启动。MySQL 数据库开启了 binlog（Canal 依赖 binlog 日志进行数据捕获）。2. 配置 Canal Adapter（1）解压 canal.adapter 压缩包解压 Canal Adapter 的 ZIP 或 TAR 包，目录结构通常如下：python复制代码canal.adapter/├── conf/│   ├── application.yml│   ├── instance/│   │   ├── example/│   │   │   ├── rdb/│   │   │   │   └── rdb.yml│   │   │   └── es/│   │   │       └── es.yml├── lib/├── logs/└── bin/（2）配置 application.yml在 conf/application.yml 中，配置 Canal Server 和适配器实例的信息。示例配置如下：yaml复制代码server:  port: 8081 # Adapter 运行端口canal.conf:  mode: tcp  canalAdapters:    - instance: example # Canal Server 的 instance 名称      groups:        - groupId: g1          outerAdapters:            - name: rdb              key: mysql1              properties:                jdbc.driverClassName: com.mysql.cj.jdbc.Driver                jdbc.url: jdbc:mysql://127.0.0.1:3306/your_database?useUnicode=true                jdbc.username: your_username                jdbc.password: your_password（3）实例配置（instance 文件夹）根据的需求（如同步到数据库或 Elasticsearch），配置适配器。例如：rdb.yml：用于 RDB（关系型数据库）。es.yml：用于 Elasticsearch。3. 启动 Canal Adapter进入 canal.adapter/bin 目录并执行以下命令：（1）Linux/MacOSbash复制代码sh startup.sh（2）Windowscmd复制代码startup.bat4. 验证服务是否启动检查日志：logs/canal.adapter.log，确认是否有启动成功的日志。使用浏览器访问：http://localhost:8081，如果显示接口信息说明服务启动成功。5. 注意事项确保 Canal Server 已正常运行，Adapter 才能正常连接。配置文件中的端口号、数据库信息等要与实际环境匹配。如果 Adapter 无法连接 Canal Server，检查网络连通性以及 Canal Server 的配置是否允许连接。startupjdk171. 移除已废弃的 JVM 参数移除：bash复制代码-XX:+AggressiveOpts原因：AggressiveOpts 已被 JDK 17 移除。修改后：bash复制代码JAVA_OPTS="$JAVA_OPTS -Xss1m -XX:-UseBiasedLocking -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$base/logs"2. 移除未支持的 JVM 参数移除：bash复制代码-XX:+UseFastAccessorMethods-XX:+PrintAdaptiveSizePolicy-XX:+PrintTenuringDistribution原因：这些参数在 JDK 17 中已经被废弃。修改后：bash复制代码JAVA_OPTS="$JAVA_OPTS -Xss1m -XX:-UseBiasedLocking -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$base/logs"3. 调整 G1 GC 相关参数如果脚本中启用了 G1 GC，建议调整为适合 JDK 17 的参数：原始 G1 参数：bash复制代码JAVA_OPTS="-server -Xms2g -Xmx3g -XX:+UseG1GC -XX:MaxGCPauseMillis=250 -XX:+UseGCOverheadLimit -XX:+ExplicitGCInvokesConcurrent $JAVA_OPTS"修改后：bash复制代码JAVA_OPTS="-server -Xms2g -Xmx3g -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseGCOverheadLimit $JAVA_OPTS"移除了 -XX:+ExplicitGCInvokesConcurrent，因为在 JDK 17 中已经不推荐使用。4. 替换 PermGen 相关参数JDK 8 及之后移除了 PermGen，改用 Metaspace。因此，需要调整以下参数：原始代码：bash复制代码-XX:PermSize=96m -XX:MaxPermSize=256m修改后：bash复制代码-XX:MetaspaceSize=96m -XX:MaxMetaspaceSize=256m5. 确保编码配置有效JDK 17 默认支持 UTF-8 文件编码，但建议显式指定编码：确保存在以下参数：bash复制代码-Dfile.encoding=UTF-86. 校验 JAVA_DEBUG_OPT 配置如果需要调试，确保以下配置使用正确的格式：bash复制代码JAVA_DEBUG_OPT="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:$DEBUG_PORT"这是 JDK 17 调试的推荐格式。 --><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">current_path=`<span class="built_in">pwd</span>`</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;`uname`&quot;</span> <span class="keyword">in</span></span><br><span class="line">    Linux)</span><br><span class="line">bin_abs_path=$(<span class="built_in">readlink</span> -f $(<span class="built_in">dirname</span> <span class="variable">$0</span>))</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">bin_abs_path=`<span class="built_in">cd</span> $(<span class="built_in">dirname</span> <span class="variable">$0</span>); <span class="built_in">pwd</span>`</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">base=<span class="variable">$&#123;bin_abs_path&#125;</span>/..</span><br><span class="line"><span class="built_in">export</span> LANG=en_US.UTF-8</span><br><span class="line"><span class="built_in">export</span> BASE=<span class="variable">$base</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$base</span>/bin/adapter.pid ] ; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;found adapter.pid , Please run stop.sh first ,then startup.sh&quot;</span> 2&gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$base</span>/logs ] ; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$base</span>/logs</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## set java path</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$JAVA</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">  JAVA=$(<span class="built_in">which</span> java)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">ALIBABA_JAVA=<span class="string">&quot;/usr/alibaba/java/bin/java&quot;</span></span><br><span class="line">TAOBAO_JAVA=<span class="string">&quot;/opt/taobao/java/bin/java&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$JAVA</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> [ -f <span class="variable">$ALIBABA_JAVA</span> ] ; <span class="keyword">then</span></span><br><span class="line">  JAVA=<span class="variable">$ALIBABA_JAVA</span></span><br><span class="line">  <span class="keyword">elif</span> [ -f <span class="variable">$TAOBAO_JAVA</span> ] ; <span class="keyword">then</span></span><br><span class="line">  JAVA=<span class="variable">$TAOBAO_JAVA</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Cannot find a Java JDK. Please set either set JAVA or put java (&gt;=1.5) in your PATH.&quot;</span> 2&gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$#</span>&quot;</span></span><br><span class="line"><span class="keyword">in</span></span><br><span class="line">0 )</span><br><span class="line">  ;;</span><br><span class="line">2 )</span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;debug&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    DEBUG_PORT=<span class="variable">$2</span></span><br><span class="line">    DEBUG_SUSPEND=<span class="string">&quot;n&quot;</span></span><br><span class="line">    JAVA_DEBUG_OPT=<span class="string">&quot;-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=<span class="variable">$DEBUG_PORT</span>,server=y,suspend=<span class="variable">$DEBUG_SUSPEND</span>&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  ;;</span><br><span class="line">* )</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;THE PARAMETERS MUST BE TWO OR LESS.PLEASE CHECK AGAIN.&quot;</span></span><br><span class="line">  <span class="built_in">exit</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">JavaVersion=`<span class="variable">$JAVA</span> -version 2&gt;&amp;1 |awk <span class="string">&#x27;NR==1&#123; gsub(/&quot;/,&quot;&quot;); print $3 &#125;&#x27;</span> | awk  -F <span class="string">&#x27;.&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>`</span><br><span class="line">str=`file -L <span class="variable">$JAVA</span> | grep 64-bit`</span><br><span class="line"></span><br><span class="line">JAVA_OPTS=<span class="string">&quot;<span class="variable">$JAVA_OPTS</span> -Xss1m -XX:-UseBiasedLocking -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=<span class="variable">$base</span>/logs&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$JavaVersion</span> -ge 11 ] ; <span class="keyword">then</span></span><br><span class="line">  <span class="comment">#JAVA_OPTS=&quot;$JAVA_OPTS -Xlog:gc*:$base_log/gc.log:time &quot;</span></span><br><span class="line">  JAVA_OPTS=<span class="string">&quot;<span class="variable">$JAVA_OPTS</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="comment">#JAVA_OPTS=&quot;$JAVA_OPTS -Xloggc:$base/logs/canal/gc.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCApplicationStoppedTime&quot;   -XX:+UseFastAccessorMethods -XX:+PrintAdaptiveSizePolicy -XX:+PrintTenuringDistribution</span></span><br><span class="line">  JAVA_OPTS=<span class="string">&quot;<span class="variable">$JAVA_OPTS</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$str</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$JavaVersion</span> -ge 11 ] ; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># For G1</span></span><br><span class="line">    JAVA_OPTS=<span class="string">&quot;-server -Xms2g -Xmx3g -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseGCOverheadLimit <span class="variable">$JAVA_OPTS</span>&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  JAVA_OPTS=<span class="string">&quot;-server -Xms2g -Xmx3g -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseGCOverheadLimit <span class="variable">$JAVA_OPTS</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">JAVA_OPTS=<span class="string">&quot;-server -Xms2g -Xmx3g -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseGCOverheadLimit <span class="variable">$JAVA_OPTS</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">JAVA_OPTS=<span class="string">&quot; <span class="variable">$JAVA_OPTS</span> -Djava.awt.headless=true -Djava.net.preferIPv4Stack=true -Dfile.encoding=UTF-8&quot;</span></span><br><span class="line">ADAPTER_OPTS=<span class="string">&quot;-DappName=canal-adapter&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$base</span>/lib/*;</span><br><span class="line">    <span class="keyword">do</span> CLASSPATH=<span class="variable">$i</span>:<span class="string">&quot;<span class="variable">$CLASSPATH</span>&quot;</span>;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">CLASSPATH=<span class="string">&quot;<span class="variable">$base</span>/conf:<span class="variable">$CLASSPATH</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cd to <span class="variable">$bin_abs_path</span> for workaround relative path&quot;</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$bin_abs_path</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> CLASSPATH :<span class="variable">$CLASSPATH</span></span><br><span class="line"><span class="variable">$JAVA</span> <span class="variable">$JAVA_OPTS</span> <span class="variable">$JAVA_DEBUG_OPT</span> <span class="variable">$ADAPTER_OPTS</span> -classpath .:<span class="variable">$CLASSPATH</span> com.alibaba.otter.canal.adapter.launcher.CanalAdapterApplication 1&gt;&gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="built_in">echo</span> $! &gt; <span class="variable">$base</span>/bin/adapter.pid</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cd to <span class="variable">$current_path</span> for continue&quot;</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$current_path</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>.&#x2F;startup.sh</p><p>启动成功<strong>log</strong></p><p>2024-11-15 16:43:42.033 [main] INFO  c.a.o.canal.adapter.launcher.loader.CanalAdapterLoader - Start adapter for canal-client mq topic: example-g1 succeed<br>2024-11-15 16:43:42.034 [main] INFO  c.a.o.canal.adapter.launcher.loader.CanalAdapterService - ## the canal client adapters are running now ……<br>2024-11-15 16:43:42.035 [Thread-3] INFO  c.a.otter.canal.adapter.launcher.loader.AdapterProcessor - &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt; Start to connect destination: example &lt;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>2024-11-15 16:43:42.047 [main] INFO  c.a.otter.canal.adapter.launcher.CanalAdapterApplication - Started CanalAdapterApplication in 1.721 seconds (JVM running for 2.038)<br>2024-11-15 16:43:42.109 [Thread-3] INFO  c.a.otter.canal.adapter.launcher.loader.AdapterProcessor - &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt; Subscribe destination: example succeed &lt;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><h1 id="插入原sql则可以看到-canal的数据库也插入"><a href="#插入原sql则可以看到-canal的数据库也插入" class="headerlink" title="插入原sql则可以看到 canal的数据库也插入"></a>插入原sql则可以看到 canal的数据库也插入</h1><p>在主库test数据库下的user表中插入数据，查看canal所在数据库test下的user表中是否同步。</p><p><strong>Canal 依赖主键或唯一键来确定同步数据</strong><br>如果有新增唯一键，则也需要bak到备份的数据库中才能正确备份</p><!--ss -tulnhttps://www.cnblogs.com/cndarren/p/16318728.html-->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Canal&quot;&gt;&lt;a href=&quot;#Canal&quot; class=&quot;headerlink&quot; title=&quot;Canal&quot;&gt;&lt;/a&gt;Canal&lt;/h1&gt;&lt;p&gt;是阿里巴巴开源的一个数据库binlog解析工具，它能够捕获并解析MySQL等数据库的增量数据变化（即binlog），</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="mysql" scheme="https://banjinmei.github.io/tags/mysql/"/>
    
    <category term="canal" scheme="https://banjinmei.github.io/tags/canal/"/>
    
  </entry>
  
  <entry>
    <title>.NET MemoryPack</title>
    <link href="https://banjinmei.github.io/2024/11/14/NET-MemoryPack/"/>
    <id>https://banjinmei.github.io/2024/11/14/NET-MemoryPack/</id>
    <published>2024-11-13T16:57:37.000Z</published>
    <updated>2024-11-13T16:59:25.442Z</updated>
    
    <content type="html"><![CDATA[<p><strong>MemoryPack</strong><br>是一个高效的数据序列化库，它专注于性能优化，适用于需要快速序列化和反序列化的场景。这个库是由 Yuki Yogo 开发的，并且在 .NET 社区中获得了相当的关注。MemoryPack 支持<strong>零拷贝</strong>（zero-copy）读取，这意味着可以在不需要额外内存分配的情况下直接从原始字节数据中读取值。</p><p>MemoryPack使用示例，包括定义一个可序列化的类、序列化对象以及反序列化回对象的过程。</p><h1 id="安装-MemoryPack"><a href="#安装-MemoryPack" class="headerlink" title="安装 MemoryPack"></a>安装 MemoryPack</h1><p>首先，需要安装 MemoryPack 库。可以通过 NuGet 包管理器来安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package MemoryPack</span><br></pre></td></tr></table></figure><p>或者在 Visual Studio 中使用 NuGet 包管理器界面来安装。</p><h1 id="定义可序列化的类"><a href="#定义可序列化的类" class="headerlink" title="定义可序列化的类"></a>定义可序列化的类</h1><p>为了使一个类能够被 MemoryPack 序列化，需要为该类添加 [MemoryPackable] 属性，并为类中的每个字段或属性添加 [MemoryPackIgnore] 属性（如果想要忽略某些字段或属性的话）。这里有一个简单的例子：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> MemoryPack;</span><br><span class="line"></span><br><span class="line">[<span class="meta">MemoryPackable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">MemoryPackIgnore</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> NotSerializedProperty &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：partial 关键字是必须的，因为 MemoryPack 在编译时会生成一些额外的代码来支持序列化&#x2F;反序列化。</p><h1 id="序列化和反序列化"><a href="#序列化和反序列化" class="headerlink" title="序列化和反序列化"></a>序列化和反序列化</h1><p>接下来，我们可以创建一个 Person 对象，然后使用 MemoryPack 将其序列化为字节数组，再从字节数组反序列化回 Person 对象。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> MemoryPack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建一个 Person 实例</span></span><br><span class="line">        <span class="keyword">var</span> person = <span class="keyword">new</span> Person</span><br><span class="line">        &#123;</span><br><span class="line">            Name = <span class="string">&quot;John Doe&quot;</span>,</span><br><span class="line">            Age = <span class="number">30</span>,</span><br><span class="line">            NotSerializedProperty = <span class="string">&quot;This will not be serialized&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="built_in">byte</span>[] serialized = MemoryPackSerializer.Serialize(person);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化  （零拷贝）</span></span><br><span class="line">        Person deserializedPerson = MemoryPackSerializer.Deserialize&lt;Person&gt;(serialized);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Name: <span class="subst">&#123;deserializedPerson.Name&#125;</span>, Age: <span class="subst">&#123;deserializedPerson.Age&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="comment">// 注意：NotSerializedProperty 不会被输出，因为它没有被序列化</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意事项<br>MemoryPack 支持大多数基本类型和复杂类型，但是也有一些限制，例如不支持循环引用的对象图。<br>如果的项目中存在多个需要序列化的类，每个类都需要标记 [MemoryPackable] 并且是 partial 类型。<br>由于 MemoryPack 使用了源生成器（source generators），因此它在编译时会生成额外的代码，这可能会稍微增加构建时间，但可以显著提高运行时的性能。<br>以上就是一个使用 MemoryPack 进行序列化和反序列化的简单示例。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;MemoryPack&lt;/strong&gt;&lt;br&gt;是一个高效的数据序列化库，它专注于性能优化，适用于需要快速序列化和反序列化的场景。这个库是由 Yuki Yogo 开发的，并且在 .NET 社区中获得了相当的关注。MemoryPack 支持&lt;strong&gt;零拷贝</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>.NET ILogger</title>
    <link href="https://banjinmei.github.io/2024/11/14/NET-ILogger/"/>
    <id>https://banjinmei.github.io/2024/11/14/NET-ILogger/</id>
    <published>2024-11-13T16:55:06.000Z</published>
    <updated>2024-11-13T16:56:46.669Z</updated>
    
    <content type="html"><![CDATA[<p>ILogger<T> 是 ASP.NET Core 中的一个接口，用于记录应用程序的日志信息。它是一个泛型接口，其中 T 是日志记录的上下文类型。通常情况下，会使用 ILogger 接口而不是 ILogger<T>，除非需要将特定的上下文类型传递给日志记录器。</p><p>ILogger 的示例：</p><h1 id="1-注入-ILogger"><a href="#1-注入-ILogger" class="headerlink" title="1. 注入 ILogger"></a>1. 注入 ILogger</h1><p>在的控制器、服务或其他依赖注入组件中，可以注入 ILogger<T> 或 ILogger。例如，在控制器中注入 ILogger<YourController>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">YourController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> ILogger&lt;YourController&gt; _logger;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">YourController</span>(<span class="params">ILogger&lt;YourController&gt; logger</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _logger = logger;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者，如果不需要特定的上下文类型，可以注入 ILogger：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">YourService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> ILogger _logger;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">YourService</span>(<span class="params">ILogger logger</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _logger = logger;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-记录日志"><a href="#2-记录日志" class="headerlink" title="2. 记录日志"></a>2. 记录日志</h1><p>使用 _logger 对象记录不同级别的日志，例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_logger.LogInformation(<span class="string">&quot;This is an information message.&quot;</span>);</span><br><span class="line">_logger.LogWarning(<span class="string">&quot;This is a warning message.&quot;</span>);</span><br><span class="line">_logger.LogError(<span class="string">&quot;This is an error message.&quot;</span>, exception);</span><br></pre></td></tr></table></figure><h1 id="3-配置日志记录"><a href="#3-配置日志记录" class="headerlink" title="3. 配置日志记录"></a>3. 配置日志记录</h1><p>在 appsettings.json 或其他配置文件中配置日志记录级别和输出目标。例如，在 appsettings.Development.json 中：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;System&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Information&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Microsoft&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Warning&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这将设置默认日志级别为 Debug，系统日志级别为 Information，Microsoft 日志级别为 Warning。</p><p>还可以配置日志记录器将日志输出到控制台、文件或其他目标。例如，在 appsettings.json 中：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Console&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;IncludeScopes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Debug&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Information&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Info&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Warning&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Warning&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Error&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Error&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Critical&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这将配置控制台日志记录器，并为不同级别的日志设置不同的输出级别。</p><p>总之，ILogger 和 ILogger<T> 提供了一种灵活且强大的方式来记录应用程序的日志信息。通过配置不同的日志级别和输出目标，可以轻松地满足各种日志记录需求。</p><h2 id="日志级别和分类："><a href="#日志级别和分类：" class="headerlink" title="日志级别和分类："></a>日志级别和分类：</h2><p>ILogger 提供了日志级别的概念，如 Trace、Debug、Info、Warning、Error 和 Critical。这允许开发者根据需要记录不同严重程度的信息，并且可以在配置中设置日志级别，以便在不同环境中（如开发、测试、生产）显示或隐藏某些级别的日志。<br>Console.WriteLine 只是简单地将文本输出到控制台，没有日志级别的概念。</p><h2 id="可配置性："><a href="#可配置性：" class="headerlink" title="可配置性："></a>可配置性：</h2><p>ILogger 是可配置的，可以配置日志记录器将日志输出到不同的目标（如文件、数据库、网络服务等），并且可以设置不同的格式化选项。<br>Console.WriteLine 只是将输出发送到控制台，没有可配置的输出目标或格式化选项。</p><h2 id="结构化日志："><a href="#结构化日志：" class="headerlink" title="结构化日志："></a>结构化日志：</h2><p>ILogger 支持结构化日志记录，这意味着可以记录包含键值对的对象，这些对象可以更容易地被日志分析工具解析和查询。<br>Console.WriteLine 只能输出文本字符串，不支持结构化日志。</p><h2 id="集成和扩展性："><a href="#集成和扩展性：" class="headerlink" title="集成和扩展性："></a>集成和扩展性：</h2><p>ILogger 是 ASP.NET Core 和许多其他 .NET 应用程序框架的一部分，它与其他框架组件（如依赖注入、中间件等）集成良好，并且可以通过第三方库轻松扩展。<br>Console.WriteLine 是 .NET 基础类库的一部分，但它不特定于任何特定的应用程序框架，也没有集成的概念。</p><h2 id="异常处理："><a href="#异常处理：" class="headerlink" title="异常处理："></a>异常处理：</h2><p>使用 ILogger 记录异常时，可以将异常对象作为参数传递，这样日志记录器可以捕获并记录异常的详细信息。<br>Console.WriteLine 只能手动将异常信息转换为字符串，然后输出。</p><p><strong>总结：</strong></p><p>ILogger 提供了更丰富的日志记录功能，包括日志级别、可配置性、结构化日志支持以及与框架的良好集成。<br>Console.WriteLine 更简单易用，适用于快速原型开发或简单的日志记录需求。<br>在大多数情况下，对于生产环境中的应用程序，推荐使用 ILogger，因为它提供了更多的灵活性和控制能力。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ILogger&lt;T&gt; 是 ASP.NET Core 中的一个接口，用于记录应用程序的日志信息。它是一个泛型接口，其中 T 是日志记录的上下文类型。通常情况下，会使用 ILogger 接口而不是 ILogger&lt;T&gt;，除非需要将特定的上下文类型传递给日志记录器。&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>Bogus-.NET Fake Data</title>
    <link href="https://banjinmei.github.io/2024/11/10/Bogus-NET-Fake-Data/"/>
    <id>https://banjinmei.github.io/2024/11/10/Bogus-NET-Fake-Data/</id>
    <published>2024-11-10T13:09:29.000Z</published>
    <updated>2024-11-27T14:47:03.933Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Bogus"><a href="#Bogus" class="headerlink" title="Bogus"></a>Bogus</h1><p>快速生成模拟数据<br>适用于单元测试、原型设计、演示数据准备。</p><h1 id="1-NuGet-安装-Bogus"><a href="#1-NuGet-安装-Bogus" class="headerlink" title="1.NuGet 安装 Bogus"></a>1.NuGet 安装 Bogus</h1><h1 id="2-简单使用"><a href="#2-简单使用" class="headerlink" title="2.简单使用"></a>2.简单使用</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> faker = <span class="keyword">new</span> Faker();</span><br><span class="line"><span class="comment">//   var faker = new Faker(&quot;zh_CN&quot;); ////中文</span></span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Name: <span class="subst">&#123;faker.Name.FullName()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Email: <span class="subst">&#123;faker.Internet.Email()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Phone: <span class="subst">&#123;faker.Phone.PhoneNumber()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Address: <span class="subst">&#123;faker.Address.FullAddress()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Company: <span class="subst">&#123;faker.Company.CompanyName()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Catch Phrase: <span class="subst">&#123;faker.Company.CatchPhrase()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;BS: <span class="subst">&#123;faker.Company.Bs()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Product: <span class="subst">&#123;faker.Commerce.Product()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Price: <span class="subst">&#123;faker.Commerce.Price()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Credit Card: <span class="subst">&#123;faker.Finance.CreditCardNumber()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Bitcoin Address: <span class="subst">&#123;faker.Finance.BitcoinAddress()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;User Agent: <span class="subst">&#123;faker.Internet.UserAgent()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Color: <span class="subst">&#123;faker.Commerce.Color()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Time Zone: <span class="subst">&#123;faker.Date.TimeZoneString()&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="3-自定义类使用"><a href="#3-自定义类使用" class="headerlink" title="3.自定义类使用"></a>3.自定义类使用</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TUser</span> </span><br><span class="line">   &#123; </span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> LastName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> Email &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">       <span class="keyword">public</span> DateTime Birth &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟数据</span></span><br><span class="line">           <span class="keyword">var</span> faker = <span class="keyword">new</span> Faker&lt;TUser&gt;().RuleFor(u =&gt; u.Id, f =&gt; f.Random.Int(<span class="number">1</span>, <span class="number">9999</span>))</span><br><span class="line">               .RuleFor(u =&gt; u.FirstName, f =&gt; f.Name.FirstName())</span><br><span class="line">               .RuleFor(u =&gt; u.LastName, f =&gt; f.Name.LastName())</span><br><span class="line">               .RuleFor(u =&gt; u.Email, (f, u) =&gt; f.Internet.Email(u.FirstName, u.LastName))</span><br><span class="line">               .RuleFor(u =&gt; u.Birth, f =&gt; f.Date.Past(<span class="number">50</span>));</span><br><span class="line">           TUser user = faker.Generate(); </span><br><span class="line">           Console.WriteLine(<span class="string">$&quot;Id: <span class="subst">&#123;user.Id&#125;</span>&quot;</span>); </span><br><span class="line">           Console.WriteLine(<span class="string">$&quot;Name: <span class="subst">&#123;user.FirstName&#125;</span> <span class="subst">&#123;user.LastName&#125;</span>&quot;</span>);</span><br><span class="line">           Console.WriteLine(<span class="string">$&quot;Email: <span class="subst">&#123;user.Email&#125;</span>&quot;</span>);</span><br><span class="line">           Console.WriteLine(<span class="string">$&quot;Date of Birth: <span class="subst">&#123;user.Birth:d&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟多个</span></span><br><span class="line">     List&lt;TUser&gt; users = faker.Generate(<span class="number">10</span>);<span class="comment">//10count</span></span><br><span class="line">     <span class="keyword">foreach</span> (<span class="keyword">var</span> user <span class="keyword">in</span> users) &#123; Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;user.FirstName&#125;</span> <span class="subst">&#123;user.LastName&#125;</span> (<span class="subst">&#123;user.Email&#125;</span>)&quot;</span>); &#125;</span><br></pre></td></tr></table></figure><h1 id="4-复杂对象"><a href="#4-复杂对象" class="headerlink" title="4.复杂对象"></a>4.复杂对象</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TOrderItem</span> </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> ProductName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Quantity &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">decimal</span> Price &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TOrder</span> </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> TUser Customer &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> DateTime OrderDate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> List&lt;TOrderItem&gt; Items &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">decimal</span> TotalAmount &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟数据</span></span><br><span class="line">     <span class="keyword">var</span> userFaker = <span class="keyword">new</span> Faker&lt;TUser&gt;()</span><br><span class="line">         .RuleFor(u =&gt; u.Id, f =&gt; f.Random.Int(<span class="number">1</span>, <span class="number">999</span>))</span><br><span class="line">         .RuleFor(u =&gt; u.FirstName, f =&gt; f.Name.FirstName())</span><br><span class="line">         .RuleFor(u =&gt; u.LastName, f =&gt; f.Name.LastName())</span><br><span class="line">         .RuleFor(u =&gt; u.Email, (f, u) =&gt; f.Internet.Email(u.FirstName, u.LastName));</span><br><span class="line">     <span class="keyword">var</span> orderItemFaker = <span class="keyword">new</span> Faker&lt;TOrderItem&gt;()</span><br><span class="line">         .RuleFor(oi =&gt; oi.ProductName, f =&gt; f.Commerce.ProductName())</span><br><span class="line">         .RuleFor(oi =&gt; oi.Quantity, f =&gt; f.Random.Int(<span class="number">1</span>, <span class="number">888</span>))</span><br><span class="line">         .RuleFor(oi =&gt; oi.Price, f =&gt; <span class="built_in">decimal</span>.Parse(f.Commerce.Price()));</span><br><span class="line">     <span class="keyword">var</span> orderFaker = <span class="keyword">new</span> Faker&lt;TOrder&gt;()</span><br><span class="line">         .RuleFor(o =&gt; o.Id, f =&gt; f.Random.Int(<span class="number">10000</span>, <span class="number">99999</span>))</span><br><span class="line">         .RuleFor(o =&gt; o.Customer, f =&gt; userFaker.Generate())</span><br><span class="line">         .RuleFor(o =&gt; o.OrderDate, f =&gt; f.Date.Recent(<span class="number">30</span>))</span><br><span class="line">         .RuleFor(o =&gt; o.Items, f =&gt; orderItemFaker.Generate(f.Random.Int(<span class="number">1</span>, <span class="number">5</span>)))</span><br><span class="line">         .RuleFor(o =&gt; o.TotalAmount, (f, o) =&gt; o.Items.Sum(i =&gt; i.Price * i.Quantity));</span><br><span class="line">     TOrder order = orderFaker.Generate();</span><br><span class="line">     Console.WriteLine(<span class="string">$&quot;Order ID: <span class="subst">&#123;order.Id&#125;</span>&quot;</span>); </span><br><span class="line">      Console.WriteLine(<span class="string">$&quot;Customer: <span class="subst">&#123;order.Customer.FirstName&#125;</span> <span class="subst">&#123;order.Customer.LastName&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="comment">// Console.WriteLine($&quot;Order Date: &#123;order.OrderDate:d&#125;&quot;); </span></span><br><span class="line">     Console.WriteLine(<span class="string">&quot;Items:&quot;</span>); </span><br><span class="line">     <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> order.Items) </span><br><span class="line">     &#123; </span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;  <span class="subst">&#123;item.ProductName&#125;</span> - Quantity: <span class="subst">&#123;item.Quantity&#125;</span>, Price: <span class="subst">&#123;item.Price:C&#125;</span>&quot;</span>); </span><br><span class="line">     &#125;</span><br><span class="line">     Console.WriteLine(<span class="string">$&quot;Total Amount: <span class="subst">&#123;order.TotalAmount:C&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="5-seed值"><a href="#5-seed值" class="headerlink" title="5.seed值"></a>5.seed值</h1><p>确保每次生成的值相同</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> faker = <span class="keyword">new</span> Faker(<span class="string">&quot;zh_CN&quot;</span>); faker.Random = <span class="keyword">new</span> Randomizer(<span class="number">123</span>);<span class="comment">//seed 123</span></span><br><span class="line">Console.WriteLine(faker.Name.FullName());</span><br></pre></td></tr></table></figure><h1 id="6-国际化"><a href="#6-国际化" class="headerlink" title="6.国际化"></a>6.国际化</h1><p>locales</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fakerEs = <span class="keyword">new</span> Faker(<span class="string">&quot;es&quot;</span>); Console.WriteLine(<span class="string">$&quot;Spanish name: <span class="subst">&#123;fakerEs.Name.FullName()&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fakerDe = <span class="keyword">new</span> Faker(<span class="string">&quot;de&quot;</span>); Console.WriteLine(<span class="string">$&quot;German name: <span class="subst">&#123;fakerDe.Name.FullName()&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fakerFr = <span class="keyword">new</span> Faker(<span class="string">&quot;fr&quot;</span>); Console.WriteLine(<span class="string">$&quot;French name: <span class="subst">&#123;fakerFr.Name.FullName()&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fakerRu = <span class="keyword">new</span> Faker(<span class="string">&quot;zh_TW&quot;</span>); Console.WriteLine(<span class="string">$&quot;TW name: <span class="subst">&#123;fakerRu.Name.FullName()&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fakerJP = <span class="keyword">new</span> Faker(<span class="string">&quot;ja&quot;</span>); Console.WriteLine(<span class="string">$&quot;JP name: <span class="subst">&#123;fakerJP.Name.FullName()&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="7-定义规则"><a href="#7-定义规则" class="headerlink" title="7.定义规则"></a>7.定义规则</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.RuleSet(<span class="string">&quot;adult&quot;</span>, <span class="keyword">set</span> =&gt; </span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">set</span>.RuleFor(u =&gt; u.Birth, f =&gt; f.Date.Past(<span class="number">35</span>, DateTime.Now.AddYears(<span class="number">-16</span>)));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>用户的出生日期被限定为当前时间往前推35年到16年之间的随机日期，这样生成的用户就是35岁内的成年人。<br>&#x2F;&#x2F;Born: {adultUser.Birth:d}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Bogus&quot;&gt;&lt;a href=&quot;#Bogus&quot; class=&quot;headerlink&quot; title=&quot;Bogus&quot;&gt;&lt;/a&gt;Bogus&lt;/h1&gt;&lt;p&gt;快速生成模拟数据&lt;br&gt;适用于单元测试、原型设计、演示数据准备。&lt;/p&gt;
&lt;h1 id=&quot;1-NuGet-安装-Bo</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>.NET WatchDog</title>
    <link href="https://banjinmei.github.io/2024/11/09/NET-WatchDog/"/>
    <id>https://banjinmei.github.io/2024/11/09/NET-WatchDog/</id>
    <published>2024-11-08T16:01:03.000Z</published>
    <updated>2024-11-19T14:08:03.314Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WatchDog"><a href="#WatchDog" class="headerlink" title="WatchDog"></a>WatchDog</h1><p>是一个开源（MIT License）、免费的实时应用监控系统，它可以实时记录并查看应用中的消息、事件、HTTP 请求和响应，以及运行时捕获的异常。</p><h2 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h2><p><strong>实时日志记录</strong>：能够实时记录HTTP请求、响应以及运行时捕获的异常。<br><strong>代码内日志记录</strong>：支持在代码中记录消息和事件。<br><strong>日志搜索功能</strong>：支持对HTTP请求和异常日志进行搜索。<br><strong>HTTP日志筛选</strong>：可根据HTTP方法和状态码筛选HTTP日志。<br><strong>报警通知</strong>：支持通过邮件、短信等多种方式发送报警通知，确保能够及时得到反馈。<br><strong>灵活配置</strong>：可以根据应用需求进行灵活的配置，适应不同的监控需求。<br><strong>使用正则表达式黑名单</strong> ：新增了使用正则表达式进行黑名单过滤的功能。</p><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>WatchDog 利用 SignalR 实现了实时监控，并使用LiteDb作为无需配置的类似MongoDB的服务器端数据库，同时也支持使用外部数据库（如MSSQL、MySQL、PostgreSQL、MongoDB）。</p><h1 id="使用-WatchDog"><a href="#使用-WatchDog" class="headerlink" title="使用  WatchDog"></a>使用  WatchDog</h1><p>首先，在项目中安装 WatchDog 包。</p><h2 id="NuGet-包管理器中安装："><a href="#NuGet-包管理器中安装：" class="headerlink" title="NuGet 包管理器中安装："></a>NuGet 包管理器中安装：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package WatchDog</span><br></pre></td></tr></table></figure><h2 id="在-Startup-cs-中配置-WatchDog："><a href="#在-Startup-cs-中配置-WatchDog：" class="headerlink" title="在 Startup.cs 中配置 WatchDog："></a>在 Startup.cs 中配置 WatchDog：</h2><p>在 ConfigureServices 方法中添加 WatchDog：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    services.AddControllers();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加 WatchDog 服务</span></span><br><span class="line">    services.AddWatchDogServices();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，在 Configure 方法中配置它：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IWebHostEnvironment env</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (env.IsDevelopment())</span><br><span class="line">    &#123;</span><br><span class="line">        app.UseDeveloperExceptionPage();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    app.UseHttpsRedirection();</span><br><span class="line">    app.UseRouting();</span><br><span class="line">    app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">    app.UseEndpoints(endpoints =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        endpoints.MapControllers();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 配置 WatchDog 中间件，指定 API 日志查看的访问路径和安全选项</span></span><br><span class="line">    app.UseWatchDog(opt =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        opt.WatchPageUsername = <span class="string">&quot;admin&quot;</span>;  <span class="comment">// 设置用户名</span></span><br><span class="line">        opt.WatchPagePassword = <span class="string">&quot;password&quot;</span>;  <span class="comment">// 设置密码</span></span><br><span class="line">        opt.Blacklist = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; <span class="string">&quot;/health&quot;</span> &#125;;  <span class="comment">// 不记录特定路径</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制器中记录日志"><a href="#控制器中记录日志" class="headerlink" title="控制器中记录日志"></a>控制器中记录日志</h2><p>WatchDog 会自动记录所有 API 请求和响应，如果你想手动记录特定的事件或日志，可以使用 WatchLogger。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> WatchDog;</span><br><span class="line"></span><br><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line">[<span class="meta">Route(<span class="string">&quot;[controller]&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SampleController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">HttpGet(<span class="string">&quot;test&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IActionResult <span class="title">TestEndpoint</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 手动记录日志</span></span><br><span class="line">        WatchLogger.Log(<span class="string">&quot;This is a manual log message&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> Ok(<span class="string">&quot;Test endpoint&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h2><p>启动应用后，打开浏览器，访问 https:&#x2F;&#x2F;<your-host>&#x2F;watchdog (例如，<a class="link"   href="https://localhost:5001/watchdog" >https://localhost:5001/watchdog<i class="fas fa-external-link-alt"></i></a>) ，输入配置的用户名和密码即可查看日志。</p><p><strong>注意事项</strong><br>在生产环境中使用时，请确保设置合适的访问权限以保护日志。<br>使用 Blacklist 配置可以避免记录不需要的路由。<br>这样就可以通过 WatchDog 轻松记录和查看 API 请求和响应日志。</p><p><strong>接口401 401</strong><br>检查中间件顺序<br>UseWatchDog 的中间件需要在 app.UseEndpoints 或 app.MapControllers 之前添加。确保中间件的调用顺序正确，例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">app.UseRouting();</span><br><span class="line"></span><br><span class="line">app.UseAuthentication();</span><br><span class="line">app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">app.UseWatchDog(opt =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    opt.WatchPageUsername = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">    opt.WatchPagePassword = <span class="string">&quot;password&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.UseEndpoints(endpoints =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    endpoints.MapControllers();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;WatchDog&quot;&gt;&lt;a href=&quot;#WatchDog&quot; class=&quot;headerlink&quot; title=&quot;WatchDog&quot;&gt;&lt;/a&gt;WatchDog&lt;/h1&gt;&lt;p&gt;是一个开源（MIT License）、免费的实时应用监控系统，它可以实时记录并查看应用中的消</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>Node Swagger</title>
    <link href="https://banjinmei.github.io/2024/11/07/Node-Swagger/"/>
    <id>https://banjinmei.github.io/2024/11/07/Node-Swagger/</id>
    <published>2024-11-06T16:37:19.000Z</published>
    <updated>2024-11-06T16:39:20.329Z</updated>
    
    <content type="html"><![CDATA[<p> Node.js 和 Swagger 创建简单增删改查 (CRUD) API ，<br> 使用 Express 作为 Web 框架，并集成 Swagger UI 来自动生成 API 文档。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> node-swagger-crud</span><br><span class="line"><span class="built_in">cd</span> node-swagger-crud</span><br><span class="line">npm init -y</span><br><span class="line">npm install express swagger-jsdoc swagger-ui-express</span><br></pre></td></tr></table></figure><h1 id="2-设置-Express-应用"><a href="#2-设置-Express-应用" class="headerlink" title="2: 设置 Express 应用"></a>2: 设置 Express 应用</h1><p>创建一个文件 app.js，用于定义 Express 应用及基本路由。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>()); <span class="comment">// 解析 JSON 请求</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> swaggerJsDoc = <span class="built_in">require</span>(<span class="string">&quot;swagger-jsdoc&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> swaggerUi = <span class="built_in">require</span>(<span class="string">&quot;swagger-ui-express&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Swagger 配置</span></span><br><span class="line"><span class="keyword">const</span> swaggerOptions = &#123;</span><br><span class="line">  <span class="attr">swaggerDefinition</span>: &#123;</span><br><span class="line">    <span class="attr">openapi</span>: <span class="string">&quot;3.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">info</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;Simple CRUD API&quot;</span>,</span><br><span class="line">      <span class="attr">version</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">      <span class="attr">description</span>: <span class="string">&quot;A simple CRUD API with Swagger documentation&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">apis</span>: [<span class="string">&quot;./routes/*.js&quot;</span>],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> swaggerDocs = <span class="title function_">swaggerJsDoc</span>(swaggerOptions);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/api-docs&quot;</span>, swaggerUi.<span class="property">serve</span>, swaggerUi.<span class="title function_">setup</span>(swaggerDocs));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入 CRUD 路由</span></span><br><span class="line"><span class="keyword">const</span> itemsRouter = <span class="built_in">require</span>(<span class="string">&quot;./routes/items&quot;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/api/items&quot;</span>, itemsRouter);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3000</span>;</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on http://localhost:<span class="subst">$&#123;PORT&#125;</span>`</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Swagger docs available on http://localhost:<span class="subst">$&#123;PORT&#125;</span>/api-docs`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="3-创建-CRUD-路由"><a href="#3-创建-CRUD-路由" class="headerlink" title="3: 创建 CRUD 路由"></a>3: 创建 CRUD 路由</h1><p>在项目根目录下创建 routes 文件夹，并在其中创建 items.js 文件，定义 CRUD 操作接口。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// routes/items.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> items = []; <span class="comment">// 模拟数据库中的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * components:</span></span><br><span class="line"><span class="comment"> *   schemas:</span></span><br><span class="line"><span class="comment"> *     Item:</span></span><br><span class="line"><span class="comment"> *       type: object</span></span><br><span class="line"><span class="comment"> *       required:</span></span><br><span class="line"><span class="comment"> *         - name</span></span><br><span class="line"><span class="comment"> *       properties:</span></span><br><span class="line"><span class="comment"> *         id:</span></span><br><span class="line"><span class="comment"> *           type: integer</span></span><br><span class="line"><span class="comment"> *           description: The auto-generated id of the item</span></span><br><span class="line"><span class="comment"> *         name:</span></span><br><span class="line"><span class="comment"> *           type: string</span></span><br><span class="line"><span class="comment"> *           description: The name of the item</span></span><br><span class="line"><span class="comment"> *       example:</span></span><br><span class="line"><span class="comment"> *         id: 1</span></span><br><span class="line"><span class="comment"> *         name: Sample Item</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items:</span></span><br><span class="line"><span class="comment"> *   get:</span></span><br><span class="line"><span class="comment"> *     summary: 获取所有 items</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       200:</span></span><br><span class="line"><span class="comment"> *         description: The list of items</span></span><br><span class="line"><span class="comment"> *         content:</span></span><br><span class="line"><span class="comment"> *           application/json:</span></span><br><span class="line"><span class="comment"> *             schema:</span></span><br><span class="line"><span class="comment"> *               type: array</span></span><br><span class="line"><span class="comment"> *               items:</span></span><br><span class="line"><span class="comment"> *                 $ref: &#x27;#/components/schemas/Item&#x27;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">json</span>(items);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items/&#123;id&#125;:</span></span><br><span class="line"><span class="comment"> *   get:</span></span><br><span class="line"><span class="comment"> *     summary: 获取单个 item</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     parameters:</span></span><br><span class="line"><span class="comment"> *       - in: path</span></span><br><span class="line"><span class="comment"> *         name: id</span></span><br><span class="line"><span class="comment"> *         schema:</span></span><br><span class="line"><span class="comment"> *           type: integer</span></span><br><span class="line"><span class="comment"> *         required: true</span></span><br><span class="line"><span class="comment"> *         description: Item ID</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       200:</span></span><br><span class="line"><span class="comment"> *         description: Item data</span></span><br><span class="line"><span class="comment"> *         content:</span></span><br><span class="line"><span class="comment"> *           application/json:</span></span><br><span class="line"><span class="comment"> *             schema:</span></span><br><span class="line"><span class="comment"> *               $ref: &#x27;#/components/schemas/Item&#x27;</span></span><br><span class="line"><span class="comment"> *       404:</span></span><br><span class="line"><span class="comment"> *         description: Item not found</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/:id&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> item = items.<span class="title function_">find</span>(<span class="function">(<span class="params">i</span>) =&gt;</span> i.<span class="property">id</span> === <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>));</span><br><span class="line">  <span class="keyword">if</span> (!item) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&quot;Item not found&quot;</span>);</span><br><span class="line">  res.<span class="title function_">json</span>(item);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items:</span></span><br><span class="line"><span class="comment"> *   post:</span></span><br><span class="line"><span class="comment"> *     summary: 创建一个新的 item</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     requestBody:</span></span><br><span class="line"><span class="comment"> *       required: true</span></span><br><span class="line"><span class="comment"> *       content:</span></span><br><span class="line"><span class="comment"> *         application/json:</span></span><br><span class="line"><span class="comment"> *           schema:</span></span><br><span class="line"><span class="comment"> *             $ref: &#x27;#/components/schemas/Item&#x27;</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       201:</span></span><br><span class="line"><span class="comment"> *         description: Item created</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> item = &#123;</span><br><span class="line">    <span class="attr">id</span>: items.<span class="property">length</span> + <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: req.<span class="property">body</span>.<span class="property">name</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  items.<span class="title function_">push</span>(item);</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">201</span>).<span class="title function_">json</span>(item);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items/&#123;id&#125;:</span></span><br><span class="line"><span class="comment"> *   put:</span></span><br><span class="line"><span class="comment"> *     summary: 更新指定 ID 的 item</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     parameters:</span></span><br><span class="line"><span class="comment"> *       - in: path</span></span><br><span class="line"><span class="comment"> *         name: id</span></span><br><span class="line"><span class="comment"> *         schema:</span></span><br><span class="line"><span class="comment"> *           type: integer</span></span><br><span class="line"><span class="comment"> *         required: true</span></span><br><span class="line"><span class="comment"> *         description: Item ID</span></span><br><span class="line"><span class="comment"> *     requestBody:</span></span><br><span class="line"><span class="comment"> *       required: true</span></span><br><span class="line"><span class="comment"> *       content:</span></span><br><span class="line"><span class="comment"> *         application/json:</span></span><br><span class="line"><span class="comment"> *           schema:</span></span><br><span class="line"><span class="comment"> *             $ref: &#x27;#/components/schemas/Item&#x27;</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       200:</span></span><br><span class="line"><span class="comment"> *         description: Item updated</span></span><br><span class="line"><span class="comment"> *       404:</span></span><br><span class="line"><span class="comment"> *         description: Item not found</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">put</span>(<span class="string">&quot;/:id&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> item = items.<span class="title function_">find</span>(<span class="function">(<span class="params">i</span>) =&gt;</span> i.<span class="property">id</span> === <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>));</span><br><span class="line">  <span class="keyword">if</span> (!item) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&quot;Item not found&quot;</span>);</span><br><span class="line"></span><br><span class="line">  item.<span class="property">name</span> = req.<span class="property">body</span>.<span class="property">name</span>;</span><br><span class="line">  res.<span class="title function_">json</span>(item);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items/&#123;id&#125;:</span></span><br><span class="line"><span class="comment"> *   delete:</span></span><br><span class="line"><span class="comment"> *     summary: 删除指定 ID 的 item</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     parameters:</span></span><br><span class="line"><span class="comment"> *       - in: path</span></span><br><span class="line"><span class="comment"> *         name: id</span></span><br><span class="line"><span class="comment"> *         schema:</span></span><br><span class="line"><span class="comment"> *           type: integer</span></span><br><span class="line"><span class="comment"> *         required: true</span></span><br><span class="line"><span class="comment"> *         description: Item ID</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       200:</span></span><br><span class="line"><span class="comment"> *         description: Item deleted</span></span><br><span class="line"><span class="comment"> *       404:</span></span><br><span class="line"><span class="comment"> *         description: Item not found</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">delete</span>(<span class="string">&quot;/:id&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> itemIndex = items.<span class="title function_">findIndex</span>(<span class="function">(<span class="params">i</span>) =&gt;</span> i.<span class="property">id</span> === <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>));</span><br><span class="line">  <span class="keyword">if</span> (itemIndex === -<span class="number">1</span>) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&quot;Item not found&quot;</span>);</span><br><span class="line"></span><br><span class="line">  items.<span class="title function_">splice</span>(itemIndex, <span class="number">1</span>);</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;Item deleted&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><h1 id="4-启动服务器"><a href="#4-启动服务器" class="headerlink" title="4: 启动服务器"></a>4: 启动服务器</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node app.js</span><br></pre></td></tr></table></figure><p>访问 <a class="link"   href="http://localhost:3000/api-docs%EF%BC%8C" >http://localhost:3000/api-docs，<i class="fas fa-external-link-alt"></i></a><br>可以查看生成的 Swagger 文档。</p><h1 id="测试-API"><a href="#测试-API" class="headerlink" title="测试 API"></a>测试 API</h1><p>以下是 API 接口的示例请求：</p><p>获取所有 items: GET <a class="link"   href="http://localhost:3000/api/items" >http://localhost:3000/api/items<i class="fas fa-external-link-alt"></i></a><br>获取单个 item: GET <a class="link"   href="http://localhost:3000/api/items/%7Bid%7D" >http://localhost:3000/api/items/{id}<i class="fas fa-external-link-alt"></i></a><br>创建 item: POST <a class="link"   href="http://localhost:3000/api/items%EF%BC%8CJSON" >http://localhost:3000/api/items，JSON<i class="fas fa-external-link-alt"></i></a> 数据 { “name”: “New Item” }<br>更新 item: PUT <a class="link"   href="http://localhost:3000/api/items/%7Bid%7D%EF%BC%8CJSON" >http://localhost:3000/api/items/{id}，JSON<i class="fas fa-external-link-alt"></i></a> 数据 { “name”: “Updated Item” }<br>删除 item: DELETE <a class="link"   href="http://localhost:3000/api/items/%7Bid%7D" >http://localhost:3000/api/items/{id}<i class="fas fa-external-link-alt"></i></a></p><p>这样，一个简单的 CRUD 接口及其文档就构建完成了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Node.js 和 Swagger 创建简单增删改查 (CRUD) API ，&lt;br&gt; 使用 Express 作为 Web 框架，并集成 Swagger UI 来自动生成 API 文档。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="node" scheme="https://banjinmei.github.io/tags/node/"/>
    
    <category term="swagger" scheme="https://banjinmei.github.io/tags/swagger/"/>
    
  </entry>
  
</feed>
