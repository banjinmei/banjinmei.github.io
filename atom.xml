<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M Study Log</title>
  
  
  <link href="https://banjinmei.github.io/atom.xml" rel="self"/>
  
  <link href="https://banjinmei.github.io/"/>
  <updated>2024-11-24T09:59:16.558Z</updated>
  <id>https://banjinmei.github.io/</id>
  
  <author>
    <name>m</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>csharp reflection delegate</title>
    <link href="https://banjinmei.github.io/2024/11/24/csharp-reflection-delegate/"/>
    <id>https://banjinmei.github.io/2024/11/24/csharp-reflection-delegate/</id>
    <published>2024-11-24T09:36:50.000Z</published>
    <updated>2024-11-24T09:59:16.558Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reflection"><a href="#Reflection" class="headerlink" title="Reflection"></a>Reflection</h1><p>反射<br>动态加载和创建对象：<br>反射可以在运行时加载程序集，并基于类型信息创建对象实例，而无需在编译时知道具体的类型。<br>这对于实现插件系统、动态加载模块或在不同版本的库之间提供兼容性非常有用。</p><p>反射可以获取有关类型（如类、接口、结构体等）及其成员（如字段、属性、方法等）的详细信息。<br>这对于生成文档、进行代码分析或创建序列化&#x2F;反序列化机制等任务非常有用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">class Program</span><br><span class="line">  &#123;</span><br><span class="line">      static void Main(string[] args)</span><br><span class="line">      &#123;</span><br><span class="line">          // 加载包含类型的程序集</span><br><span class="line">          Assembly assembly = Assembly.LoadFrom(<span class="string">&quot;ReflectionExample.dll&quot;</span>);</span><br><span class="line"> </span><br><span class="line">          // 获取类型信息</span><br><span class="line">          Type <span class="built_in">type</span> = assembly.GetType(<span class="string">&quot;ReflectionExample.MyClass&quot;</span>);</span><br><span class="line"> </span><br><span class="line">          // 创建对象实例</span><br><span class="line">          object instance = Activator.CreateInstance(<span class="built_in">type</span>);</span><br><span class="line"> </span><br><span class="line">          // 获取方法信息</span><br><span class="line">          MethodInfo methodInfo = type.GetMethod(<span class="string">&quot;MyMethod&quot;</span>);</span><br><span class="line"> </span><br><span class="line">          // 调用方法</span><br><span class="line">          methodInfo.Invoke(instance, new object[] &#123; <span class="string">&quot;Hello, Reflection!&quot;</span> &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  public class MyClass</span><br><span class="line">  &#123;</span><br><span class="line">      public void MyMethod(string message)</span><br><span class="line">      &#123;</span><br><span class="line">          Console.WriteLine(message);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="Delegate"><a href="#Delegate" class="headerlink" title="Delegate"></a>Delegate</h1><p><strong>委托</strong><br>委托是一种类型安全的函数指针，可以用来引用一个或多个具有相同签名的方法。<br>委托（Delegate）是一种特殊的类型，它代表对具有特定参数列表和返回类型的函数的引用。委托可以用来封装静态方法或实例方法，并且可以在运行时像普通变量一样传递。这使得委托成为一种强大的工具，用于实现回调函数、事件处理以及其他需要函数作为参数传递的场景。</p><p><strong>委托的基本特性</strong><br>类型安全：委托是类型安全的，因为它们在声明时会指定一个方法签名，只有与这个签名匹配的方法才能被委托引用。<br>多播能力：大多数委托支持多播，即一个委托实例可以引用多个方法。当调用该委托时，所有引用的方法都会被依次调用。<br>灵活性：委托可以用来引用类的实例方法或静态方法，也可以引用匿名方法（使用lambda表达式）。<br>定义委托<br>委托可以通过delegate关键字定义。定义时需要指定返回类型和参数列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public delegate void MyDelegate(string message); // 返回类型为void，接受一个字符串参数</span><br></pre></td></tr></table></figure><p>使用委托<br>创建委托实例<br> 可以通过委托的构造函数或者new关键字创建委托实例，并将它绑定到具体的方法上。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyClass</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MyMethod</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">StaticMethod</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Static: &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        MyClass instance = <span class="keyword">new</span> MyClass();</span><br><span class="line">        MyDelegate del1 = <span class="keyword">new</span> MyDelegate(instance.MyMethod);</span><br><span class="line">        MyDelegate del2 = <span class="keyword">new</span> MyDelegate(StaticMethod);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 调用委托</span></span><br><span class="line">        del1(<span class="string">&quot;Hello from instance method&quot;</span>);</span><br><span class="line">        del2(<span class="string">&quot;Hello from static method&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多播委托<br>如果 定义的委托不是void返回类型，那么当委托指向多个方法时，只有最后一个方法的返回值会被返回。对于返回类型为void的委托，所有方法都会被执行。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Method1</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Method1: &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Method2</span>(<span class="params"><span class="built_in">string</span> message</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Method2: &quot;</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        MyDelegate del1 = <span class="keyword">new</span> MyDelegate(Method1);</span><br><span class="line">        MyDelegate del2 = <span class="keyword">new</span> MyDelegate(Method2);</span><br><span class="line">        MyDelegate combined = del1 + del2; <span class="comment">// 组合两个委托</span></span><br><span class="line"></span><br><span class="line">        combined(<span class="string">&quot;Hello multi-cast delegate&quot;</span>); <span class="comment">// 调用组合后的委托</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用Lambda表达式<br>从C# 3.0开始， 可以使用lambda表达式来创建委托，这使得代码更加简洁。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        MyDelegate del = message =&gt; Console.WriteLine(<span class="string">&quot;Lambda: &quot;</span> + message);</span><br><span class="line">        del(<span class="string">&quot;Hello lambda expression&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><p>事件是基于订阅-发布模式的一种机制，用于实现对象之间的解耦。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Publisher</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> EventHandler CustomEvent;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnCustomEvent</span>(<span class="params">EventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        CustomEvent?.Invoke(<span class="keyword">this</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TriggerEvent</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        OnCustomEvent(EventArgs.Empty);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Subscriber</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnCustomEvent</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Event received.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Publisher publisher = <span class="keyword">new</span> Publisher();</span><br><span class="line">        Subscriber subscriber = <span class="keyword">new</span> Subscriber();</span><br><span class="line"></span><br><span class="line">        publisher.CustomEvent += subscriber.OnCustomEvent;</span><br><span class="line">        publisher.TriggerEvent();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 .NET 中，事件是一种特殊的委托类型，用于实现发布-订阅模式。事件允许一个对象（发布者）通知其他对象（订阅者）发生了某些事情。下面是一个简单的 .NET 事件的例子，我们将创建一个简单的计数器类 Counter，当计数达到特定值时触发事件。</p><p>定义事件<br>首先，我们需要定义一个事件处理器委托，然后在 Counter 类中声明一个事件。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个事件处理程序委托</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">ReachedEventHandler</span>(<span class="params"><span class="built_in">object</span> source, EventArgs e</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计数器类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Counter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 定义一个事件</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">event</span> ReachedEventHandler Reached;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> _count;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增加计数的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Increment</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        _count++;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Count is now <span class="subst">&#123;_count&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当计数达到某个值时触发事件</span></span><br><span class="line">        <span class="keyword">if</span> (_count &gt;= <span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            OnReached();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 触发事件的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnReached</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Reached?.Invoke(<span class="keyword">this</span>, EventArgs.Empty);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用事件<br>接下来，我们将在主程序中创建 Counter 类的实例，并订阅其 Reached 事件。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> counter = <span class="keyword">new</span> Counter();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 订阅事件</span></span><br><span class="line">        counter.Reached += Counter_Reached;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 模拟增加计数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            counter.Increment();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事件处理方法</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Counter_Reached</span>(<span class="params"><span class="built_in">object</span> source, EventArgs e</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;The count has reached the limit!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个例子中，每当计数器的值达到5时，就会触发 Reached 事件。订阅了此事件的对象将接收到通知，并可以执行相应的操作。在这个例子中，我们的主程序订阅了这个事件，并定义了一个事件处理方法 Counter_Reached，该方法会在事件被触发时输出一条消息。</p><p>这是一个非常基础的示例，实际应用中事件可以携带更多的信息，例如通过自定义的事件参数类来传递数据给事件处理方法。</p><h1 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h1><p>泛型允许 在定义方法、类或接口时不指定具体的类型，而是在使用的时候再指定。这样可以提高代码的复用性和类型安全性。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Box</span>&lt;<span class="title">T</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> T item;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Box</span>(<span class="params">T item</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.item = item;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">GetItem</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line">Box&lt;<span class="built_in">string</span>&gt; stringBox = <span class="keyword">new</span> Box&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line"><span class="built_in">string</span> content = stringBox.GetItem();</span><br><span class="line">Console.WriteLine(content);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Reflection&quot;&gt;&lt;a href=&quot;#Reflection&quot; class=&quot;headerlink&quot; title=&quot;Reflection&quot;&gt;&lt;/a&gt;Reflection&lt;/h1&gt;&lt;p&gt;反射&lt;br&gt;动态加载和创建对象：&lt;br&gt;反射可以在运行时加载程序集，并基于类</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="c#" scheme="https://banjinmei.github.io/tags/c/"/>
    
    <category term=".NET" scheme="https://banjinmei.github.io/tags/NET/"/>
    
  </entry>
  
  <entry>
    <title>mysql 压测</title>
    <link href="https://banjinmei.github.io/2024/11/22/sql-%E5%8E%8B%E6%B5%8B/"/>
    <id>https://banjinmei.github.io/2024/11/22/sql-%E5%8E%8B%E6%B5%8B/</id>
    <published>2024-11-22T14:55:35.000Z</published>
    <updated>2024-11-26T16:26:12.119Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysqlslap"><a href="#mysqlslap" class="headerlink" title="mysqlslap"></a>mysqlslap</h1><p>是 MySQL 自带的一个用于模拟负载和测试数据库性能的命令行工具。它可以帮助开发者或数据库管理员了解在不同操作模式下数据库的表现情况，从而优化数据库配置或查询语句。<br>使用方法</p><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlslap [options]</span><br></pre></td></tr></table></figure><p>常用选项<br>–auto-generate-sql: 自动生成 SQL 测试数据，默认为开启状态。<br>–concurrency&#x3D;thread_count: 指定并发线程数，例如 –concurrency&#x3D;50 表示创建 50 个并发连接。<br>–iterations&#x3D;count: 指定测试迭代次数，即执行多少轮测试。<br>–create-schema&#x3D;schema_name: 创建并使用指定的 schema 进行测试。<br>–query&#x3D;query_file: 使用文件中的 SQL 语句进行测试。<br>–auto-generate-sql-add-auto-increment: 对自动生成的表添加自动增长字段。<br>–auto-generate-sql-load-type&#x3D;type: 指定测试的数据加载类型，可以是 insert, update, delete, select 或 mixed。<br>–number-of-queries&#x3D;value: 当使用 –auto-generate-sql 参数时，设置每个线程执行的查询数量。<br>–engine&#x3D;engine_name: 指定存储引擎，如 InnoDB、MyISAM 等。<br>示例</p><h1 id="基本压力测试："><a href="#基本压力测试：" class="headerlink" title="基本压力测试："></a>基本压力测试：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlslap --concurrency=10 --iterations=3 --auto-generate-sql --engine=InnoDB</span><br></pre></td></tr></table></figure><p>这条命令将启动一个使用 InnoDB 存储引擎的压力测试，使用 10 个并发连接，执行 3 轮测试，并自动生成 SQL 语句。<br>自定义查询的压力测试：<br>如果你有一个包含多个 SQL 语句的文件 test_queries.sql，可以这样使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlslap --concurrency=5 --iterations=2 --query=test_queries.sql</span><br></pre></td></tr></table></figure><p>此命令将使用 5 个并发连接，执行 2 轮测试，使用 test_queries.sql 文件中定义的 SQL 语句。</p><h1 id="混合操作的压力测试："><a href="#混合操作的压力测试：" class="headerlink" title="混合操作的压力测试："></a>混合操作的压力测试：</h1><p>若要测试插入、更新、删除和选择操作的混合负载，可以这样做：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlslap --concurrency=20 --iterations=1 --auto-generate-sql --auto-generate-sql-load-type=mixed --number-of-queries=1000</span><br></pre></td></tr></table></figure><p>这将启动一个混合操作的测试，使用 20 个并发连接，执行一次迭代，总共执行 1000 条随机生成的 SQL 语句。</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>在进行压力测试前，请确保备份重要数据，避免测试过程中对生产环境造成影响。<br>测试结果会受到服务器硬件性能、MySQL 配置参数等多种因素的影响，因此测试环境应尽量接近生产环境。<br>分析测试结果时，注意查看错误信息，以便及时发现潜在的问题。</p><p>插入数据<br>执行如下命令实现数据插入，为提高效率这里开启 10 个客户端线程同时插入，总共执行 1 百万次操作：</p><p>mysqlslap -uroot -p 123123.zxcvb –concurrency&#x3D;10 –number-of-queries&#x3D;1000000 –create-schema&#x3D;IMDB–query&#x3D;”INSERT INTO people(name,age) VALUES (uuid(), RAND() * 100)”</p><h1 id="对user表进行-100000-插入测试"><a href="#对user表进行-100000-插入测试" class="headerlink" title="对user表进行 100000 插入测试"></a>对user表进行 100000 插入测试</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_username</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(random.choice(string.ascii_lowercase) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_email</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;generate_username()&#125;</span>@example.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;insert_data.sql&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000</span>):</span><br><span class="line">        username = generate_username()</span><br><span class="line">        email = generate_email()</span><br><span class="line">        f.write(<span class="string">f&quot;INSERT INTO User (username, email) VALUES (&#x27;<span class="subst">&#123;username&#125;</span>&#x27;, &#x27;<span class="subst">&#123;email&#125;</span>&#x27;);\n&quot;</span>)</span><br></pre></td></tr></table></figure><p>python 生成insert_data sql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlslap --concurrency=50 --iterations=1 --create-schema=test_db --query=insert_data.sql</span><br></pre></td></tr></table></figure><p>–concurrency&#x3D;50：使用 50 个并发连接。<br>–iterations&#x3D;1：执行一次迭代。<br>–create-schema&#x3D;test_db：创建并使用 test_db 数据库。<br>–query&#x3D;insert_data.sql：使用 insert_data.sql 文件中的 SQL 语句。</p><!-- https://blog.csdn.net/naisiing/article/details/135677935mysql 压测 -->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;mysqlslap&quot;&gt;&lt;a href=&quot;#mysqlslap&quot; class=&quot;headerlink&quot; title=&quot;mysqlslap&quot;&gt;&lt;/a&gt;mysqlslap&lt;/h1&gt;&lt;p&gt;是 MySQL 自带的一个用于模拟负载和测试数据库性能的命令行工具。它可以帮助开发者</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="mysql" scheme="https://banjinmei.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter 压测工具</title>
    <link href="https://banjinmei.github.io/2024/11/22/Jmeter-%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7/"/>
    <id>https://banjinmei.github.io/2024/11/22/Jmeter-%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7/</id>
    <published>2024-11-22T14:53:27.000Z</published>
    <updated>2024-11-22T14:54:54.773Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JMeter"><a href="#JMeter" class="headerlink" title="JMeter"></a>JMeter</h1><p>下载地址： Apache JMeter<br><a class="link"   href="https://jmeter.apache.org/download_jmeter.cgi" >https://jmeter.apache.org/download_jmeter.cgi<i class="fas fa-external-link-alt"></i></a></p><p>选择二进制包下载后解压，双击&#x2F;bin&#x2F;jmeter.bat<br>（依赖java环境）</p><h1 id="语言设置"><a href="#语言设置" class="headerlink" title="语言设置"></a>语言设置</h1><p>可以在Options&#x2F;Choose Language将语言设置为中文</p><h1 id="创建线程组"><a href="#创建线程组" class="headerlink" title="创建线程组"></a>创建线程组</h1><p>右键Test Plan<br>Test Plan-&gt;添加-&gt;线程（用户）-&gt;线程组</p><p>名称：线程组名称<br>注释（可选设置）<br>线程数：可以用作是用户数，即多少个同时并发向API发送请求<br>Ramp-Up时间：在设定的时间内启动上面设置的线程数<br>循环次数：即一个线程发送设定的请求，可以勾选永远，这样线程就会一直发送API请求</p><h1 id="添加HTTP请求"><a href="#添加HTTP请求" class="headerlink" title="添加HTTP请求"></a>添加HTTP请求</h1><p>右键线程组<br>线程组-&gt;添加-&gt;取样器-&gt;HTTP请求</p><h1 id="设置HTTP请求"><a href="#设置HTTP请求" class="headerlink" title="设置HTTP请求"></a>设置HTTP请求</h1><p>名称：接口名称<br>注释（可选）<br>协议：http&#x2F;https<br>服务器名称或IP：服务器域名或IP地址<br>端口号：web程序监听的端口号<br>请求方法：GET&#x2F;POST&#x2F;…<br>路径：API接口路径</p><h1 id="添加HTTP请求头"><a href="#添加HTTP请求头" class="headerlink" title="添加HTTP请求头"></a>添加HTTP请求头</h1><p>右键线程组<br>线程组-&gt;添加-&gt;配置元件-&gt;HTTP信息头</p><p>设置接口的HTTP请求头</p><h1 id="添加监听器"><a href="#添加监听器" class="headerlink" title="添加监听器"></a>添加监听器</h1><p>查看结果树：可以查看请求响应是否成功，也可以看到响应内存</p><p>线程组-&gt;添加-&gt;监听器-&gt;查看结构树</p><h1 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h1><h1 id="线程组-添加-取样器-TCP取样器"><a href="#线程组-添加-取样器-TCP取样器" class="headerlink" title="线程组-&gt;添加-&gt;取样器-&gt; TCP取样器"></a>线程组-&gt;添加-&gt;取样器-&gt; TCP取样器</h1><p>SERVER IP  端口  发送文本</p><h1 id="java环境"><a href="#java环境" class="headerlink" title="java环境"></a>java环境</h1><p>在Windows上安装Java环境通常涉及到两个主要步骤：安装Java运行环境（JRE）或开发工具包（JDK），以及设置环境变量。以下是详细的步骤说明：</p><h2 id="1-下载JDK"><a href="#1-下载JDK" class="headerlink" title="1. 下载JDK"></a>1. 下载JDK</h2><p>首先，需要从Oracle官网或其他可信的来源下载最新的JDK版本。访问Oracle JDK下载页面，<br><a class="link"   href="https://www.oracle.com/java/technologies/downloads/#java17" >https://www.oracle.com/java/technologies/downloads/#java17<i class="fas fa-external-link-alt"></i></a></p><p>选择适合的操作系统的版本进行下载。注意，页面上的链接可能会随着新版本的发布而变化。</p><h2 id="2-安装JDK"><a href="#2-安装JDK" class="headerlink" title="2. 安装JDK"></a>2. 安装JDK</h2><p>双击下载好的安装文件开始安装过程。<br>在安装过程中，可以选择自定义安装路径。建议选择一个容易记住的位置，比如 C:\Program Files\Java\jdk-xx（其中 xx 是安装的JDK版本号）。<br>按照提示完成安装。</p><h2 id="3-设置环境变量"><a href="#3-设置环境变量" class="headerlink" title="3. 设置环境变量"></a>3. 设置环境变量</h2><p>为了能够在命令行中任意位置使用 java 和 javac 命令，需要配置系统环境变量。</p><p>打开系统属性：<br>右键点击“此电脑”或“我的电脑”，选择“属性”。<br>点击“高级系统设置”。<br>在“高级”选项卡下，点击“环境变量”。<br>设置JAVA_HOME：<br>在“系统变量”部分，点击“新建”，然后添加变量名为 JAVA_HOME。<br>将变量值设为JDK的安装目录，例如 C:\Program Files\Java\jdk-xx。<br>修改Path变量：<br>找到并选中“系统变量”中的 Path 变量，然后点击“编辑”。<br>添加一个新的条目，其值为 %JAVA_HOME%\bin。这使得系统可以在任何地方识别 java 和 javac 命令。</p><h2 id="4-验证安装"><a href="#4-验证安装" class="headerlink" title="4. 验证安装"></a>4. 验证安装</h2><p>打开命令提示符（CMD），输入以下命令来验证安装是否成功：</p><p>输入 java -version 查看Java版本信息。<br>输入 javac -version 查看Java编译器版本信息。<br>如果能够正确显示版本信息，则表示Java环境已经成功安装并且配置正确。</p><!-- https://blog.csdn.net/weixin_73622063/article/details/143834672 -->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JMeter&quot;&gt;&lt;a href=&quot;#JMeter&quot; class=&quot;headerlink&quot; title=&quot;JMeter&quot;&gt;&lt;/a&gt;JMeter&lt;/h1&gt;&lt;p&gt;下载地址： Apache JMeter&lt;br&gt;&lt;a class=&quot;link&quot;   href=&quot;https:/</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="jmeter" scheme="https://banjinmei.github.io/tags/jmeter/"/>
    
    <category term="jvav" scheme="https://banjinmei.github.io/tags/jvav/"/>
    
  </entry>
  
  <entry>
    <title>redis sentinel cluster</title>
    <link href="https://banjinmei.github.io/2024/11/22/redis-sentinel-cluster/"/>
    <id>https://banjinmei.github.io/2024/11/22/redis-sentinel-cluster/</id>
    <published>2024-11-22T14:18:29.000Z</published>
    <updated>2024-11-22T14:37:47.028Z</updated>
    
    <content type="html"><![CDATA[<p> Debian 服务器上部署分布式 Redis 可以实现高可用性或负载均衡，具体可以选择以下两种方案之一：</p><p>主从复制 (Master-Slave Replication)<br>主从复制用于数据冗余备份和读写分离，但并不提供自动故障切换功能。</p><h1 id="Redis-Sentinel-哨兵模式"><a href="#Redis-Sentinel-哨兵模式" class="headerlink" title="Redis Sentinel (哨兵模式)"></a>Redis Sentinel (哨兵模式)</h1><p>Redis Sentinel 在主从复制的基础上增加了自动故障切换功能，用于实现高可用性。</p><h1 id="Redis-Cluster-集群模式"><a href="#Redis-Cluster-集群模式" class="headerlink" title="Redis Cluster (集群模式)"></a>Redis Cluster (集群模式)</h1><p>Redis Cluster 是一种分布式部署方式，支持数据分片和高可用性，适用于需要扩展性的场景。</p><h1 id="Redis-Sentinel-部署架构"><a href="#Redis-Sentinel-部署架构" class="headerlink" title="Redis Sentinel 部署架构"></a>Redis Sentinel 部署架构</h1><p>两台服务器：<br>主 Redis 服务器（假设 IP：192.168.1.101）<br>从 Redis 服务器（假设 IP：192.168.1.102）<br>Sentinel 哨兵进程：<br>每台服务器运行一个 Sentinel 进程，用于监控和故障切换。</p><h2 id="步骤-1：安装-Redis"><a href="#步骤-1：安装-Redis" class="headerlink" title="步骤 1：安装 Redis"></a>步骤 1：安装 Redis</h2><p>在两台服务器上分别安装 Redis：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install redis-server</span><br></pre></td></tr></table></figure><p>验证 Redis 版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --version</span><br></pre></td></tr></table></figure><h2 id="步骤-2：配置-Redis-主从复制"><a href="#步骤-2：配置-Redis-主从复制" class="headerlink" title="步骤 2：配置 Redis 主从复制"></a>步骤 2：配置 Redis 主从复制</h2><p>在主服务器 (192.168.1.101) 上<br>编辑 Redis 配置文件 &#x2F;etc&#x2F;redis&#x2F;redis.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0           <span class="comment"># 允许外部访问</span></span><br><span class="line">protected-mode no      <span class="comment"># 关闭保护模式（测试环境使用）</span></span><br><span class="line">appendonly <span class="built_in">yes</span>         <span class="comment"># 开启持久化</span></span><br></pre></td></tr></table></figure><p>启动 Redis 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis</span><br></pre></td></tr></table></figure><p>在从服务器 (192.168.1.102) 上<br>编辑 Redis 配置文件 &#x2F;etc&#x2F;redis&#x2F;redis.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line">protected-mode no</span><br><span class="line">appendonly <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置为主服务器的从节点</span></span><br><span class="line">replicaof 192.168.1.101 6379</span><br></pre></td></tr></table></figure><p>启动 Redis 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis</span><br></pre></td></tr></table></figure><p>验证主从复制<br>在主服务器上设置一个测试键：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line"><span class="built_in">set</span> mykey <span class="string">&quot;hello_redis&quot;</span></span><br></pre></td></tr></table></figure><p>在从服务器上读取：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line">get mykey</span><br><span class="line"><span class="comment"># 返回 &quot;hello_redis&quot;</span></span><br></pre></td></tr></table></figure><h2 id="步骤-3：配置-Redis-Sentinel"><a href="#步骤-3：配置-Redis-Sentinel" class="headerlink" title="步骤 3：配置 Redis Sentinel"></a>步骤 3：配置 Redis Sentinel</h2><p>在两台服务器上配置 Redis Sentinel。Redis 自带 Sentinel 二进制文件，不需要额外安装。</p><p>配置主服务器的 Sentinel<br>编辑 &#x2F;etc&#x2F;redis&#x2F;sentinel.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0                        <span class="comment"># 允许外部访问</span></span><br><span class="line">protected-mode no                   <span class="comment"># 关闭保护模式（测试环境使用）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控主节点，设置 quorum 为 2</span></span><br><span class="line">sentinel monitor mymaster 192.168.1.101 6379 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果主节点在 5 秒内无响应，则认为其失效</span></span><br><span class="line">sentinel down-after-milliseconds mymaster 5000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置故障切换的超时时间</span></span><br><span class="line">sentinel failover-timeout mymaster 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果主节点有密码，需添加以下配置</span></span><br><span class="line"><span class="comment"># sentinel auth-pass mymaster &lt;password&gt;</span></span><br></pre></td></tr></table></figure><p>配置从服务器的 Sentinel<br>在从服务器上，配置 &#x2F;etc&#x2F;redis&#x2F;sentinel.conf，内容与主服务器一致。</p><h2 id="步骤-4：启动-Redis-Sentinel"><a href="#步骤-4：启动-Redis-Sentinel" class="headerlink" title="步骤 4：启动 Redis Sentinel"></a>步骤 4：启动 Redis Sentinel</h2><p>在两台服务器上启动 Sentinel：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server /etc/redis/sentinel.conf --sentinel</span><br></pre></td></tr></table></figure><p>检查是否启动成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep redis</span><br></pre></td></tr></table></figure><p>应该能看到 Redis Sentinel 进程运行。</p><h2 id="步骤-5：测试高可用性"><a href="#步骤-5：测试高可用性" class="headerlink" title="步骤 5：测试高可用性"></a>步骤 5：测试高可用性</h2><p>模拟主节点故障<br>在主服务器上停止 Redis 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop redis</span><br></pre></td></tr></table></figure><p>Sentinel 检测到主节点不可用后，会自动将从节点（192.168.1.102）提升为主节点。</p><p>验证故障切换<br>在 Sentinel 中查看新的主节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">SENTINEL get-master-addr-by-name mymaster</span><br></pre></td></tr></table></figure><p>应返回从节点的 IP 和端口（192.168.1.102:6379）。</p><p>恢复主节点<br>启动主节点服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start redis</span><br></pre></td></tr></table></figure><p>主节点会自动成为新的从节点，重新加入集群。</p><p>附加：常用命令<br>查看 Sentinel 监控的所有节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">SENTINEL masters</span><br></pre></td></tr></table></figure><p>查看特定主节点的所有从节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">SENTINEL slaves mymaster</span><br></pre></td></tr></table></figure><p>手动触发故障切换：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">SENTINEL failover mymaster</span><br></pre></td></tr></table></figure><p>部署总结<br>Redis Sentinel 实现了主从复制的监控和自动故障切换，其核心是：</p><p>主节点负责写操作，从节点提供读操作。<br>Sentinel 检测主节点是否不可用，并自动将从节点提升为主节点。<br>整个系统实现了高可用性，无需人工干预。</p><p><strong>三台服务器</strong></p><p>假设有三台服务器：</p><p>主节点（Master）：192.168.1.101<br>从节点1（Replica1）：192.168.1.102<br>从节点2（Replica2）：192.168.1.103<br>每台服务器同时运行 Redis 和 Sentinel。</p><h2 id="1-安装-Redis"><a href="#1-安装-Redis" class="headerlink" title="1. 安装 Redis"></a>1. 安装 Redis</h2><p>在所有服务器上安装 Redis：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install redis-server</span><br></pre></td></tr></table></figure><p>验证 Redis 安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --version</span><br></pre></td></tr></table></figure><h2 id="2-配置主从复制"><a href="#2-配置主从复制" class="headerlink" title="2. 配置主从复制"></a>2. 配置主从复制</h2><p>主节点配置（192.168.1.101）<br>编辑 &#x2F;etc&#x2F;redis&#x2F;redis.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line">protected-mode no</span><br><span class="line">appendonly <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><p>启动 Redis 主节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis</span><br></pre></td></tr></table></figure><p>从节点配置（192.168.1.102 和 192.168.1.103）<br>编辑 &#x2F;etc&#x2F;redis&#x2F;redis.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line">protected-mode no</span><br><span class="line">appendonly <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置为从节点，指向主节点 IP 和端口</span></span><br><span class="line">replicaof 192.168.1.101 6379</span><br></pre></td></tr></table></figure><p>启动 Redis 从节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>验证主从同步<br>在主节点上插入数据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line">SET test_key <span class="string">&quot;hello_redis&quot;</span></span><br></pre></td></tr></table></figure><p>在从节点验证：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br><span class="line">GET test_key</span><br><span class="line"><span class="comment"># 应返回 &quot;hello_redis&quot;</span></span><br></pre></td></tr></table></figure><h2 id="3-配置-Sentinel"><a href="#3-配置-Sentinel" class="headerlink" title="3. 配置 Sentinel"></a>3. 配置 Sentinel</h2><p>配置文件路径<br>默认 Sentinel 配置文件路径为 &#x2F;etc&#x2F;redis&#x2F;sentinel.conf。</p><p>编辑 Sentinel 配置文件<br>在所有服务器（192.168.1.101、192.168.1.102、192.168.1.103）上，编辑 &#x2F;etc&#x2F;redis&#x2F;sentinel.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bind</span> 0.0.0.0</span><br><span class="line">protected-mode no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义监控的主节点名称和地址</span></span><br><span class="line">sentinel monitor mymaster 192.168.1.101 6379 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置检测主节点失败的时间（毫秒）</span></span><br><span class="line">sentinel down-after-milliseconds mymaster 5000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置故障转移完成的超时时间（毫秒）</span></span><br><span class="line">sentinel failover-timeout mymaster 10000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果启用了密码认证，请设置主节点密码</span></span><br><span class="line"><span class="comment"># sentinel auth-pass mymaster &lt;的密码&gt;</span></span><br></pre></td></tr></table></figure><p>启动 Sentinel<br>在每台服务器上分别启动 Sentinel：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server /etc/redis/sentinel.conf --sentinel</span><br></pre></td></tr></table></figure><h2 id="4-验证-Sentinel"><a href="#4-验证-Sentinel" class="headerlink" title="4. 验证 Sentinel"></a>4. 验证 Sentinel</h2><p>查看 Sentinel 状态<br>在任意 Sentinel 节点执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">SENTINEL masters</span><br></pre></td></tr></table></figure><p>输出应显示主节点的信息，例如：</p><p>name: mymaster, status: ok, slaves: 2</p><p>模拟故障转移<br>手动停止主节点服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop redis</span><br></pre></td></tr></table></figure><p>Sentinel 将检测主节点不可用，并自动提升从节点为主节点。<br>验证新的主节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">SENTINEL get-master-addr-by-name mymaster</span><br></pre></td></tr></table></figure><p>新主节点的 IP 和端口将被返回。</p><h3 id="5-高可用性测试"><a href="#5-高可用性测试" class="headerlink" title="5. 高可用性测试"></a>5. 高可用性测试</h3><p>在新主节点上插入数据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h &lt;新主节点IP&gt;</span><br><span class="line">SET test_key2 <span class="string">&quot;new_data&quot;</span></span><br></pre></td></tr></table></figure><p>验证数据是否同步到从节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h &lt;从节点IP&gt;</span><br><span class="line">GET test_key2</span><br></pre></td></tr></table></figure><p>总结<br>通过 Redis Sentinel，可以实现：</p><p>自动故障检测：当主节点不可用时，Sentinel 会自动检测并进行切换。<br>自动主从切换：从节点自动提升为主节点，保障服务持续可用。<br>无需人工干预：服务的高可用性大大提高。<br>如需进一步调整配置（如增加节点或优化参数），可根据具体业务需求进行调整。</p><h1 id="Redis-Cluster"><a href="#Redis-Cluster" class="headerlink" title="Redis Cluster"></a>Redis Cluster</h1><h2 id="步骤一：安装Redis"><a href="#步骤一：安装Redis" class="headerlink" title="步骤一：安装Redis"></a>步骤一：安装Redis</h2><p>在每台服务器上安装Redis。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install redis-server</span><br></pre></td></tr></table></figure><h2 id="步骤二：配置Redis"><a href="#步骤二：配置Redis" class="headerlink" title="步骤二：配置Redis"></a>步骤二：配置Redis</h2><p>备份原始配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/redis/redis.conf /etc/redis/redis.conf.bak</span><br></pre></td></tr></table></figure><p><strong>编辑Redis配置文件：</strong><br>编辑 &#x2F;etc&#x2F;redis&#x2F;redis.conf 文件，进行以下修改：<br>启用集群模式：</p><p>cluster-enabled yes<br><strong>指定集群配置文件：</strong></p><p>cluster-config-file nodes-6379.conf<br><strong>设置节点超时时间：</strong><br>cluster-node-timeout 5000<br><strong>启用AOF持久化（可选，但推荐）：</strong><br>appendonly yes<br><strong>绑定服务器的IP地址：</strong><br>将 bind 127.0.0.1 修改为服务器的实际IP地址，例如：<br>bind 192.168.1.1<br><strong>设置监听端口：</strong><br>默认端口是6379，确保每个节点的端口不同。例如，第一台服务器保持6379，第二台服务器可以设置为6380，第三台服务器可以设置为6381。</p><h2 id="步骤三：启动Redis服务"><a href="#步骤三：启动Redis服务" class="headerlink" title="步骤三：启动Redis服务"></a>步骤三：启动Redis服务</h2><p>在每台服务器上启动Redis服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart redis-server</span><br></pre></td></tr></table></figure><h2 id="步骤四：创建Redis集群"><a href="#步骤四：创建Redis集群" class="headerlink" title="步骤四：创建Redis集群"></a>步骤四：创建Redis集群</h2><p>下载Redis工具：<br>如果你还没有安装Redis的命令行工具，可以从官方GitHub仓库下载最新的Redis版本，解压后找到 redis-trib.rb 脚本。<br>创建集群：<br>使用 redis-cli 工具来创建集群。假设你的三台服务器的IP地址分别为 192.168.1.1、192.168.1.2 和 192.168.1.3，且Redis实例分别监听6379、6380和6381端口，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --cluster create 192.168.1.1:6379 192.168.1.2:6380 192.168.1.3:6381 --cluster-replicas 1</span><br></pre></td></tr></table></figure><p>这里 –cluster-replicas 1 表示每个主节点有一个副本。</p><h2 id="步骤五：验证集群"><a href="#步骤五：验证集群" class="headerlink" title="步骤五：验证集群"></a>步骤五：验证集群</h2><p>连接到任意一个节点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 192.168.1.1 -p 6379</span><br></pre></td></tr></table></figure><p>执行基本命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> testkey <span class="string">&quot;Hello Redis Cluster&quot;</span></span><br><span class="line">get testkey</span><br></pre></td></tr></table></figure><p>检查集群状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cluster nodes</span><br></pre></td></tr></table></figure><h2 id="步骤六：监控和维护"><a href="#步骤六：监控和维护" class="headerlink" title="步骤六：监控和维护"></a>步骤六：监控和维护</h2><p>定期检查日志：<br>查看 &#x2F;var&#x2F;log&#x2F;redis&#x2F;redis-server.log 文件中的日志信息，确保没有错误。<br>监控性能：<br>使用 redis-cli 的 info 命令来监控集群的性能和状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 192.168.1.1 -p 6379 info</span><br></pre></td></tr></table></figure><h1 id="Debian-root登录"><a href="#Debian-root登录" class="headerlink" title="Debian root登录"></a>Debian root登录</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;PermitRootLogin yes&#x27;</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line"><span class="comment"># 重启ssh服务，使配置生效</span></span><br><span class="line">sudo systemctl restart ssh</span><br></pre></td></tr></table></figure><h1 id="debian-更换源"><a href="#debian-更换源" class="headerlink" title="debian 更换源"></a>debian 更换源</h1><h2 id="1-备份文件"><a href="#1-备份文件" class="headerlink" title="1.  备份文件"></a>1.  备份文件</h2><p>cp &#x2F;etc&#x2F;apt&#x2F;sources.list  &#x2F;etc&#x2F;apt&#x2F;sources.list.bak</p><h2 id="2-更改-sources-list文件内容为："><a href="#2-更改-sources-list文件内容为：" class="headerlink" title="2. 更改 sources.list文件内容为："></a>2. 更改 sources.list文件内容为：</h2><p>(官方源)<br>deb <a class="link"   href="http://deb.debian.org/debian" >http://deb.debian.org/debian<i class="fas fa-external-link-alt"></i></a> bullseye main contrib non-free<br>deb-src <a class="link"   href="http://deb.debian.org/debian" >http://deb.debian.org/debian<i class="fas fa-external-link-alt"></i></a> bullseye main contrib non-free</p><h2 id="3-更新"><a href="#3-更新" class="headerlink" title="3. 更新"></a>3. 更新</h2><p>apt-get -y update</p><!--https://www.runoob.com/redis/redis-commands.html在Debian系统上安装Redis并设置密码可以按照以下步骤进行：安装Redis更新软件包列表：Bashsudo apt update安装Redis服务器：Bashsudo apt install redis-server设置Redis密码编辑Redis配置文件：使用文本编辑器（如nano或vim）打开Redis配置文件。通常这个文件位于/etc/redis/redis.conf。Bashsudo nano /etc/redis/redis.conf找到requirepass指令：在配置文件中搜索requirepass关键字。默认情况下，这一行可能被注释掉了（前面有#号）。设置密码：删除#号以取消注释，并设置的密码。例如：Confrequirepass yourStrongPasswordHere请确保选择一个强密码来保护的Redis实例。保存并退出编辑器：如果使用的是nano，可以按Ctrl+X，然后按Y确认保存，最后按Enter退出。如果使用的是vim，可以按Esc键，然后输入:wq保存并退出。重启Redis服务为了使更改生效，需要重启Redis服务：Bashsudo systemctl restart redis.service验证设置可以通过Redis客户端连接到服务器来验证密码是否设置成功：Bashredis-cli在Redis命令行界面中，尝试执行一个命令，比如GET foo，会看到一个错误消息，提示需要认证。然后使用AUTH命令进行认证：BashAUTH yourStrongPasswordHere如果密码正确，应该会收到一个表示成功的回复，之后就可以正常执行其他命令了。-->]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Debian 服务器上部署分布式 Redis 可以实现高可用性或负载均衡，具体可以选择以下两种方案之一：&lt;/p&gt;
&lt;p&gt;主从复制 (Master-Slave Replication)&lt;br&gt;主从复制用于数据冗余备份和读写分离，但并不提供自动故障切换功能。&lt;/p&gt;
&lt;h1 </summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="redis" scheme="https://banjinmei.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>nginx keepalived</title>
    <link href="https://banjinmei.github.io/2024/11/21/nginx-keepalived/"/>
    <id>https://banjinmei.github.io/2024/11/21/nginx-keepalived/</id>
    <published>2024-11-21T15:37:23.000Z</published>
    <updated>2024-11-21T15:54:57.040Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Keepalived"><a href="#Keepalived" class="headerlink" title="Keepalived"></a>Keepalived</h1><p>是一种用于实现高可用性的工具，它通过VRRP（虚拟路由冗余协议）来管理虚拟IP地址，从而确保在主服务器故障时，备用服务器能够接管服务。</p><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><p>假设有两台Debian服务器：</p><p>Server 1 (Master): IP地址 192.168.1.100<br>Server 2 (Backup): IP地址 192.168.1.101<br>虚拟IP地址: 192.168.1.102</p><h1 id="步骤一：安装Nginx"><a href="#步骤一：安装Nginx" class="headerlink" title="步骤一：安装Nginx"></a>步骤一：安装Nginx</h1><p>在两台服务器上安装Nginx。</p><p>Server 1 (Master)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><p>Server 2 (Backup)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><h1 id="步骤二：安装Keepalived"><a href="#步骤二：安装Keepalived" class="headerlink" title="步骤二：安装Keepalived"></a>步骤二：安装Keepalived</h1><p>在两台服务器上安装Keepalived。</p><p>Server 1 (Master)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install keepalived</span><br><span class="line">Server 2 (Backup)</span><br><span class="line">```Bash</span><br><span class="line">sudo apt install keepalived</span><br></pre></td></tr></table></figure><h1 id="步骤三：配置Keepalived"><a href="#步骤三：配置Keepalived" class="headerlink" title="步骤三：配置Keepalived"></a>步骤三：配置Keepalived</h1><p>编辑Keepalived的配置文件 &#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf。</p><p>Server 1 (Master)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/keepalived/keepalived.conf</span><br></pre></td></tr></table></figure><p>添加以下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.1.102</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Server 2 (Backup)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/keepalived/keepalived.conf</span><br></pre></td></tr></table></figure><p>添加以下配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 90</span><br><span class="line">    advert_int 1</span><br><span class="line"></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.1.102</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="步骤四：启动Keepalived"><a href="#步骤四：启动Keepalived" class="headerlink" title="步骤四：启动Keepalived"></a>步骤四：启动Keepalived</h1><p>启动并启用Keepalived服务。</p><p>Server 1 (Master)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start keepalived</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> keepalived</span><br></pre></td></tr></table></figure><p>Server 2 (Backup)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start keepalived</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> keepalived</span><br></pre></td></tr></table></figure><h2 id="步骤五：配置Nginx"><a href="#步骤五：配置Nginx" class="headerlink" title="步骤五：配置Nginx"></a>步骤五：配置Nginx</h2><p>确保两台服务器上的Nginx配置相同。编辑Nginx配置文件 &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;default。</p><p>Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name your_domain_or_ip;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://backend_servers;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>步骤六：测试配置<br>测试Nginx配置文件是否正确无误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>重新加载Nginx以使更改生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><p>步骤七：验证高可用性<br>访问虚拟IP地址:<br>使用浏览器或其他工具访问虚拟IP地址 192.168.1.102，确保Nginx服务正常工作。<br>模拟故障:<br>关闭主服务器上的Nginx服务或Keepalived服务，观察备用服务器是否接管虚拟IP地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop nginx</span><br><span class="line">sudo systemctl stop keepalived</span><br></pre></td></tr></table></figure><p>检查状态:<br>在备用服务器上检查虚拟IP地址是否已经接管：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr show eth0</span><br></pre></td></tr></table></figure><p>步骤八：日志和监控<br>查看Keepalived的日志以确保没有错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">tail</span> -f /var/log/syslog</span><br></pre></td></tr></table></figure><p>通过以上步骤，可以在两台Debian服务器上成功部署Keepalived实现高可用Nginx。<br>这样，即使主服务器发生故障，备用服务器也会自动接管服务，确保系统的高可用性和稳定性。</p><h1 id="不同虚拟IP地址的高可用性："><a href="#不同虚拟IP地址的高可用性：" class="headerlink" title="不同虚拟IP地址的高可用性："></a>不同虚拟IP地址的高可用性：</h1><p>跨云服务商</p><h2 id="1-使用DNS轮询"><a href="#1-使用DNS轮询" class="headerlink" title="1. 使用DNS轮询"></a>1. 使用DNS轮询</h2><p>通过DNS轮询（Round Robin DNS）来实现负载均衡和高可用性。</p><p>步骤：<br>如 example.com。<br>配置DNS记录:<br>在DNS管理面板中，为的域名配置两个A记录，分别指向两个云服务商的IP地址。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">example.com.  A  192.168.1.100  (阿里云IP)</span><br><span class="line">example.com.  A  192.168.1.101  (腾讯云IP)</span><br></pre></td></tr></table></figure><p>客户端访问:<br>当客户端访问 example.com 时，DNS服务器会轮流返回两个IP地址之一，实现负载均衡。<br>健康检查:<br>可以使用DNS提供商的健康检查功能，自动将流量切换到健康的服务器。</p><h2 id="2-使用全局负载均衡器"><a href="#2-使用全局负载均衡器" class="headerlink" title="2. 使用全局负载均衡器"></a>2. 使用全局负载均衡器</h2><p>一些云服务商提供了全局负载均衡器（Global Load Balancer），可以跨区域和跨服务商实现高可用性。</p><h1 id="nginx-配置文件的同步"><a href="#nginx-配置文件的同步" class="headerlink" title="nginx 配置文件的同步"></a>nginx 配置文件的同步</h1><p>使用 <strong>inotify</strong> 和 <strong>rsync</strong> 实现两个 Debian 服务器之间的数据实时同步是一个常见且有效的方法。<br>inotify 可以监控文件系统的变更事件，而 rsync 则负责实际的数据同步。以下是详细的步骤：</p><h1 id="环境准备-1"><a href="#环境准备-1" class="headerlink" title="环境准备"></a>环境准备</h1><p>Server 1 (Master): IP地址 192.168.1.100<br>Server 2 (Backup): IP地址 192.168.1.101</p><h1 id="步骤一：安装必要的软件"><a href="#步骤一：安装必要的软件" class="headerlink" title="步骤一：安装必要的软件"></a>步骤一：安装必要的软件</h1><p>在两台服务器上安装 rsync 和 inotify-tools。</p><p>Server 1 (Master)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install rsync inotify-tools</span><br></pre></td></tr></table></figure><p>Server 2 (Backup)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install rsync</span><br></pre></td></tr></table></figure><h1 id="步骤二：配置-SSH-密钥免密登录"><a href="#步骤二：配置-SSH-密钥免密登录" class="headerlink" title="步骤二：配置 SSH 密钥免密登录"></a>步骤二：配置 SSH 密钥免密登录</h1><p>为了简化 rsync 的操作，建议配置从主服务器到备份服务器的 SSH 密钥免密登录。</p><p>在主服务器上生成 SSH 密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096</span><br></pre></td></tr></table></figure><p>按提示操作，默认保存路径即可。</p><p>将公钥复制到备份服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id user@192.168.1.101</span><br></pre></td></tr></table></figure><h1 id="步骤三：编写同步脚本"><a href="#步骤三：编写同步脚本" class="headerlink" title="步骤三：编写同步脚本"></a>步骤三：编写同步脚本</h1><p>在主服务器上编写一个脚本，使用 inotifywait 监控文件系统的变更事件，并调用 rsync 进行同步。</p><p>创建同步脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /usr/local/bin/inotify_sync.sh</span><br></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 监控的目录</span></span><br><span class="line">WATCH_DIR=<span class="string">&quot;/path/to/sync&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份服务器的IP地址和目标目录</span></span><br><span class="line">REMOTE_USER=<span class="string">&quot;user&quot;</span></span><br><span class="line">REMOTE_HOST=<span class="string">&quot;192.168.1.101&quot;</span></span><br><span class="line">REMOTE_DIR=<span class="string">&quot;/path/to/sync&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 inotifywait 监控目录变化</span></span><br><span class="line">inotifywait -m -r -e modify,create,delete,move <span class="string">&quot;<span class="variable">$WATCH_DIR</span>&quot;</span> | <span class="keyword">while</span> <span class="built_in">read</span> path action file; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Change detected: <span class="variable">$action</span> <span class="variable">$file</span> on <span class="variable">$path</span>&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 使用 rsync 同步文件</span></span><br><span class="line">    rsync -avz --delete --exclude <span class="string">&#x27;.git&#x27;</span> --exclude <span class="string">&#x27;.DS_Store&#x27;</span> <span class="string">&quot;<span class="variable">$WATCH_DIR</span>/&quot;</span> <span class="string">&quot;<span class="variable">$REMOTE_USER</span>@<span class="variable">$REMOTE_HOST</span>:<span class="variable">$REMOTE_DIR</span>/&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>赋予脚本执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/inotify_sync.sh</span><br></pre></td></tr></table></figure><p>步骤四：启动同步脚本<br>可以手动启动脚本，或者将其添加到 systemd 服务中以确保其在后台持续运行。</p><p>手动启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">nohup</span> /usr/local/bin/inotify_sync.sh &amp;</span><br></pre></td></tr></table></figure><h1 id="创建-systemd-服务-启动"><a href="#创建-systemd-服务-启动" class="headerlink" title="创建 systemd 服务 启动"></a>创建 systemd 服务 启动</h1><p>创建服务文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/systemd/system/inotify_sync.service</span><br></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Ini</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Inotify Sync Service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=root</span><br><span class="line">ExecStart=/usr/local/bin/inotify_sync.sh</span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动并启用服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl start inotify_sync.service</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> inotify_sync.service</span><br></pre></td></tr></table></figure><h1 id="步骤五：验证同步"><a href="#步骤五：验证同步" class="headerlink" title="步骤五：验证同步"></a>步骤五：验证同步</h1><p>在主服务器上创建或修改文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Test content&quot;</span> &gt; /path/to/sync/testfile.txt</span><br></pre></td></tr></table></figure><p>在备份服务器上检查文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /path/to/sync/</span><br><span class="line"><span class="built_in">cat</span> /path/to/sync/testfile.txt</span><br></pre></td></tr></table></figure><p>注意事项<br><strong>性能考虑:</strong><br>inotify 会消耗一定的系统资源，特别是在监控大量文件时。确保的服务器有足够的资源来处理这些事件。<br>可以通过排除不必要的文件或目录（如 .git、.DS_Store）来减少不必要的同步操作。<br><strong>安全考虑:</strong><br>确保 SSH 密钥的安全性，避免泄露。<br>可以使用更严格的 SSH 配置，例如限制密钥的使用范围和有效期。<br>通过以上步骤，可以在两台 Debian 服务器之间使用 inotify 和 rsync 实现实时数据同步。</p><h1 id="nginx-反代"><a href="#nginx-反代" class="headerlink" title="nginx 反代"></a>nginx 反代</h1><p>在Debian系统上安装Nginx并配置反向代理到特定的IP地址和端口</p><h2 id="1-更新软件包列表"><a href="#1-更新软件包列表" class="headerlink" title="1. 更新软件包列表"></a>1. 更新软件包列表</h2><p>首先，确保软件包列表是最新的。打开终端并执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><h2 id="2-安装Nginx"><a href="#2-安装Nginx" class="headerlink" title="2. 安装Nginx"></a>2. 安装Nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><h2 id="配置Nginx作为反向代理"><a href="#配置Nginx作为反向代理" class="headerlink" title=". 配置Nginx作为反向代理"></a>. 配置Nginx作为反向代理</h2><p>安装完成后，需要编辑Nginx的配置文件来设置反向代理。默认情况下，Nginx的配置文件位于&#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;default。</p><p>使用喜欢的文本编辑器（如nano或vim）打开此文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><p>在文件中找到server块，并添加或修改如下配置以设置反向代理。假设要将所有请求代理到192.168.1.100:8080：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Nginx</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name your_domain_or_ip;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://192.168.1.100:8080;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">listen 80; 指定了Nginx监听的端口号，这里使用的是80端口，即HTTP服务的标准端口。</span><br><span class="line">server_name 应该替换为域名或服务器的公网IP地址。</span><br><span class="line">proxy_pass 指令用于指定要代理的目标服务器的URL。</span><br><span class="line">proxy_set_header 指令用于设置转发给后端服务器的请求头信息。</span><br></pre></td></tr></table></figure><h2 id="4-测试配置文件"><a href="#4-测试配置文件" class="headerlink" title="4. 测试配置文件"></a>4. 测试配置文件</h2><p>在保存并退出编辑器之后，测试Nginx配置是否正确无误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>如果输出显示语法正确且测试成功，可以继续下一步。</p><h2 id="5-重新加载Nginx"><a href="#5-重新加载Nginx" class="headerlink" title="5. 重新加载Nginx"></a>5. 重新加载Nginx</h2><p>使更改生效，需要重新加载Nginx服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><h2 id="6-验证反向代理工作情况"><a href="#6-验证反向代理工作情况" class="headerlink" title="6. 验证反向代理工作情况"></a>6. 验证反向代理工作情况</h2><p>现在，可以通过浏览器访问域名或服务器的公网IP地址，看看是否能够正确地将请求代理到192.168.1.100:8080。</p><p>如果遇到任何问题，可以查看Nginx的日志文件来诊断问题。错误日志通常位于&#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log。</p><h2 id="Nginx中配置多个反向代理目标"><a href="#Nginx中配置多个反向代理目标" class="headerlink" title="Nginx中配置多个反向代理目标"></a>Nginx中配置多个反向代理目标</h2><p>可以使用upstream模块来定义一个负载均衡池。<br>Nginx可以根据配置的策略（例如轮询、最少连接等）将请求分发到不同的后端服务器。</p><p>以下是具体步骤：</p><h2 id="1-编辑Nginx配置文件"><a href="#1-编辑Nginx配置文件" class="headerlink" title="1. 编辑Nginx配置文件"></a>1. 编辑Nginx配置文件</h2><p>打开Nginx的配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo nano /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure><h2 id="2-添加upstream块"><a href="#2-添加upstream块" class="headerlink" title="2. 添加upstream块"></a>2. 添加upstream块</h2><p>在配置文件的顶部或适当位置添加一个upstream块，定义后端服务器池：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Nginx</span><br><span class="line">upstream backend_servers &#123;</span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-修改server块"><a href="#3-修改server块" class="headerlink" title="3. 修改server块"></a>3. 修改server块</h2><p>在server块中，将proxy_pass指令指向刚刚定义的upstream块：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Nginx</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name your_domain_or_ip;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://backend_servers;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-测试配置文件-1"><a href="#4-测试配置文件-1" class="headerlink" title="4. 测试配置文件"></a>4. 测试配置文件</h2><p>保存并退出编辑器后，测试Nginx配置是否正确无误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><h2 id="5-重新加载Nginx-1"><a href="#5-重新加载Nginx-1" class="headerlink" title="5. 重新加载Nginx"></a>5. 重新加载Nginx</h2><p>如果测试成功，重新加载Nginx以使更改生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><h2 id="6-验证配置"><a href="#6-验证配置" class="headerlink" title="6. 验证配置"></a>6. 验证配置</h2><p>通过浏览器访问域名或服务器的公网IP地址，检查请求是否正确地被分发到两个后端服务器。</p><h2 id="7-进一步配置（可选）"><a href="#7-进一步配置（可选）" class="headerlink" title="7. 进一步配置（可选）"></a>7. 进一步配置（可选）</h2><p>如果需要更复杂的负载均衡策略，可以在upstream块中添加更多选项。例如：</p><p>轮询（默认）：每个请求按时间顺序逐一分配到不同的服务器，如果后端某个服务器宕机，能自动剔除。<br>最少连接：请求分配给连接数最少的服务器。<br>IP哈希：每个请求按访问客户端的IP哈希结果分配，这样来自同一客户端的请求会分配到同一台后端服务器。<br>示例配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Nginx</span><br><span class="line"></span><br><span class="line">upstream backend_servers &#123;</span><br><span class="line">    <span class="comment"># 轮询（默认）</span></span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 最少连接</span></span><br><span class="line">    <span class="comment"># least_conn;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># IP哈希</span></span><br><span class="line">    <span class="comment"># ip_hash;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="负载均衡策略及其配置方法："><a href="#负载均衡策略及其配置方法：" class="headerlink" title="负载均衡策略及其配置方法："></a>负载均衡策略及其配置方法：</h1><h2 id="1-轮询（默认）"><a href="#1-轮询（默认）" class="headerlink" title="1. 轮询（默认）"></a>1. 轮询（默认）</h2><p>轮询是Nginx默认的负载均衡策略，每个请求按时间顺序逐一分配到不同的服务器。如果后端某个服务器宕机，Nginx会自动将其从轮询列表中剔除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream backend_servers &#123;</span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-最少连接"><a href="#2-最少连接" class="headerlink" title="2. 最少连接"></a>2. 最少连接</h2><p>最少连接策略将请求分配给当前连接数最少的服务器，适用于处理长连接的场景。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream backend_servers &#123;</span><br><span class="line">    least_conn;</span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-IP哈希"><a href="#3-IP哈希" class="headerlink" title="3. IP哈希"></a>3. IP哈希</h2><p>IP哈希策略根据客户端的IP地址进行哈希运算，确保来自同一客户端的请求总是被分配到同一台后端服务器。这在会话保持（Session Stickiness）场景中非常有用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream backend_servers &#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-加权轮询"><a href="#4-加权轮询" class="headerlink" title="4. 加权轮询"></a>4. 加权轮询</h2><p>加权轮询允许为每个后端服务器分配权重，权重越高，被分配到请求的概率越大。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream backend_servers &#123;</span><br><span class="line">    server 192.168.1.100:8080 weight=3;</span><br><span class="line">    server 192.168.1.101:8081 weight=1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-备用服务器"><a href="#5-备用服务器" class="headerlink" title="5. 备用服务器"></a>5. 备用服务器</h2><p>可以指定备用服务器，当主服务器不可用时，请求会被转发到备用服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">upstream backend_servers &#123;</span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081 backup;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-组合策略"><a href="#6-组合策略" class="headerlink" title="6. 组合策略"></a>6. 组合策略</h2><p>也可以组合使用多种策略，例如同时使用IP哈希和加权轮询。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream backend_servers &#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    server 192.168.1.100:8080 weight=3;</span><br><span class="line">    server 192.168.1.101:8081 weight=1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-测试和应用配置"><a href="#7-测试和应用配置" class="headerlink" title="7. 测试和应用配置"></a>7. 测试和应用配置</h2><p>完成配置后，测试Nginx配置文件是否正确无误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -t</span><br></pre></td></tr></table></figure><p>如果测试成功，重新加载Nginx以使更改生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl reload nginx</span><br></pre></td></tr></table></figure><h2 id="8-验证配置"><a href="#8-验证配置" class="headerlink" title="8. 验证配置"></a>8. 验证配置</h2><p>通过浏览器或其他工具访问域名或服务器的公网IP地址，检查请求是否按预期被分发到不同的后端服务器。<br>使用日志或后端服务器上的访问记录来验证负载均衡的效果。</p><p>通过这些配置，可以实现更灵活和强大的负载均衡策略，以满足不同业务场景的需求。</p><h2 id="完整的Nginx配置示例"><a href="#完整的Nginx配置示例" class="headerlink" title="完整的Nginx配置示例"></a>完整的Nginx配置示例</h2><p>完整的Nginx配置示例，其中包含两台主用服务器和一台备用服务器。<br>这个配置将使用轮询策略，并且备用服务器将在主用服务器不可用时接管请求。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /etc/nginx/sites-available/default</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义上游服务器组</span></span><br><span class="line">upstream backend_servers &#123;</span><br><span class="line">    <span class="comment"># 主用服务器</span></span><br><span class="line">    server 192.168.1.100:8080;</span><br><span class="line">    server 192.168.1.101:8081;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 备用服务器</span></span><br><span class="line">    server 192.168.1.102:8082 backup;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义服务器块</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name your_domain_or_ip;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义location块</span></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://backend_servers;</span><br><span class="line">        proxy_set_header Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可选：定义错误页面</span></span><br><span class="line">    error_page 404 /404.html;</span><br><span class="line">    location = /404.html &#123;</span><br><span class="line">        internal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page 500 502 503 504 /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        internal;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>upstream 块:</strong><br>server 192.168.1.100:8080; 和 server 192.168.1.101:8081; 是两台主用服务器。<br>server 192.168.1.102:8082 backup; 是一台备用服务器，只有在主用服务器不可用时才会被使用。<br><strong>server 块:</strong><br>listen 80; 指定了Nginx监听的端口号，这里是80端口。<br>server_name your_domain_or_ip; 应该替换为域名或服务器的公网IP地址。<br><strong>location 块:</strong><br>proxy_pass <a class="link"   href="http://backend_servers/" >http://backend_servers<i class="fas fa-external-link-alt"></i></a>; 将请求代理到定义的上游服务器组。<br>proxy_set_header 指令用于设置转发给后端服务器的请求头信息。<br><strong>错误页面:</strong><br>error_page 404 &#x2F;404.html; 和 location &#x3D; &#x2F;404.html { internal; } 用于定义404错误页面。<br>error_page 500 502 503 504 &#x2F;50x.html; 和 location &#x3D; &#x2F;50x.html { internal; } 用于定义500系列错误页面。</p><p>日志:<br>查看Nginx的访问日志和错误日志，确保一切正常：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Bash</span><br><span class="line"></span><br><span class="line">sudo tail -f /var/log/nginx/access.log</span><br><span class="line">sudo tail -f /var/log/nginx/error.log</span><br></pre></td></tr></table></figure><p>以实现两台主用服务器和一台备用服务器的负载均衡。</p><!--inotify+rsync实时同步https://cloud.tencent.com/developer/article/1373541https://www.cnblogs.com/hxqwe/p/18298664->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Keepalived&quot;&gt;&lt;a href=&quot;#Keepalived&quot; class=&quot;headerlink&quot; title=&quot;Keepalived&quot;&gt;&lt;/a&gt;Keepalived&lt;/h1&gt;&lt;p&gt;是一种用于实现高可用性的工具，它通过VRRP（虚拟路由冗余协议）来管理虚拟I</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="nigix" scheme="https://banjinmei.github.io/tags/nigix/"/>
    
    <category term="keepalived" scheme="https://banjinmei.github.io/tags/keepalived/"/>
    
    <category term="inotify" scheme="https://banjinmei.github.io/tags/inotify/"/>
    
    <category term="rsync" scheme="https://banjinmei.github.io/tags/rsync/"/>
    
  </entry>
  
  <entry>
    <title>python whoisdomain</title>
    <link href="https://banjinmei.github.io/2024/11/21/python-whoisdomain/"/>
    <id>https://banjinmei.github.io/2024/11/21/python-whoisdomain/</id>
    <published>2024-11-21T15:31:52.000Z</published>
    <updated>2024-11-21T15:32:33.020Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install python-whois</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> whois</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件中的域名</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_domains_from_file</span>(<span class="params">file_path</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        domains = [line.strip() <span class="keyword">for</span> line <span class="keyword">in</span> file <span class="keyword">if</span> line.strip()]</span><br><span class="line">    <span class="keyword">return</span> domains</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询域名的WHOIS信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">query_whois</span>(<span class="params">domain</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        domain_info = whois.whois(domain)</span><br><span class="line">        <span class="keyword">if</span> domain_info.domain_name:</span><br><span class="line">            <span class="keyword">return</span> domain_info</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error querying WHOIS for <span class="subst">&#123;domain&#125;</span>: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存查询结果到文件</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_results_to_file</span>(<span class="params">domains, results, output_file</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_file, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        <span class="keyword">for</span> domain, result <span class="keyword">in</span> results.items():</span><br><span class="line">            <span class="keyword">if</span> result:</span><br><span class="line">                file.write(<span class="string">f&quot;Domain: <span class="subst">&#123;domain&#125;</span>\n&quot;</span>)</span><br><span class="line">                file.write(<span class="string">&quot;WHOIS Information:\n&quot;</span>)</span><br><span class="line">                <span class="keyword">for</span> key, value <span class="keyword">in</span> result.items():</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">isinstance</span>(value, <span class="built_in">list</span>):</span><br><span class="line">                        <span class="keyword">for</span> item <span class="keyword">in</span> value:</span><br><span class="line">                            file.write(<span class="string">f&quot;<span class="subst">&#123;key&#125;</span>: <span class="subst">&#123;item&#125;</span>\n&quot;</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        file.write(<span class="string">f&quot;<span class="subst">&#123;key&#125;</span>: <span class="subst">&#123;value&#125;</span>\n&quot;</span>)</span><br><span class="line">                file.write(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                file.write(<span class="string">f&quot;Domain: <span class="subst">&#123;domain&#125;</span> - Not Registered\n\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    file_path = <span class="string">&#x27;12.txt&#x27;</span>  <span class="comment"># 文件路径</span></span><br><span class="line">    output_file = <span class="string">&#x27;whois_results2.txt&#x27;</span>  <span class="comment"># 输出文件路径</span></span><br><span class="line">    domains = read_domains_from_file(file_path)</span><br><span class="line">    </span><br><span class="line">    results = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> domain <span class="keyword">in</span> domains:</span><br><span class="line">        domain_info = query_whois(domain)</span><br><span class="line">        results[domain] = domain_info</span><br><span class="line">    </span><br><span class="line">    save_results_to_file(domains, results, output_file)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;WHOIS results have been saved to <span class="subst">&#123;output_file&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="python" scheme="https://banjinmei.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>uniapp postman</title>
    <link href="https://banjinmei.github.io/2024/11/21/uniapp-postman/"/>
    <id>https://banjinmei.github.io/2024/11/21/uniapp-postman/</id>
    <published>2024-11-21T13:43:36.000Z</published>
    <updated>2024-11-21T14:21:55.730Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础页面"><a href="#基础页面" class="headerlink" title="基础页面"></a>基础页面</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;url&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请求地址&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">picker</span> <span class="attr">:range</span>=<span class="string">&quot;methods&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;onMethodChange&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123; methods[selectedIndex] &#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">picker</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;body&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请求体&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendRequest&quot;</span>&gt;</span>发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">&quot;response&quot;</span> <span class="attr">class</span>=<span class="string">&quot;response&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span>响应:<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pre</span>&gt;</span>&#123;&#123; response &#125;&#125;<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">url</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">body</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">response</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">selectedIndex</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onMethodChange</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">selectedIndex</span> = e.<span class="property">detail</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">sendRequest</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> method = <span class="variable language_">this</span>.<span class="property">methods</span>[<span class="variable language_">this</span>.<span class="property">selectedIndex</span>];</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> data = method === <span class="string">&#x27;POST&#x27;</span> ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">this</span>.<span class="property">body</span>) : <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      uni.<span class="title function_">request</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">url</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">method</span>: method,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: data,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">response</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(res.<span class="property">data</span>, <span class="literal">null</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">response</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err, <span class="literal">null</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">input</span>, <span class="selector-tag">textarea</span>, <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.response</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">overflow-x</span>: auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="添加-methods-delete-put，添加header-，给出修改后的代码"><a href="#添加-methods-delete-put，添加header-，给出修改后的代码" class="headerlink" title="添加 methods delete put，添加header ，给出修改后的代码"></a>添加 methods delete put，添加header ，给出修改后的代码</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;url&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请求地址&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">picker</span> <span class="attr">:range</span>=<span class="string">&quot;methods&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;onMethodChange&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123; methods[selectedIndex] &#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">picker</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;body&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请求体&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;headers.Authorization&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入Authorization头&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;headers[&#x27;Content-Type&#x27;]&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入Content-Type头&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendRequest&quot;</span>&gt;</span>发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">&quot;response&quot;</span> <span class="attr">class</span>=<span class="string">&quot;response&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span>响应:<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pre</span>&gt;</span>&#123;&#123; response &#125;&#125;<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">url</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">body</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">response</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;PUT&#x27;</span>, <span class="string">&#x27;DELETE&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">selectedIndex</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">headers</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Authorization</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onMethodChange</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">selectedIndex</span> = e.<span class="property">detail</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">sendRequest</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> method = <span class="variable language_">this</span>.<span class="property">methods</span>[<span class="variable language_">this</span>.<span class="property">selectedIndex</span>];</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> data = method !== <span class="string">&#x27;GET&#x27;</span> ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">this</span>.<span class="property">body</span>) : <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      uni.<span class="title function_">request</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">url</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">method</span>: method,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: data,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">header</span>: <span class="variable language_">this</span>.<span class="property">headers</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">response</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(res.<span class="property">data</span>, <span class="literal">null</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">response</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err, <span class="literal">null</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">input</span>, <span class="selector-tag">textarea</span>, <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.response</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">overflow-x</span>: auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>url：用户输入的请求地址。<br>body：用户输入的请求体。<br>response：服务器返回的响应内容。<br>methods：支持的HTTP方法数组。<br>selectedIndex：当前选中的HTTP方法索引。<br>headers：请求头对象，包含Authorization和Content-Type。<br>onMethodChange(e)：当用户选择不同的HTTP方法时，更新selectedIndex。<br>sendRequest()：发送HTTP请求。根据选中的HTTP方法和请求体，调用uni.request发送请求，并处理成功和失败的回调。</p><p>添加了两个输入框，分别用于设置Authorization和Content-Type请求头。<br>在uni.request中，通过header属性传递请求头。</p><h1 id="动态请求头"><a href="#动态请求头" class="headerlink" title="动态请求头"></a>动态请求头</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;url&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请求地址&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">picker</span> <span class="attr">:range</span>=<span class="string">&quot;methods&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;onMethodChange&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123; methods[selectedIndex] &#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">picker</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;body&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入请求体&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 动态请求头输入框 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-for</span>=<span class="string">&quot;(header, index) in headers&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span> <span class="attr">class</span>=<span class="string">&quot;header-input&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;header.key&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;键&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;header.value&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;值&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;removeHeader(index)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addHeader&quot;</span>&gt;</span>添加请求头<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendRequest&quot;</span>&gt;</span>发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">&quot;response&quot;</span> <span class="attr">class</span>=<span class="string">&quot;response&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span>&gt;</span>响应:<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">pre</span>&gt;</span>&#123;&#123; response &#125;&#125;<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">url</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">body</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">response</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;PUT&#x27;</span>, <span class="string">&#x27;DELETE&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">selectedIndex</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">headers</span>: [</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">key</span>: <span class="string">&#x27;Authorization&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">key</span>: <span class="string">&#x27;Content-Type&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;application/json&#x27;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">      ]</span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onMethodChange</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">selectedIndex</span> = e.<span class="property">detail</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">addHeader</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">headers</span>.<span class="title function_">push</span>(&#123; <span class="attr">key</span>: <span class="string">&#x27;&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;&#x27;</span> &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">removeHeader</span>(<span class="params">index</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">headers</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">sendRequest</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> method = <span class="variable language_">this</span>.<span class="property">methods</span>[<span class="variable language_">this</span>.<span class="property">selectedIndex</span>];</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> data = method !== <span class="string">&#x27;GET&#x27;</span> ? <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">this</span>.<span class="property">body</span>) : <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 将headers对象转换为uni.request所需的格式</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> requestHeaders = <span class="variable language_">this</span>.<span class="property">headers</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, header</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (header.<span class="property">key</span> &amp;&amp; header.<span class="property">value</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">          acc[header.<span class="property">key</span>] = header.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> acc;</span></span><br><span class="line"><span class="language-javascript">      &#125;, &#123;&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      uni.<span class="title function_">request</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">url</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">method</span>: method,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: data,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">header</span>: requestHeaders,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">response</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(res.<span class="property">data</span>, <span class="literal">null</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">response</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(err, <span class="literal">null</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">input</span>, <span class="selector-tag">textarea</span>, <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.header-input</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.header-input</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">45%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.header-input</span> <span class="selector-tag">button</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">10%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.response</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#f0f0f0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">overflow-x</span>: auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br></pre></td></tr></table></figure><p></style></p><p>使用v-for指令遍历headers数组，为每个请求头生成一对输入框和一个删除按钮。<br>提供一个“添加请求头”按钮，允许用户动态添加新的请求头输入框。</p><h1 id="长按复制结果"><a href="#长按复制结果" class="headerlink" title="长按复制结果"></a>长按复制结果</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">v-if</span>=<span class="string">&quot;response&quot;</span> <span class="attr">class</span>=<span class="string">&quot;response&quot;</span> @<span class="attr">longpress</span>=<span class="string">&quot;copyResponse&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>响应:<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span>&gt;</span>&#123;&#123; response &#125;&#125;<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">    <span class="title function_">copyResponse</span>(<span class="params"></span>) &#123;</span><br><span class="line">      uni.<span class="title function_">setClipboardData</span>(&#123;</span><br><span class="line">        <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">response</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">          uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;复制成功&#x27;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">fail</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">          uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;复制失败&#x27;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">.<span class="property">response</span> &#123;</span><br><span class="line">  background-<span class="attr">color</span>: #f0f0f0;</span><br><span class="line">  <span class="attr">padding</span>: 10px;</span><br><span class="line">  border-<span class="attr">radius</span>: 5px;</span><br><span class="line">  overflow-<span class="attr">x</span>: auto;</span><br><span class="line">  white-<span class="attr">space</span>: pre-wrap; <span class="comment">/* 使文本换行显示 */</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基础页面&quot;&gt;&lt;a href=&quot;#基础页面&quot; class=&quot;headerlink&quot; title=&quot;基础页面&quot;&gt;&lt;/a&gt;基础页面&lt;/h1&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="uniapp" scheme="https://banjinmei.github.io/tags/uniapp/"/>
    
    <category term="postman" scheme="https://banjinmei.github.io/tags/postman/"/>
    
  </entry>
  
  <entry>
    <title>XAI Grok</title>
    <link href="https://banjinmei.github.io/2024/11/19/XAI/"/>
    <id>https://banjinmei.github.io/2024/11/19/XAI/</id>
    <published>2024-11-19T14:54:15.000Z</published>
    <updated>2024-11-19T15:02:20.333Z</updated>
    
    <content type="html"><![CDATA[<p>X.AI<br>Reg</p><h1 id="Create-API-key"><a href="#Create-API-key" class="headerlink" title="Create API key"></a>Create API key</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">curl https://api.x.ai/v1/chat/completions -H <span class="string">&quot;Content-Type: application/json&quot;</span> -H <span class="string">&quot;Authorization: Bearer xai-xxx&quot;</span> -d <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">  &quot;messages&quot;: [</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;role&quot;: &quot;system&quot;,</span></span><br><span class="line"><span class="string">      &quot;content&quot;: &quot;You are a test assistant.&quot;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;role&quot;: &quot;user&quot;,</span></span><br><span class="line"><span class="string">      &quot;content&quot;: &quot;what can u do?&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  ],</span></span><br><span class="line"><span class="string">  &quot;model&quot;: &quot;grok-beta&quot;,</span></span><br><span class="line"><span class="string">  &quot;stream&quot;: false,</span></span><br><span class="line"><span class="string">  &quot;temperature&quot;: 0</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="python"><a href="#python" class="headerlink" title="python"></a>python</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment"># API URL 和 API 密钥</span></span><br><span class="line">API_URL = <span class="string">&quot;https://api.x.ai/v1/chat/completions&quot;</span></span><br><span class="line">API_KEY = <span class="string">&quot;xai-bELnXX&quot;</span>  <span class="comment"># 替换为实际 API 密钥</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求头</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Authorization&quot;</span>: <span class="string">f&quot;Bearer <span class="subst">&#123;API_KEY&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求数据</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;messages&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;role&quot;</span>: <span class="string">&quot;system&quot;</span>,</span><br><span class="line">            <span class="string">&quot;content&quot;</span>: <span class="string">&quot;You are a test assistant.&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">            <span class="string">&quot;content&quot;</span>: <span class="string">&quot;what can u do?&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;model&quot;</span>: <span class="string">&quot;grok-beta&quot;</span>,</span><br><span class="line">    <span class="string">&quot;stream&quot;</span>: <span class="literal">False</span>,</span><br><span class="line">    <span class="string">&quot;temperature&quot;</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = requests.post(API_URL, headers=headers, json=data)</span><br><span class="line">    response.raise_for_status()  <span class="comment"># 确保状态码为 200</span></span><br><span class="line">    result = response.json()  <span class="comment"># 解析响应</span></span><br><span class="line">    <span class="comment"># print(&quot;API 响应：&quot;, result)</span></span><br><span class="line">    <span class="comment"># 提取内容</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;choices&#x27;</span> <span class="keyword">in</span> result <span class="keyword">and</span> result[<span class="string">&#x27;choices&#x27;</span>]:</span><br><span class="line">        content = result[<span class="string">&#x27;choices&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;message&#x27;</span>][<span class="string">&#x27;content&#x27;</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;XAI回答：\n&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(content)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;XAI的回答。&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.exceptions.HTTPError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;HTTP 错误：&quot;</span>, e)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;响应内容：&quot;</span>, response.text)  <span class="comment"># 输出详细的错误信息</span></span><br><span class="line"><span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请求失败：&quot;</span>, e)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;X.AI&lt;br&gt;Reg&lt;/p&gt;
&lt;h1 id=&quot;Create-API-key&quot;&gt;&lt;a href=&quot;#Create-API-key&quot; class=&quot;headerlink&quot; title=&quot;Create API key&quot;&gt;&lt;/a&gt;Create API key&lt;/h1&gt;&lt;figur</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="XAI" scheme="https://banjinmei.github.io/tags/XAI/"/>
    
    <category term="Grok" scheme="https://banjinmei.github.io/tags/Grok/"/>
    
  </entry>
  
  <entry>
    <title>Python股票爬虫</title>
    <link href="https://banjinmei.github.io/2024/11/19/Python%E8%82%A1%E7%A5%A8%E7%88%AC%E8%99%AB/"/>
    <id>https://banjinmei.github.io/2024/11/19/Python%E8%82%A1%E7%A5%A8%E7%88%AC%E8%99%AB/</id>
    <published>2024-11-19T14:07:04.000Z</published>
    <updated>2024-11-19T14:52:46.309Z</updated>
    
    <content type="html"><![CDATA[<h1 id="功能概况："><a href="#功能概况：" class="headerlink" title="功能概况："></a>功能概况：</h1><p>根据股票代码，采集指定日期连续N个交易日数据，输出保存为xls数据表。</p><h1 id="详细说明"><a href="#详细说明" class="headerlink" title="详细说明:"></a>详细说明:</h1><p>变量为股票代码、指定日期、N个交易日，变量以xls表格形式给出，爬虫根据股票代码，逐条爬取交易数据(字段为日期、开盘价、收盘价、最高价、最低价，涨跌幅、成交量、成交额、振幅，换手率等），并输出保存到xls中。<br>采集来源 东方财富网  </p><h1 id="安装了必要的库"><a href="#安装了必要的库" class="headerlink" title="安装了必要的库"></a>安装了必要的库</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests pandas openpyxl</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_stock_data</span>(<span class="params">stock_code, start_date, days</span>):</span><br><span class="line">    <span class="comment"># 将输入的字符串日期转换为datetime对象</span></span><br><span class="line">    start_date = datetime.strptime(start_date, <span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">    end_date = start_date + timedelta(days=days)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 构建请求URL</span></span><br><span class="line">    url = <span class="string">f&quot;http://push2his.eastmoney.com/api/qt/stock/kline/get?secid=<span class="subst">&#123;stock_code&#125;</span>&amp;fields1=f1,f2,f3,f4,f5&amp;fields2=f51,f52,f53,f54,f55,f56,f57,f58,f59,f60,f61&amp;klt=101&amp;fqt=0&amp;beg=<span class="subst">&#123;start_date.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)&#125;</span>&amp;end=<span class="subst">&#123;end_date.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)&#125;</span>&quot;</span></span><br><span class="line">    </span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    response = requests.get(url, headers=headers)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 检查响应状态码</span></span><br><span class="line">    <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">f&quot;Request failed with status code <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    data = response.json()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 打印响应内容，以便调试</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Response content:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;rc&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> data <span class="keyword">or</span> data[<span class="string">&#x27;rc&#x27;</span>] != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">f&quot;Error fetching data: <span class="subst">&#123;data.get(<span class="string">&#x27;rt&#x27;</span>, <span class="string">&#x27;Unknown error&#x27;</span>)&#125;</span>&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    klines = data[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;klines&#x27;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 解析数据</span></span><br><span class="line">    records = []</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> klines:</span><br><span class="line">        parts = line.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        record = &#123;</span><br><span class="line">            <span class="string">&#x27;日期&#x27;</span>: parts[<span class="number">0</span>],</span><br><span class="line">            <span class="string">&#x27;开盘价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">1</span>]),</span><br><span class="line">            <span class="string">&#x27;收盘价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">2</span>]),</span><br><span class="line">            <span class="string">&#x27;最高价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">3</span>]),</span><br><span class="line">            <span class="string">&#x27;最低价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">4</span>]),</span><br><span class="line">            <span class="string">&#x27;涨跌幅&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">8</span>]),</span><br><span class="line">            <span class="string">&#x27;成交量&#x27;</span>: <span class="built_in">int</span>(parts[<span class="number">5</span>]),</span><br><span class="line">            <span class="string">&#x27;成交额&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">6</span>]),</span><br><span class="line">            <span class="string">&#x27;振幅&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">9</span>]),</span><br><span class="line">            <span class="string">&#x27;换手率&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">10</span>])</span><br><span class="line">        &#125;</span><br><span class="line">        records.append(record)</span><br><span class="line">    </span><br><span class="line">    df = pd.DataFrame(records)</span><br><span class="line">    <span class="keyword">return</span> df</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_excel</span>(<span class="params">df, filename</span>):</span><br><span class="line">    df.to_excel(filename, index=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    stock_code = <span class="string">&quot;1.600519&quot;</span>  <span class="comment"># 示例股票代码，前缀1表示上海A股</span></span><br><span class="line">    start_date = <span class="string">&quot;2024-10-01&quot;</span></span><br><span class="line">    days = <span class="number">30</span>  <span class="comment"># 获取30个交易日的数据</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        df = get_stock_data(stock_code, start_date, days)</span><br><span class="line">        save_to_excel(df, <span class="string">&quot;stock_data.xlsx&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Data saved to stock_data.xlsx&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        </span><br></pre></td></tr></table></figure><h1 id="加入-港股-代码"><a href="#加入-港股-代码" class="headerlink" title="加入 港股 代码"></a>加入 港股 代码</h1><p>自动识别股票市场：根据股票代码的长度判断是港股还是大陆股票。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> calendar</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_weekend</span>(<span class="params">date_str</span>):</span><br><span class="line">    year, month, day = <span class="built_in">map</span>(<span class="built_in">int</span>, date_str.split(<span class="string">&#x27;-&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> calendar.weekday(year, month, day) &gt;= <span class="number">5</span>  <span class="comment"># 5是周六，6是周日</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_stock_data</span>(<span class="params">stock_code, start_date, days, retries=<span class="number">3</span>, delay=<span class="number">1</span></span>):</span><br><span class="line">    <span class="comment"># 将输入的字符串日期转换为datetime对象</span></span><br><span class="line">    start_date = datetime.strptime(start_date, <span class="string">&#x27;%Y-%m-%d&#x27;</span>)</span><br><span class="line">    end_date = start_date + timedelta(days=days)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 根据股票代码长度识别市场</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(stock_code) == <span class="number">5</span>:</span><br><span class="line">        market = <span class="string">&#x27;HK&#x27;</span></span><br><span class="line">        secid = <span class="string">f&quot;116.<span class="subst">&#123;stock_code&#125;</span>&quot;</span>  <span class="comment"># 东方财富网港股代码前缀</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(stock_code) == <span class="number">6</span>:</span><br><span class="line">        market = <span class="string">&#x27;SH&#x27;</span> <span class="keyword">if</span> stock_code.startswith(<span class="string">&#x27;6&#x27;</span>) <span class="keyword">else</span> <span class="string">&#x27;SZ&#x27;</span></span><br><span class="line">        secid = <span class="string">f&quot;<span class="subst">&#123;market&#125;</span>.<span class="subst">&#123;stock_code&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&quot;Invalid stock code length. Stock code should be 5 digits for HK stocks and 6 digits for mainland stocks.&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 构建请求URL</span></span><br><span class="line">    url = <span class="string">f&quot;http://push2his.eastmoney.com/api/qt/stock/kline/get?secid=<span class="subst">&#123;secid&#125;</span>&amp;fields1=f1,f2,f3,f4,f5&amp;fields2=f51,f52,f53,f54,f55,f56,f57,f58,f59,f60,f61&amp;klt=101&amp;fqt=0&amp;beg=<span class="subst">&#123;start_date.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)&#125;</span>&amp;end=<span class="subst">&#123;end_date.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)&#125;</span>&quot;</span></span><br><span class="line">    </span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> attempt <span class="keyword">in</span> <span class="built_in">range</span>(retries):</span><br><span class="line">        response = requests.get(url, headers=headers)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 检查响应状态码</span></span><br><span class="line">        <span class="keyword">if</span> response.status_code != <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">if</span> attempt &lt; retries - <span class="number">1</span>:</span><br><span class="line">                time.sleep(delay)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">f&quot;Request failed with status code <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        data = response.json()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 打印响应内容，以便调试</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Response content:&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(data)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;rc&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> data <span class="keyword">or</span> data[<span class="string">&#x27;rc&#x27;</span>] != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> attempt &lt; retries - <span class="number">1</span>:</span><br><span class="line">                time.sleep(delay)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">raise</span> Exception(<span class="string">f&quot;Error fetching data: <span class="subst">&#123;data.get(<span class="string">&#x27;rt&#x27;</span>, <span class="string">&#x27;Unknown error&#x27;</span>)&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        klines = data[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;klines&#x27;</span>]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 解析数据</span></span><br><span class="line">        records = []</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> klines:</span><br><span class="line">            parts = line.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">            record = &#123;</span><br><span class="line">                <span class="string">&#x27;日期&#x27;</span>: parts[<span class="number">0</span>],</span><br><span class="line">                <span class="string">&#x27;开盘价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">1</span>]),</span><br><span class="line">                <span class="string">&#x27;收盘价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">2</span>]),</span><br><span class="line">                <span class="string">&#x27;最高价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">3</span>]),</span><br><span class="line">                <span class="string">&#x27;最低价&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">4</span>]),</span><br><span class="line">                <span class="string">&#x27;涨跌幅&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">8</span>]),</span><br><span class="line">                <span class="string">&#x27;成交量&#x27;</span>: <span class="built_in">int</span>(parts[<span class="number">5</span>]),</span><br><span class="line">                <span class="string">&#x27;成交额&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">6</span>]),</span><br><span class="line">                <span class="string">&#x27;振幅&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">9</span>]),</span><br><span class="line">                <span class="string">&#x27;换手率&#x27;</span>: <span class="built_in">float</span>(parts[<span class="number">10</span>])</span><br><span class="line">            &#125;</span><br><span class="line">            records.append(record)</span><br><span class="line">        </span><br><span class="line">        df = pd.DataFrame(records)</span><br><span class="line">        <span class="keyword">return</span> df</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_to_excel</span>(<span class="params">df, filename</span>):</span><br><span class="line">    df.to_excel(filename, index=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    stock_code = <span class="string">&quot;09999&quot;</span>  <span class="comment"># 示例股票代码，五位表示港股</span></span><br><span class="line">    start_date = <span class="string">&quot;2024-10-01&quot;</span></span><br><span class="line">    days = <span class="number">30</span>  <span class="comment"># 获取30个交易日的数据</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        df = get_stock_data(stock_code, start_date, days, retries=<span class="number">5</span>, delay=<span class="number">2</span>)</span><br><span class="line">        save_to_excel(df, <span class="string">&quot;%s_%s_%d.xlsx&quot;</span> % (stock_code, start_date,days))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Data saved to &quot;</span>+<span class="string">&quot;%s_%s_%d.xlsx&quot;</span> % (stock_code, start_date,days) )</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Error: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;功能概况：&quot;&gt;&lt;a href=&quot;#功能概况：&quot; class=&quot;headerlink&quot; title=&quot;功能概况：&quot;&gt;&lt;/a&gt;功能概况：&lt;/h1&gt;&lt;p&gt;根据股票代码，采集指定日期连续N个交易日数据，输出保存为xls数据表。&lt;/p&gt;
&lt;h1 id=&quot;详细说明&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="python" scheme="https://banjinmei.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>canal mysql auto bak</title>
    <link href="https://banjinmei.github.io/2024/11/17/canal-mysql-auto-bak/"/>
    <id>https://banjinmei.github.io/2024/11/17/canal-mysql-auto-bak/</id>
    <published>2024-11-17T15:28:55.000Z</published>
    <updated>2024-11-21T13:08:16.265Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Canal"><a href="#Canal" class="headerlink" title="Canal"></a>Canal</h1><p>是阿里巴巴开源的一个数据库binlog解析工具，它能够捕获并解析MySQL等数据库的增量数据变化（即binlog），然后将这些变化的数据以消息的形式发送给其他系统或服务，如Elasticsearch、HBase、Redis等。这样做的好处是可以实现数据的实时同步，保证不同存储系统之间的数据一致性。</p><p><strong>Canal</strong>的设计理念主要是基于数据库的增量订阅与消费模式，它通过模拟MySQL的slave来实现对MySQL主库binlog的监听，当主库有数据更新时，Canal能及时捕捉到这些变化，并将变化的数据按照一定的格式输出，供下游系统消费使用。</p><p><strong>使用Canal的主要优势包括：</strong><br><strong>实时性</strong><br>Canal通过模仿MySQL的slave节点行为，向MySQL master节点发送dump协议请求，以获取binlog日志8。这种方法使得Canal能够以较低的延迟捕获到数据库的变化，从而实现实时的数据同步。对于需要保持数据最新性的应用场景，如搜索引擎的索引更新或缓存系统的数据刷新，这一特性尤为重要。</p><p><strong>解耦</strong><br>Canal作为一个独立的服务，充当了数据库和数据消费者之间的中介角色。它不仅减少了直接连接数据库带来的性能压力，还避免了因数据库结构或数据模型变更导致的下游系统适配问题。这种解耦机制增强了系统的灵活性和可维护性，使得各个组件可以独立发展而不相互干扰18。</p><p><strong>灵活性</strong><br>Canal支持多种数据输出格式，包括但不限于JSON、XML等，这使得它可以很容易地与其他数据处理工具和服务集成。此外，Canal还提供了对Kafka、RocketMQ等消息队列的支持，这意味着数据不仅可以被同步到不同的存储系统，还可以被发送到消息队列中，供更多的应用和服务消费14。</p><p>除了上述提到的优点外，Canal还具备以下特点：</p><p><strong>高性能：</strong>经过优化的Canal能够在高并发环境下保持稳定的性能表现，适合大规模数据同步场景。<br><strong>低延迟：</strong>通过高效的日志解析和数据传输机制，Canal能够确保数据从源头到目的地的传输延迟尽可能低。<br><strong>高可用性：</strong>Canal支持集群部署，结合Zookeeper等协调服务，可以实现故障自动切换，保证服务的连续性和稳定性21。<br><strong>安全性：</strong>Canal可以通过配置SSL&#x2F;TLS加密通信，保护数据在传输过程中的安全18。</p><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>Canal的应用场景非常广泛，包括但不限于：</p><p><strong>数据同步：</strong>将MySQL数据库的数据同步到Elasticsearch、Redis等其他存储系统，用于构建搜索引擎、缓存层等18。<br><strong>数据备份：</strong>定期或实时备份MySQL数据库的数据，用于灾难恢复或数据归档18。<br><strong>数据集成：</strong>在微服务架构中，使用Canal将多个数据库中的数据进行集成，提供统一的数据视图18。<br><strong>数据监控：</strong>通过监听数据库的变化，及时发现异常操作或潜在的安全风险18。<br>Canal是一个功能强大、灵活多变的数据同步工具，它在保证数据实时性和一致性的基础上，提供了丰富的特性和广泛的应用场景，是现代数据驱动应用的理想选择。</p><h1 id="Canal环境准备"><a href="#Canal环境准备" class="headerlink" title="Canal环境准备"></a>Canal环境准备</h1><p>设置MySQL远程访问</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>MySQL配置</p><p>Canal的原理基于MySQL binlog技术，所以，要想使用Canal就要开启MySQL的binlog写入功能，建议配置binlog的模式为row。</p><p>可以在MySQL命令行输入如下命令来查看binlog的模式。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;binlog_format&#x27;</span>;</span><br></pre></td></tr></table></figure><!--show variables like 'log_bin';SHOW VARIABLES LIKE 'binlog_format';--><p>如果MySQL中默认的binlog格式为STATEMENT，需要将STATEMENT修改为ROW。修改&#x2F;etc&#x2F;my.cnf文件。</p><p>&#x2F;etc&#x2F;my.cnf<br>在[mysqld]下面新增如下三项配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">log-bin=mysql-bin  <span class="comment">#开启MySQL二进制日志</span></span><br><span class="line">binlog_format=ROW <span class="comment">#将二进制日志的格式设置为ROW</span></span><br><span class="line">server_id=1 <span class="comment">#server_id需要唯一，不能与Canal的slaveId重复</span></span><br></pre></td></tr></table></figure><p>修改完my.cnf文件后，需要重启MySQL服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysqld restart</span><br></pre></td></tr></table></figure><p>再次查看binlog模式。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;binlog_format&#x27;</span>;</span><br></pre></td></tr></table></figure><p>MySQL创建用户授权</p><p>Canal的原理是模式自己为MySQL Slave，所以一定要设置MySQL Slave的相关权限。这里，需要创建一个主从同步的账户，并且赋予这个账户相关的权限。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> canal@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;canal&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, REPLICATION SLAVE, REPLICATION CLIENT <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;canal&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h1 id="服务器信息"><a href="#服务器信息" class="headerlink" title="服务器信息"></a>服务器信息</h1><p>124.219.119.2xx 主库所在服务器</p><p>192.168.80.203 canal数据同步所在服务器</p><h1 id="连接主库所在服务器"><a href="#连接主库所在服务器" class="headerlink" title="连接主库所在服务器"></a>连接主库所在服务器</h1><h2 id="切换-root-账号"><a href="#切换-root-账号" class="headerlink" title="切换 root 账号"></a>切换 root 账号</h2><p>su root</p><h2 id="启动MySQL8-0数据库"><a href="#启动MySQL8-0数据库" class="headerlink" title="启动MySQL8.0数据库"></a>启动MySQL8.0数据库</h2><p>systemctl start mysqld.service</p><h2 id="创建复制账号和密码"><a href="#创建复制账号和密码" class="headerlink" title="创建复制账号和密码"></a>创建复制账号和密码</h2><p>连接主库所在服务器，即：192.168.91.131，运行MySQL 8.0数据库，创建复制账号和密码，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CREATE USER canal IDENTIFIED BY &#x27;canal&#x27;;  </span><br><span class="line">mysql&gt; GRANT SELECT, SHOW VIEW, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &#x27;canal&#x27;@&#x27;%&#x27;;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h1 id="canal数据同步服务器操作"><a href="#canal数据同步服务器操作" class="headerlink" title="canal数据同步服务器操作"></a>canal数据同步服务器操作</h1><h2 id="创建canal文件夹"><a href="#创建canal文件夹" class="headerlink" title="创建canal文件夹"></a>创建canal文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local</span><br><span class="line"><span class="built_in">mkdir</span> canal</span><br><span class="line"><span class="built_in">cd</span> canal</span><br><span class="line"><span class="built_in">mkdir</span> canal-package canal-adapter canal-deployer</span><br></pre></td></tr></table></figure><h2 id="安装canal-deployer和canal-adapter"><a href="#安装canal-deployer和canal-adapter" class="headerlink" title="安装canal deployer和canal adapter"></a>安装canal deployer和canal adapter</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> canal-package</span><br><span class="line">wget https://github.com/alibaba/canal/releases/download/canal-1.1.8canal.deployer-1.1.8.tar.gz</span><br><span class="line">wget https://github.com/alibaba/canal/releases/download/canal-1.1.8/canal.adapter-1.1.8.tar.gz</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>tar -zxvf canal.adapter.tar.gz -C &#x2F;usr&#x2F;local&#x2F;canal&#x2F;canal-adapter<br>tar -zxvf canal.deployer.tar.gz -C &#x2F;usr&#x2F;local&#x2F;canal&#x2F;canal-deployer</p><p>github:<br><a class="link"   href="https://github.com/alibaba/canal/releases?page=1" >https://github.com/alibaba/canal/releases?page=1<i class="fas fa-external-link-alt"></i></a> </p><!-- wget  https://github.com/alibaba/canal/releases/download/canal-1.1.8-alpha-2/canal.adapter-1.1.8-SNAPSHOT.tar.gzwget  https://github.com/alibaba/canal/releases/download/canal-1.1.8-alpha-2/canal.deployer-1.1.8-SNAPSHOT.tar.gzwget https://github.com/alibaba/canal/releases/download/canal-1.1.7/canal.deployer-1.1.7.tar.gzwget https://github.com/alibaba/canal/releases/download/canal-1.1.7/canal.adapter-1.1.7.tar.gztar -zxvf canal.adapter-1.1.7.tar.gz -C /usr/local/canal/canal-adapter3tar -zxvf canal.deployer-1.1.7.tar.gz -C /usr/local/canal/canal-deployer3tar -zxvf canal.adapter-1.1.8-SNAPSHOT.tar.gz -C /usr/local/canal/canal-adapter1183tar -zxvf canal.deployer-1.1.8-SNAPSHOT.tar.gz -C /usr/local/canal/canal-deployer1183tar -zxvf canal.adapter-1.1.5.tar.gz -C /usr/local/canal/canal-adaptertar -zxvf canal.deployer-1.1.5.tar.gz -C /usr/local/canal/canal-deployer --><h2 id="配置和启动canal-deployer"><a href="#配置和启动canal-deployer" class="headerlink" title="配置和启动canal-deployer"></a>配置和启动canal-deployer</h2><h2 id="配置canal-deployer"><a href="#配置canal-deployer" class="headerlink" title="配置canal-deployer"></a>配置canal-deployer</h2><p>由于此次同步为MySQL数据库间的数据同步，所以此处不需要修改 canal.properties 配置文件，只需修改 instance.properties 即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-deployer/conf/example</span><br><span class="line">vi instance.properties</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># position info</span></span><br><span class="line">canal.instance.master.address= xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># username/password</span></span><br><span class="line">canal.instance.dbUsername=root</span><br><span class="line">canal.instance.dbPassword=123123</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># table regex</span></span><br><span class="line">canal.instance.filter.regex=.*\\..*</span><br></pre></td></tr></table></figure><p>说明</p><p> canal.id：设置Canal实例的唯一ID，建议使用UUID。</p><p> canal.ip：设置Canal实例的IP地址。</p><p> canal.port：设置Canal实例的端口号。</p><p> canal.destinations：设置Canal实例要连接的目标数据库地址和端口号，格式为&lt;协议：&#x2F;&#x2F;用户名：密码@IP地址：端口号&#x2F;数据库名。</p><p> canal.username：设置连接目标数据库的用户名。</p><p> canal.password：设置连接目标数据库的密码。</p><p> canal.driverClassName：设置连接目标数据库的驱动类名，例如oracle.jdbc.driver.OracleDriver。</p><p> canal.connectionCharset：设置连接目标数据库的字符集，例如UTF8。</p><h2 id="可能遇到的问题："><a href="#可能遇到的问题：" class="headerlink" title="可能遇到的问题："></a>可能遇到的问题：</h2><p>canal-deployer启动之后，如果在 logs 文件夹下没有 example 文件，参考如下情况说明：</p><h3 id="查看-usr-local-canal-canal-deployer-bin-文件夹下，是否存在以hs-err-pid开头的文件。"><a href="#查看-usr-local-canal-canal-deployer-bin-文件夹下，是否存在以hs-err-pid开头的文件。" class="headerlink" title="查看 &#x2F;usr&#x2F;local&#x2F;canal&#x2F;canal-deployer&#x2F;bin 文件夹下，是否存在以hs_err_pid开头的文件。"></a>查看 &#x2F;usr&#x2F;local&#x2F;canal&#x2F;canal-deployer&#x2F;bin 文件夹下，是否存在以hs_err_pid开头的文件。</h3><p>出现hs_err_pid开头的文件，主要原因有两个：<br>1&gt; 服务器内存不足，导致服务启动失败，出现OOM问题，这时需要增加服务器内存<br>2&gt; 服务器打开的线程数达到上限，这时需要修改线程上限，操作如下：<br>vi &#x2F;etc&#x2F;security&#x2F;limits.conf</p><p>修改内容可参考下面配置：</p><ul><li><pre><code>     soft    nproc          102400</code></pre></li><li><pre><code>     hard    nofile         102400</code></pre></li></ul><h3 id="上述配置参数说明："><a href="#上述配置参数说明：" class="headerlink" title="上述配置参数说明："></a>上述配置参数说明：</h3><p>第一列：linux系统用户名，*代表所有用户<br>第二列：软连接&#x2F;硬连接<br>第三列：类型，nproc 进程的数量&#x2F;nofile 文件打开数&#x2F;core-core 文件大小<br>第四列：数量</p><h3 id="bin文件夹下不存在以hs-err-pid开头的文件，查看logs文件夹下的canal文件夹下的canal-stdout-log文件，命令如下："><a href="#bin文件夹下不存在以hs-err-pid开头的文件，查看logs文件夹下的canal文件夹下的canal-stdout-log文件，命令如下：" class="headerlink" title="bin文件夹下不存在以hs_err_pid开头的文件，查看logs文件夹下的canal文件夹下的canal_stdout.log文件，命令如下："></a>bin文件夹下不存在以hs_err_pid开头的文件，查看logs文件夹下的canal文件夹下的canal_stdout.log文件，命令如下：</h3><p>cat &#x2F;usr&#x2F;local&#x2F;canal&#x2F;canal-deployer&#x2F;logs&#x2F;canal&#x2F;canal_stdout.log</p><p>若出现如下报错信息：</p><p>OpenJDK 64-Bit Server VM warning: Ignoring option PermSize; support was removed in 8.0<br>OpenJDK 64-Bit Server VM warning: Ignoring option MaxPermSize; support was removed in 8.0<br>OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.</p><h3 id="Unrecognized-VM-option-‘UseCMSCompactAtFullCollection’"><a href="#Unrecognized-VM-option-‘UseCMSCompactAtFullCollection’" class="headerlink" title="Unrecognized VM option ‘UseCMSCompactAtFullCollection’"></a>Unrecognized VM option ‘UseCMSCompactAtFullCollection’</h3><p>Error: Could not create the Java Virtual Machine.<br>Error: A fatal exception has occurred. Program will exit.</p><p>出现此报错的原因是由于当前服务器安装的jdk版本高于jdk8，此时需要修改 startup.sh 的启动参数，操作如下：</p><p>cd &#x2F;usr&#x2F;local&#x2F;canal&#x2F;canal-deployer&#x2F;bin<br>.&#x2F;stop.sh<br>vi startup.sh</p><h3 id="删除-XX-UseCMSCompactAtFullCollection-XX-UseFastAccessorMethods-参数"><a href="#删除-XX-UseCMSCompactAtFullCollection-XX-UseFastAccessorMethods-参数" class="headerlink" title="删除 -XX:+UseCMSCompactAtFullCollection -XX:+UseFastAccessorMethods 参数"></a>删除 -XX:+UseCMSCompactAtFullCollection -XX:+UseFastAccessorMethods 参数</h3><p>.&#x2F;startup.sh</p><h3 id="Unrecognized-VM-option-‘UseBiasedLocking’"><a href="#Unrecognized-VM-option-‘UseBiasedLocking’" class="headerlink" title="Unrecognized VM option ‘UseBiasedLocking’"></a>Unrecognized VM option ‘UseBiasedLocking’</h3><p>Error: Could not create the Java Virtual Machine.<br>Error: A fatal exception has occurred. Program will exit.  </p><h3 id="移除-UseBiasedLocking-选项"><a href="#移除-UseBiasedLocking-选项" class="headerlink" title="移除 UseBiasedLocking 选项"></a>移除 UseBiasedLocking 选项</h3><p>-XX:+UseBiasedLocking</p><h3 id="Unrecognized-VM-option-‘AggressiveOpts’"><a href="#Unrecognized-VM-option-‘AggressiveOpts’" class="headerlink" title="Unrecognized VM option ‘AggressiveOpts’"></a>Unrecognized VM option ‘AggressiveOpts’</h3><p>Error: Could not create the Java Virtual Machine.<br>Error: A fatal exception has occurred. Program will exit. </p><h3 id="Remove-XX-AggressiveOpts"><a href="#Remove-XX-AggressiveOpts" class="headerlink" title="Remove -XX:+AggressiveOpts"></a>Remove -XX:+AggressiveOpts</h3><p>canal.deployer-1.1.8-SNAPSHOT.tar.gz</p><p>com.alibaba.druid.pool.DruidDataSource 类未找到，导致 Canal 的 dataSource bean 初始化失败。</p><p>.&#x2F;startup.sh</p><h2 id="若需要同步某几张表，可以参考如下配置"><a href="#若需要同步某几张表，可以参考如下配置" class="headerlink" title="若需要同步某几张表，可以参考如下配置"></a>若需要同步某几张表，可以参考如下配置</h2><h2 id="同步某数据库test1下的user表-test2数据库下的所有表，所有库下所有表数据"><a href="#同步某数据库test1下的user表-test2数据库下的所有表，所有库下所有表数据" class="headerlink" title="同步某数据库test1下的user表,test2数据库下的所有表，所有库下所有表数据"></a>同步某数据库test1下的user表,test2数据库下的所有表，所有库下所有表数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">canal.instance.filter.regex=test1.user,test2\\..*,.*\\..*</span><br></pre></td></tr></table></figure><h2 id="启动canal-deployer"><a href="#启动canal-deployer" class="headerlink" title="启动canal-deployer"></a>启动canal-deployer</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-deployer/bin</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><p>查看日志确定是否启动成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-deployer/logs/example</span><br><span class="line"><span class="built_in">cat</span> example.log</span><br></pre></td></tr></table></figure><p>log内容…<br> [main] INFO  c.a.otter.canal.instance.core.AbstractCanalInstance - stop CannalInstance for null-example<br> [main] INFO  c.a.otter.canal.instance.core.AbstractCanalInstance - stop successful….<br>启动</p><h2 id="启动canal需要jdk"><a href="#启动canal需要jdk" class="headerlink" title="启动canal需要jdk"></a>启动canal需要jdk</h2><p>安装 OpenJDK</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line"></span><br><span class="line">apt search openjdk</span><br><span class="line"></span><br><span class="line">sudo apt install openjdk-17-jdk</span><br><span class="line"></span><br><span class="line">sudo apt install -y openjdk-17-jdk</span><br></pre></td></tr></table></figure><p><strong>手动下载并安装</strong><br>前往 Oracle JDK 下载页面，下载最新的 .tar.gz 包。<br><a class="link"   href="https://www.oracle.com/java/technologies/downloads/?er=221886" >https://www.oracle.com/java/technologies/downloads/?er=221886<i class="fas fa-external-link-alt"></i></a><br>下载完成后，解压缩文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvzf jdk-&lt;version&gt;-linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure><p>将 JDK 移动到 &#x2F;opt 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mv</span> jdk-&lt;version&gt; /opt/</span><br></pre></td></tr></table></figure><p>配置环境变量。在 ~&#x2F;.bashrc 中添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/opt/jdk-&lt;version&gt;</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>使配置生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>验证安装,确认安装成功，检查 Java 版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p><strong>卸载jdk</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg --list | grep -i jdk</span><br></pre></td></tr></table></figure><p>一旦知道了要卸载的JDK包的确切名称，使用apt-get命令卸载它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove your-jdk-package-name</span><br></pre></td></tr></table></figure><p>将your-jdk-package-name替换为从列表中找到的实际JDK包名称。<br>如果想同时删除配置文件，可以使用–purge选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge your-jdk-package-name</span><br></pre></td></tr></table></figure><p>最后，运行autoremove来清除系统中不再需要的依赖项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure><p>例如，如果安装的是OpenJDK 11，并且通过apt安装，可以使用以下命令来卸载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove openjdk-11-jdk</span><br><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure><h1 id="canal-deployer-和-canal-adapter-是-Canal-的两个独立模块，各自承担不同的功能："><a href="#canal-deployer-和-canal-adapter-是-Canal-的两个独立模块，各自承担不同的功能：" class="headerlink" title="canal-deployer 和 canal-adapter 是 Canal 的两个独立模块，各自承担不同的功能："></a>canal-deployer 和 canal-adapter 是 Canal 的两个独立模块，各自承担不同的功能：</h1><h2 id="canal-deployer"><a href="#canal-deployer" class="headerlink" title="canal-deployer"></a>canal-deployer</h2><p><strong>功能：</strong>canal-deployer 是 Canal 的核心组件，用于从 MySQL 数据库中读取 binlog，并解析 binlog 事件。<br><strong>作用：</strong>主要负责数据的实时捕获和解析。它将从 MySQL 实例捕获的 binlog 数据转换成 Canal 可以处理的格式，并通过网络或其他方式将这些数据推送给下游消费者。<br><strong>配置：</strong>canal-deployer 需要配置连接信息（如 MySQL 的地址、用户名、密码等）以及相关的过滤条件，比如要监控的表和过滤的字段。<br><strong>应用场景：</strong>适用于需要捕获 MySQL 数据变更的场景，比如数据库的实时增量数据同步和数据监控。</p><h2 id="canal-adapter"><a href="#canal-adapter" class="headerlink" title="canal-adapter"></a>canal-adapter</h2><p><strong>功能：</strong>canal-adapter 负责将 Canal 捕获并解析的数据，适配并同步到不同的下游目标。<br><strong>作用：</strong>可以将数据写入到 ElasticSearch、Kafka、HBase 等多种目标，起到数据同步的桥梁作用。<br><strong>配置：</strong>canal-adapter 提供了丰富的适配器配置（如 ES、Kafka、RocketMQ 等），可以根据业务需求配置同步的字段映射、数据转换和过滤规则。<br><strong>应用场景：</strong>适用于需要将 MySQL 的 binlog 数据实时同步到其他数据存储或消息队列的场景，比如数据仓库同步、实时索引等。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>canal-deployer 专注于从 MySQL 读取并解析 binlog 数据。<br>canal-adapter 则将解析后的数据推送或同步到下游目标，起到数据适配和转换的作用。</p><h1 id="配置和启动canal-adapter"><a href="#配置和启动canal-adapter" class="headerlink" title="配置和启动canal-adapter"></a>配置和启动canal-adapter</h1><h2 id="配置canal-adapter"><a href="#配置canal-adapter" class="headerlink" title="配置canal-adapter"></a>配置canal-adapter</h2><p> 修改application.yml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-adapter/conf</span><br><span class="line">vi application.yml</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># canal tcp consumer</span></span><br><span class="line"><span class="comment"># 修改位置：Canal deployer所在主机IP</span></span><br><span class="line">canal.tcp.server.host: 192.168.91.135:11111</span><br></pre></td></tr></table></figure><p>修改位置：添加源库配置信息，此处为同步同库下所有表信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">srcDataSources:</span><br><span class="line">  defaultDS:</span><br><span class="line">    url: jdbc:mysql://124.219.119.xxx:3306/IMDB?useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf8mb4&amp;autoReconnect=<span class="literal">true</span>&amp;useSSL=<span class="literal">false</span></span><br><span class="line">    username: root</span><br><span class="line">    password: 123123.xx</span><br><span class="line">canalAdapters:</span><br><span class="line">- instance: example <span class="comment"># canal instance Name or mq topic name</span></span><br><span class="line">  <span class="built_in">groups</span>:</span><br><span class="line">  - groupId: g1</span><br><span class="line">    outerAdapters:</span><br><span class="line">    - name: logger</span><br><span class="line">    - name: rdb</span><br><span class="line">      key: mysql1</span><br><span class="line">      properties:</span><br><span class="line">        jdbc.driverClassName: com.mysql.jdbc.Driver</span><br><span class="line">        jdbc.url: jdbc:mysql://192.168.80.xxx/IMDB?useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf8mb4&amp;autoReconnect=<span class="literal">true</span>&amp;useSSL=<span class="literal">false</span></span><br><span class="line">        jdbc.username: root</span><br><span class="line">        jdbc.password: 123123.xx</span><br></pre></td></tr></table></figure><p>说明: </p><p>其中 outAdapter 的配置: name统一为rdb, key为对应的数据源的唯一标识需和下面的表映射文件中的outerAdapterKey对应, properties为目标库jdbc的相关参数</p><p>adapter将会自动加载 conf&#x2F;rdb 下的所有.yml结尾的表映射配置文件</p><h2 id="修改canal-adapter-conf-rdb文件夹下的yml文件"><a href="#修改canal-adapter-conf-rdb文件夹下的yml文件" class="headerlink" title="修改canal-adapter&#x2F;conf&#x2F;rdb文件夹下的yml文件"></a>修改canal-adapter&#x2F;conf&#x2F;rdb文件夹下的yml文件</h2><p>说明：canal-adapter&#x2F;conf&#x2F;rdb文件夹下的yml文件可以同步数据库下的一张表，也可以同步数据库下的所有表(此处的前提是：同步数据的数据库与主库的schema一致)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-adapter/conf/rdb</span><br><span class="line">.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## Mirror schema synchronize config</span></span><br><span class="line">dataSourceKey: defaultDS</span><br><span class="line">destination: example</span><br><span class="line">groupId: g1</span><br><span class="line">outerAdapterKey: mysql1</span><br><span class="line">concurrent: <span class="literal">true</span></span><br><span class="line">dbMapping:</span><br><span class="line">  mirrorDb: <span class="literal">true</span></span><br><span class="line">  database: <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h2 id="启动canal-adapter"><a href="#启动canal-adapter" class="headerlink" title="启动canal-adapter"></a>启动canal-adapter</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-adapter/bin</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><p>查看日志信息，确保正常启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/canal/canal-adapter/logs/adapter</span><br><span class="line"><span class="built_in">cat</span> adapter.log</span><br></pre></td></tr></table></figure><p>log err<br>[main] ERROR org.springframework.boot.SpringApplication - Application run failed<br>org.yaml.snakeyaml.error.YAMLException: </p><p>如果没有log 或启动不成功</p><h2 id="移除未支持的-JVM-参数"><a href="#移除未支持的-JVM-参数" class="headerlink" title="移除未支持的 JVM 参数"></a>移除未支持的 JVM 参数</h2><p>-XX:+UseFastAccessorMethods<br>-XX:+PrintAdaptiveSizePolicy<br>-XX:+PrintTenuringDistribution</p><p> 参考1</p><h2 id="去掉-XX-AggressiveOpts-XX-UseBiasedLocking"><a href="#去掉-XX-AggressiveOpts-XX-UseBiasedLocking" class="headerlink" title="去掉  -XX:+AggressiveOpts -XX:-UseBiasedLocking"></a>去掉  -XX:+AggressiveOpts -XX:-UseBiasedLocking</h2><p>-XX:+UseFastAccessorMethods </p><p>去掉<br>str&#x3D;<code>file -L $JAVA | grep 64-bit</code></p><p>JAVA_OPTS&#x3D;”$JAVA_OPTS -Xss1m  -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath&#x3D;$base&#x2F;logs”<br>if [ $JavaVersion -ge 11 ] ; then<br>  #JAVA_OPTS&#x3D;”$JAVA_OPTS -Xlog:gc*:$base_log&#x2F;gc.log:time “<br>  JAVA_OPTS&#x3D;”$JAVA_OPTS”<br>else<br>  #JAVA_OPTS&#x3D;”$JAVA_OPTS -Xloggc:$base&#x2F;logs&#x2F;canal&#x2F;gc.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCApplicationStoppedTime”<br>  JAVA_OPTS&#x3D;”$JAVA_OPTS -XX:+PrintAdaptiveSizePolicy -XX:+PrintTenuringDistribution”<br>fi</p><!--  canal-adapter 时，启动步骤如下：1. 准备工作确保已经完成以下事项：下载了 Canal 的 adapter 包（通常在 Canal GitHub 或相关资源中可以找到）。配置了 Canal 服务并已成功启动。MySQL 数据库开启了 binlog（Canal 依赖 binlog 日志进行数据捕获）。2. 配置 Canal Adapter（1）解压 canal.adapter 压缩包解压 Canal Adapter 的 ZIP 或 TAR 包，目录结构通常如下：python复制代码canal.adapter/├── conf/│   ├── application.yml│   ├── instance/│   │   ├── example/│   │   │   ├── rdb/│   │   │   │   └── rdb.yml│   │   │   └── es/│   │   │       └── es.yml├── lib/├── logs/└── bin/（2）配置 application.yml在 conf/application.yml 中，配置 Canal Server 和适配器实例的信息。示例配置如下：yaml复制代码server:  port: 8081 # Adapter 运行端口canal.conf:  mode: tcp  canalAdapters:    - instance: example # Canal Server 的 instance 名称      groups:        - groupId: g1          outerAdapters:            - name: rdb              key: mysql1              properties:                jdbc.driverClassName: com.mysql.cj.jdbc.Driver                jdbc.url: jdbc:mysql://127.0.0.1:3306/your_database?useUnicode=true                jdbc.username: your_username                jdbc.password: your_password（3）实例配置（instance 文件夹）根据的需求（如同步到数据库或 Elasticsearch），配置适配器。例如：rdb.yml：用于 RDB（关系型数据库）。es.yml：用于 Elasticsearch。3. 启动 Canal Adapter进入 canal.adapter/bin 目录并执行以下命令：（1）Linux/MacOSbash复制代码sh startup.sh（2）Windowscmd复制代码startup.bat4. 验证服务是否启动检查日志：logs/canal.adapter.log，确认是否有启动成功的日志。使用浏览器访问：http://localhost:8081，如果显示接口信息说明服务启动成功。5. 注意事项确保 Canal Server 已正常运行，Adapter 才能正常连接。配置文件中的端口号、数据库信息等要与实际环境匹配。如果 Adapter 无法连接 Canal Server，检查网络连通性以及 Canal Server 的配置是否允许连接。startupjdk171. 移除已废弃的 JVM 参数移除：bash复制代码-XX:+AggressiveOpts原因：AggressiveOpts 已被 JDK 17 移除。修改后：bash复制代码JAVA_OPTS="$JAVA_OPTS -Xss1m -XX:-UseBiasedLocking -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$base/logs"2. 移除未支持的 JVM 参数移除：bash复制代码-XX:+UseFastAccessorMethods-XX:+PrintAdaptiveSizePolicy-XX:+PrintTenuringDistribution原因：这些参数在 JDK 17 中已经被废弃。修改后：bash复制代码JAVA_OPTS="$JAVA_OPTS -Xss1m -XX:-UseBiasedLocking -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=$base/logs"3. 调整 G1 GC 相关参数如果脚本中启用了 G1 GC，建议调整为适合 JDK 17 的参数：原始 G1 参数：bash复制代码JAVA_OPTS="-server -Xms2g -Xmx3g -XX:+UseG1GC -XX:MaxGCPauseMillis=250 -XX:+UseGCOverheadLimit -XX:+ExplicitGCInvokesConcurrent $JAVA_OPTS"修改后：bash复制代码JAVA_OPTS="-server -Xms2g -Xmx3g -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseGCOverheadLimit $JAVA_OPTS"移除了 -XX:+ExplicitGCInvokesConcurrent，因为在 JDK 17 中已经不推荐使用。4. 替换 PermGen 相关参数JDK 8 及之后移除了 PermGen，改用 Metaspace。因此，需要调整以下参数：原始代码：bash复制代码-XX:PermSize=96m -XX:MaxPermSize=256m修改后：bash复制代码-XX:MetaspaceSize=96m -XX:MaxMetaspaceSize=256m5. 确保编码配置有效JDK 17 默认支持 UTF-8 文件编码，但建议显式指定编码：确保存在以下参数：bash复制代码-Dfile.encoding=UTF-86. 校验 JAVA_DEBUG_OPT 配置如果需要调试，确保以下配置使用正确的格式：bash复制代码JAVA_DEBUG_OPT="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:$DEBUG_PORT"这是 JDK 17 调试的推荐格式。 --><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">current_path=`<span class="built_in">pwd</span>`</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;`uname`&quot;</span> <span class="keyword">in</span></span><br><span class="line">    Linux)</span><br><span class="line">bin_abs_path=$(<span class="built_in">readlink</span> -f $(<span class="built_in">dirname</span> <span class="variable">$0</span>))</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">bin_abs_path=`<span class="built_in">cd</span> $(<span class="built_in">dirname</span> <span class="variable">$0</span>); <span class="built_in">pwd</span>`</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">base=<span class="variable">$&#123;bin_abs_path&#125;</span>/..</span><br><span class="line"><span class="built_in">export</span> LANG=en_US.UTF-8</span><br><span class="line"><span class="built_in">export</span> BASE=<span class="variable">$base</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$base</span>/bin/adapter.pid ] ; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;found adapter.pid , Please run stop.sh first ,then startup.sh&quot;</span> 2&gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$base</span>/logs ] ; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$base</span>/logs</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## set java path</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$JAVA</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">  JAVA=$(<span class="built_in">which</span> java)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">ALIBABA_JAVA=<span class="string">&quot;/usr/alibaba/java/bin/java&quot;</span></span><br><span class="line">TAOBAO_JAVA=<span class="string">&quot;/opt/taobao/java/bin/java&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$JAVA</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> [ -f <span class="variable">$ALIBABA_JAVA</span> ] ; <span class="keyword">then</span></span><br><span class="line">  JAVA=<span class="variable">$ALIBABA_JAVA</span></span><br><span class="line">  <span class="keyword">elif</span> [ -f <span class="variable">$TAOBAO_JAVA</span> ] ; <span class="keyword">then</span></span><br><span class="line">  JAVA=<span class="variable">$TAOBAO_JAVA</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Cannot find a Java JDK. Please set either set JAVA or put java (&gt;=1.5) in your PATH.&quot;</span> 2&gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$#</span>&quot;</span></span><br><span class="line"><span class="keyword">in</span></span><br><span class="line">0 )</span><br><span class="line">  ;;</span><br><span class="line">2 )</span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;debug&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    DEBUG_PORT=<span class="variable">$2</span></span><br><span class="line">    DEBUG_SUSPEND=<span class="string">&quot;n&quot;</span></span><br><span class="line">    JAVA_DEBUG_OPT=<span class="string">&quot;-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=<span class="variable">$DEBUG_PORT</span>,server=y,suspend=<span class="variable">$DEBUG_SUSPEND</span>&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  ;;</span><br><span class="line">* )</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;THE PARAMETERS MUST BE TWO OR LESS.PLEASE CHECK AGAIN.&quot;</span></span><br><span class="line">  <span class="built_in">exit</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">JavaVersion=`<span class="variable">$JAVA</span> -version 2&gt;&amp;1 |awk <span class="string">&#x27;NR==1&#123; gsub(/&quot;/,&quot;&quot;); print $3 &#125;&#x27;</span> | awk  -F <span class="string">&#x27;.&#x27;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>`</span><br><span class="line">str=`file -L <span class="variable">$JAVA</span> | grep 64-bit`</span><br><span class="line"></span><br><span class="line">JAVA_OPTS=<span class="string">&quot;<span class="variable">$JAVA_OPTS</span> -Xss1m -XX:-UseBiasedLocking -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=<span class="variable">$base</span>/logs&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$JavaVersion</span> -ge 11 ] ; <span class="keyword">then</span></span><br><span class="line">  <span class="comment">#JAVA_OPTS=&quot;$JAVA_OPTS -Xlog:gc*:$base_log/gc.log:time &quot;</span></span><br><span class="line">  JAVA_OPTS=<span class="string">&quot;<span class="variable">$JAVA_OPTS</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="comment">#JAVA_OPTS=&quot;$JAVA_OPTS -Xloggc:$base/logs/canal/gc.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCApplicationStoppedTime&quot;   -XX:+UseFastAccessorMethods -XX:+PrintAdaptiveSizePolicy -XX:+PrintTenuringDistribution</span></span><br><span class="line">  JAVA_OPTS=<span class="string">&quot;<span class="variable">$JAVA_OPTS</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$str</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$JavaVersion</span> -ge 11 ] ; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># For G1</span></span><br><span class="line">    JAVA_OPTS=<span class="string">&quot;-server -Xms2g -Xmx3g -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseGCOverheadLimit <span class="variable">$JAVA_OPTS</span>&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  JAVA_OPTS=<span class="string">&quot;-server -Xms2g -Xmx3g -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseGCOverheadLimit <span class="variable">$JAVA_OPTS</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">JAVA_OPTS=<span class="string">&quot;-server -Xms2g -Xmx3g -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseGCOverheadLimit <span class="variable">$JAVA_OPTS</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">JAVA_OPTS=<span class="string">&quot; <span class="variable">$JAVA_OPTS</span> -Djava.awt.headless=true -Djava.net.preferIPv4Stack=true -Dfile.encoding=UTF-8&quot;</span></span><br><span class="line">ADAPTER_OPTS=<span class="string">&quot;-DappName=canal-adapter&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$base</span>/lib/*;</span><br><span class="line">    <span class="keyword">do</span> CLASSPATH=<span class="variable">$i</span>:<span class="string">&quot;<span class="variable">$CLASSPATH</span>&quot;</span>;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">CLASSPATH=<span class="string">&quot;<span class="variable">$base</span>/conf:<span class="variable">$CLASSPATH</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cd to <span class="variable">$bin_abs_path</span> for workaround relative path&quot;</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$bin_abs_path</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> CLASSPATH :<span class="variable">$CLASSPATH</span></span><br><span class="line"><span class="variable">$JAVA</span> <span class="variable">$JAVA_OPTS</span> <span class="variable">$JAVA_DEBUG_OPT</span> <span class="variable">$ADAPTER_OPTS</span> -classpath .:<span class="variable">$CLASSPATH</span> com.alibaba.otter.canal.adapter.launcher.CanalAdapterApplication 1&gt;&gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="built_in">echo</span> $! &gt; <span class="variable">$base</span>/bin/adapter.pid</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cd to <span class="variable">$current_path</span> for continue&quot;</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$current_path</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>.&#x2F;startup.sh</p><p>启动成功<strong>log</strong></p><p>2024-11-15 16:43:42.033 [main] INFO  c.a.o.canal.adapter.launcher.loader.CanalAdapterLoader - Start adapter for canal-client mq topic: example-g1 succeed<br>2024-11-15 16:43:42.034 [main] INFO  c.a.o.canal.adapter.launcher.loader.CanalAdapterService - ## the canal client adapters are running now ……<br>2024-11-15 16:43:42.035 [Thread-3] INFO  c.a.otter.canal.adapter.launcher.loader.AdapterProcessor - &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt; Start to connect destination: example &lt;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>2024-11-15 16:43:42.047 [main] INFO  c.a.otter.canal.adapter.launcher.CanalAdapterApplication - Started CanalAdapterApplication in 1.721 seconds (JVM running for 2.038)<br>2024-11-15 16:43:42.109 [Thread-3] INFO  c.a.otter.canal.adapter.launcher.loader.AdapterProcessor - &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt; Subscribe destination: example succeed &lt;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><h1 id="插入原sql则可以看到-canal的数据库也插入"><a href="#插入原sql则可以看到-canal的数据库也插入" class="headerlink" title="插入原sql则可以看到 canal的数据库也插入"></a>插入原sql则可以看到 canal的数据库也插入</h1><p>在主库test数据库下的user表中插入数据，查看canal所在数据库test下的user表中是否同步。</p><p><strong>Canal 依赖主键或唯一键来确定同步数据</strong><br>如果有新增唯一键，则也需要bak到备份的数据库中才能正确备份</p><!--ss -tulnhttps://www.cnblogs.com/cndarren/p/16318728.html-->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Canal&quot;&gt;&lt;a href=&quot;#Canal&quot; class=&quot;headerlink&quot; title=&quot;Canal&quot;&gt;&lt;/a&gt;Canal&lt;/h1&gt;&lt;p&gt;是阿里巴巴开源的一个数据库binlog解析工具，它能够捕获并解析MySQL等数据库的增量数据变化（即binlog），</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="mysql" scheme="https://banjinmei.github.io/tags/mysql/"/>
    
    <category term="canal" scheme="https://banjinmei.github.io/tags/canal/"/>
    
  </entry>
  
  <entry>
    <title>.NET MemoryPack</title>
    <link href="https://banjinmei.github.io/2024/11/14/NET-MemoryPack/"/>
    <id>https://banjinmei.github.io/2024/11/14/NET-MemoryPack/</id>
    <published>2024-11-13T16:57:37.000Z</published>
    <updated>2024-11-13T16:59:25.442Z</updated>
    
    <content type="html"><![CDATA[<p><strong>MemoryPack</strong><br>是一个高效的数据序列化库，它专注于性能优化，适用于需要快速序列化和反序列化的场景。这个库是由 Yuki Yogo 开发的，并且在 .NET 社区中获得了相当的关注。MemoryPack 支持<strong>零拷贝</strong>（zero-copy）读取，这意味着可以在不需要额外内存分配的情况下直接从原始字节数据中读取值。</p><p>MemoryPack使用示例，包括定义一个可序列化的类、序列化对象以及反序列化回对象的过程。</p><h1 id="安装-MemoryPack"><a href="#安装-MemoryPack" class="headerlink" title="安装 MemoryPack"></a>安装 MemoryPack</h1><p>首先，需要安装 MemoryPack 库。可以通过 NuGet 包管理器来安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package MemoryPack</span><br></pre></td></tr></table></figure><p>或者在 Visual Studio 中使用 NuGet 包管理器界面来安装。</p><h1 id="定义可序列化的类"><a href="#定义可序列化的类" class="headerlink" title="定义可序列化的类"></a>定义可序列化的类</h1><p>为了使一个类能够被 MemoryPack 序列化，需要为该类添加 [MemoryPackable] 属性，并为类中的每个字段或属性添加 [MemoryPackIgnore] 属性（如果想要忽略某些字段或属性的话）。这里有一个简单的例子：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> MemoryPack;</span><br><span class="line"></span><br><span class="line">[<span class="meta">MemoryPackable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">MemoryPackIgnore</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> NotSerializedProperty &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：partial 关键字是必须的，因为 MemoryPack 在编译时会生成一些额外的代码来支持序列化&#x2F;反序列化。</p><h1 id="序列化和反序列化"><a href="#序列化和反序列化" class="headerlink" title="序列化和反序列化"></a>序列化和反序列化</h1><p>接下来，我们可以创建一个 Person 对象，然后使用 MemoryPack 将其序列化为字节数组，再从字节数组反序列化回 Person 对象。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> MemoryPack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建一个 Person 实例</span></span><br><span class="line">        <span class="keyword">var</span> person = <span class="keyword">new</span> Person</span><br><span class="line">        &#123;</span><br><span class="line">            Name = <span class="string">&quot;John Doe&quot;</span>,</span><br><span class="line">            Age = <span class="number">30</span>,</span><br><span class="line">            NotSerializedProperty = <span class="string">&quot;This will not be serialized&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        <span class="built_in">byte</span>[] serialized = MemoryPackSerializer.Serialize(person);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化  （零拷贝）</span></span><br><span class="line">        Person deserializedPerson = MemoryPackSerializer.Deserialize&lt;Person&gt;(serialized);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输出结果</span></span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;Name: <span class="subst">&#123;deserializedPerson.Name&#125;</span>, Age: <span class="subst">&#123;deserializedPerson.Age&#125;</span>&quot;</span>);</span><br><span class="line">        <span class="comment">// 注意：NotSerializedProperty 不会被输出，因为它没有被序列化</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意事项<br>MemoryPack 支持大多数基本类型和复杂类型，但是也有一些限制，例如不支持循环引用的对象图。<br>如果的项目中存在多个需要序列化的类，每个类都需要标记 [MemoryPackable] 并且是 partial 类型。<br>由于 MemoryPack 使用了源生成器（source generators），因此它在编译时会生成额外的代码，这可能会稍微增加构建时间，但可以显著提高运行时的性能。<br>以上就是一个使用 MemoryPack 进行序列化和反序列化的简单示例。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;MemoryPack&lt;/strong&gt;&lt;br&gt;是一个高效的数据序列化库，它专注于性能优化，适用于需要快速序列化和反序列化的场景。这个库是由 Yuki Yogo 开发的，并且在 .NET 社区中获得了相当的关注。MemoryPack 支持&lt;strong&gt;零拷贝</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>.NET ILogger</title>
    <link href="https://banjinmei.github.io/2024/11/14/NET-ILogger/"/>
    <id>https://banjinmei.github.io/2024/11/14/NET-ILogger/</id>
    <published>2024-11-13T16:55:06.000Z</published>
    <updated>2024-11-13T16:56:46.669Z</updated>
    
    <content type="html"><![CDATA[<p>ILogger<T> 是 ASP.NET Core 中的一个接口，用于记录应用程序的日志信息。它是一个泛型接口，其中 T 是日志记录的上下文类型。通常情况下，会使用 ILogger 接口而不是 ILogger<T>，除非需要将特定的上下文类型传递给日志记录器。</p><p>ILogger 的示例：</p><h1 id="1-注入-ILogger"><a href="#1-注入-ILogger" class="headerlink" title="1. 注入 ILogger"></a>1. 注入 ILogger</h1><p>在的控制器、服务或其他依赖注入组件中，可以注入 ILogger<T> 或 ILogger。例如，在控制器中注入 ILogger<YourController>：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">YourController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> ILogger&lt;YourController&gt; _logger;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">YourController</span>(<span class="params">ILogger&lt;YourController&gt; logger</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _logger = logger;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者，如果不需要特定的上下文类型，可以注入 ILogger：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">YourService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">readonly</span> ILogger _logger;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">YourService</span>(<span class="params">ILogger logger</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        _logger = logger;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-记录日志"><a href="#2-记录日志" class="headerlink" title="2. 记录日志"></a>2. 记录日志</h1><p>使用 _logger 对象记录不同级别的日志，例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_logger.LogInformation(<span class="string">&quot;This is an information message.&quot;</span>);</span><br><span class="line">_logger.LogWarning(<span class="string">&quot;This is a warning message.&quot;</span>);</span><br><span class="line">_logger.LogError(<span class="string">&quot;This is an error message.&quot;</span>, exception);</span><br></pre></td></tr></table></figure><h1 id="3-配置日志记录"><a href="#3-配置日志记录" class="headerlink" title="3. 配置日志记录"></a>3. 配置日志记录</h1><p>在 appsettings.json 或其他配置文件中配置日志记录级别和输出目标。例如，在 appsettings.Development.json 中：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;System&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Information&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Microsoft&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Warning&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这将设置默认日志级别为 Debug，系统日志级别为 Information，Microsoft 日志级别为 Warning。</p><p>还可以配置日志记录器将日志输出到控制台、文件或其他目标。例如，在 appsettings.json 中：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Logging&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Console&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;IncludeScopes&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Debug&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Information&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Info&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Warning&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Warning&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Error&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Error&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;LogLevel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;Default&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Critical&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这将配置控制台日志记录器，并为不同级别的日志设置不同的输出级别。</p><p>总之，ILogger 和 ILogger<T> 提供了一种灵活且强大的方式来记录应用程序的日志信息。通过配置不同的日志级别和输出目标，可以轻松地满足各种日志记录需求。</p><h2 id="日志级别和分类："><a href="#日志级别和分类：" class="headerlink" title="日志级别和分类："></a>日志级别和分类：</h2><p>ILogger 提供了日志级别的概念，如 Trace、Debug、Info、Warning、Error 和 Critical。这允许开发者根据需要记录不同严重程度的信息，并且可以在配置中设置日志级别，以便在不同环境中（如开发、测试、生产）显示或隐藏某些级别的日志。<br>Console.WriteLine 只是简单地将文本输出到控制台，没有日志级别的概念。</p><h2 id="可配置性："><a href="#可配置性：" class="headerlink" title="可配置性："></a>可配置性：</h2><p>ILogger 是可配置的，可以配置日志记录器将日志输出到不同的目标（如文件、数据库、网络服务等），并且可以设置不同的格式化选项。<br>Console.WriteLine 只是将输出发送到控制台，没有可配置的输出目标或格式化选项。</p><h2 id="结构化日志："><a href="#结构化日志：" class="headerlink" title="结构化日志："></a>结构化日志：</h2><p>ILogger 支持结构化日志记录，这意味着可以记录包含键值对的对象，这些对象可以更容易地被日志分析工具解析和查询。<br>Console.WriteLine 只能输出文本字符串，不支持结构化日志。</p><h2 id="集成和扩展性："><a href="#集成和扩展性：" class="headerlink" title="集成和扩展性："></a>集成和扩展性：</h2><p>ILogger 是 ASP.NET Core 和许多其他 .NET 应用程序框架的一部分，它与其他框架组件（如依赖注入、中间件等）集成良好，并且可以通过第三方库轻松扩展。<br>Console.WriteLine 是 .NET 基础类库的一部分，但它不特定于任何特定的应用程序框架，也没有集成的概念。</p><h2 id="异常处理："><a href="#异常处理：" class="headerlink" title="异常处理："></a>异常处理：</h2><p>使用 ILogger 记录异常时，可以将异常对象作为参数传递，这样日志记录器可以捕获并记录异常的详细信息。<br>Console.WriteLine 只能手动将异常信息转换为字符串，然后输出。</p><p><strong>总结：</strong></p><p>ILogger 提供了更丰富的日志记录功能，包括日志级别、可配置性、结构化日志支持以及与框架的良好集成。<br>Console.WriteLine 更简单易用，适用于快速原型开发或简单的日志记录需求。<br>在大多数情况下，对于生产环境中的应用程序，推荐使用 ILogger，因为它提供了更多的灵活性和控制能力。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ILogger&lt;T&gt; 是 ASP.NET Core 中的一个接口，用于记录应用程序的日志信息。它是一个泛型接口，其中 T 是日志记录的上下文类型。通常情况下，会使用 ILogger 接口而不是 ILogger&lt;T&gt;，除非需要将特定的上下文类型传递给日志记录器。&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>Bogus-.NET Fake Data</title>
    <link href="https://banjinmei.github.io/2024/11/10/Bogus-NET-Fake-Data/"/>
    <id>https://banjinmei.github.io/2024/11/10/Bogus-NET-Fake-Data/</id>
    <published>2024-11-10T13:09:29.000Z</published>
    <updated>2024-11-10T13:11:34.231Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Bogus</strong><br>快速生成模拟数据<br>适用于单元测试、原型设计、演示数据准备。</p><h1 id="1-NuGet-安装-Bogus"><a href="#1-NuGet-安装-Bogus" class="headerlink" title="1.NuGet 安装 Bogus"></a>1.NuGet 安装 Bogus</h1><h1 id="2-简单使用"><a href="#2-简单使用" class="headerlink" title="2.简单使用"></a>2.简单使用</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span> faker = <span class="keyword">new</span> Faker();</span><br><span class="line"><span class="comment">//   var faker = new Faker(&quot;zh_CN&quot;); ////中文</span></span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Name: <span class="subst">&#123;faker.Name.FullName()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Email: <span class="subst">&#123;faker.Internet.Email()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Phone: <span class="subst">&#123;faker.Phone.PhoneNumber()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Address: <span class="subst">&#123;faker.Address.FullAddress()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Company: <span class="subst">&#123;faker.Company.CompanyName()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Catch Phrase: <span class="subst">&#123;faker.Company.CatchPhrase()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;BS: <span class="subst">&#123;faker.Company.Bs()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Product: <span class="subst">&#123;faker.Commerce.Product()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Price: <span class="subst">&#123;faker.Commerce.Price()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Credit Card: <span class="subst">&#123;faker.Finance.CreditCardNumber()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Bitcoin Address: <span class="subst">&#123;faker.Finance.BitcoinAddress()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;User Agent: <span class="subst">&#123;faker.Internet.UserAgent()&#125;</span>&quot;</span>);</span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Color: <span class="subst">&#123;faker.Commerce.Color()&#125;</span>&quot;</span>); </span><br><span class="line"> Console.WriteLine(<span class="string">$&quot;Time Zone: <span class="subst">&#123;faker.Date.TimeZoneString()&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="3-自定义类使用"><a href="#3-自定义类使用" class="headerlink" title="3.自定义类使用"></a>3.自定义类使用</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TUser</span> </span><br><span class="line">   &#123; </span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> FirstName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> LastName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">string</span> Email &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">       <span class="keyword">public</span> DateTime Birth &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟数据</span></span><br><span class="line">           <span class="keyword">var</span> faker = <span class="keyword">new</span> Faker&lt;TUser&gt;().RuleFor(u =&gt; u.Id, f =&gt; f.Random.Int(<span class="number">1</span>, <span class="number">9999</span>))</span><br><span class="line">               .RuleFor(u =&gt; u.FirstName, f =&gt; f.Name.FirstName())</span><br><span class="line">               .RuleFor(u =&gt; u.LastName, f =&gt; f.Name.LastName())</span><br><span class="line">               .RuleFor(u =&gt; u.Email, (f, u) =&gt; f.Internet.Email(u.FirstName, u.LastName))</span><br><span class="line">               .RuleFor(u =&gt; u.Birth, f =&gt; f.Date.Past(<span class="number">50</span>));</span><br><span class="line">           TUser user = faker.Generate(); </span><br><span class="line">           Console.WriteLine(<span class="string">$&quot;Id: <span class="subst">&#123;user.Id&#125;</span>&quot;</span>); </span><br><span class="line">           Console.WriteLine(<span class="string">$&quot;Name: <span class="subst">&#123;user.FirstName&#125;</span> <span class="subst">&#123;user.LastName&#125;</span>&quot;</span>);</span><br><span class="line">           Console.WriteLine(<span class="string">$&quot;Email: <span class="subst">&#123;user.Email&#125;</span>&quot;</span>);</span><br><span class="line">           Console.WriteLine(<span class="string">$&quot;Date of Birth: <span class="subst">&#123;user.Birth:d&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟多个</span></span><br><span class="line">     List&lt;TUser&gt; users = faker.Generate(<span class="number">10</span>);<span class="comment">//10count</span></span><br><span class="line">     <span class="keyword">foreach</span> (<span class="keyword">var</span> user <span class="keyword">in</span> users) &#123; Console.WriteLine(<span class="string">$&quot;<span class="subst">&#123;user.FirstName&#125;</span> <span class="subst">&#123;user.LastName&#125;</span> (<span class="subst">&#123;user.Email&#125;</span>)&quot;</span>); &#125;</span><br></pre></td></tr></table></figure><h1 id="4-复杂对象"><a href="#4-复杂对象" class="headerlink" title="4.复杂对象"></a>4.复杂对象</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TOrderItem</span> </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> ProductName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Quantity &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">decimal</span> Price &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TOrder</span> </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Id &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> TUser Customer &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> DateTime OrderDate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> List&lt;TOrderItem&gt; Items &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">decimal</span> TotalAmount &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模拟数据</span></span><br><span class="line">     <span class="keyword">var</span> userFaker = <span class="keyword">new</span> Faker&lt;TUser&gt;()</span><br><span class="line">         .RuleFor(u =&gt; u.Id, f =&gt; f.Random.Int(<span class="number">1</span>, <span class="number">999</span>))</span><br><span class="line">         .RuleFor(u =&gt; u.FirstName, f =&gt; f.Name.FirstName())</span><br><span class="line">         .RuleFor(u =&gt; u.LastName, f =&gt; f.Name.LastName())</span><br><span class="line">         .RuleFor(u =&gt; u.Email, (f, u) =&gt; f.Internet.Email(u.FirstName, u.LastName));</span><br><span class="line">     <span class="keyword">var</span> orderItemFaker = <span class="keyword">new</span> Faker&lt;TOrderItem&gt;()</span><br><span class="line">         .RuleFor(oi =&gt; oi.ProductName, f =&gt; f.Commerce.ProductName())</span><br><span class="line">         .RuleFor(oi =&gt; oi.Quantity, f =&gt; f.Random.Int(<span class="number">1</span>, <span class="number">888</span>))</span><br><span class="line">         .RuleFor(oi =&gt; oi.Price, f =&gt; <span class="built_in">decimal</span>.Parse(f.Commerce.Price()));</span><br><span class="line">     <span class="keyword">var</span> orderFaker = <span class="keyword">new</span> Faker&lt;TOrder&gt;()</span><br><span class="line">         .RuleFor(o =&gt; o.Id, f =&gt; f.Random.Int(<span class="number">10000</span>, <span class="number">99999</span>))</span><br><span class="line">         .RuleFor(o =&gt; o.Customer, f =&gt; userFaker.Generate())</span><br><span class="line">         .RuleFor(o =&gt; o.OrderDate, f =&gt; f.Date.Recent(<span class="number">30</span>))</span><br><span class="line">         .RuleFor(o =&gt; o.Items, f =&gt; orderItemFaker.Generate(f.Random.Int(<span class="number">1</span>, <span class="number">5</span>)))</span><br><span class="line">         .RuleFor(o =&gt; o.TotalAmount, (f, o) =&gt; o.Items.Sum(i =&gt; i.Price * i.Quantity));</span><br><span class="line">     TOrder order = orderFaker.Generate();</span><br><span class="line">     Console.WriteLine(<span class="string">$&quot;Order ID: <span class="subst">&#123;order.Id&#125;</span>&quot;</span>); </span><br><span class="line">      Console.WriteLine(<span class="string">$&quot;Customer: <span class="subst">&#123;order.Customer.FirstName&#125;</span> <span class="subst">&#123;order.Customer.LastName&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="comment">// Console.WriteLine($&quot;Order Date: &#123;order.OrderDate:d&#125;&quot;); </span></span><br><span class="line">     Console.WriteLine(<span class="string">&quot;Items:&quot;</span>); </span><br><span class="line">     <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> order.Items) </span><br><span class="line">     &#123; </span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;  <span class="subst">&#123;item.ProductName&#125;</span> - Quantity: <span class="subst">&#123;item.Quantity&#125;</span>, Price: <span class="subst">&#123;item.Price:C&#125;</span>&quot;</span>); </span><br><span class="line">     &#125;</span><br><span class="line">     Console.WriteLine(<span class="string">$&quot;Total Amount: <span class="subst">&#123;order.TotalAmount:C&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="5-seed值"><a href="#5-seed值" class="headerlink" title="5.seed值"></a>5.seed值</h1><p>确保每次生成的值相同</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> faker = <span class="keyword">new</span> Faker(<span class="string">&quot;zh_CN&quot;</span>); faker.Random = <span class="keyword">new</span> Randomizer(<span class="number">123</span>);<span class="comment">//seed 123</span></span><br><span class="line">Console.WriteLine(faker.Name.FullName());</span><br></pre></td></tr></table></figure><h1 id="6-国际化"><a href="#6-国际化" class="headerlink" title="6.国际化"></a>6.国际化</h1><p>locales</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fakerEs = <span class="keyword">new</span> Faker(<span class="string">&quot;es&quot;</span>); Console.WriteLine(<span class="string">$&quot;Spanish name: <span class="subst">&#123;fakerEs.Name.FullName()&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fakerDe = <span class="keyword">new</span> Faker(<span class="string">&quot;de&quot;</span>); Console.WriteLine(<span class="string">$&quot;German name: <span class="subst">&#123;fakerDe.Name.FullName()&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fakerFr = <span class="keyword">new</span> Faker(<span class="string">&quot;fr&quot;</span>); Console.WriteLine(<span class="string">$&quot;French name: <span class="subst">&#123;fakerFr.Name.FullName()&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fakerRu = <span class="keyword">new</span> Faker(<span class="string">&quot;zh_TW&quot;</span>); Console.WriteLine(<span class="string">$&quot;TW name: <span class="subst">&#123;fakerRu.Name.FullName()&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> fakerJP = <span class="keyword">new</span> Faker(<span class="string">&quot;ja&quot;</span>); Console.WriteLine(<span class="string">$&quot;JP name: <span class="subst">&#123;fakerJP.Name.FullName()&#125;</span>&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="7-定义规则"><a href="#7-定义规则" class="headerlink" title="7.定义规则"></a>7.定义规则</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.RuleSet(<span class="string">&quot;adult&quot;</span>, <span class="keyword">set</span> =&gt; </span><br><span class="line">&#123; </span><br><span class="line">    <span class="keyword">set</span>.RuleFor(u =&gt; u.Birth, f =&gt; f.Date.Past(<span class="number">35</span>, DateTime.Now.AddYears(<span class="number">-16</span>)));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>用户的出生日期被限定为当前时间往前推35年到16年之间的随机日期，这样生成的用户就是35岁内的成年人。<br>&#x2F;&#x2F;Born: {adultUser.Birth:d}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Bogus&lt;/strong&gt;&lt;br&gt;快速生成模拟数据&lt;br&gt;适用于单元测试、原型设计、演示数据准备。&lt;/p&gt;
&lt;h1 id=&quot;1-NuGet-安装-Bogus&quot;&gt;&lt;a href=&quot;#1-NuGet-安装-Bogus&quot; class=&quot;headerlink&quot; t</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>.NET WatchDog</title>
    <link href="https://banjinmei.github.io/2024/11/09/NET-WatchDog/"/>
    <id>https://banjinmei.github.io/2024/11/09/NET-WatchDog/</id>
    <published>2024-11-08T16:01:03.000Z</published>
    <updated>2024-11-19T14:08:03.314Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WatchDog"><a href="#WatchDog" class="headerlink" title="WatchDog"></a>WatchDog</h1><p>是一个开源（MIT License）、免费的实时应用监控系统，它可以实时记录并查看应用中的消息、事件、HTTP 请求和响应，以及运行时捕获的异常。</p><h2 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h2><p><strong>实时日志记录</strong>：能够实时记录HTTP请求、响应以及运行时捕获的异常。<br><strong>代码内日志记录</strong>：支持在代码中记录消息和事件。<br><strong>日志搜索功能</strong>：支持对HTTP请求和异常日志进行搜索。<br><strong>HTTP日志筛选</strong>：可根据HTTP方法和状态码筛选HTTP日志。<br><strong>报警通知</strong>：支持通过邮件、短信等多种方式发送报警通知，确保能够及时得到反馈。<br><strong>灵活配置</strong>：可以根据应用需求进行灵活的配置，适应不同的监控需求。<br><strong>使用正则表达式黑名单</strong> ：新增了使用正则表达式进行黑名单过滤的功能。</p><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>WatchDog 利用 SignalR 实现了实时监控，并使用LiteDb作为无需配置的类似MongoDB的服务器端数据库，同时也支持使用外部数据库（如MSSQL、MySQL、PostgreSQL、MongoDB）。</p><h1 id="使用-WatchDog"><a href="#使用-WatchDog" class="headerlink" title="使用  WatchDog"></a>使用  WatchDog</h1><p>首先，在项目中安装 WatchDog 包。</p><h2 id="NuGet-包管理器中安装："><a href="#NuGet-包管理器中安装：" class="headerlink" title="NuGet 包管理器中安装："></a>NuGet 包管理器中安装：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet add package WatchDog</span><br></pre></td></tr></table></figure><h2 id="在-Startup-cs-中配置-WatchDog："><a href="#在-Startup-cs-中配置-WatchDog：" class="headerlink" title="在 Startup.cs 中配置 WatchDog："></a>在 Startup.cs 中配置 WatchDog：</h2><p>在 ConfigureServices 方法中添加 WatchDog：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    services.AddControllers();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加 WatchDog 服务</span></span><br><span class="line">    services.AddWatchDogServices();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，在 Configure 方法中配置它：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IWebHostEnvironment env</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (env.IsDevelopment())</span><br><span class="line">    &#123;</span><br><span class="line">        app.UseDeveloperExceptionPage();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    app.UseHttpsRedirection();</span><br><span class="line">    app.UseRouting();</span><br><span class="line">    app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">    app.UseEndpoints(endpoints =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        endpoints.MapControllers();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 配置 WatchDog 中间件，指定 API 日志查看的访问路径和安全选项</span></span><br><span class="line">    app.UseWatchDog(opt =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        opt.WatchPageUsername = <span class="string">&quot;admin&quot;</span>;  <span class="comment">// 设置用户名</span></span><br><span class="line">        opt.WatchPagePassword = <span class="string">&quot;password&quot;</span>;  <span class="comment">// 设置密码</span></span><br><span class="line">        opt.Blacklist = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; <span class="string">&quot;/health&quot;</span> &#125;;  <span class="comment">// 不记录特定路径</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制器中记录日志"><a href="#控制器中记录日志" class="headerlink" title="控制器中记录日志"></a>控制器中记录日志</h2><p>WatchDog 会自动记录所有 API 请求和响应，如果你想手动记录特定的事件或日志，可以使用 WatchLogger。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">using</span> WatchDog;</span><br><span class="line"></span><br><span class="line">[<span class="meta">ApiController</span>]</span><br><span class="line">[<span class="meta">Route(<span class="string">&quot;[controller]&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SampleController</span> : <span class="title">ControllerBase</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">HttpGet(<span class="string">&quot;test&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IActionResult <span class="title">TestEndpoint</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 手动记录日志</span></span><br><span class="line">        WatchLogger.Log(<span class="string">&quot;This is a manual log message&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> Ok(<span class="string">&quot;Test endpoint&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h2><p>启动应用后，打开浏览器，访问 https:&#x2F;&#x2F;<your-host>&#x2F;watchdog (例如，<a class="link"   href="https://localhost:5001/watchdog" >https://localhost:5001/watchdog<i class="fas fa-external-link-alt"></i></a>) ，输入配置的用户名和密码即可查看日志。</p><p><strong>注意事项</strong><br>在生产环境中使用时，请确保设置合适的访问权限以保护日志。<br>使用 Blacklist 配置可以避免记录不需要的路由。<br>这样就可以通过 WatchDog 轻松记录和查看 API 请求和响应日志。</p><p><strong>接口401 401</strong><br>检查中间件顺序<br>UseWatchDog 的中间件需要在 app.UseEndpoints 或 app.MapControllers 之前添加。确保中间件的调用顺序正确，例如：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">app.UseRouting();</span><br><span class="line"></span><br><span class="line">app.UseAuthentication();</span><br><span class="line">app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">app.UseWatchDog(opt =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    opt.WatchPageUsername = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">    opt.WatchPagePassword = <span class="string">&quot;password&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.UseEndpoints(endpoints =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    endpoints.MapControllers();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;WatchDog&quot;&gt;&lt;a href=&quot;#WatchDog&quot; class=&quot;headerlink&quot; title=&quot;WatchDog&quot;&gt;&lt;/a&gt;WatchDog&lt;/h1&gt;&lt;p&gt;是一个开源（MIT License）、免费的实时应用监控系统，它可以实时记录并查看应用中的消</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term=".net" scheme="https://banjinmei.github.io/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>Node Swagger</title>
    <link href="https://banjinmei.github.io/2024/11/07/Node-Swagger/"/>
    <id>https://banjinmei.github.io/2024/11/07/Node-Swagger/</id>
    <published>2024-11-06T16:37:19.000Z</published>
    <updated>2024-11-06T16:39:20.329Z</updated>
    
    <content type="html"><![CDATA[<p> Node.js 和 Swagger 创建简单增删改查 (CRUD) API ，<br> 使用 Express 作为 Web 框架，并集成 Swagger UI 来自动生成 API 文档。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> node-swagger-crud</span><br><span class="line"><span class="built_in">cd</span> node-swagger-crud</span><br><span class="line">npm init -y</span><br><span class="line">npm install express swagger-jsdoc swagger-ui-express</span><br></pre></td></tr></table></figure><h1 id="2-设置-Express-应用"><a href="#2-设置-Express-应用" class="headerlink" title="2: 设置 Express 应用"></a>2: 设置 Express 应用</h1><p>创建一个文件 app.js，用于定义 Express 应用及基本路由。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>()); <span class="comment">// 解析 JSON 请求</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> swaggerJsDoc = <span class="built_in">require</span>(<span class="string">&quot;swagger-jsdoc&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> swaggerUi = <span class="built_in">require</span>(<span class="string">&quot;swagger-ui-express&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Swagger 配置</span></span><br><span class="line"><span class="keyword">const</span> swaggerOptions = &#123;</span><br><span class="line">  <span class="attr">swaggerDefinition</span>: &#123;</span><br><span class="line">    <span class="attr">openapi</span>: <span class="string">&quot;3.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">info</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;Simple CRUD API&quot;</span>,</span><br><span class="line">      <span class="attr">version</span>: <span class="string">&quot;1.0.0&quot;</span>,</span><br><span class="line">      <span class="attr">description</span>: <span class="string">&quot;A simple CRUD API with Swagger documentation&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">apis</span>: [<span class="string">&quot;./routes/*.js&quot;</span>],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> swaggerDocs = <span class="title function_">swaggerJsDoc</span>(swaggerOptions);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/api-docs&quot;</span>, swaggerUi.<span class="property">serve</span>, swaggerUi.<span class="title function_">setup</span>(swaggerDocs));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入 CRUD 路由</span></span><br><span class="line"><span class="keyword">const</span> itemsRouter = <span class="built_in">require</span>(<span class="string">&quot;./routes/items&quot;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/api/items&quot;</span>, itemsRouter);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = process.<span class="property">env</span>.<span class="property">PORT</span> || <span class="number">3000</span>;</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="variable constant_">PORT</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Server running on http://localhost:<span class="subst">$&#123;PORT&#125;</span>`</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Swagger docs available on http://localhost:<span class="subst">$&#123;PORT&#125;</span>/api-docs`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="3-创建-CRUD-路由"><a href="#3-创建-CRUD-路由" class="headerlink" title="3: 创建 CRUD 路由"></a>3: 创建 CRUD 路由</h1><p>在项目根目录下创建 routes 文件夹，并在其中创建 items.js 文件，定义 CRUD 操作接口。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// routes/items.js</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> items = []; <span class="comment">// 模拟数据库中的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * components:</span></span><br><span class="line"><span class="comment"> *   schemas:</span></span><br><span class="line"><span class="comment"> *     Item:</span></span><br><span class="line"><span class="comment"> *       type: object</span></span><br><span class="line"><span class="comment"> *       required:</span></span><br><span class="line"><span class="comment"> *         - name</span></span><br><span class="line"><span class="comment"> *       properties:</span></span><br><span class="line"><span class="comment"> *         id:</span></span><br><span class="line"><span class="comment"> *           type: integer</span></span><br><span class="line"><span class="comment"> *           description: The auto-generated id of the item</span></span><br><span class="line"><span class="comment"> *         name:</span></span><br><span class="line"><span class="comment"> *           type: string</span></span><br><span class="line"><span class="comment"> *           description: The name of the item</span></span><br><span class="line"><span class="comment"> *       example:</span></span><br><span class="line"><span class="comment"> *         id: 1</span></span><br><span class="line"><span class="comment"> *         name: Sample Item</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items:</span></span><br><span class="line"><span class="comment"> *   get:</span></span><br><span class="line"><span class="comment"> *     summary: 获取所有 items</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       200:</span></span><br><span class="line"><span class="comment"> *         description: The list of items</span></span><br><span class="line"><span class="comment"> *         content:</span></span><br><span class="line"><span class="comment"> *           application/json:</span></span><br><span class="line"><span class="comment"> *             schema:</span></span><br><span class="line"><span class="comment"> *               type: array</span></span><br><span class="line"><span class="comment"> *               items:</span></span><br><span class="line"><span class="comment"> *                 $ref: &#x27;#/components/schemas/Item&#x27;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">json</span>(items);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items/&#123;id&#125;:</span></span><br><span class="line"><span class="comment"> *   get:</span></span><br><span class="line"><span class="comment"> *     summary: 获取单个 item</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     parameters:</span></span><br><span class="line"><span class="comment"> *       - in: path</span></span><br><span class="line"><span class="comment"> *         name: id</span></span><br><span class="line"><span class="comment"> *         schema:</span></span><br><span class="line"><span class="comment"> *           type: integer</span></span><br><span class="line"><span class="comment"> *         required: true</span></span><br><span class="line"><span class="comment"> *         description: Item ID</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       200:</span></span><br><span class="line"><span class="comment"> *         description: Item data</span></span><br><span class="line"><span class="comment"> *         content:</span></span><br><span class="line"><span class="comment"> *           application/json:</span></span><br><span class="line"><span class="comment"> *             schema:</span></span><br><span class="line"><span class="comment"> *               $ref: &#x27;#/components/schemas/Item&#x27;</span></span><br><span class="line"><span class="comment"> *       404:</span></span><br><span class="line"><span class="comment"> *         description: Item not found</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/:id&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> item = items.<span class="title function_">find</span>(<span class="function">(<span class="params">i</span>) =&gt;</span> i.<span class="property">id</span> === <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>));</span><br><span class="line">  <span class="keyword">if</span> (!item) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&quot;Item not found&quot;</span>);</span><br><span class="line">  res.<span class="title function_">json</span>(item);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items:</span></span><br><span class="line"><span class="comment"> *   post:</span></span><br><span class="line"><span class="comment"> *     summary: 创建一个新的 item</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     requestBody:</span></span><br><span class="line"><span class="comment"> *       required: true</span></span><br><span class="line"><span class="comment"> *       content:</span></span><br><span class="line"><span class="comment"> *         application/json:</span></span><br><span class="line"><span class="comment"> *           schema:</span></span><br><span class="line"><span class="comment"> *             $ref: &#x27;#/components/schemas/Item&#x27;</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       201:</span></span><br><span class="line"><span class="comment"> *         description: Item created</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> item = &#123;</span><br><span class="line">    <span class="attr">id</span>: items.<span class="property">length</span> + <span class="number">1</span>,</span><br><span class="line">    <span class="attr">name</span>: req.<span class="property">body</span>.<span class="property">name</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  items.<span class="title function_">push</span>(item);</span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">201</span>).<span class="title function_">json</span>(item);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items/&#123;id&#125;:</span></span><br><span class="line"><span class="comment"> *   put:</span></span><br><span class="line"><span class="comment"> *     summary: 更新指定 ID 的 item</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     parameters:</span></span><br><span class="line"><span class="comment"> *       - in: path</span></span><br><span class="line"><span class="comment"> *         name: id</span></span><br><span class="line"><span class="comment"> *         schema:</span></span><br><span class="line"><span class="comment"> *           type: integer</span></span><br><span class="line"><span class="comment"> *         required: true</span></span><br><span class="line"><span class="comment"> *         description: Item ID</span></span><br><span class="line"><span class="comment"> *     requestBody:</span></span><br><span class="line"><span class="comment"> *       required: true</span></span><br><span class="line"><span class="comment"> *       content:</span></span><br><span class="line"><span class="comment"> *         application/json:</span></span><br><span class="line"><span class="comment"> *           schema:</span></span><br><span class="line"><span class="comment"> *             $ref: &#x27;#/components/schemas/Item&#x27;</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       200:</span></span><br><span class="line"><span class="comment"> *         description: Item updated</span></span><br><span class="line"><span class="comment"> *       404:</span></span><br><span class="line"><span class="comment"> *         description: Item not found</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">put</span>(<span class="string">&quot;/:id&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> item = items.<span class="title function_">find</span>(<span class="function">(<span class="params">i</span>) =&gt;</span> i.<span class="property">id</span> === <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>));</span><br><span class="line">  <span class="keyword">if</span> (!item) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&quot;Item not found&quot;</span>);</span><br><span class="line"></span><br><span class="line">  item.<span class="property">name</span> = req.<span class="property">body</span>.<span class="property">name</span>;</span><br><span class="line">  res.<span class="title function_">json</span>(item);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@swagger</span></span></span><br><span class="line"><span class="comment"> * /api/items/&#123;id&#125;:</span></span><br><span class="line"><span class="comment"> *   delete:</span></span><br><span class="line"><span class="comment"> *     summary: 删除指定 ID 的 item</span></span><br><span class="line"><span class="comment"> *     tags: [Items]</span></span><br><span class="line"><span class="comment"> *     parameters:</span></span><br><span class="line"><span class="comment"> *       - in: path</span></span><br><span class="line"><span class="comment"> *         name: id</span></span><br><span class="line"><span class="comment"> *         schema:</span></span><br><span class="line"><span class="comment"> *           type: integer</span></span><br><span class="line"><span class="comment"> *         required: true</span></span><br><span class="line"><span class="comment"> *         description: Item ID</span></span><br><span class="line"><span class="comment"> *     responses:</span></span><br><span class="line"><span class="comment"> *       200:</span></span><br><span class="line"><span class="comment"> *         description: Item deleted</span></span><br><span class="line"><span class="comment"> *       404:</span></span><br><span class="line"><span class="comment"> *         description: Item not found</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.<span class="title function_">delete</span>(<span class="string">&quot;/:id&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> itemIndex = items.<span class="title function_">findIndex</span>(<span class="function">(<span class="params">i</span>) =&gt;</span> i.<span class="property">id</span> === <span class="built_in">parseInt</span>(req.<span class="property">params</span>.<span class="property">id</span>));</span><br><span class="line">  <span class="keyword">if</span> (itemIndex === -<span class="number">1</span>) <span class="keyword">return</span> res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&quot;Item not found&quot;</span>);</span><br><span class="line"></span><br><span class="line">  items.<span class="title function_">splice</span>(itemIndex, <span class="number">1</span>);</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;Item deleted&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure><h1 id="4-启动服务器"><a href="#4-启动服务器" class="headerlink" title="4: 启动服务器"></a>4: 启动服务器</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node app.js</span><br></pre></td></tr></table></figure><p>访问 <a class="link"   href="http://localhost:3000/api-docs%EF%BC%8C" >http://localhost:3000/api-docs，<i class="fas fa-external-link-alt"></i></a><br>可以查看生成的 Swagger 文档。</p><h1 id="测试-API"><a href="#测试-API" class="headerlink" title="测试 API"></a>测试 API</h1><p>以下是 API 接口的示例请求：</p><p>获取所有 items: GET <a class="link"   href="http://localhost:3000/api/items" >http://localhost:3000/api/items<i class="fas fa-external-link-alt"></i></a><br>获取单个 item: GET <a class="link"   href="http://localhost:3000/api/items/%7Bid%7D" >http://localhost:3000/api/items/{id}<i class="fas fa-external-link-alt"></i></a><br>创建 item: POST <a class="link"   href="http://localhost:3000/api/items%EF%BC%8CJSON" >http://localhost:3000/api/items，JSON<i class="fas fa-external-link-alt"></i></a> 数据 { “name”: “New Item” }<br>更新 item: PUT <a class="link"   href="http://localhost:3000/api/items/%7Bid%7D%EF%BC%8CJSON" >http://localhost:3000/api/items/{id}，JSON<i class="fas fa-external-link-alt"></i></a> 数据 { “name”: “Updated Item” }<br>删除 item: DELETE <a class="link"   href="http://localhost:3000/api/items/%7Bid%7D" >http://localhost:3000/api/items/{id}<i class="fas fa-external-link-alt"></i></a></p><p>这样，一个简单的 CRUD 接口及其文档就构建完成了！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; Node.js 和 Swagger 创建简单增删改查 (CRUD) API ，&lt;br&gt; 使用 Express 作为 Web 框架，并集成 Swagger UI 来自动生成 API 文档。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="node" scheme="https://banjinmei.github.io/tags/node/"/>
    
    <category term="swagger" scheme="https://banjinmei.github.io/tags/swagger/"/>
    
  </entry>
  
  <entry>
    <title>Rspack Vue3</title>
    <link href="https://banjinmei.github.io/2024/11/07/Rspack-Vue3/"/>
    <id>https://banjinmei.github.io/2024/11/07/Rspack-Vue3/</id>
    <published>2024-11-06T16:31:15.000Z</published>
    <updated>2024-11-06T16:36:49.259Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Rspack-Vue3-TS-项目环境构建到实战Rspack是什么"><a href="#Rspack-Vue3-TS-项目环境构建到实战Rspack是什么" class="headerlink" title="Rspack+Vue3+TS 项目环境构建到实战Rspack是什么?"></a>Rspack+Vue3+TS 项目环境构建到实战Rspack是什么?</h1><p>Rspack是一个基于 Rust 编写的高性能JavaScript 打包工具，它提供对 webpack 生态良好的兼容性能够无缝替换 webpack，并提供闪电般的构建速度。</p><h1 id="为什么要做-Rspack"><a href="#为什么要做-Rspack" class="headerlink" title="为什么要做 Rspack"></a>为什么要做 Rspack</h1><p>创建 Rspack 的原因，是为了解决在<strong>字节跳动</strong>维护构建工具时遇到的各种性能问题。在字节跳动内部存在许多巨石应用，它们都具有复杂的构建配置，生产环境的构建需要耗费十几分钟，甚至超过半小时;开发环境的耗时也超过十几分钟。<br>我们在 webpack 上尝试了多种方法来优化这些巨石应用，但是效果甚微。我们意识到在 webpack 上的优化已经难以为继，必须要从底层改造，才能适应我们的需求。<br>同时在聆听解决业务各种复杂的构建需求中，我们意识到开发人员对构建工具有以下要求:<br><strong>快速的 Dev 启动性能</strong> npm run dev 是开发者每天需要运行很多次的命令，但大型项目每次都需和要等待 10分钟，这对于工程师来说非常痛苦，因此优化开发模式下启动的时间至关重要<br><strong>高效的 Build 性能</strong> npm run bui1d 经常在 CI&#x2F;CD 环境中运行，它决定了应用生产交付的效率,有些应用在生产环境中需要 20 到 30 分钟的构建时间，如果能缩短这段时间，对开发流程也将非<br>常有帮助。<br><strong>灵活的配置</strong> 用户工程的配置非常灵活，不够统一。在之前的尝试中，将webpack配置迁移到其他构建工具时，我们遇到了许多问题，因为其他构建工具的配置不如 webpack 灵活。<br><strong>生产环境的优化能力</strong> 在启用 Rspack之前，我们尝试了社区内的各种方案，但它们都面临着一定程度的生产环境负优化，例如拆分包不够精细等。因此，优化生产环境的产物是我们不可放弃的功能。<br>在确定了这四个需求后，我们调查了社区中的所有技术方案，它们通常都能很好的满足其中个别需求但没有一个方案能同时满足所有条件，因此，我们决定自研 Rspack。</p><h1 id="和-webpack-的区别"><a href="#和-webpack-的区别" class="headerlink" title="和 webpack 的区别"></a>和 webpack 的区别</h1><p>webpack是目前最为成熟的构建工具，有着活跃的生态，灵活的配置和丰富的功能，但是其最为人诟病的是其性能问题，尤其在一些大型项目上，构建花费的时间可能会达到几分钟甚至几十分钟，&lt;&lt;&lt;性能问题是目前 webpack 最大的短板。因此 Rspack 解决的问题核心就是webpack 的性能问题。 Rspack 比webpack 快得益于如下几方面:<br><strong>Rust 语言优势</strong>: Rspack 使用 Rust 语言编写，得益于 Rust的高性能编译器支持， Rust 编译生成的 Native Code 通常比JavaScript 性能更为高效。<br><strong>高度并行的架构</strong>: webpack 受限于JavaScript 对多线程的赢弱支持，导致其很难进行高度的并行化计算，而得益于 Rust语言的并行化的良好支持，Rspack采用了高度并行化的架构，如模块图生成，代码生成等阶段，都是采用多线程并行执行，这使得其编译性能随着 CPU核心数的增长而增长，充分挖掘 CPU的多核优势。<br><strong>内置大部分的功能</strong>: 事实上 webpack 本身的性能足够高效，但是因为 webpack 本身内置了较少的功能，这使得我们在使用 webpack 做现代 Web App 开发时，通常需要配合很多的 plugin 和loader 进行使用，而这些loader和 plugin 往往是性能的瓶颈，而 Rspack 虽然支持loader 和plugin，但是保证绝大部分常用功能都内置在Rspack内，从而减小Spluginlloader 导致的低性能和通信开销问题，<br><strong>增量编译</strong>: 尽管 Rspack 的全量编译足够高效，但是当项目庞大时，全量的编译仍然难以满足 HMR的性能要求，因此在 HMR 阶段，我们采用的是更为高效的增量编译策略，从而保证，无论你的项目多大，其 HMR 的开销总是控制在合理范围内。</p><h1 id="和-Vite-的区别"><a href="#和-Vite-的区别" class="headerlink" title="和 Vite 的区别"></a>和 Vite 的区别</h1><p>Vite提供了很好的开发者体验，但 Vite 在生产构建中依赖了 Rollup，因此与其他基于JavaScript 的工具链一样，面临着生产环境的构建性能问题。<br>另外，Rollup相较于 webpack做了一些平衡取舍，在这里同样适用。比如，Rollup缺失了 webpack对于拆包的灵活性，即缺失了 optimization.splitChunks提供的很多功能。</p><h1 id="和-esbuild-的区别"><a href="#和-esbuild-的区别" class="headerlink" title="和 esbuild 的区别"></a>和 esbuild 的区别</h1><p>我们在内部进行过大规模地将 esbuild作为通用的 Web App 构建工具的实践，但是遇到如下一些问题:缺乏对 JavaScript HMR 和增量编译的良好支持，这导致大型项目中的 HMR 性能较差。拆包策略也非常原始，难以满足业务复杂多变的拆包优化需求。</p><h1 id="Rspack快速上手"><a href="#Rspack快速上手" class="headerlink" title="Rspack快速上手"></a>Rspack快速上手</h1><p>环境准备<br>在开始使用前， 需要安装 Node.js&gt;&#x3D;16 版本，推荐使用 Node,js LTS 版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>创建新项目</p><h1 id="使用-Rsbuild"><a href="#使用-Rsbuild" class="headerlink" title="使用 Rsbuild"></a>使用 Rsbuild</h1><p>Rsbuip 是由 Rspack 驱动的高性能构建工具，由 Rspack 团队开发，它默认包含了一套精心设计的构建配置，提供开箱即用的开发体验，并能够充分发挥出 Rspack的性能优势。</p><p>我们推荐使用 Rsbuild来创建新项目，执行如下命令即可:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm create rsbuild@latest</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn create rsbuild</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm create rsbuildalatest</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bun create rsbuildalatest</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">◇  Project name or path</span><br><span class="line">│  <span class="built_in">test</span></span><br><span class="line">│</span><br><span class="line">◇  Select framework</span><br><span class="line">│  Vue 3</span><br><span class="line">│</span><br><span class="line">◇  Select language</span><br><span class="line">│  TypeScript</span><br><span class="line">│</span><br><span class="line">◇  Select additional tools (Use &lt;space&gt; to <span class="keyword">select</span>, &lt;enter&gt; to <span class="built_in">continue</span>)</span><br><span class="line">(enter)</span><br><span class="line">│  none</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">│◇ Next steps ──╮</span><br><span class="line">│               │</span><br><span class="line">│  <span class="built_in">cd</span> <span class="built_in">test</span>      │</span><br><span class="line">│  npm install  │</span><br><span class="line">│  npm run dev │</span><br><span class="line">│             │</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>package.json</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;  <span class="string">&quot;ast&quot;</span>: <span class="string">&quot;rsbuild dev --open&quot;</span>&#125; </span><br></pre></td></tr></table></figure><p>npm run ast</p><p>dependencies 生产<br>devDependencies 安装</p><p>rsbuild.config.ts </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">pluginVue</span>()],</span><br><span class="line"></span><br><span class="line">  <span class="attr">server</span>:&#123;</span><br><span class="line">    <span class="attr">port</span>:<span class="number">8116</span>,<span class="comment">//开发服务器端口</span></span><br><span class="line">    <span class="attr">open</span>:<span class="literal">true</span>,<span class="comment">//是否自动打开浏览器</span></span><br><span class="line">    <span class="attr">proxy</span>:&#123;<span class="comment">//代理设置</span></span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>tsconfig.json</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   <span class="string">&quot;target&quot;</span>: <span class="string">&quot;ES2020&quot;</span>,   编译的js版本 </span><br><span class="line"><span class="string">&quot;include&quot;</span>: [<span class="string">&quot;src&quot;</span>] 包含目录</span><br></pre></td></tr></table></figure><h1 id="安装element-plus"><a href="#安装element-plus" class="headerlink" title="安装element-plus"></a>安装element-plus</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install element-plus -s</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add element-plus</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm insta1l element-plus</span><br></pre></td></tr></table></figure><p>index.ts</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import&#123;createApp&#125;from <span class="string">&quot;vue&quot;</span>;</span><br><span class="line">import ElementPlus from<span class="string">&quot;element-plus&quot;</span></span><br><span class="line">import <span class="string">&quot;element-plus/dist/index.css&quot;</span></span><br><span class="line">import App from <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line">import<span class="string">&#x27;/index.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line">createApp(App).use(ElementPlus).mount(<span class="string">&#x27;#root&#x27;</span>);</span><br></pre></td></tr></table></figure><p>.vue使用即可</p><h1 id="配置路由"><a href="#配置路由" class="headerlink" title="配置路由"></a>配置路由</h1><p> vue-router<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router</span><br></pre></td></tr></table></figure><br>src-router-index.ts<br>const router &#x3D; CreateRouter()</p><p>index.ts<br>add rout<br>import router from “.&#x2F;router”; </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Rspack-Vue3-TS-项目环境构建到实战Rspack是什么&quot;&gt;&lt;a href=&quot;#Rspack-Vue3-TS-项目环境构建到实战Rspack是什么&quot; class=&quot;headerlink&quot; title=&quot;Rspack+Vue3+TS 项目环境构建到实战Rs</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="vue3" scheme="https://banjinmei.github.io/tags/vue3/"/>
    
  </entry>
  
  <entry>
    <title>Loacl IP get Weather</title>
    <link href="https://banjinmei.github.io/2024/11/06/Loacl-IP-get-Weather/"/>
    <id>https://banjinmei.github.io/2024/11/06/Loacl-IP-get-Weather/</id>
    <published>2024-11-05T22:22:53.000Z</published>
    <updated>2024-11-05T22:37:33.426Z</updated>
    
    <content type="html"><![CDATA[<p>通过当前网络IP获取天气~</p><h1 id="获取天气的接口"><a href="#获取天气的接口" class="headerlink" title="获取天气的接口"></a>获取天气的接口</h1><p>地址：<br><a class="link"   href="https://weather.sl.al/" >https://weather.sl.al/<i class="fas fa-external-link-alt"></i></a></p><p>参数：<br><a class="link"   href="https://weather.sl.al/?lat=22.2783&lon=114.1747" >https://weather.sl.al/?lat=22.2783&amp;lon=114.1747<i class="fas fa-external-link-alt"></i></a></p><p>&amp;lang&#x3D;en</p><p>lat：纬度</p><p>lon：经度</p><p>lang：语言</p><p>(默认不带 lang 的话为中文)</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;lat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;22.2783&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;lon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;114.1747&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;location&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;湾仔&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;region&quot;</span><span class="punctuation">:</span> <span class="string">&quot;湾仔区&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;feelsLike&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;阴&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;airQuality&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;差&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;statement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;空气污染已经达到了很高水平，对敏感人群是不健康的。如果您感到呼吸困难或喉咙刺激等症状，应减少户外活动时间。&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;sun&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;duration&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11 hrs 13 mins&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sunrise&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AM6:30&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sunset&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PM5:43&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hourly&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;上午7时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;上午8时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;上午9时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;上午10时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;上午11时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午12时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午1时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午2时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午3时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午4时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午5时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="string">&quot;下午6时&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;temperature&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;daily&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-06&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;部分晴，天气宜人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大部分晴，有风&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-07&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大部分晴，微风&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;部分多云，微风&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;19%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-08&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;大部分晴，天气宜人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主要为晴&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-09&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">27</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;部分晴，天气宜人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主要为晴&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-10&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">28</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴，天气宜人&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;6%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-11&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">29</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主要为晴，暖和潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-12&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主要为晴&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-13&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-14&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-15&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;high&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;low&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dayDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;nightDescription&quot;</span><span class="punctuation">:</span> <span class="string">&quot;晴朗潮湿&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rainProbability&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1%&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span>   </span><br></pre></td></tr></table></figure><h1 id="获取经纬度接口"><a href="#获取经纬度接口" class="headerlink" title="获取经纬度接口"></a>获取经纬度接口</h1><p>获取当前网络经纬度的免费且稳定的接口有几个选择。这些接口通常提供基于IP地址的服务，能够返回访问者的大致地理位置信息，包括经纬度。请注意，基于IP地址的服务精度有限，特别是在城市范围内，因为它们依赖于ISP提供的数据。以下是一些常用的免费API选项：</p><h2 id="1-ip-api-com"><a href="#1-ip-api-com" class="headerlink" title="1. ip-api.com"></a>1. ip-api.com</h2><p>URL: <a class="link"   href="http://ip-api.com/json" >http://ip-api.com/json<i class="fas fa-external-link-alt"></i></a><br>方法: GET<br>返回值: JSON格式的数据，包含国家、地区、城市、邮编、经纬度等信息。</p><h2 id="2-ipinfo-io"><a href="#2-ipinfo-io" class="headerlink" title="2. ipinfo.io"></a>2. ipinfo.io</h2><p>URL: <a class="link"   href="https://ipinfo.io/json" >https://ipinfo.io/json<i class="fas fa-external-link-alt"></i></a><br>方法: GET<br>返回值: JSON格式的数据，包括IP地址、城市、区域、国家、位置（经纬度）、组织等信息。</p><h2 id="3-freegeoip-app"><a href="#3-freegeoip-app" class="headerlink" title="3. freegeoip.app"></a>3. freegeoip.app</h2><p>URL: <a class="link"   href="https://api.freegeoip.app/json/" >https://api.freegeoip.app/json/<i class="fas fa-external-link-alt"></i></a><br>方法: GET<br>请求头: 需要加入 Accept-Language: en 和 User-Agent: YourAppName，其中 YourAppName 应用的名字。<br>返回值: JSON格式的数据，包括IP、国家代码、国家名、地区、城市、邮政编码、纬度、经度等信息。</p><p>使用示例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Get Current Position<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;getLocation()&quot;</span>&gt;</span>Get Location<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;location&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">getLocation</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">fetch</span>(<span class="string">&#x27;https://ipinfo.io/json&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> location = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;location&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                    location.<span class="property">textContent</span> = <span class="string">`Latitude: <span class="subst">$&#123;data.loc.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">0</span>]&#125;</span>, Longitude: <span class="subst">$&#123;data.loc.split(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>]&#125;</span>`</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error));</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>两者结合</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Weather Information<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: Arial, sans-serif;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.section</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.details</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.hourly-forecast</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.hourly-item</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.daily-forecast</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex-wrap</span>: wrap;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.daily-item</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;getWeather()&quot;</span>&gt;</span>Get Weather<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;weather-info&quot;</span> <span class="attr">class</span>=<span class="string">&quot;section&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">getWeather</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 获取经纬度</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">fetch</span>(<span class="string">&#x27;https://ipinfo.io/json&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> lat = data.<span class="property">loc</span>.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> lon = data.<span class="property">loc</span>.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)[<span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">                    </span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 使用经纬度调用天气API</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="title function_">fetch</span>(<span class="string">`https://weather.sl.al/?lat=<span class="subst">$&#123;lat&#125;</span>&amp;lon=<span class="subst">$&#123;lon&#125;</span>`</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">then</span>(<span class="function"><span class="params">weatherData</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> weatherInfo = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;weather-info&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                    weatherInfo.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 显示当前天气</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> currentWeather = <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;div class=&quot;section&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;header&quot;&gt;Current Weather in <span class="subst">$&#123;weatherData.location.city&#125;</span>&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;details&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Temperature: <span class="subst">$&#123;weatherData.current.temperature&#125;</span>°C&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Feels Like: <span class="subst">$&#123;weatherData.current.feelsLike&#125;</span>°C&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Description: <span class="subst">$&#123;weatherData.current.description&#125;</span>&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Air Quality: <span class="subst">$&#123;weatherData.current.airQuality.category&#125;</span>&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                <span class="subst">$&#123;weatherData.current.airQuality.statement&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    `</span>;</span></span><br><span class="line"><span class="language-javascript">                    weatherInfo.<span class="property">innerHTML</span> += currentWeather;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 显示今日天气详情</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> todayWeather = <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;div class=&quot;section&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;header&quot;&gt;Today&#x27;s Weather (<span class="subst">$&#123;weatherData.daily[<span class="number">0</span>].date&#125;</span>)&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;details&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                High: <span class="subst">$&#123;weatherData.daily[<span class="number">0</span>].high&#125;</span>°C&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Low: <span class="subst">$&#123;weatherData.daily[<span class="number">0</span>].low&#125;</span>°C&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Day: <span class="subst">$&#123;weatherData.daily[<span class="number">0</span>].dayDescription&#125;</span>&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Night: <span class="subst">$&#123;weatherData.daily[<span class="number">0</span>].nightDescription&#125;</span>&lt;br&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                Rain Probability: <span class="subst">$&#123;weatherData.daily[<span class="number">0</span>].rainProbability&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    `</span>;</span></span><br><span class="line"><span class="language-javascript">                    weatherInfo.<span class="property">innerHTML</span> += todayWeather;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 显示未来几天的天气预报</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> dailyForecast = <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;div class=&quot;section&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;header&quot;&gt;Daily Forecast&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;daily-forecast&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                <span class="subst">$&#123;weatherData.daily.slice(<span class="number">1</span>).map(day =&gt; <span class="string">`</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                    &lt;div class=&quot;daily-item&quot;&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Date: <span class="subst">$&#123;day.date&#125;</span>&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        High: <span class="subst">$&#123;day.high&#125;</span>°C&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Low: <span class="subst">$&#123;day.low&#125;</span>°C&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Day: <span class="subst">$&#123;day.dayDescription&#125;</span>&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Night: <span class="subst">$&#123;day.nightDescription&#125;</span>&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Rain Probability: <span class="subst">$&#123;day.rainProbability&#125;</span></span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                    &lt;/div&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                `</span>).join(<span class="string">&#x27;&#x27;</span>)&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    `</span>;</span></span><br><span class="line"><span class="language-javascript">                    weatherInfo.<span class="property">innerHTML</span> += dailyForecast;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 显示每小时的天气预报</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> hourlyForecast = <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;div class=&quot;section&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;header&quot;&gt;Hourly Forecast&lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;div class=&quot;hourly-forecast&quot;&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                                <span class="subst">$&#123;weatherData.hourly.map(hour =&gt; <span class="string">`</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                    &lt;div class=&quot;hourly-item&quot;&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Time: <span class="subst">$&#123;hour.time&#125;</span>&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Temperature: <span class="subst">$&#123;hour.temperature&#125;</span>°C&lt;br&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                        Rain Probability: <span class="subst">$&#123;hour.rainProbability&#125;</span></span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                    &lt;/div&gt;</span></span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string"><span class="language-javascript">                                `</span>).join(<span class="string">&#x27;&#x27;</span>)&#125;</span></span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                        &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    `</span>;</span></span><br><span class="line"><span class="language-javascript">                    weatherInfo.<span class="property">innerHTML</span> += hourlyForecast;</span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">                .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error));</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果为当前天气、今日天气详情、未来几天的天气预报以及每小时的天气预报~<br>（Current Weather、Today’s Weather、Daily Forecast、Hourly Forecast）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;通过当前网络IP获取天气~&lt;/p&gt;
&lt;h1 id=&quot;获取天气的接口&quot;&gt;&lt;a href=&quot;#获取天气的接口&quot; class=&quot;headerlink&quot; title=&quot;获取天气的接口&quot;&gt;&lt;/a&gt;获取天气的接口&lt;/h1&gt;&lt;p&gt;地址：&lt;br&gt;&lt;a class=&quot;link&quot;   href</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="weather" scheme="https://banjinmei.github.io/tags/weather/"/>
    
  </entry>
  
  <entry>
    <title>IIS Web</title>
    <link href="https://banjinmei.github.io/2024/11/04/IIS-Web/"/>
    <id>https://banjinmei.github.io/2024/11/04/IIS-Web/</id>
    <published>2024-11-03T17:43:24.000Z</published>
    <updated>2024-11-03T17:48:42.507Z</updated>
    
    <content type="html"><![CDATA[<!-- server2016 --><h1 id="IIS-Web迁移"><a href="#IIS-Web迁移" class="headerlink" title="IIS Web迁移"></a>IIS Web迁移</h1><p>mstsc远程</p><h1 id="安装iis"><a href="#安装iis" class="headerlink" title="安装iis"></a>安装iis</h1><p>本地机子开启远程Err<br>出现“身份验证错误。要求的函数不受支持。远程计算机：xxx，这可能是由于CredSSP加密Oracle修正。 </p><p>运行 gpedit.msc，选择“计算机配置”-&gt;“管理模板”-&gt;“系统”-&gt;“凭据分配”，选择“加密 Oracle 修正”，改为启用，选择“易受攻击”，OK。</p><h1 id="备份web"><a href="#备份web" class="headerlink" title="备份web"></a>备份web</h1><p>copy web文件夹</p><h1 id="备份sql-bak"><a href="#备份sql-bak" class="headerlink" title="备份sql.bak"></a>备份sql.bak</h1><p>BACKUP DATABASE [zx] TO DISK &#x3D; ‘C:\zz.bak’;</p><h1 id="还原sql"><a href="#还原sql" class="headerlink" title="还原sql"></a>还原sql</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--err 因为数据库正在使用，所以无法获得对数据库的独占访问权。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE zx <span class="keyword">SET</span> SINGLE_USER <span class="keyword">WITH</span> <span class="keyword">ROLLBACK</span> IMMEDIATE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RESTORE DATABASE zx</span><br><span class="line"><span class="keyword">FROM</span> DISK <span class="operator">=</span></span><br><span class="line"><span class="string">&#x27;c:\webx\zx.bak&#x27;</span></span><br><span class="line"><span class="keyword">with</span> replace,</span><br><span class="line">MOVE <span class="string">&#x27;zx&#x27;</span> <span class="keyword">TO</span> <span class="string">&#x27;C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\zx.mdf&#x27;</span>,</span><br><span class="line">MOVE <span class="string">&#x27;zx_log&#x27;</span> <span class="keyword">TO</span></span><br><span class="line"><span class="string">&#x27;C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\zx_log.ldf&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--设置MULTI_USER模式</span></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE [zx] <span class="keyword">SET</span> MULTI_USER;</span><br></pre></td></tr></table></figure><h1 id="iis部署"><a href="#iis部署" class="headerlink" title="iis部署"></a>iis部署</h1><p>设置文件夹权限</p><p>设置xx.com跳转<a class="link"   href="http://www.xx.com/" >www.xx.com<i class="fas fa-external-link-alt"></i></a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">system.webServer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">httpRedirect</span> <span class="attr">enabled</span>=<span class="string">&quot;true&quot;</span> <span class="attr">destination</span>=<span class="string">&quot;http://www.xx.com&quot;</span> <span class="attr">exactDestination</span>=<span class="string">&quot;true&quot;</span> <span class="attr">httpResponseStatus</span>=<span class="string">&quot;Permanent&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">system.webServer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><!-- rdhttps://blog.csdn.net/DT_FlagshipStore/article/details/132121946 -->]]></content>
    
    
      
      
    <summary type="html">&lt;!-- server2016 --&gt;

&lt;h1 id=&quot;IIS-Web迁移&quot;&gt;&lt;a href=&quot;#IIS-Web迁移&quot; class=&quot;headerlink&quot; title=&quot;IIS Web迁移&quot;&gt;&lt;/a&gt;IIS Web迁移&lt;/h1&gt;&lt;p&gt;mstsc远程&lt;/p&gt;
&lt;h1 id=&quot;安</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="IIS" scheme="https://banjinmei.github.io/tags/IIS/"/>
    
  </entry>
  
  <entry>
    <title>HarmonyOS应用开发者初级认证题目(2024.11新版，题目&amp;答案)</title>
    <link href="https://banjinmei.github.io/2024/10/31/HarmonyOS-test/"/>
    <id>https://banjinmei.github.io/2024/10/31/HarmonyOS-test/</id>
    <published>2024-10-30T16:36:03.000Z</published>
    <updated>2024-11-19T14:06:24.177Z</updated>
    
    <content type="html"><![CDATA[<p>HarmonyOS应用开发者认证题目(2024.11新版，题目&amp;答案)</p><p><strong>c1 about</strong></p><p>判断题</p><p>1.“一次开发，多端部署”指的是一个工程，一次开发上架，多端按需部署。为了实现这一目的，HarmonyOS提供了多端开发环境，多端开发能力以及多端分发机制。</p><p>正确(True)</p><p>2.《鸿蒙生态应用开发白皮书》全面阐释了鸿蒙生态下应用开发核心理念、关键能力以及创新体验，旨在帮助开发者快速、准确、全面的了解鸿蒙开发套件给开发者提供的能力全景和未来的愿景。</p><p>正确(True)</p><p>3.HUAWEI DevEco Studio是面向HarmonyOS生态的集成开发环境，提供了一站式的HarmonyOS生态应用开发能力。</p><p>正确(True)</p><p>单选题</p><p>1.当用户希望能够在多个设备间来回切换、完成多个任务，开发者可以使用以下哪个核心能力，以便应用不间断地给用户提供服务的能力。</p><p>C. 自由流转</p><p>2.当您希望获取到最全面、最详细的功能描述、参数说明和权限信息时，应该从（）寻找？</p><p>C. API参考</p><p>3.应用如需在多个设备上运行，需要适配不同的屏幕尺寸和分辨率、不同的交互方式（如触摸和键盘等）、不同的硬件能力（如内存差异和器件差异等），开发成本较高。“一次开发，多端部署”提供了哪个核心能力降低了多设备应用的开发成本？</p><p>B. 多端开发能力</p><p>4.如果开发者在原生应用版本的基础上，想要提供多种服务给用户，开发者选择开发场景的最优选是？</p><p>B. 开发多个元服务，按需组合为一个复杂的应用</p><p>多选题</p><p>1.下列哪些选项属于HarmonyOS三大技术理念。</p><p>A. 一次开发，多端部署<br>B. 可分可合，自由流转<br>C. 统一生态，原生智能</p><p>2.用户使用应用的情境发生变化时（例如从室内走到户外、从办公室到车上等），之前使用的设备可能已经不适合继续当前的任务，或者周围有更合适的设备，此时，可以选择使用新的设备来继续当前的任务。以下哪些场景适合使用跨端迁移能力？</p><p>A. 在外时手机上编辑邮件，到公司后在2in1设备上继续编辑<br>B. 在外时手机玩游戏，到家后希望获取更好的视觉体验，在平板上继续玩<br>C. 在家里智慧屏上看视频，当下需要出门时，可以手机上继续观看<br>D. 手机视频通话中，到家后家中有智慧屏，可以更沉浸地视频聊天</p><p>3.下列哪些说法是正确的。</p><p>A. HUAWEI DevEco Studio 提供了设备模拟的能力，解决HarmonyOS生态应用、元服务开发过程中遇到的真机设备不足、无分布式应用调试环境等问题，为开发者提供低成本、易获取的调测验证环境<br>B. 为了降低性能调优技术难度，HUAWEI DevEco Studio推出了场景化调优工具 DevEco Profiler<br>C. HUAWEI DevEco Studio提供了一系列命令行工具，辅助开发者更高效的管理 SDK 、设备，提升调试、调优的效率<br>D. HUAWEI DevEco Studio是面向HarmonyOS生态的集成开发环境，提供了一站式的HarmonyOS生态应用开发能力</p><p><strong>c2 DevEco Studio</strong></p><p>判断题</p><p>1.如果代码中涉及到一些网络、数据库、传感器等功能的开发，均可使用预览器进行预览。</p><p>错误(False)</p><p>2.module.json5文件中的deviceTypes字段中，配置了phone，tablet，2in1等多种设备类型，才能进行多设备预览。</p><p>正确(True)</p><p>3.DevEco Studio支持代码自动补全、自动导包等能力。</p><p>正确(True)</p><p>1.用哪一种装饰器修饰的组件可作为页面入口组件：</p><p>B. @Entry</p><p>2.ArkTS Stage模型，关于其工程目录结构说法不正确的是：</p><p>D. app.json5用于编写应用级编译构建任务脚本</p><p>3.使用下面哪个hdc命令可以查看设备链接信息</p><p>B. hdc list targets</p><p>4.组件预览通过在组件前添加下面哪个注解：</p><p>C. @Preview</p><p>多选题</p><p>1.关于预览器的使用，以下哪些说法是正确的：</p><p>A. 在开发界面UI代码过程中，如果添加或删除了UI组件，您只需Ctrl+S进行保存，然后预览器就会立即刷新预览结果<br>B. 在预览器界面，可以在预览器中操作应用&#x2F;服务的界面交互动作，如单击、跳转、滑动等，与应用&#x2F;服务运行在真机设备上的界面交互体验一致<br>C. 组件预览通过在组件前添加注解@Preview实现<br>D. 页面预览通过在工程的ets文件头部添加注解@Entry实现</p><p>2.DevEco Studio代码编辑支持下面哪些能力：</p><p>A. 代码自动补齐<br>B. 实时检查<br>C. 跨语言跳转<br>D. 代码引用查找<br>E. 快速查阅API接口及组件参考文档</p><p>3.DevEco Studio支持使用多种语言进行应用&#x2F;服务的开发，包括ArkTS、JS和C&#x2F;C++。在编写应用&#x2F;服务阶段，可以通过以下哪些方法提升编码效率：</p><p>A. 提供代码的智能补齐能力，编辑器工具会分析上下文并理解项目内容，并根据输入的内容，提示可补齐的类、方法、字段和关键字的名称等<br>B. 在编辑器中调用ArkTS API接口或ArkTS&#x2F;JS组件时，支持在编辑器中快速、精准调取出对应的参考文档<br>C. 代码格式化功能可以帮助您快速的调整和规范代码格式，提升代码的美观度和可读性<br>D. 如果输入的语法不符合编码规范，或者出现语义语法错误，编辑器会显示错误或警告</p><p>c3</p><p>let const</p><p>let stu:Array<string> &#x3D;[‘a’,’b’];<br>let stus:string [] &#x3D; [‘a’,’b’];</p><p>enum Color{<br>    Red,<br>    Blue<br>}</p><p>let fvColor:Color&#x3D; Color.Red;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;HarmonyOS应用开发者认证题目(2024.11新版，题目&amp;amp;答案)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;c1 about&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;判断题&lt;/p&gt;
&lt;p&gt;1.“一次开发，多端部署”指的是一个工程，一次开发上架，多端按需部署。为了实现这一目的，Ha</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="HarmonyOS" scheme="https://banjinmei.github.io/tags/HarmonyOS/"/>
    
  </entry>
  
  <entry>
    <title>docker pro</title>
    <link href="https://banjinmei.github.io/2024/10/26/docker-pro/"/>
    <id>https://banjinmei.github.io/2024/10/26/docker-pro/</id>
    <published>2024-10-26T14:43:10.000Z</published>
    <updated>2024-11-26T16:32:30.872Z</updated>
    
    <content type="html"><![CDATA[<p>docker 运行有趣的项目 </p><h1 id="Portainer-容器管理面板"><a href="#Portainer-容器管理面板" class="headerlink" title="Portainer - 容器管理面板"></a>Portainer - 容器管理面板</h1><p>Portainer 提供了一个简单易用的 Web 界面来管理和监控 Docker 容器、镜像、网络等。你可以通过下面的命令快速启动它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker volume create portainer_data</span><br><span class="line">docker run -d -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce</span><br></pre></td></tr></table></figure><h1 id="Jenkins-持续集成服务器"><a href="#Jenkins-持续集成服务器" class="headerlink" title="Jenkins - 持续集成服务器"></a>Jenkins - 持续集成服务器</h1><p>Jenkins 是一个流行的开源持续集成工具，用于自动化构建、测试和部署过程。可以通过以下命令启动 Jenkins：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -u root --<span class="built_in">rm</span> -d -p 8080:8080 -p 50000:50000 -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts</span><br><span class="line">docker logs &lt;containerId&gt; </span><br></pre></td></tr></table></figure><p>管理密码 登录<br><a class="link"   href="https://www.jenkins.io/doc/book/system-administration/viewing-logs/" >https://www.jenkins.io/doc/book/system-administration/viewing-logs/<i class="fas fa-external-link-alt"></i></a></p><h1 id="Gitea-自托管的-Git-服务"><a href="#Gitea-自托管的-Git-服务" class="headerlink" title="Gitea - 自托管的 Git 服务"></a>Gitea - 自托管的 Git 服务</h1><p>Gitea 是一个轻量级的代码托管平台，适合个人或小团队使用。使用 Docker 运行 Gitea 非常简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name gitea -p 10022:22 -p 10080:3000 -v /path/to/gitea:/data gitea/gitea:latest</span><br></pre></td></tr></table></figure><h1 id="Nextcloud-自建云盘"><a href="#Nextcloud-自建云盘" class="headerlink" title="Nextcloud - 自建云盘"></a>Nextcloud - 自建云盘</h1><p>Nextcloud 是一个功能强大的自托管文件同步与分享解决方案，支持多种设备访问。启动 Nextcloud 的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name nextcloud -p 8080:80 -v /path/to/nextcloud-data:/var/www/html nextcloud</span><br></pre></td></tr></table></figure><p>设定管理密码 即可使用</p><h1 id="Pi-hole-广告拦截DNS服务器"><a href="#Pi-hole-广告拦截DNS服务器" class="headerlink" title="Pi-hole - 广告拦截DNS服务器"></a>Pi-hole - 广告拦截DNS服务器</h1><p>Pi-hole 可以帮助你拦截广告、跟踪器和其他不需要的内容，为网络浏览体验提供更好的保护。安装和运行 Pi-hole 很简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name pihole --cap-add=NET_ADMIN --dns=127.0.0.1 --dns=8.8.8.8 -e TZ=Asia/Shanghai -p 53:53/tcp -p 53:53/udp -p 80:80 -p 443:443 -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/pihole:/etc/pihole -v <span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span>/dnsmasq.d:/etc/dnsmasq.d pihole/pihole</span><br></pre></td></tr></table></figure><h1 id="Ghost-博客平台"><a href="#Ghost-博客平台" class="headerlink" title="Ghost - 博客平台"></a>Ghost - 博客平台</h1><p>Ghost 是一个现代化的开源博客平台，专为出版而设计。运行 Ghost 的 Docker 容器只需要一行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name some-ghost -p 2368:2368 ghost</span><br></pre></td></tr></table></figure><h1 id="Nginx-高性能的-Web-和反向代理服务器"><a href="#Nginx-高性能的-Web-和反向代理服务器" class="headerlink" title="Nginx - 高性能的 Web 和反向代理服务器"></a>Nginx - 高性能的 Web 和反向代理服务器</h1><p>Nginx 是一个非常流行和高效的 Web 服务器，适用于静态网站或作为反向代理服务器。启动 Nginx 非常简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name my-nginx -p 80:80 nginx</span><br></pre></td></tr></table></figure><h1 id="WordPress-开源博客平台和-CMS"><a href="#WordPress-开源博客平台和-CMS" class="headerlink" title="WordPress - 开源博客平台和 CMS"></a>WordPress - 开源博客平台和 CMS</h1><p>WordPress 是世界上最受欢迎的博客平台之一，也可以用作内容管理系统 (CMS)。启动 WordPress 需要同时运行 MySQL 数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动 MySQL 数据库</span></span><br><span class="line">docker run -d --name mysql-wordpress -e MYSQL_ROOT_PASSWORD=my-secret-pw -e MYSQL_DATABASE=wordpress -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=my-secret-pw mysql:5.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 WordPress</span></span><br><span class="line">docker run -d --name wordpress --<span class="built_in">link</span> mysql-wordpress:mysql -p 8080:80 -e WORDPRESS_DB_HOST=mysql-wordpress:3306 -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=my-secret-pw -e WORDPRESS_DB_NAME=wordpress wordpress</span><br></pre></td></tr></table></figure><h1 id="PostgreSQL-强大的开源对象关系型数据库系统"><a href="#PostgreSQL-强大的开源对象关系型数据库系统" class="headerlink" title="PostgreSQL - 强大的开源对象关系型数据库系统"></a>PostgreSQL - 强大的开源对象关系型数据库系统</h1><p>PostgreSQL 是一个非常强大且可靠的数据库系统。启动 PostgreSQL 非常简单：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name my-postgres -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 postgres</span><br></pre></td></tr></table></figure><h1 id="MongoDB-文档型-NoSQL-数据库"><a href="#MongoDB-文档型-NoSQL-数据库" class="headerlink" title="MongoDB - 文档型 NoSQL 数据库"></a>MongoDB - 文档型 NoSQL 数据库</h1><p>MongoDB 是一个基于分布式文件存储的数据库，适用于大数据处理。启动 MongoDB：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name my-mongo -p 27017:27017 mongo</span><br></pre></td></tr></table></figure><h1 id="Redis-高性能键值存储系统"><a href="#Redis-高性能键值存储系统" class="headerlink" title="Redis - 高性能键值存储系统"></a>Redis - 高性能键值存储系统</h1><p>Redis 是一个高性能的键值数据库，常用于缓存和消息队列。启动 Redis：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name my-redis -p 6379:6379 redis</span><br></pre></td></tr></table></figure><h1 id="MinIO-高性能的对象存储系统"><a href="#MinIO-高性能的对象存储系统" class="headerlink" title="MinIO - 高性能的对象存储系统"></a>MinIO - 高性能的对象存储系统</h1><p>MinIO 是一个高性能的对象存储系统，兼容 Amazon S3 API。非常适合用来搭建私有云存储服务。启动 MinIO：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name minio1 -p 9000:9000 -p 9001:9001 -e <span class="string">&quot;MINIO_ROOT_USER=minioadmin&quot;</span> -e <span class="string">&quot;MINIO_ROOT_PASSWORD=minioadmin&quot;</span> minio/minio server /data --console-address <span class="string">&quot;:9001&quot;</span></span><br></pre></td></tr></table></figure><h1 id="Traefik-现代的-HTTP-反向代理和负载均衡器"><a href="#Traefik-现代的-HTTP-反向代理和负载均衡器" class="headerlink" title="Traefik - 现代的 HTTP 反向代理和负载均衡器"></a>Traefik - 现代的 HTTP 反向代理和负载均衡器</h1><p>Traefik 是一个现代的 HTTP 反向代理和负载均衡器，支持自动发现后端服务。启动 Traefik：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name traefik -p 8080:8080 -p 80:80 -v /var/run/docker.sock:/var/run/docker.sock -v <span class="variable">$PWD</span>/traefik.yml:/etc/traefik/traefik.yml traefik:v2.5</span><br></pre></td></tr></table></figure><p>注意：需要创建一个 traefik.yml 配置文件来指定 Traefik 的行为。</p><h1 id="NetData-实时性能监控工具"><a href="#NetData-实时性能监控工具" class="headerlink" title="NetData - 实时性能监控工具"></a>NetData - 实时性能监控工具</h1><p>NetData 是一个实时性能监控工具，可以监控服务器的各种指标。启动 NetData：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name netdata -p 19999:19999 -v /host/proc:/host/proc:ro -v /etc/os-release:/host/etc/os-release:ro -v /sys:/host/sys:ro -v /etc/passwd:/host/etc/passwd:ro -v /etc/group:/host/etc/group:ro -v /etc/machine-id:/host/etc/machine-id:ro -v /var/lib/netdata:/netdata -v /etc/netdata:/etc/netdata -v /run/docker.sock:/var/run/docker.sock -e NETDATA_CLAIM_TOKEN=my-token -e NETDATA_CLAIM_URL=https://app.netdata.cloud -e NETDATA_CLAIM_ID=my-machine-id netdata/netdata</span><br></pre></td></tr></table></figure><p>这些项目不仅功能强大，而且非常容易通过 Docker 快速启动和运行。</p><h1 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h1><h1 id="Golang-Go-语言开发环境"><a href="#Golang-Go-语言开发环境" class="headerlink" title="Golang - Go 语言开发环境"></a>Golang - Go 语言开发环境</h1><p>Go 是一种静态类型的编译语言，适合构建高效的服务和应用程序。启动一个 Go 语言的开发环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name go-lang golang:latest</span><br></pre></td></tr></table></figure><h1 id="Node-js-JavaScript-运行时环境"><a href="#Node-js-JavaScript-运行时环境" class="headerlink" title="Node.js - JavaScript 运行时环境"></a>Node.js - JavaScript 运行时环境</h1><p>Node.js 允许你在服务器端运行 JavaScript 代码。启动一个 Node.js 环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name node-app node:latest</span><br></pre></td></tr></table></figure><h1 id="Python-多用途编程语言"><a href="#Python-多用途编程语言" class="headerlink" title="Python - 多用途编程语言"></a>Python - 多用途编程语言</h1><p>Python 是一种广泛使用的高级编程语言，适用于各种应用场景。启动一个 Python 环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name python-env python:latest</span><br></pre></td></tr></table></figure><h1 id="Flask-轻量级-Web-应用框架"><a href="#Flask-轻量级-Web-应用框架" class="headerlink" title="Flask - 轻量级 Web 应用框架"></a>Flask - 轻量级 Web 应用框架</h1><p>Flask 是一个用 Python 编写的轻量级 Web 应用框架。启动一个简单的 Flask 应用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name flask-app -p 5000:5000 tiangolo/uwsgi-nginx-flask:python3.7</span><br></pre></td></tr></table></figure><h1 id="Django-高级-Web-框架"><a href="#Django-高级-Web-框架" class="headerlink" title="Django - 高级 Web 框架"></a>Django - 高级 Web 框架</h1><p>Django 是一个高级的 Python Web 框架，鼓励快速开发和干净、实用的设计。启动一个 Django 应用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name django-app -p 8000:8000 python:3.9-slim bash -c <span class="string">&quot;pip install django &amp;&amp; django-admin startproject myproject &amp;&amp; cd myproject &amp;&amp; python manage.py runserver 0.0.0.0:8000&quot;</span></span><br></pre></td></tr></table></figure><h1 id="React-前端-JavaScript-库"><a href="#React-前端-JavaScript-库" class="headerlink" title="React - 前端 JavaScript 库"></a>React - 前端 JavaScript 库</h1><p>React 是一个用于构建用户界面的 JavaScript 库。启动一个 React 开发环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name react-app -p 3000:3000 node:14 bash</span><br><span class="line"><span class="comment"># 在容器内执行以下命令</span></span><br><span class="line">npm init react-app my-app</span><br><span class="line"><span class="built_in">cd</span> my-app</span><br><span class="line">npm start</span><br><span class="line">Vue.js - 前端 JavaScript 框架</span><br><span class="line">Vue.js 是一个用于构建用户界面的渐进式框架。启动一个 Vue.js 开发环境：</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name vue-app -p 8080:8080 node:14 bash</span><br><span class="line"><span class="comment"># 在容器内执行以下命令</span></span><br><span class="line">npm install -g @vue/cli</span><br><span class="line">vue create my-app</span><br><span class="line"><span class="built_in">cd</span> my-app</span><br><span class="line">npm run serve</span><br><span class="line">Gatsby - 静态站点生成器</span><br><span class="line">Gatsby 是一个基于 React 的静态站点生成器，适合构建静态网站和博客。启动一个 Gatsby 开发环境：</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name gatsby-app -p 8000:8000 node:14 bash</span><br><span class="line"><span class="comment"># 在容器内执行以下命令</span></span><br><span class="line">npm install -g gatsby-cli</span><br><span class="line">gatsby new my-site</span><br><span class="line"><span class="built_in">cd</span> my-site</span><br><span class="line">gatsby develop</span><br></pre></td></tr></table></figure><h1 id="docker-chromium"><a href="#docker-chromium" class="headerlink" title="docker chromium"></a>docker chromium</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-shanghai.aliyuncs.com/open-tools/docker-chromium-zh:latest</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=chromium -p 3000:3000 -v ./data:/config  registry.cn-shanghai.aliyuncs.com/open-tools/docker-chromium-zh:latest</span><br></pre></td></tr></table></figure><p>Optional environment variables<br>Variable    Description<br>CUSTOM_PORT    Internal port the container listens on for http if it needs to be swapped from the default 3000.<br>CUSTOM_HTTPS_PORT    Internal port the container listens on for https if it needs to be swapped from the default 3001.<br>CUSTOM_USER    HTTP Basic auth username, abc is default.<br>PASSWORD    HTTP Basic auth password, abc is default. If unset there will be no auth<br>SUBFOLDER    Subfolder for the application if running a subfolder reverse proxy, need both slashes IE &#x2F;subfolder&#x2F;<br>TITLE    The page title displayed on the web browser, default “KasmVNC Client”.<br>FM_HOME    This is the home directory (landing) for the file manager, default “&#x2F;config”.<br>START_DOCKER    If set to false a container with privilege will not automatically start the DinD Docker setup.<br>DRINODE    If mounting in &#x2F;dev&#x2F;dri for DRI3 GPU Acceleration allows you to specify the device to use IE &#x2F;dev&#x2F;dri&#x2F;renderD128<br>LC_ALL    Set the Language for the container to run as IE fr_FR.UTF-8 ar_AE.UTF-8<br>NO_DECOR    If set the application will run without window borders for use as a PWA.<br>NO_FULL    Do not autmatically fullscreen applications when using openbox.<br>REMOTE_DEBUGGING    是否开启远程调试。 默认是 false ，可选值： true 或 false<br>HEADLESS    是否开启无头模式。 默认是 false ，可选值： true 或 false openbox.</p><h1 id="Next-js-React-框架的全栈解决方案"><a href="#Next-js-React-框架的全栈解决方案" class="headerlink" title="Next.js - React 框架的全栈解决方案"></a>Next.js - React 框架的全栈解决方案</h1><p>Next.js 是一个用于构建服务器渲染的 React 应用程序的框架。启动一个 Next.js 开发环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name next-app -p 3000:3000 node:14 bash</span><br><span class="line"><span class="comment"># 在容器内执行以下命令</span></span><br><span class="line">npx create-next-app my-app</span><br><span class="line"><span class="built_in">cd</span> my-app</span><br><span class="line">npm run dev</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="drawio"><a href="#drawio" class="headerlink" title="drawio"></a>drawio</h1><p>这是一个高人气的免费在线图表软件，用于创建流程图、UML 图、架构图等。支持多种文件格式，并且可以与 Google Drive、OneDrive 等云存储服务集成，支持实时协作编辑功能。在线使用地址：<a class="link"   href="https://app.diagrams.net/" >https://app.diagrams.net/<i class="fas fa-external-link-alt"></i></a> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --<span class="built_in">rm</span> --name=<span class="string">&quot;draw&quot;</span> -p 8080:8080 -p 8443:8443 jgraph/drawio</span><br></pre></td></tr></table></figure><!-- --><h1 id="easyimage"><a href="#easyimage" class="headerlink" title="easyimage"></a>easyimage</h1><p>一个简单的图床程序，功能简单，无需数据库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name easyimage -p 8080:80 -e TZ=Asia/Shanghai -e PUID=1000 -e PGID=1000 -e DEBUG=<span class="literal">false</span> -v /share/Data/easyimage/config:/app/web/config -v /share/Data/easyimage/i:/app/web/i ddsderek/easyimage:latest</span><br></pre></td></tr></table></figure><h1 id="Neko"><a href="#Neko" class="headerlink" title="Neko"></a>Neko</h1><p>这是一个在 Docker 中运行并使用 WebRTC 技术的自托管虚拟浏览器。Neko 是一个功能强大的工具，允许您在虚拟环境中运行功能齐全的浏览器，使您能够从任何地方安全、私密地访问互联网。借助 Neko，您可以像在常规浏览器上一样浏览网页、运行应用程序并执行其他任务，所有这些都在安全且隔离的环境中进行。无论您是想要测试 Web 应用程序的开发人员、寻求安全浏览体验的注重隐私的用户，还是只是想要利用虚拟浏览器的便利性和灵活性的人，Neko 是完美的解决方案。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">   --restart always  \</span><br><span class="line">   --name neko \</span><br><span class="line">   --shm-size=<span class="string">&quot;2gb&quot;</span> \</span><br><span class="line">   -p 8080:8080 \</span><br><span class="line">   -p 52000-52100:52000-52100/udp \</span><br><span class="line">   -e NEKO_PASSWORD=<span class="string">&#x27;neko&#x27;</span> \</span><br><span class="line">   -e NEKO_PASSWORD_ADMIN=<span class="string">&#x27;admin&#x27;</span> \</span><br><span class="line">   -e NEKO_NAT1TO1=43.156.38.52 \</span><br><span class="line">   -e NEKO_SCREEN=1920x1080@30 \</span><br><span class="line">   -e NEKO_ICELITE=1 \</span><br><span class="line">   -e NEKO_EPR=52000-52100 \</span><br><span class="line">   m1k1o/neko:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="speedtest-x"><a href="#speedtest-x" class="headerlink" title="speedtest-x"></a>speedtest-x</h1><p>网速测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name speedtest-x --restart always -p 9001:80 -it badapple9/speedtest-x</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="myspeed-网速测试"><a href="#myspeed-网速测试" class="headerlink" title="myspeed 网速测试"></a>myspeed 网速测试</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">   --restart always  \</span><br><span class="line">   --name myspeed \</span><br><span class="line">   -p 8080:5216 \</span><br><span class="line">   -v /data/myspeed/data:/myspeed/data \</span><br><span class="line">   germannewsmaker/myspeed</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="SurveyKing调查问卷系统和考试系统"><a href="#SurveyKing调查问卷系统和考试系统" class="headerlink" title="SurveyKing调查问卷系统和考试系统"></a>SurveyKing调查问卷系统和考试系统</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name SurveyKing --restart always -p 8080:1991 surveyking/surveyking</span><br></pre></td></tr></table></figure><p>admin  123456 驾考考试&#x2F;问卷 </p><h1 id="EnBizCard"><a href="#EnBizCard" class="headerlink" title="EnBizCard"></a>EnBizCard</h1><p>基于 HTML 的交互式和响应式数字名片。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">   --restart unless-stopped \</span><br><span class="line">   --name enbizcard \</span><br><span class="line">   -p 5600:80 \</span><br><span class="line">   swr.cn-north-4.myhuaweicloud.com/jeven/enbizcard</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="SyncTV"><a href="#SyncTV" class="headerlink" title="SyncTV"></a>SyncTV</h1><p>一起看视频</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name synctv -p 8080:8080 synctvorg/synctv</span><br><span class="line"></span><br><span class="line">docker run -d \  \</span><br><span class="line">--name briefing \</span><br><span class="line">-v /datar/briefing/data:/app/data \</span><br><span class="line">-p 8080:8080 \</span><br><span class="line">--restart always \</span><br><span class="line">holtwick/briefing</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="go-file-图床"><a href="#go-file-图床" class="headerlink" title="go-file 图床"></a>go-file 图床</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /data/go-file/data</span><br><span class="line"><span class="built_in">chmod</span> -R 777 /data/go-file/</span><br><span class="line"></span><br><span class="line">docker run -d --restart always -p 8080:3000 -e TZ=Asia/Shanghai -v /data/go-file/data:/data justsong/go-file</span><br></pre></td></tr></table></figure><h1 id="Adminer-轻量级的-MySQL-管理工具"><a href="#Adminer-轻量级的-MySQL-管理工具" class="headerlink" title="Adminer  轻量级的 MySQL 管理工具"></a>Adminer  轻量级的 MySQL 管理工具</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name adminer -d -p 8080:8080 adminer</span><br></pre></td></tr></table></figure><h1 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h1><p>使用 Docker Compose 来启动一个包含 Nginx 和 PHP-FPM 的 WordPress 环境。</p><h2 id="步骤-1-安装-Docker-和-Docker-Compose"><a href="#步骤-1-安装-Docker-和-Docker-Compose" class="headerlink" title="步骤 1: 安装 Docker 和 Docker Compose"></a>步骤 1: 安装 Docker 和 Docker Compose</h2><p>首先，确保你已经在机器上安装了 Docker 和 Docker Compose。</p><h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><p>打开终端或命令提示符。<br>根据操作系统，按照官方文档安装 Docker：<br>Ubuntu:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker.io</span><br><span class="line">MacOS: 下载并安装 Docker Desktop <span class="keyword">for</span> Mac</span><br><span class="line">Windows: 下载并安装 Docker Desktop <span class="keyword">for</span> Windows</span><br><span class="line">安装 Docker Compose</span><br></pre></td></tr></table></figure><p>在终端或命令提示符中运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br><span class="line">sudo <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure><h2 id="步骤-2-创建项目目录"><a href="#步骤-2-创建项目目录" class="headerlink" title="步骤 2: 创建项目目录"></a>步骤 2: 创建项目目录</h2><p>创建一个新的目录来存放项目文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> wordpress-project</span><br><span class="line"><span class="built_in">cd</span> wordpress-project</span><br></pre></td></tr></table></figure><h1 id="步骤-3-创建-docker-compose-yml-文件"><a href="#步骤-3-创建-docker-compose-yml-文件" class="headerlink" title="步骤 3: 创建 docker-compose.yml 文件"></a>步骤 3: 创建 docker-compose.yml 文件</h1><p>使用你喜欢的文本编辑器（如 nano 或 vim）创建 docker-compose.yml 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano docker-compose.yml</span><br></pre></td></tr></table></figure><h2 id="将以下内容复制并粘贴到-docker-compose-yml-文件中："><a href="#将以下内容复制并粘贴到-docker-compose-yml-文件中：" class="headerlink" title="将以下内容复制并粘贴到 docker-compose.yml 文件中："></a>将以下内容复制并粘贴到 docker-compose.yml 文件中：</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db_data:/var/lib/mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">somewordpress</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">wordpress</span></span><br><span class="line">  <span class="attr">wordpress:</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">wordpress:latest</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8000:80&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_HOST:</span> <span class="string">db:3306</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_USER:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_PASSWORD:</span> <span class="string">wordpress</span></span><br><span class="line">      <span class="attr">WORDPRESS_DB_NAME:</span> <span class="string">wordpress</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">db_data:</span></span><br></pre></td></tr></table></figure><p>保存并关闭文件。</p><h2 id="步骤-4-启动-Docker-Compose"><a href="#步骤-4-启动-Docker-Compose" class="headerlink" title="步骤 4: 启动 Docker Compose"></a>步骤 4: 启动 Docker Compose</h2><p>在终端或命令提示符中，导航到项目目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> wordpress-project</span><br></pre></td></tr></table></figure><h2 id="运行以下命令启动-Docker-Compose："><a href="#运行以下命令启动-Docker-Compose：" class="headerlink" title="运行以下命令启动 Docker Compose："></a>运行以下命令启动 Docker Compose：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>-d 参数表示在后台运行容器。</p><h2 id="步骤-5-访问-WordPress"><a href="#步骤-5-访问-WordPress" class="headerlink" title="步骤 5: 访问 WordPress"></a>步骤 5: 访问 WordPress</h2><p>打开浏览器，访问 <a href="http://localhost:8000。">http://localhost:8000。</a><br>看到 WordPress 的安装页面。按照提示完成安装过程。</p><h2 id="步骤-6-停止和删除容器"><a href="#步骤-6-停止和删除容器" class="headerlink" title="步骤 6: 停止和删除容器"></a>步骤 6: 停止和删除容器</h2><p>如果你需要停止和删除所有容器，可以运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose down</span><br></pre></td></tr></table></figure><p>version: ‘3’: 指定 Docker Compose 文件的版本。<br>services: 定义了多个服务，每个服务对应一个容器。<br>db: 定义了一个 MySQL 数据库服务。<br>image: mysql:5.7: 使用 MySQL 5.7 镜像。<br>volumes: 将主机上的 db_data 卷挂载到容器的 &#x2F;var&#x2F;lib&#x2F;mysql 目录。<br>environment: 设置环境变量，如数据库密码和用户名。<br>wordpress: 定义了一个 WordPress 服务。<br>depends_on: 指定该服务依赖于 db 服务。<br>image: wordpress:latest: 使用最新版本的 WordPress 镜像。<br>ports: 将主机的 8000 端口映射到容器的 80 端口。<br>environment: 设置环境变量，如数据库主机地址和用户名。<br>volumes: 定义了数据卷，用于持久化数据。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;docker 运行有趣的项目 &lt;/p&gt;
&lt;h1 id=&quot;Portainer-容器管理面板&quot;&gt;&lt;a href=&quot;#Portainer-容器管理面板&quot; class=&quot;headerlink&quot; title=&quot;Portainer - 容器管理面板&quot;&gt;&lt;/a&gt;Portainer - 容</summary>
      
    
    
    
    <category term="技术" scheme="https://banjinmei.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
</feed>
